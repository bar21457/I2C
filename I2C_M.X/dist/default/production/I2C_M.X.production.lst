

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 16 11:45:23 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43     0000                     
    44                           ; Version 2.40
    45                           ; Generated 17/11/2021 GMT
    46                           ; 
    47                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution. Publication is not required when
    61                           ;        this file is used in an embedded application.
    62                           ; 
    63                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    64                           ;        software without specific prior written permission.
    65                           ; 
    66                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    67                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    68                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    69                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    70                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    71                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    72                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    73                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    74                           ; 
    75                           ; 
    76                           ; Code-generator required, PIC16F887 Definitions
    77                           ; 
    78                           ; SFR Addresses
    79     0000                     	;# 
    80     0001                     	;# 
    81     0002                     	;# 
    82     0003                     	;# 
    83     0004                     	;# 
    84     0005                     	;# 
    85     0006                     	;# 
    86     0007                     	;# 
    87     0008                     	;# 
    88     0009                     	;# 
    89     000A                     	;# 
    90     000B                     	;# 
    91     000C                     	;# 
    92     000D                     	;# 
    93     000E                     	;# 
    94     000E                     	;# 
    95     000F                     	;# 
    96     0010                     	;# 
    97     0011                     	;# 
    98     0012                     	;# 
    99     0013                     	;# 
   100     0014                     	;# 
   101     0015                     	;# 
   102     0015                     	;# 
   103     0016                     	;# 
   104     0017                     	;# 
   105     0018                     	;# 
   106     0019                     	;# 
   107     001A                     	;# 
   108     001B                     	;# 
   109     001B                     	;# 
   110     001C                     	;# 
   111     001D                     	;# 
   112     001E                     	;# 
   113     001F                     	;# 
   114     0081                     	;# 
   115     0085                     	;# 
   116     0086                     	;# 
   117     0087                     	;# 
   118     0088                     	;# 
   119     0089                     	;# 
   120     008C                     	;# 
   121     008D                     	;# 
   122     008E                     	;# 
   123     008F                     	;# 
   124     0090                     	;# 
   125     0091                     	;# 
   126     0092                     	;# 
   127     0093                     	;# 
   128     0093                     	;# 
   129     0093                     	;# 
   130     0094                     	;# 
   131     0095                     	;# 
   132     0096                     	;# 
   133     0097                     	;# 
   134     0098                     	;# 
   135     0099                     	;# 
   136     009A                     	;# 
   137     009B                     	;# 
   138     009C                     	;# 
   139     009D                     	;# 
   140     009E                     	;# 
   141     009F                     	;# 
   142     0105                     	;# 
   143     0107                     	;# 
   144     0108                     	;# 
   145     0109                     	;# 
   146     010C                     	;# 
   147     010C                     	;# 
   148     010D                     	;# 
   149     010E                     	;# 
   150     010F                     	;# 
   151     0185                     	;# 
   152     0187                     	;# 
   153     0188                     	;# 
   154     0189                     	;# 
   155     018C                     	;# 
   156     018D                     	;# 
   157     0000                     	;# 
   158     0001                     	;# 
   159     0002                     	;# 
   160     0003                     	;# 
   161     0004                     	;# 
   162     0005                     	;# 
   163     0006                     	;# 
   164     0007                     	;# 
   165     0008                     	;# 
   166     0009                     	;# 
   167     000A                     	;# 
   168     000B                     	;# 
   169     000C                     	;# 
   170     000D                     	;# 
   171     000E                     	;# 
   172     000E                     	;# 
   173     000F                     	;# 
   174     0010                     	;# 
   175     0011                     	;# 
   176     0012                     	;# 
   177     0013                     	;# 
   178     0014                     	;# 
   179     0015                     	;# 
   180     0015                     	;# 
   181     0016                     	;# 
   182     0017                     	;# 
   183     0018                     	;# 
   184     0019                     	;# 
   185     001A                     	;# 
   186     001B                     	;# 
   187     001B                     	;# 
   188     001C                     	;# 
   189     001D                     	;# 
   190     001E                     	;# 
   191     001F                     	;# 
   192     0081                     	;# 
   193     0085                     	;# 
   194     0086                     	;# 
   195     0087                     	;# 
   196     0088                     	;# 
   197     0089                     	;# 
   198     008C                     	;# 
   199     008D                     	;# 
   200     008E                     	;# 
   201     008F                     	;# 
   202     0090                     	;# 
   203     0091                     	;# 
   204     0092                     	;# 
   205     0093                     	;# 
   206     0093                     	;# 
   207     0093                     	;# 
   208     0094                     	;# 
   209     0095                     	;# 
   210     0096                     	;# 
   211     0097                     	;# 
   212     0098                     	;# 
   213     0099                     	;# 
   214     009A                     	;# 
   215     009B                     	;# 
   216     009C                     	;# 
   217     009D                     	;# 
   218     009E                     	;# 
   219     009F                     	;# 
   220     0105                     	;# 
   221     0107                     	;# 
   222     0108                     	;# 
   223     0109                     	;# 
   224     010C                     	;# 
   225     010C                     	;# 
   226     010D                     	;# 
   227     010E                     	;# 
   228     010F                     	;# 
   229     0185                     	;# 
   230     0187                     	;# 
   231     0188                     	;# 
   232     0189                     	;# 
   233     018C                     	;# 
   234     018D                     	;# 
   235     0000                     	;# 
   236     0001                     	;# 
   237     0002                     	;# 
   238     0003                     	;# 
   239     0004                     	;# 
   240     0005                     	;# 
   241     0006                     	;# 
   242     0007                     	;# 
   243     0008                     	;# 
   244     0009                     	;# 
   245     000A                     	;# 
   246     000B                     	;# 
   247     000C                     	;# 
   248     000D                     	;# 
   249     000E                     	;# 
   250     000E                     	;# 
   251     000F                     	;# 
   252     0010                     	;# 
   253     0011                     	;# 
   254     0012                     	;# 
   255     0013                     	;# 
   256     0014                     	;# 
   257     0015                     	;# 
   258     0015                     	;# 
   259     0016                     	;# 
   260     0017                     	;# 
   261     0018                     	;# 
   262     0019                     	;# 
   263     001A                     	;# 
   264     001B                     	;# 
   265     001B                     	;# 
   266     001C                     	;# 
   267     001D                     	;# 
   268     001E                     	;# 
   269     001F                     	;# 
   270     0081                     	;# 
   271     0085                     	;# 
   272     0086                     	;# 
   273     0087                     	;# 
   274     0088                     	;# 
   275     0089                     	;# 
   276     008C                     	;# 
   277     008D                     	;# 
   278     008E                     	;# 
   279     008F                     	;# 
   280     0090                     	;# 
   281     0091                     	;# 
   282     0092                     	;# 
   283     0093                     	;# 
   284     0093                     	;# 
   285     0093                     	;# 
   286     0094                     	;# 
   287     0095                     	;# 
   288     0096                     	;# 
   289     0097                     	;# 
   290     0098                     	;# 
   291     0099                     	;# 
   292     009A                     	;# 
   293     009B                     	;# 
   294     009C                     	;# 
   295     009D                     	;# 
   296     009E                     	;# 
   297     009F                     	;# 
   298     0105                     	;# 
   299     0107                     	;# 
   300     0108                     	;# 
   301     0109                     	;# 
   302     010C                     	;# 
   303     010C                     	;# 
   304     010D                     	;# 
   305     010E                     	;# 
   306     010F                     	;# 
   307     0185                     	;# 
   308     0187                     	;# 
   309     0188                     	;# 
   310     0189                     	;# 
   311     018C                     	;# 
   312     018D                     	;# 
   313     0000                     	;# 
   314     0001                     	;# 
   315     0002                     	;# 
   316     0003                     	;# 
   317     0004                     	;# 
   318     0005                     	;# 
   319     0006                     	;# 
   320     0007                     	;# 
   321     0008                     	;# 
   322     0009                     	;# 
   323     000A                     	;# 
   324     000B                     	;# 
   325     000C                     	;# 
   326     000D                     	;# 
   327     000E                     	;# 
   328     000E                     	;# 
   329     000F                     	;# 
   330     0010                     	;# 
   331     0011                     	;# 
   332     0012                     	;# 
   333     0013                     	;# 
   334     0014                     	;# 
   335     0015                     	;# 
   336     0015                     	;# 
   337     0016                     	;# 
   338     0017                     	;# 
   339     0018                     	;# 
   340     0019                     	;# 
   341     001A                     	;# 
   342     001B                     	;# 
   343     001B                     	;# 
   344     001C                     	;# 
   345     001D                     	;# 
   346     001E                     	;# 
   347     001F                     	;# 
   348     0081                     	;# 
   349     0085                     	;# 
   350     0086                     	;# 
   351     0087                     	;# 
   352     0088                     	;# 
   353     0089                     	;# 
   354     008C                     	;# 
   355     008D                     	;# 
   356     008E                     	;# 
   357     008F                     	;# 
   358     0090                     	;# 
   359     0091                     	;# 
   360     0092                     	;# 
   361     0093                     	;# 
   362     0093                     	;# 
   363     0093                     	;# 
   364     0094                     	;# 
   365     0095                     	;# 
   366     0096                     	;# 
   367     0097                     	;# 
   368     0098                     	;# 
   369     0099                     	;# 
   370     009A                     	;# 
   371     009B                     	;# 
   372     009C                     	;# 
   373     009D                     	;# 
   374     009E                     	;# 
   375     009F                     	;# 
   376     0105                     	;# 
   377     0107                     	;# 
   378     0108                     	;# 
   379     0109                     	;# 
   380     010C                     	;# 
   381     010C                     	;# 
   382     010D                     	;# 
   383     010E                     	;# 
   384     010F                     	;# 
   385     0185                     	;# 
   386     0187                     	;# 
   387     0188                     	;# 
   388     0189                     	;# 
   389     018C                     	;# 
   390     018D                     	;# 
   391     0000                     	;# 
   392     0001                     	;# 
   393     0002                     	;# 
   394     0003                     	;# 
   395     0004                     	;# 
   396     0005                     	;# 
   397     0006                     	;# 
   398     0007                     	;# 
   399     0008                     	;# 
   400     0009                     	;# 
   401     000A                     	;# 
   402     000B                     	;# 
   403     000C                     	;# 
   404     000D                     	;# 
   405     000E                     	;# 
   406     000E                     	;# 
   407     000F                     	;# 
   408     0010                     	;# 
   409     0011                     	;# 
   410     0012                     	;# 
   411     0013                     	;# 
   412     0014                     	;# 
   413     0015                     	;# 
   414     0015                     	;# 
   415     0016                     	;# 
   416     0017                     	;# 
   417     0018                     	;# 
   418     0019                     	;# 
   419     001A                     	;# 
   420     001B                     	;# 
   421     001B                     	;# 
   422     001C                     	;# 
   423     001D                     	;# 
   424     001E                     	;# 
   425     001F                     	;# 
   426     0081                     	;# 
   427     0085                     	;# 
   428     0086                     	;# 
   429     0087                     	;# 
   430     0088                     	;# 
   431     0089                     	;# 
   432     008C                     	;# 
   433     008D                     	;# 
   434     008E                     	;# 
   435     008F                     	;# 
   436     0090                     	;# 
   437     0091                     	;# 
   438     0092                     	;# 
   439     0093                     	;# 
   440     0093                     	;# 
   441     0093                     	;# 
   442     0094                     	;# 
   443     0095                     	;# 
   444     0096                     	;# 
   445     0097                     	;# 
   446     0098                     	;# 
   447     0099                     	;# 
   448     009A                     	;# 
   449     009B                     	;# 
   450     009C                     	;# 
   451     009D                     	;# 
   452     009E                     	;# 
   453     009F                     	;# 
   454     0105                     	;# 
   455     0107                     	;# 
   456     0108                     	;# 
   457     0109                     	;# 
   458     010C                     	;# 
   459     010C                     	;# 
   460     010D                     	;# 
   461     010E                     	;# 
   462     010F                     	;# 
   463     0185                     	;# 
   464     0187                     	;# 
   465     0188                     	;# 
   466     0189                     	;# 
   467     018C                     	;# 
   468     018D                     	;# 
   469     0000                     	;# 
   470     0001                     	;# 
   471     0002                     	;# 
   472     0003                     	;# 
   473     0004                     	;# 
   474     0005                     	;# 
   475     0006                     	;# 
   476     0007                     	;# 
   477     0008                     	;# 
   478     0009                     	;# 
   479     000A                     	;# 
   480     000B                     	;# 
   481     000C                     	;# 
   482     000D                     	;# 
   483     000E                     	;# 
   484     000E                     	;# 
   485     000F                     	;# 
   486     0010                     	;# 
   487     0011                     	;# 
   488     0012                     	;# 
   489     0013                     	;# 
   490     0014                     	;# 
   491     0015                     	;# 
   492     0015                     	;# 
   493     0016                     	;# 
   494     0017                     	;# 
   495     0018                     	;# 
   496     0019                     	;# 
   497     001A                     	;# 
   498     001B                     	;# 
   499     001B                     	;# 
   500     001C                     	;# 
   501     001D                     	;# 
   502     001E                     	;# 
   503     001F                     	;# 
   504     0081                     	;# 
   505     0085                     	;# 
   506     0086                     	;# 
   507     0087                     	;# 
   508     0088                     	;# 
   509     0089                     	;# 
   510     008C                     	;# 
   511     008D                     	;# 
   512     008E                     	;# 
   513     008F                     	;# 
   514     0090                     	;# 
   515     0091                     	;# 
   516     0092                     	;# 
   517     0093                     	;# 
   518     0093                     	;# 
   519     0093                     	;# 
   520     0094                     	;# 
   521     0095                     	;# 
   522     0096                     	;# 
   523     0097                     	;# 
   524     0098                     	;# 
   525     0099                     	;# 
   526     009A                     	;# 
   527     009B                     	;# 
   528     009C                     	;# 
   529     009D                     	;# 
   530     009E                     	;# 
   531     009F                     	;# 
   532     0105                     	;# 
   533     0107                     	;# 
   534     0108                     	;# 
   535     0109                     	;# 
   536     010C                     	;# 
   537     010C                     	;# 
   538     010D                     	;# 
   539     010E                     	;# 
   540     010F                     	;# 
   541     0185                     	;# 
   542     0187                     	;# 
   543     0188                     	;# 
   544     0189                     	;# 
   545     018C                     	;# 
   546     018D                     	;# 
   547                           
   548                           	psect	idataBANK0
   549     07DE                     __pidataBANK0:
   550                           
   551                           ;initializer for main@F1418
   552     07DE  3430               	retlw	48
   553     07DF  3431               	retlw	49
   554     07E0  342F               	retlw	47
   555     07E1  3430               	retlw	48
   556     07E2  3431               	retlw	49
   557     07E3  342F               	retlw	47
   558     07E4  3432               	retlw	50
   559     07E5  3430               	retlw	48
   560     07E6  3430               	retlw	48
   561     07E7  3430               	retlw	48
   562                           
   563                           ;initializer for main@F1416
   564     07E8  3430               	retlw	48
   565     07E9  3430               	retlw	48
   566     07EA  343A               	retlw	58
   567     07EB  3430               	retlw	48
   568     07EC  3430               	retlw	48
   569     07ED  343A               	retlw	58
   570     07EE  3430               	retlw	48
   571     07EF  3430               	retlw	48
   572                           
   573                           	psect	strings
   574     075E                     __pstrings:
   575     075E                     stringtab:
   576     075E                     __stringtab:
   577                           
   578                           ;	String table - string pointers are 1 byte each
   579     075E  1BFF               	btfsc	btemp+1,7
   580     075F  2F68               	ljmp	stringcode
   581     0760  1383               	bcf	3,7
   582     0761  187F               	btfsc	btemp+1,0
   583     0762  1783               	bsf	3,7
   584     0763  0800               	movf	0,w
   585     0764  0A84               	incf	4,f
   586     0765  1903               	skipnz
   587     0766  0AFF               	incf	btemp+1,f
   588     0767  0008               	return
   589     0768                     stringcode:
   590     0768                     stringdir:
   591     0768  3007               	movlw	high stringdir
   592     0769  008A               	movwf	10
   593     076A  0804               	movf	4,w
   594     076B  0A84               	incf	4,f
   595     076C  0782               	addwf	2,f
   596     076D                     __stringbase:
   597     076D  3400               	retlw	0
   598     076E                     __end_of__stringtab:
   599     076E                     _dpowers:
   600     076E  3401               	retlw	1
   601     076F  3400               	retlw	0
   602     0770  340A               	retlw	10
   603     0771  3400               	retlw	0
   604     0772  3464               	retlw	100
   605     0773  3400               	retlw	0
   606     0774  34E8               	retlw	232
   607     0775  3403               	retlw	3
   608     0776  3410               	retlw	16
   609     0777  3427               	retlw	39
   610     0778                     __end_of_dpowers:
   611     0008                     _PORTD	set	8
   612     0006                     _PORTB	set	6
   613     0005                     _PORTA	set	5
   614     0006                     _PORTBbits	set	6
   615     000B                     _INTCONbits	set	11
   616     0008                     _PORTDbits	set	8
   617     0013                     _SSPBUF	set	19
   618     0014                     _SSPCON	set	20
   619     0063                     _SSPIF	set	99
   620     005E                     _PEIE	set	94
   621     005F                     _GIE	set	95
   622     0096                     _IOCB	set	150
   623     0095                     _WPUBbits	set	149
   624     0081                     _OPTION_REGbits	set	129
   625     0088                     _TRISD	set	136
   626     0086                     _TRISB	set	134
   627     0085                     _TRISA	set	133
   628     008F                     _OSCCONbits	set	143
   629     0091                     _SSPCON2bits	set	145
   630     0087                     _TRISCbits	set	135
   631     0094                     _SSPSTAT	set	148
   632     0093                     _SSPADD	set	147
   633     0091                     _SSPCON2	set	145
   634     0463                     _SSPIE	set	1123
   635     043C                     _TRISC4	set	1084
   636     043B                     _TRISC3	set	1083
   637     0189                     _ANSELH	set	393
   638     0188                     _ANSEL	set	392
   639     0778                     STR_1:
   640     0778  3453               	retlw	83	;'S'
   641     0779  3431               	retlw	49	;'1'
   642     077A  343A               	retlw	58	;':'
   643     077B  3400               	retlw	0
   644     077C                     STR_2:
   645     077C  3425               	retlw	37	;'%'
   646     077D  3475               	retlw	117	;'u'
   647     077E  3400               	retlw	0
   648     077C                     
   649                           	psect	cinit
   650     000F                     start_initialization:	
   651                           ; #config settings
   652                           
   653     000F                     __initialization:
   654                           
   655                           ; Initialize objects allocated to BANK0
   656     000F  1383               	bcf	3,7	;select IRP bank0
   657     0010  306F               	movlw	low (__pdataBANK0+18)
   658     0011  00FD               	movwf	btemp+-1
   659     0012  3007               	movlw	high __pidataBANK0
   660     0013  00FE               	movwf	btemp
   661     0014  30DE               	movlw	low __pidataBANK0
   662     0015  00FF               	movwf	btemp+1
   663     0016  305D               	movlw	low __pdataBANK0
   664     0017  0084               	movwf	4
   665     0018  120A  118A  27CF  120A  118A  	fcall	init_ram0
   666                           
   667                           ; Clear objects allocated to BANK0
   668     001D  01EF               	clrf	__pbssBANK0& (0+127)
   669                           
   670                           ; Clear objects allocated to COMMON
   671     001E  01FA               	clrf	__pbssCOMMON& (0+127)
   672     001F                     end_of_initialization:	
   673                           ;End of C runtime variable initialization code
   674                           
   675     001F                     __end_of__initialization:
   676     001F  0183               	clrf	3
   677     0020  120A  118A  2823   	ljmp	_main	;jump to C main() function
   678                           
   679                           	psect	bssCOMMON
   680     007A                     __pbssCOMMON:
   681     007A                     _D:
   682     007A                     	ds	1
   683                           
   684                           	psect	bssBANK0
   685     006F                     __pbssBANK0:
   686     006F                     _modo:
   687     006F                     	ds	1
   688                           
   689                           	psect	dataBANK0
   690     005D                     __pdataBANK0:
   691     005D                     main@F1418:
   692     005D                     	ds	10
   693     0067                     main@F1416:
   694     0067                     	ds	8
   695                           
   696                           	psect	inittext
   697     07CB                     init_fetch0:	
   698                           ;	Called with low address in FSR and high address in W
   699                           
   700     07CB  087E               	movf	btemp,w
   701     07CC  008A               	movwf	10
   702     07CD  087F               	movf	btemp+1,w
   703     07CE  0082               	movwf	2
   704     07CF                     init_ram0:	
   705                           ;Called with:
   706                           ;	high address of idata address in btemp 
   707                           ;	low address of idata address in btemp+1 
   708                           ;	low address of data in FSR
   709                           ;	high address + 1 of data in btemp-1
   710                           
   711     07CF  120A  118A  27CB  120A  118A  	fcall	init_fetch0
   712     07D4  0080               	movwf	0
   713     07D5  0A84               	incf	4,f
   714     07D6  0804               	movf	4,w
   715     07D7  067D               	xorwf	btemp+-1,w
   716     07D8  1903               	btfsc	3,2
   717     07D9  3400               	retlw	0
   718     07DA  0AFF               	incf	btemp+1,f
   719     07DB  1903               	btfsc	3,2
   720     07DC  0AFE               	incf	btemp,f
   721     07DD  2FCF               	goto	init_ram0
   722                           
   723                           	psect	cstackCOMMON
   724     0070                     __pcstackCOMMON:
   725     0070                     ?_setup:
   726     0070                     ?_leerRTC:	
   727                           ; 1 bytes @ 0x0
   728                           
   729     0070                     ?_I2C_Master_Wait:	
   730                           ; 1 bytes @ 0x0
   731                           
   732     0070                     ?_I2C_Master_Start:	
   733                           ; 1 bytes @ 0x0
   734                           
   735     0070                     ?_I2C_Master_RepeatedStart:	
   736                           ; 1 bytes @ 0x0
   737                           
   738     0070                     ?_I2C_Master_Stop:	
   739                           ; 1 bytes @ 0x0
   740                           
   741     0070                     ?_setupINTOSC:	
   742                           ; 1 bytes @ 0x0
   743                           
   744     0070                     ?_Lcd_Port_4bits:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0070                     ?_Lcd_Cmd_4bits:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0070                     ?_Lcd_Clear_4bits:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0070                     ?_Lcd_Init_4bits:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0070                     ?_Lcd_Write_Char_4bits:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     0070                     ?_ISR:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     ??_ISR:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     ?_main:	
   766                           ; 1 bytes @ 0x0
   767                           
   768                           
   769                           ; 1 bytes @ 0x0
   770     0070                     	ds	3
   771     0073                     ??_I2C_Master_Wait:
   772     0073                     ??_I2C_Master_Start:	
   773                           ; 1 bytes @ 0x3
   774                           
   775     0073                     ??_I2C_Master_RepeatedStart:	
   776                           ; 1 bytes @ 0x3
   777                           
   778     0073                     ??_I2C_Master_Stop:	
   779                           ; 1 bytes @ 0x3
   780                           
   781     0073                     ?_I2C_Master_Write:	
   782                           ; 1 bytes @ 0x3
   783                           
   784     0073                     ??_setupINTOSC:	
   785                           ; 1 bytes @ 0x3
   786                           
   787     0073                     ??_Lcd_Port_4bits:	
   788                           ; 1 bytes @ 0x3
   789                           
   790     0073                     ?___bmul:	
   791                           ; 1 bytes @ 0x3
   792                           
   793     0073                     ??___lldiv:	
   794                           ; 1 bytes @ 0x3
   795                           
   796     0073                     ?_I2C_Master_Read:	
   797                           ; 1 bytes @ 0x3
   798                           
   799     0073                     ?___awdiv:	
   800                           ; 2 bytes @ 0x3
   801                           
   802     0073                     ?___lwdiv:	
   803                           ; 2 bytes @ 0x3
   804                           
   805     0073                     Lcd_Port_4bits@a:	
   806                           ; 2 bytes @ 0x3
   807                           
   808     0073                     ___bmul@multiplicand:	
   809                           ; 1 bytes @ 0x3
   810                           
   811     0073                     I2C_Master_Write@d:	
   812                           ; 1 bytes @ 0x3
   813                           
   814     0073                     I2C_Master_Read@a:	
   815                           ; 2 bytes @ 0x3
   816                           
   817     0073                     ___awdiv@divisor:	
   818                           ; 2 bytes @ 0x3
   819                           
   820     0073                     ___lwdiv@divisor:	
   821                           ; 2 bytes @ 0x3
   822                           
   823                           
   824                           ; 2 bytes @ 0x3
   825     0073                     	ds	1
   826     0074                     ??_Lcd_Cmd_4bits:
   827     0074                     ??_Lcd_Write_Char_4bits:	
   828                           ; 1 bytes @ 0x4
   829                           
   830     0074                     ??___bmul:	
   831                           ; 1 bytes @ 0x4
   832                           
   833     0074                     setupINTOSC@F:	
   834                           ; 1 bytes @ 0x4
   835                           
   836     0074                     ___lldiv@quotient:	
   837                           ; 1 bytes @ 0x4
   838                           
   839                           
   840                           ; 4 bytes @ 0x4
   841     0074                     	ds	1
   842     0075                     ??_I2C_Master_Write:
   843     0075                     ??_I2C_Master_Read:	
   844                           ; 1 bytes @ 0x5
   845                           
   846     0075                     Lcd_Write_Char_4bits@temp:	
   847                           ; 1 bytes @ 0x5
   848                           
   849     0075                     ___bmul@product:	
   850                           ; 1 bytes @ 0x5
   851                           
   852     0075                     ___awdiv@dividend:	
   853                           ; 1 bytes @ 0x5
   854                           
   855     0075                     ___lwdiv@dividend:	
   856                           ; 2 bytes @ 0x5
   857                           
   858                           
   859                           ; 2 bytes @ 0x5
   860     0075                     	ds	1
   861     0076                     Lcd_Cmd_4bits@a:
   862     0076                     Lcd_Write_Char_4bits@y:	
   863                           ; 1 bytes @ 0x6
   864                           
   865     0076                     ___bmul@multiplier:	
   866                           ; 1 bytes @ 0x6
   867                           
   868                           
   869                           ; 1 bytes @ 0x6
   870     0076                     	ds	1
   871     0077                     ??_Lcd_Clear_4bits:
   872     0077                     ?_Lcd_Set_Cursor_4bits:	
   873                           ; 1 bytes @ 0x7
   874                           
   875     0077                     ??_Lcd_Init_4bits:	
   876                           ; 1 bytes @ 0x7
   877                           
   878     0077                     ??___awdiv:	
   879                           ; 1 bytes @ 0x7
   880                           
   881     0077                     ??___lwdiv:	
   882                           ; 1 bytes @ 0x7
   883                           
   884     0077                     Lcd_Set_Cursor_4bits@b:	
   885                           ; 1 bytes @ 0x7
   886                           
   887     0077                     Lcd_Write_Char_4bits@a:	
   888                           ; 1 bytes @ 0x7
   889                           
   890     0077                     I2C_Master_Read@temp:	
   891                           ; 1 bytes @ 0x7
   892                           
   893                           
   894                           ; 2 bytes @ 0x7
   895     0077                     	ds	1
   896     0078                     ??_Lcd_Set_Cursor_4bits:
   897     0078                     ?_Lcd_Write_String_4bits:	
   898                           ; 1 bytes @ 0x8
   899                           
   900     0078                     ??___awmod:	
   901                           ; 1 bytes @ 0x8
   902                           
   903     0078                     ??___lwmod:	
   904                           ; 1 bytes @ 0x8
   905                           
   906     0078                     ___lldiv@counter:	
   907                           ; 1 bytes @ 0x8
   908                           
   909     0078                     Lcd_Write_String_4bits@a:	
   910                           ; 1 bytes @ 0x8
   911                           
   912                           
   913                           ; 2 bytes @ 0x8
   914     0078                     	ds	1
   915     0079                     ??_setup:
   916     0079                     ___lwmod@counter:	
   917                           ; 1 bytes @ 0x9
   918                           
   919                           
   920                           ; 1 bytes @ 0x9
   921     0079                     	ds	1
   922                           
   923                           	psect	cstackBANK0
   924     0020                     __pcstackBANK0:
   925     0020                     ??_leerRTC:
   926     0020                     ??_Lcd_Write_String_4bits:	
   927                           ; 1 bytes @ 0x0
   928                           
   929     0020                     ?___lldiv:	
   930                           ; 1 bytes @ 0x0
   931                           
   932     0020                     Lcd_Set_Cursor_4bits@a:	
   933                           ; 4 bytes @ 0x0
   934                           
   935     0020                     ___awdiv@counter:	
   936                           ; 1 bytes @ 0x0
   937                           
   938     0020                     ___lwdiv@counter:	
   939                           ; 1 bytes @ 0x0
   940                           
   941     0020                     ___lldiv@divisor:	
   942                           ; 1 bytes @ 0x0
   943                           
   944                           
   945                           ; 4 bytes @ 0x0
   946     0020                     	ds	1
   947     0021                     Lcd_Set_Cursor_4bits@z:
   948     0021                     ___awdiv@sign:	
   949                           ; 1 bytes @ 0x1
   950                           
   951     0021                     ___lwdiv@quotient:	
   952                           ; 1 bytes @ 0x1
   953                           
   954                           
   955                           ; 2 bytes @ 0x1
   956     0021                     	ds	1
   957     0022                     Lcd_Set_Cursor_4bits@y:
   958     0022                     ___awdiv@quotient:	
   959                           ; 1 bytes @ 0x2
   960                           
   961                           
   962                           ; 2 bytes @ 0x2
   963     0022                     	ds	1
   964     0023                     ?___lwmod:
   965     0023                     Lcd_Set_Cursor_4bits@temp:	
   966                           ; 2 bytes @ 0x3
   967                           
   968     0023                     leerRTC@R:	
   969                           ; 1 bytes @ 0x3
   970                           
   971     0023                     Lcd_Write_String_4bits@i:	
   972                           ; 1 bytes @ 0x3
   973                           
   974     0023                     ___lwmod@divisor:	
   975                           ; 2 bytes @ 0x3
   976                           
   977                           
   978                           ; 2 bytes @ 0x3
   979     0023                     	ds	1
   980     0024                     ?___awmod:
   981     0024                     leerRTC@DATO:	
   982                           ; 2 bytes @ 0x4
   983                           
   984     0024                     ___awmod@divisor:	
   985                           ; 1 bytes @ 0x4
   986                           
   987     0024                     ___lldiv@dividend:	
   988                           ; 2 bytes @ 0x4
   989                           
   990                           
   991                           ; 4 bytes @ 0x4
   992     0024                     	ds	1
   993     0025                     ___lwmod@dividend:
   994                           
   995                           ; 2 bytes @ 0x5
   996     0025                     	ds	1
   997     0026                     ___awmod@dividend:
   998                           
   999                           ; 2 bytes @ 0x6
  1000     0026                     	ds	1
  1001     0027                     ?_sprintf:
  1002     0027                     sprintf@f:	
  1003                           ; 2 bytes @ 0x7
  1004                           
  1005                           
  1006                           ; 1 bytes @ 0x7
  1007     0027                     	ds	1
  1008     0028                     ?_I2C_Master_Init:
  1009     0028                     ___awmod@counter:	
  1010                           ; 1 bytes @ 0x8
  1011                           
  1012     0028                     I2C_Master_Init@c:	
  1013                           ; 1 bytes @ 0x8
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x8
  1017     0028                     	ds	1
  1018     0029                     ___awmod@sign:
  1019                           
  1020                           ; 1 bytes @ 0x9
  1021     0029                     	ds	1
  1022     002A                     ??_sprintf:
  1023                           
  1024                           ; 1 bytes @ 0xA
  1025     002A                     	ds	2
  1026     002C                     ??_I2C_Master_Init:
  1027                           
  1028                           ; 1 bytes @ 0xC
  1029     002C                     	ds	1
  1030     002D                     sprintf@flag:
  1031                           
  1032                           ; 1 bytes @ 0xD
  1033     002D                     	ds	1
  1034     002E                     sprintf@ap:
  1035                           
  1036                           ; 1 bytes @ 0xE
  1037     002E                     	ds	1
  1038     002F                     sprintf@val:
  1039                           
  1040                           ; 2 bytes @ 0xF
  1041     002F                     	ds	2
  1042     0031                     sprintf@prec:
  1043                           
  1044                           ; 1 bytes @ 0x11
  1045     0031                     	ds	1
  1046     0032                     sprintf@sp:
  1047                           
  1048                           ; 1 bytes @ 0x12
  1049     0032                     	ds	1
  1050     0033                     sprintf@c:
  1051                           
  1052                           ; 1 bytes @ 0x13
  1053     0033                     	ds	1
  1054     0034                     ??_main:
  1055                           
  1056                           ; 1 bytes @ 0x14
  1057     0034                     	ds	4
  1058     0038                     main@ADC1:
  1059                           
  1060                           ; 9 bytes @ 0x18
  1061     0038                     	ds	9
  1062     0041                     main@fecha:
  1063                           
  1064                           ; 10 bytes @ 0x21
  1065     0041                     	ds	10
  1066     004B                     main@tiempo:
  1067                           
  1068                           ; 8 bytes @ 0x2B
  1069     004B                     	ds	8
  1070     0053                     main@VAL1_U:
  1071                           
  1072                           ; 1 bytes @ 0x33
  1073     0053                     	ds	1
  1074     0054                     main@VAL1_D:
  1075                           
  1076                           ; 1 bytes @ 0x34
  1077     0054                     	ds	1
  1078     0055                     main@VAL1_C:
  1079                           
  1080                           ; 1 bytes @ 0x35
  1081     0055                     	ds	1
  1082     0056                     main@SEG:
  1083                           
  1084                           ; 1 bytes @ 0x36
  1085     0056                     	ds	1
  1086     0057                     main@MIN:
  1087                           
  1088                           ; 1 bytes @ 0x37
  1089     0057                     	ds	1
  1090     0058                     main@HOR:
  1091                           
  1092                           ; 1 bytes @ 0x38
  1093     0058                     	ds	1
  1094     0059                     main@DIA:
  1095                           
  1096                           ; 1 bytes @ 0x39
  1097     0059                     	ds	1
  1098     005A                     main@MES:
  1099                           
  1100                           ; 1 bytes @ 0x3A
  1101     005A                     	ds	1
  1102     005B                     main@AO:
  1103                           
  1104                           ; 1 bytes @ 0x3B
  1105     005B                     	ds	1
  1106     005C                     main@VAL1:
  1107                           
  1108                           ; 1 bytes @ 0x3C
  1109     005C                     	ds	1
  1110                           
  1111                           	psect	maintext
  1112     0023                     __pmaintext:	
  1113 ;;
  1114 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1115 ;;
  1116 ;; *************** function _main *****************
  1117 ;; Defined at:
  1118 ;;		line 81 in file "main_M.c"
  1119 ;; Parameters:    Size  Location     Type
  1120 ;;		None
  1121 ;; Auto vars:     Size  Location     Type
  1122 ;;  fecha          10   33[BANK0 ] unsigned char [10]
  1123 ;;  ADC1            9   24[BANK0 ] unsigned char [9]
  1124 ;;  tiempo          8   43[BANK0 ] unsigned char [8]
  1125 ;;  VAL1            1   60[BANK0 ] unsigned char 
  1126 ;;  AO              1   59[BANK0 ] unsigned char 
  1127 ;;  MES             1   58[BANK0 ] unsigned char 
  1128 ;;  DIA             1   57[BANK0 ] unsigned char 
  1129 ;;  HOR             1   56[BANK0 ] unsigned char 
  1130 ;;  MIN             1   55[BANK0 ] unsigned char 
  1131 ;;  SEG             1   54[BANK0 ] unsigned char 
  1132 ;;  VAL1_C          1   53[BANK0 ] unsigned char 
  1133 ;;  VAL1_D          1   52[BANK0 ] unsigned char 
  1134 ;;  VAL1_U          1   51[BANK0 ] unsigned char 
  1135 ;; Return value:  Size  Location     Type
  1136 ;;                  1    wreg      void 
  1137 ;; Registers used:
  1138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1139 ;; Tracked objects:
  1140 ;;		On entry : B00/0
  1141 ;;		On exit  : 0/0
  1142 ;;		Unchanged: 0/0
  1143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1144 ;;      Params:         0       0       0       0       0
  1145 ;;      Locals:         0      37       0       0       0
  1146 ;;      Temps:          0       4       0       0       0
  1147 ;;      Totals:         0      41       0       0       0
  1148 ;;Total ram usage:       41 bytes
  1149 ;; Hardware stack levels required when called: 5
  1150 ;; This function calls:
  1151 ;;		_I2C_Master_Read
  1152 ;;		_I2C_Master_Start
  1153 ;;		_I2C_Master_Stop
  1154 ;;		_I2C_Master_Write
  1155 ;;		_Lcd_Clear_4bits
  1156 ;;		_Lcd_Set_Cursor_4bits
  1157 ;;		_Lcd_Write_String_4bits
  1158 ;;		___awdiv
  1159 ;;		___awmod
  1160 ;;		_leerRTC
  1161 ;;		_setup
  1162 ;;		_sprintf
  1163 ;; This function is called by:
  1164 ;;		Startup code after reset
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168     0023                     _main:	
  1169                           ;psect for function _main
  1170                           
  1171     0023                     l2055:	
  1172                           ;incstack = 0
  1173                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1174                           
  1175                           
  1176                           ;main_M.c: 83:     setup();
  1177     0023  120A  118A  26DC  120A  118A  	fcall	_setup
  1178     0028                     l2057:
  1179                           
  1180                           ;main_M.c: 85:     uint8_t VAL1, VAL1_U, VAL1_D, VAL1_C, SEG, MIN, HOR, DIA, MES, AO;;ma
      +                          in_M.c: 87:     char ADC1[9];;main_M.c: 88:     char tiempo[8] = {"00:00:00"};
  1181     0028  304B               	movlw	main@tiempo& (0+255)
  1182     0029  0084               	movwf	4
  1183     002A  3067               	movlw	low main@F1416
  1184     002B  1283               	bcf	3,5	;RP0=0, select bank0
  1185     002C  1303               	bcf	3,6	;RP1=0, select bank0
  1186     002D  00B4               	movwf	??_main
  1187     002E  0804               	movf	4,w
  1188     002F  00B5               	movwf	??_main+1
  1189     0030  3008               	movlw	8
  1190     0031  00B6               	movwf	??_main+2
  1191     0032                     u1780:
  1192     0032  0834               	movf	??_main,w
  1193     0033  0084               	movwf	4
  1194     0034  1383               	bcf	3,7	;select IRP bank0
  1195     0035  0800               	movf	0,w
  1196     0036  00B7               	movwf	??_main+3
  1197     0037  0AB4               	incf	??_main,f
  1198     0038  0835               	movf	??_main+1,w
  1199     0039  0084               	movwf	4
  1200     003A  0837               	movf	??_main+3,w
  1201     003B  0080               	movwf	0
  1202     003C  0AB5               	incf	??_main+1,f
  1203     003D  0BB6               	decfsz	??_main+2,f
  1204     003E  2832               	goto	u1780
  1205     003F                     l2059:
  1206                           
  1207                           ;main_M.c: 89:     char fecha[10] = {"01/01/2000"};
  1208     003F  3041               	movlw	main@fecha& (0+255)
  1209     0040  0084               	movwf	4
  1210     0041  305D               	movlw	low main@F1418
  1211     0042  00B4               	movwf	??_main
  1212     0043  0804               	movf	4,w
  1213     0044  00B5               	movwf	??_main+1
  1214     0045  300A               	movlw	10
  1215     0046  00B6               	movwf	??_main+2
  1216     0047                     u1790:
  1217     0047  0834               	movf	??_main,w
  1218     0048  0084               	movwf	4
  1219     0049  1383               	bcf	3,7	;select IRP bank0
  1220     004A  0800               	movf	0,w
  1221     004B  00B7               	movwf	??_main+3
  1222     004C  0AB4               	incf	??_main,f
  1223     004D  0835               	movf	??_main+1,w
  1224     004E  0084               	movwf	4
  1225     004F  0837               	movf	??_main+3,w
  1226     0050  0080               	movwf	0
  1227     0051  0AB5               	incf	??_main+1,f
  1228     0052  0BB6               	decfsz	??_main+2,f
  1229     0053  2847               	goto	u1790
  1230                           
  1231                           ;main_M.c: 91:     Lcd_Clear_4bits();
  1232     0054  120A  158A  27E6  120A  118A  	fcall	_Lcd_Clear_4bits
  1233                           
  1234                           ;main_M.c: 92:     Lcd_Set_Cursor_4bits(1,1);
  1235     0059  01F7               	clrf	Lcd_Set_Cursor_4bits@b
  1236     005A  0AF7               	incf	Lcd_Set_Cursor_4bits@b,f
  1237     005B  3001               	movlw	1
  1238     005C  120A  118A  2559  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1239     0061                     l2061:
  1240                           
  1241                           ;main_M.c: 93:     Lcd_Write_String_4bits("S1:");
  1242     0061  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1243     0062  00F8               	movwf	Lcd_Write_String_4bits@a
  1244     0063  3080               	movlw	128
  1245     0064  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1246     0065  120A  118A  25EB  120A  118A  	fcall	_Lcd_Write_String_4bits
  1247     006A                     l2063:
  1248                           
  1249                           ;main_M.c: 96:     {;main_M.c: 98:         PORTA = modo;
  1250     006A  1283               	bcf	3,5	;RP0=0, select bank0
  1251     006B  1303               	bcf	3,6	;RP1=0, select bank0
  1252     006C  086F               	movf	_modo,w
  1253     006D  0085               	movwf	5	;volatile
  1254     006E                     l2065:
  1255                           
  1256                           ;main_M.c: 100:         I2C_Master_Start();
  1257     006E  120A  158A  27CA  120A  118A  	fcall	_I2C_Master_Start
  1258     0073                     l2067:
  1259                           
  1260                           ;main_M.c: 101:         I2C_Master_Write(0x11);
  1261     0073  3011               	movlw	17
  1262     0074  00F3               	movwf	I2C_Master_Write@d
  1263     0075  3000               	movlw	0
  1264     0076  00F4               	movwf	I2C_Master_Write@d+1
  1265     0077  120A  158A  27DC  120A  118A  	fcall	_I2C_Master_Write
  1266     007C                     l2069:
  1267                           
  1268                           ;main_M.c: 102:         VAL1 = I2C_Master_Read(0);
  1269     007C  3000               	movlw	0
  1270     007D  00F3               	movwf	I2C_Master_Read@a
  1271     007E  00F4               	movwf	I2C_Master_Read@a+1
  1272     007F  120A  118A  270E  120A  118A  	fcall	_I2C_Master_Read
  1273     0084  0873               	movf	?_I2C_Master_Read,w
  1274     0085  1283               	bcf	3,5	;RP0=0, select bank0
  1275     0086  1303               	bcf	3,6	;RP1=0, select bank0
  1276     0087  00DC               	movwf	main@VAL1
  1277     0088                     l2071:
  1278                           
  1279                           ;main_M.c: 103:         I2C_Master_Stop();
  1280     0088  120A  158A  27D3  120A  118A  	fcall	_I2C_Master_Stop
  1281     008D                     l2073:
  1282                           
  1283                           ;main_M.c: 104:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1284     008D  3003               	movlw	3
  1285     008E  1283               	bcf	3,5	;RP0=0, select bank0
  1286     008F  1303               	bcf	3,6	;RP1=0, select bank0
  1287     0090  00B6               	movwf	??_main+2
  1288     0091  3008               	movlw	8
  1289     0092  00B5               	movwf	??_main+1
  1290     0093  3076               	movlw	118
  1291     0094  00B4               	movwf	??_main
  1292     0095                     u1807:
  1293     0095  0BB4               	decfsz	??_main,f
  1294     0096  2895               	goto	u1807
  1295     0097  0BB5               	decfsz	??_main+1,f
  1296     0098  2895               	goto	u1807
  1297     0099  0BB6               	decfsz	??_main+2,f
  1298     009A  2895               	goto	u1807
  1299     009B  0000               	nop
  1300     009C                     l2075:
  1301                           
  1302                           ;main_M.c: 106:         VAL1_C = (VAL1/100);
  1303     009C  3064               	movlw	100
  1304     009D  00F3               	movwf	___awdiv@divisor
  1305     009E  3000               	movlw	0
  1306     009F  00F4               	movwf	___awdiv@divisor+1
  1307     00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1308     00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1309     00A2  085C               	movf	main@VAL1,w
  1310     00A3  00B4               	movwf	??_main
  1311     00A4  01B5               	clrf	??_main+1
  1312     00A5  0834               	movf	??_main,w
  1313     00A6  00F5               	movwf	___awdiv@dividend
  1314     00A7  0835               	movf	??_main+1,w
  1315     00A8  00F6               	movwf	___awdiv@dividend+1
  1316     00A9  120A  118A  2368  120A  118A  	fcall	___awdiv
  1317     00AE  0873               	movf	?___awdiv,w
  1318     00AF  1283               	bcf	3,5	;RP0=0, select bank0
  1319     00B0  1303               	bcf	3,6	;RP1=0, select bank0
  1320     00B1  00D5               	movwf	main@VAL1_C
  1321     00B2                     l2077:
  1322                           
  1323                           ;main_M.c: 107:         VAL1_D = (VAL1/10)%10;
  1324     00B2  300A               	movlw	10
  1325     00B3  00A4               	movwf	___awmod@divisor
  1326     00B4  3000               	movlw	0
  1327     00B5  00A5               	movwf	___awmod@divisor+1
  1328     00B6  300A               	movlw	10
  1329     00B7  00F3               	movwf	___awdiv@divisor
  1330     00B8  3000               	movlw	0
  1331     00B9  00F4               	movwf	___awdiv@divisor+1
  1332     00BA  085C               	movf	main@VAL1,w
  1333     00BB  00B4               	movwf	??_main
  1334     00BC  01B5               	clrf	??_main+1
  1335     00BD  0834               	movf	??_main,w
  1336     00BE  00F5               	movwf	___awdiv@dividend
  1337     00BF  0835               	movf	??_main+1,w
  1338     00C0  00F6               	movwf	___awdiv@dividend+1
  1339     00C1  120A  118A  2368  120A  118A  	fcall	___awdiv
  1340     00C6  0874               	movf	?___awdiv+1,w
  1341     00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1342     00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1343     00C9  00A7               	movwf	___awmod@dividend+1
  1344     00CA  0873               	movf	?___awdiv,w
  1345     00CB  00A6               	movwf	___awmod@dividend
  1346     00CC  120A  118A  24FE  120A  118A  	fcall	___awmod
  1347     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1348     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1349     00D3  0824               	movf	?___awmod,w
  1350     00D4  00D4               	movwf	main@VAL1_D
  1351     00D5                     l2079:
  1352                           
  1353                           ;main_M.c: 108:         VAL1_U = VAL1%10;
  1354     00D5  300A               	movlw	10
  1355     00D6  00A4               	movwf	___awmod@divisor
  1356     00D7  3000               	movlw	0
  1357     00D8  00A5               	movwf	___awmod@divisor+1
  1358     00D9  085C               	movf	main@VAL1,w
  1359     00DA  00B4               	movwf	??_main
  1360     00DB  01B5               	clrf	??_main+1
  1361     00DC  0834               	movf	??_main,w
  1362     00DD  00A6               	movwf	___awmod@dividend
  1363     00DE  0835               	movf	??_main+1,w
  1364     00DF  00A7               	movwf	___awmod@dividend+1
  1365     00E0  120A  118A  24FE  120A  118A  	fcall	___awmod
  1366     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1367     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1368     00E7  0824               	movf	?___awmod,w
  1369     00E8  00D3               	movwf	main@VAL1_U
  1370                           
  1371                           ;main_M.c: 110:         sprintf(ADC1, "%u", VAL1_C);
  1372     00E9  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1373     00EA  00A7               	movwf	sprintf@f
  1374     00EB  0855               	movf	main@VAL1_C,w
  1375     00EC  00B4               	movwf	??_main
  1376     00ED  01B5               	clrf	??_main+1
  1377     00EE  0834               	movf	??_main,w
  1378     00EF  00A8               	movwf	?_sprintf+1
  1379     00F0  0835               	movf	??_main+1,w
  1380     00F1  00A9               	movwf	?_sprintf+2
  1381     00F2  3038               	movlw	(low (main@ADC1| 0))& (0+255)
  1382     00F3  120A  118A  22A5  120A  118A  	fcall	_sprintf
  1383     00F8                     l2081:
  1384                           
  1385                           ;main_M.c: 111:         Lcd_Set_Cursor_4bits(2,1);
  1386     00F8  01F7               	clrf	Lcd_Set_Cursor_4bits@b
  1387     00F9  0AF7               	incf	Lcd_Set_Cursor_4bits@b,f
  1388     00FA  3002               	movlw	2
  1389     00FB  120A  118A  2559  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1390     0100                     l2083:
  1391                           
  1392                           ;main_M.c: 112:         Lcd_Write_String_4bits(ADC1);
  1393     0100  3038               	movlw	(low (main@ADC1| 0))& (0+255)
  1394     0101  00F8               	movwf	Lcd_Write_String_4bits@a
  1395     0102  3000               	movlw	0
  1396     0103  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1397     0104  120A  118A  25EB  120A  118A  	fcall	_Lcd_Write_String_4bits
  1398     0109                     l2085:
  1399                           
  1400                           ;main_M.c: 114:         sprintf(ADC1, "%u", VAL1_D);
  1401     0109  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1402     010A  1283               	bcf	3,5	;RP0=0, select bank0
  1403     010B  1303               	bcf	3,6	;RP1=0, select bank0
  1404     010C  00A7               	movwf	sprintf@f
  1405     010D  0854               	movf	main@VAL1_D,w
  1406     010E  00B4               	movwf	??_main
  1407     010F  01B5               	clrf	??_main+1
  1408     0110  0834               	movf	??_main,w
  1409     0111  00A8               	movwf	?_sprintf+1
  1410     0112  0835               	movf	??_main+1,w
  1411     0113  00A9               	movwf	?_sprintf+2
  1412     0114  3038               	movlw	(low (main@ADC1| 0))& (0+255)
  1413     0115  120A  118A  22A5  120A  118A  	fcall	_sprintf
  1414     011A                     l2087:
  1415                           
  1416                           ;main_M.c: 115:         Lcd_Set_Cursor_4bits(2,2);
  1417     011A  3002               	movlw	2
  1418     011B  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1419     011C  3002               	movlw	2
  1420     011D  120A  118A  2559  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1421                           
  1422                           ;main_M.c: 116:         Lcd_Write_String_4bits(ADC1);
  1423     0122  3038               	movlw	(low (main@ADC1| 0))& (0+255)
  1424     0123  00F8               	movwf	Lcd_Write_String_4bits@a
  1425     0124  3000               	movlw	0
  1426     0125  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1427     0126  120A  118A  25EB  120A  118A  	fcall	_Lcd_Write_String_4bits
  1428                           
  1429                           ;main_M.c: 118:         sprintf(ADC1, "%u", VAL1_U);
  1430     012B  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1431     012C  1283               	bcf	3,5	;RP0=0, select bank0
  1432     012D  1303               	bcf	3,6	;RP1=0, select bank0
  1433     012E  00A7               	movwf	sprintf@f
  1434     012F  0853               	movf	main@VAL1_U,w
  1435     0130  00B4               	movwf	??_main
  1436     0131  01B5               	clrf	??_main+1
  1437     0132  0834               	movf	??_main,w
  1438     0133  00A8               	movwf	?_sprintf+1
  1439     0134  0835               	movf	??_main+1,w
  1440     0135  00A9               	movwf	?_sprintf+2
  1441     0136  3038               	movlw	(low (main@ADC1| 0))& (0+255)
  1442     0137  120A  118A  22A5  120A  118A  	fcall	_sprintf
  1443     013C                     l2089:
  1444                           
  1445                           ;main_M.c: 119:         Lcd_Set_Cursor_4bits(2,3);
  1446     013C  3003               	movlw	3
  1447     013D  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1448     013E  3002               	movlw	2
  1449     013F  120A  118A  2559  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1450     0144                     l2091:
  1451                           
  1452                           ;main_M.c: 120:         Lcd_Write_String_4bits(ADC1);
  1453     0144  3038               	movlw	(low (main@ADC1| 0))& (0+255)
  1454     0145  00F8               	movwf	Lcd_Write_String_4bits@a
  1455     0146  3000               	movlw	0
  1456     0147  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1457     0148  120A  118A  25EB  120A  118A  	fcall	_Lcd_Write_String_4bits
  1458                           
  1459                           ;main_M.c: 122:         SEG = leerRTC(REG_SEG);
  1460     014D  3000               	movlw	0
  1461     014E  120A  118A  2439  120A  118A  	fcall	_leerRTC
  1462     0153  1283               	bcf	3,5	;RP0=0, select bank0
  1463     0154  1303               	bcf	3,6	;RP1=0, select bank0
  1464     0155  00D6               	movwf	main@SEG
  1465                           
  1466                           ;main_M.c: 124:         MIN = leerRTC(REG_MIN);
  1467     0156  3001               	movlw	1
  1468     0157  120A  118A  2439  120A  118A  	fcall	_leerRTC
  1469     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1470     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1471     015E  00D7               	movwf	main@MIN
  1472                           
  1473                           ;main_M.c: 126:         HOR = leerRTC(REG_HOR);
  1474     015F  3002               	movlw	2
  1475     0160  120A  118A  2439  120A  118A  	fcall	_leerRTC
  1476     0165  1283               	bcf	3,5	;RP0=0, select bank0
  1477     0166  1303               	bcf	3,6	;RP1=0, select bank0
  1478     0167  00D8               	movwf	main@HOR
  1479                           
  1480                           ;main_M.c: 128:         DIA = leerRTC(REG_DIA);
  1481     0168  3003               	movlw	3
  1482     0169  120A  118A  2439  120A  118A  	fcall	_leerRTC
  1483     016E  1283               	bcf	3,5	;RP0=0, select bank0
  1484     016F  1303               	bcf	3,6	;RP1=0, select bank0
  1485     0170  00D9               	movwf	main@DIA
  1486                           
  1487                           ;main_M.c: 130:         MES = leerRTC(REG_MES);
  1488     0171  3004               	movlw	4
  1489     0172  120A  118A  2439  120A  118A  	fcall	_leerRTC
  1490     0177  1283               	bcf	3,5	;RP0=0, select bank0
  1491     0178  1303               	bcf	3,6	;RP1=0, select bank0
  1492     0179  00DA               	movwf	main@MES
  1493                           
  1494                           ;main_M.c: 132:         AO = leerRTC(REG_A);
  1495     017A  3005               	movlw	5
  1496     017B  120A  118A  2439  120A  118A  	fcall	_leerRTC
  1497     0180  1283               	bcf	3,5	;RP0=0, select bank0
  1498     0181  1303               	bcf	3,6	;RP1=0, select bank0
  1499     0182  00DB               	movwf	main@AO
  1500                           
  1501                           ;main_M.c: 134:         tiempo[7] = SEG % 10 + 48;
  1502     0183  300A               	movlw	10
  1503     0184  00A4               	movwf	___awmod@divisor
  1504     0185  3000               	movlw	0
  1505     0186  00A5               	movwf	___awmod@divisor+1
  1506     0187  0856               	movf	main@SEG,w
  1507     0188  00B4               	movwf	??_main
  1508     0189  01B5               	clrf	??_main+1
  1509     018A  0834               	movf	??_main,w
  1510     018B  00A6               	movwf	___awmod@dividend
  1511     018C  0835               	movf	??_main+1,w
  1512     018D  00A7               	movwf	___awmod@dividend+1
  1513     018E  120A  118A  24FE  120A  118A  	fcall	___awmod
  1514     0193  1283               	bcf	3,5	;RP0=0, select bank0
  1515     0194  1303               	bcf	3,6	;RP1=0, select bank0
  1516     0195  0824               	movf	?___awmod,w
  1517     0196  3E30               	addlw	48
  1518     0197  00D2               	movwf	main@tiempo+7
  1519                           
  1520                           ;main_M.c: 135:         tiempo[6] = SEG / 10 + 48;
  1521     0198  300A               	movlw	10
  1522     0199  00F3               	movwf	___awdiv@divisor
  1523     019A  3000               	movlw	0
  1524     019B  00F4               	movwf	___awdiv@divisor+1
  1525     019C  0856               	movf	main@SEG,w
  1526     019D  00B4               	movwf	??_main
  1527     019E  01B5               	clrf	??_main+1
  1528     019F  0834               	movf	??_main,w
  1529     01A0  00F5               	movwf	___awdiv@dividend
  1530     01A1  0835               	movf	??_main+1,w
  1531     01A2  00F6               	movwf	___awdiv@dividend+1
  1532     01A3  120A  118A  2368  120A  118A  	fcall	___awdiv
  1533     01A8  0873               	movf	?___awdiv,w
  1534     01A9  3E30               	addlw	48
  1535     01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1536     01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1537     01AC  00D1               	movwf	main@tiempo+6
  1538                           
  1539                           ;main_M.c: 136:         tiempo[4] = MIN % 10 + 48;
  1540     01AD  300A               	movlw	10
  1541     01AE  00A4               	movwf	___awmod@divisor
  1542     01AF  3000               	movlw	0
  1543     01B0  00A5               	movwf	___awmod@divisor+1
  1544     01B1  0857               	movf	main@MIN,w
  1545     01B2  00B4               	movwf	??_main
  1546     01B3  01B5               	clrf	??_main+1
  1547     01B4  0834               	movf	??_main,w
  1548     01B5  00A6               	movwf	___awmod@dividend
  1549     01B6  0835               	movf	??_main+1,w
  1550     01B7  00A7               	movwf	___awmod@dividend+1
  1551     01B8  120A  118A  24FE  120A  118A  	fcall	___awmod
  1552     01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1553     01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1554     01BF  0824               	movf	?___awmod,w
  1555     01C0  3E30               	addlw	48
  1556     01C1  00CF               	movwf	main@tiempo+4
  1557                           
  1558                           ;main_M.c: 137:         tiempo[3] = MIN / 10 + 48;
  1559     01C2  300A               	movlw	10
  1560     01C3  00F3               	movwf	___awdiv@divisor
  1561     01C4  3000               	movlw	0
  1562     01C5  00F4               	movwf	___awdiv@divisor+1
  1563     01C6  0857               	movf	main@MIN,w
  1564     01C7  00B4               	movwf	??_main
  1565     01C8  01B5               	clrf	??_main+1
  1566     01C9  0834               	movf	??_main,w
  1567     01CA  00F5               	movwf	___awdiv@dividend
  1568     01CB  0835               	movf	??_main+1,w
  1569     01CC  00F6               	movwf	___awdiv@dividend+1
  1570     01CD  120A  118A  2368  120A  118A  	fcall	___awdiv
  1571     01D2  0873               	movf	?___awdiv,w
  1572     01D3  3E30               	addlw	48
  1573     01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1574     01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1575     01D6  00CE               	movwf	main@tiempo+3
  1576                           
  1577                           ;main_M.c: 138:         tiempo[1] = HOR % 10 + 48;
  1578     01D7  300A               	movlw	10
  1579     01D8  00A4               	movwf	___awmod@divisor
  1580     01D9  3000               	movlw	0
  1581     01DA  00A5               	movwf	___awmod@divisor+1
  1582     01DB  0858               	movf	main@HOR,w
  1583     01DC  00B4               	movwf	??_main
  1584     01DD  01B5               	clrf	??_main+1
  1585     01DE  0834               	movf	??_main,w
  1586     01DF  00A6               	movwf	___awmod@dividend
  1587     01E0  0835               	movf	??_main+1,w
  1588     01E1  00A7               	movwf	___awmod@dividend+1
  1589     01E2  120A  118A  24FE  120A  118A  	fcall	___awmod
  1590     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  1591     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  1592     01E9  0824               	movf	?___awmod,w
  1593     01EA  3E30               	addlw	48
  1594     01EB  00CC               	movwf	main@tiempo+1
  1595                           
  1596                           ;main_M.c: 139:         tiempo[0] = HOR / 10 + 48;
  1597     01EC  300A               	movlw	10
  1598     01ED  00F3               	movwf	___awdiv@divisor
  1599     01EE  3000               	movlw	0
  1600     01EF  00F4               	movwf	___awdiv@divisor+1
  1601     01F0  0858               	movf	main@HOR,w
  1602     01F1  00B4               	movwf	??_main
  1603     01F2  01B5               	clrf	??_main+1
  1604     01F3  0834               	movf	??_main,w
  1605     01F4  00F5               	movwf	___awdiv@dividend
  1606     01F5  0835               	movf	??_main+1,w
  1607     01F6  00F6               	movwf	___awdiv@dividend+1
  1608     01F7  120A  118A  2368  120A  118A  	fcall	___awdiv
  1609     01FC  0873               	movf	?___awdiv,w
  1610     01FD  3E30               	addlw	48
  1611     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1612     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1613     0200  00CB               	movwf	main@tiempo
  1614                           
  1615                           ;main_M.c: 140:         fecha[9] = AO % 10 + 48;
  1616     0201  300A               	movlw	10
  1617     0202  00A4               	movwf	___awmod@divisor
  1618     0203  3000               	movlw	0
  1619     0204  00A5               	movwf	___awmod@divisor+1
  1620     0205  085B               	movf	main@AO,w
  1621     0206  00B4               	movwf	??_main
  1622     0207  01B5               	clrf	??_main+1
  1623     0208  0834               	movf	??_main,w
  1624     0209  00A6               	movwf	___awmod@dividend
  1625     020A  0835               	movf	??_main+1,w
  1626     020B  00A7               	movwf	___awmod@dividend+1
  1627     020C  120A  118A  24FE  120A  118A  	fcall	___awmod
  1628     0211  1283               	bcf	3,5	;RP0=0, select bank0
  1629     0212  1303               	bcf	3,6	;RP1=0, select bank0
  1630     0213  0824               	movf	?___awmod,w
  1631     0214  3E30               	addlw	48
  1632     0215  00CA               	movwf	main@fecha+9
  1633                           
  1634                           ;main_M.c: 141:         fecha[8] = AO / 10 + 48;
  1635     0216  300A               	movlw	10
  1636     0217  00F3               	movwf	___awdiv@divisor
  1637     0218  3000               	movlw	0
  1638     0219  00F4               	movwf	___awdiv@divisor+1
  1639     021A  085B               	movf	main@AO,w
  1640     021B  00B4               	movwf	??_main
  1641     021C  01B5               	clrf	??_main+1
  1642     021D  0834               	movf	??_main,w
  1643     021E  00F5               	movwf	___awdiv@dividend
  1644     021F  0835               	movf	??_main+1,w
  1645     0220  00F6               	movwf	___awdiv@dividend+1
  1646     0221  120A  118A  2368  120A  118A  	fcall	___awdiv
  1647     0226  0873               	movf	?___awdiv,w
  1648     0227  3E30               	addlw	48
  1649     0228  1283               	bcf	3,5	;RP0=0, select bank0
  1650     0229  1303               	bcf	3,6	;RP1=0, select bank0
  1651     022A  00C9               	movwf	main@fecha+8
  1652                           
  1653                           ;main_M.c: 142:         fecha[4] = MES % 10 + 48;
  1654     022B  300A               	movlw	10
  1655     022C  00A4               	movwf	___awmod@divisor
  1656     022D  3000               	movlw	0
  1657     022E  00A5               	movwf	___awmod@divisor+1
  1658     022F  085A               	movf	main@MES,w
  1659     0230  00B4               	movwf	??_main
  1660     0231  01B5               	clrf	??_main+1
  1661     0232  0834               	movf	??_main,w
  1662     0233  00A6               	movwf	___awmod@dividend
  1663     0234  0835               	movf	??_main+1,w
  1664     0235  00A7               	movwf	___awmod@dividend+1
  1665     0236  120A  118A  24FE  120A  118A  	fcall	___awmod
  1666     023B  1283               	bcf	3,5	;RP0=0, select bank0
  1667     023C  1303               	bcf	3,6	;RP1=0, select bank0
  1668     023D  0824               	movf	?___awmod,w
  1669     023E  3E30               	addlw	48
  1670     023F  00C5               	movwf	main@fecha+4
  1671                           
  1672                           ;main_M.c: 143:         fecha[3] = MES / 10 + 48;
  1673     0240  300A               	movlw	10
  1674     0241  00F3               	movwf	___awdiv@divisor
  1675     0242  3000               	movlw	0
  1676     0243  00F4               	movwf	___awdiv@divisor+1
  1677     0244  085A               	movf	main@MES,w
  1678     0245  00B4               	movwf	??_main
  1679     0246  01B5               	clrf	??_main+1
  1680     0247  0834               	movf	??_main,w
  1681     0248  00F5               	movwf	___awdiv@dividend
  1682     0249  0835               	movf	??_main+1,w
  1683     024A  00F6               	movwf	___awdiv@dividend+1
  1684     024B  120A  118A  2368  120A  118A  	fcall	___awdiv
  1685     0250  0873               	movf	?___awdiv,w
  1686     0251  3E30               	addlw	48
  1687     0252  1283               	bcf	3,5	;RP0=0, select bank0
  1688     0253  1303               	bcf	3,6	;RP1=0, select bank0
  1689     0254  00C4               	movwf	main@fecha+3
  1690                           
  1691                           ;main_M.c: 144:         fecha[1] = DIA % 10 + 48;
  1692     0255  300A               	movlw	10
  1693     0256  00A4               	movwf	___awmod@divisor
  1694     0257  3000               	movlw	0
  1695     0258  00A5               	movwf	___awmod@divisor+1
  1696     0259  0859               	movf	main@DIA,w
  1697     025A  00B4               	movwf	??_main
  1698     025B  01B5               	clrf	??_main+1
  1699     025C  0834               	movf	??_main,w
  1700     025D  00A6               	movwf	___awmod@dividend
  1701     025E  0835               	movf	??_main+1,w
  1702     025F  00A7               	movwf	___awmod@dividend+1
  1703     0260  120A  118A  24FE  120A  118A  	fcall	___awmod
  1704     0265  1283               	bcf	3,5	;RP0=0, select bank0
  1705     0266  1303               	bcf	3,6	;RP1=0, select bank0
  1706     0267  0824               	movf	?___awmod,w
  1707     0268  3E30               	addlw	48
  1708     0269  00C2               	movwf	main@fecha+1
  1709                           
  1710                           ;main_M.c: 145:         fecha[0] = DIA / 10 + 48;
  1711     026A  300A               	movlw	10
  1712     026B  00F3               	movwf	___awdiv@divisor
  1713     026C  3000               	movlw	0
  1714     026D  00F4               	movwf	___awdiv@divisor+1
  1715     026E  0859               	movf	main@DIA,w
  1716     026F  00B4               	movwf	??_main
  1717     0270  01B5               	clrf	??_main+1
  1718     0271  0834               	movf	??_main,w
  1719     0272  00F5               	movwf	___awdiv@dividend
  1720     0273  0835               	movf	??_main+1,w
  1721     0274  00F6               	movwf	___awdiv@dividend+1
  1722     0275  120A  118A  2368  120A  118A  	fcall	___awdiv
  1723     027A  0873               	movf	?___awdiv,w
  1724     027B  3E30               	addlw	48
  1725     027C  1283               	bcf	3,5	;RP0=0, select bank0
  1726     027D  1303               	bcf	3,6	;RP1=0, select bank0
  1727     027E  00C1               	movwf	main@fecha
  1728                           
  1729                           ;main_M.c: 147:         Lcd_Set_Cursor_4bits(1,7);
  1730     027F  3007               	movlw	7
  1731     0280  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1732     0281  3001               	movlw	1
  1733     0282  120A  118A  2559  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1734     0287                     l2093:
  1735                           
  1736                           ;main_M.c: 148:         Lcd_Write_String_4bits(tiempo);
  1737     0287  304B               	movlw	(low (main@tiempo| 0))& (0+255)
  1738     0288  00F8               	movwf	Lcd_Write_String_4bits@a
  1739     0289  3000               	movlw	0
  1740     028A  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1741     028B  120A  118A  25EB  120A  118A  	fcall	_Lcd_Write_String_4bits
  1742     0290                     l2095:
  1743                           
  1744                           ;main_M.c: 149:         Lcd_Set_Cursor_4bits(2,7);
  1745     0290  3007               	movlw	7
  1746     0291  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1747     0292  3002               	movlw	2
  1748     0293  120A  118A  2559  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1749                           
  1750                           ;main_M.c: 150:         Lcd_Write_String_4bits(fecha);
  1751     0298  3041               	movlw	(low (main@fecha| 0))& (0+255)
  1752     0299  00F8               	movwf	Lcd_Write_String_4bits@a
  1753     029A  3000               	movlw	0
  1754     029B  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1755     029C  120A  118A  25EB  120A  118A  	fcall	_Lcd_Write_String_4bits
  1756     02A1  286A               	goto	l2063
  1757     02A2  120A  118A  280C   	ljmp	start
  1758     02A5                     __end_of_main:
  1759                           
  1760                           	psect	text1
  1761     02A5                     __ptext1:	
  1762 ;; *************** function _sprintf *****************
  1763 ;; Defined at:
  1764 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1765 ;; Parameters:    Size  Location     Type
  1766 ;;  sp              1    wreg     PTR unsigned char 
  1767 ;;		 -> main@ADC1(9), 
  1768 ;;  f               1    7[BANK0 ] PTR const unsigned char 
  1769 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  1772 ;;		 -> main@ADC1(9), 
  1773 ;;  tmpval          4    0        struct .
  1774 ;;  val             2   15[BANK0 ] unsigned int 
  1775 ;;  cp              2    0        PTR const unsigned char 
  1776 ;;  len             2    0        unsigned int 
  1777 ;;  c               1   19[BANK0 ] unsigned char 
  1778 ;;  prec            1   17[BANK0 ] char 
  1779 ;;  ap              1   14[BANK0 ] PTR void [1]
  1780 ;;		 -> ?_sprintf(2), 
  1781 ;;  flag            1   13[BANK0 ] unsigned char 
  1782 ;; Return value:  Size  Location     Type
  1783 ;;                  2    7[BANK0 ] int 
  1784 ;; Registers used:
  1785 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1786 ;; Tracked objects:
  1787 ;;		On entry : 0/0
  1788 ;;		On exit  : 0/0
  1789 ;;		Unchanged: 0/0
  1790 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1791 ;;      Params:         0       3       0       0       0
  1792 ;;      Locals:         0       7       0       0       0
  1793 ;;      Temps:          0       3       0       0       0
  1794 ;;      Totals:         0      13       0       0       0
  1795 ;;Total ram usage:       13 bytes
  1796 ;; Hardware stack levels used: 1
  1797 ;; Hardware stack levels required when called: 2
  1798 ;; This function calls:
  1799 ;;		___lwdiv
  1800 ;;		___lwmod
  1801 ;; This function is called by:
  1802 ;;		_main
  1803 ;; This function uses a non-reentrant model
  1804 ;;
  1805                           
  1806     02A5                     _sprintf:	
  1807                           ;psect for function _sprintf
  1808                           
  1809                           
  1810                           ;incstack = 0
  1811                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1812                           ;sprintf@sp stored from wreg
  1813     02A5  1283               	bcf	3,5	;RP0=0, select bank0
  1814     02A6  1303               	bcf	3,6	;RP1=0, select bank0
  1815     02A7  00B2               	movwf	sprintf@sp
  1816     02A8                     l1957:
  1817                           
  1818                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1819     02A8  3028               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1820     02A9  00AE               	movwf	sprintf@ap
  1821                           
  1822                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1823     02AA  2B53               	goto	l1999
  1824     02AB                     l1959:
  1825                           
  1826                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1827     02AB  3025               	movlw	37
  1828     02AC  0633               	xorwf	sprintf@c,w
  1829     02AD  1903               	btfsc	3,2
  1830     02AE  2AB0               	goto	u1631
  1831     02AF  2AB1               	goto	u1630
  1832     02B0                     u1631:
  1833     02B0  2ABB               	goto	l1965
  1834     02B1                     u1630:
  1835     02B1                     l1961:
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1838     02B1  0832               	movf	sprintf@sp,w
  1839     02B2  0084               	movwf	4
  1840     02B3  0833               	movf	sprintf@c,w
  1841     02B4  1383               	bcf	3,7	;select IRP bank0
  1842     02B5  0080               	movwf	0
  1843     02B6                     l1963:
  1844     02B6  3001               	movlw	1
  1845     02B7  00AA               	movwf	??_sprintf
  1846     02B8  082A               	movf	??_sprintf,w
  1847     02B9  07B2               	addwf	sprintf@sp,f
  1848                           
  1849                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1850     02BA  2B53               	goto	l1999
  1851     02BB                     l1965:
  1852                           
  1853                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1854     02BB  01AD               	clrf	sprintf@flag
  1855                           
  1856                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1857     02BC  2AC2               	goto	l1971
  1858     02BD                     l1967:
  1859                           
  1860                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1861     02BD  30C0               	movlw	192
  1862     02BE  00AA               	movwf	??_sprintf
  1863     02BF  082A               	movf	??_sprintf,w
  1864     02C0  04AD               	iorwf	sprintf@flag,f
  1865                           
  1866                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1867     02C1  2ADC               	goto	l1973
  1868     02C2                     l1971:
  1869     02C2  3001               	movlw	1
  1870     02C3  07A7               	addwf	sprintf@f,f
  1871     02C4  30FF               	movlw	-1
  1872     02C5  0727               	addwf	sprintf@f,w
  1873     02C6  0084               	movwf	4
  1874     02C7  120A  118A  2768  120A  118A  	fcall	stringdir
  1875     02CC  00B3               	movwf	sprintf@c
  1876     02CD  00AA               	movwf	??_sprintf
  1877     02CE  01AB               	clrf	??_sprintf+1
  1878                           
  1879                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1880                           ; Switch size 1, requested type "simple"
  1881                           ; Number of cases is 1, Range of values is 0 to 0
  1882                           ; switch strategies available:
  1883                           ; Name         Instructions Cycles
  1884                           ; simple_byte            4     3 (average)
  1885                           ; direct_byte           11     8 (fixed)
  1886                           ; jumptable            260     6 (fixed)
  1887                           ;	Chosen strategy is simple_byte
  1888     02CF  082B               	movf	??_sprintf+1,w
  1889     02D0  3A00               	xorlw	0	; case 0
  1890     02D1  1903               	skipnz
  1891     02D2  2AD4               	goto	l2121
  1892     02D3  2B53               	goto	l1999
  1893     02D4                     l2121:
  1894                           
  1895                           ; Switch size 1, requested type "simple"
  1896                           ; Number of cases is 2, Range of values is 0 to 117
  1897                           ; switch strategies available:
  1898                           ; Name         Instructions Cycles
  1899                           ; simple_byte            7     4 (average)
  1900                           ; jumptable            260     6 (fixed)
  1901                           ;	Chosen strategy is simple_byte
  1902     02D4  082A               	movf	??_sprintf,w
  1903     02D5  3A00               	xorlw	0	; case 0
  1904     02D6  1903               	skipnz
  1905     02D7  2B63               	goto	l2001
  1906     02D8  3A75               	xorlw	117	; case 117
  1907     02D9  1903               	skipnz
  1908     02DA  2ABD               	goto	l1967
  1909     02DB  2B53               	goto	l1999
  1910     02DC                     l1973:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1913     02DC  082E               	movf	sprintf@ap,w
  1914     02DD  0084               	movwf	4
  1915     02DE  1383               	bcf	3,7	;select IRP bank0
  1916     02DF  0800               	movf	0,w
  1917     02E0  00AF               	movwf	sprintf@val
  1918     02E1  0A84               	incf	4,f
  1919     02E2  0800               	movf	0,w
  1920     02E3  00B0               	movwf	sprintf@val+1
  1921     02E4                     l1975:
  1922     02E4  3002               	movlw	2
  1923     02E5  00AA               	movwf	??_sprintf
  1924     02E6  082A               	movf	??_sprintf,w
  1925     02E7  07AE               	addwf	sprintf@ap,f
  1926     02E8                     l1977:
  1927                           
  1928                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1929     02E8  01B3               	clrf	sprintf@c
  1930     02E9  0AB3               	incf	sprintf@c,f
  1931     02EA                     l1983:
  1932                           
  1933                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1934     02EA  0833               	movf	sprintf@c,w
  1935     02EB  00AA               	movwf	??_sprintf
  1936     02EC  072A               	addwf	??_sprintf,w
  1937     02ED  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1938     02EE  0084               	movwf	4
  1939     02EF  120A  118A  2768  120A  118A  	fcall	stringdir
  1940     02F4  00AB               	movwf	??_sprintf+1
  1941     02F5  120A  118A  2768  120A  118A  	fcall	stringdir
  1942     02FA  00AC               	movwf	??_sprintf+2
  1943     02FB  082C               	movf	??_sprintf+2,w
  1944     02FC  0230               	subwf	sprintf@val+1,w
  1945     02FD  1D03               	skipz
  1946     02FE  2B01               	goto	u1645
  1947     02FF  082B               	movf	??_sprintf+1,w
  1948     0300  022F               	subwf	sprintf@val,w
  1949     0301                     u1645:
  1950     0301  1803               	skipnc
  1951     0302  2B04               	goto	u1641
  1952     0303  2B05               	goto	u1640
  1953     0304                     u1641:
  1954     0304  2B06               	goto	l1987
  1955     0305                     u1640:
  1956     0305  2B10               	goto	l1989
  1957     0306                     l1987:
  1958     0306  3001               	movlw	1
  1959     0307  00AA               	movwf	??_sprintf
  1960     0308  082A               	movf	??_sprintf,w
  1961     0309  07B3               	addwf	sprintf@c,f
  1962     030A  3005               	movlw	5
  1963     030B  0633               	xorwf	sprintf@c,w
  1964     030C  1D03               	btfss	3,2
  1965     030D  2B0F               	goto	u1651
  1966     030E  2B10               	goto	u1650
  1967     030F                     u1651:
  1968     030F  2AEA               	goto	l1983
  1969     0310                     u1650:
  1970     0310                     l1989:
  1971                           
  1972                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1973     0310  0833               	movf	sprintf@c,w
  1974     0311  00B1               	movwf	sprintf@prec
  1975                           
  1976                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1977     0312  2B4A               	goto	l1997
  1978     0313                     l1991:
  1979                           
  1980                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1981     0313  300A               	movlw	10
  1982     0314  00A3               	movwf	___lwmod@divisor
  1983     0315  3000               	movlw	0
  1984     0316  00A4               	movwf	___lwmod@divisor+1
  1985     0317  0831               	movf	sprintf@prec,w
  1986     0318  00AA               	movwf	??_sprintf
  1987     0319  072A               	addwf	??_sprintf,w
  1988     031A  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1989     031B  0084               	movwf	4
  1990     031C  120A  118A  2768  120A  118A  	fcall	stringdir
  1991     0321  00F3               	movwf	___lwdiv@divisor
  1992     0322  120A  118A  2768  120A  118A  	fcall	stringdir
  1993     0327  00F4               	movwf	___lwdiv@divisor+1
  1994     0328  0830               	movf	sprintf@val+1,w
  1995     0329  00F6               	movwf	___lwdiv@dividend+1
  1996     032A  082F               	movf	sprintf@val,w
  1997     032B  00F5               	movwf	___lwdiv@dividend
  1998     032C  120A  118A  25A5  120A  118A  	fcall	___lwdiv
  1999     0331  0874               	movf	?___lwdiv+1,w
  2000     0332  1283               	bcf	3,5	;RP0=0, select bank0
  2001     0333  1303               	bcf	3,6	;RP1=0, select bank0
  2002     0334  00A6               	movwf	___lwmod@dividend+1
  2003     0335  0873               	movf	?___lwdiv,w
  2004     0336  00A5               	movwf	___lwmod@dividend
  2005     0337  120A  118A  2631  120A  118A  	fcall	___lwmod
  2006     033C  1283               	bcf	3,5	;RP0=0, select bank0
  2007     033D  1303               	bcf	3,6	;RP1=0, select bank0
  2008     033E  0823               	movf	?___lwmod,w
  2009     033F  3E30               	addlw	48
  2010     0340  00B3               	movwf	sprintf@c
  2011     0341                     l1993:
  2012                           
  2013                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2014     0341  0832               	movf	sprintf@sp,w
  2015     0342  0084               	movwf	4
  2016     0343  0833               	movf	sprintf@c,w
  2017     0344  1383               	bcf	3,7	;select IRP bank0
  2018     0345  0080               	movwf	0
  2019     0346                     l1995:
  2020     0346  3001               	movlw	1
  2021     0347  00AA               	movwf	??_sprintf
  2022     0348  082A               	movf	??_sprintf,w
  2023     0349  07B2               	addwf	sprintf@sp,f
  2024     034A                     l1997:
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2027     034A  30FF               	movlw	255
  2028     034B  00AA               	movwf	??_sprintf
  2029     034C  082A               	movf	??_sprintf,w
  2030     034D  07B1               	addwf	sprintf@prec,f
  2031     034E  0A31               	incf	sprintf@prec,w
  2032     034F  1D03               	btfss	3,2
  2033     0350  2B52               	goto	u1661
  2034     0351  2B53               	goto	u1660
  2035     0352                     u1661:
  2036     0352  2B13               	goto	l1991
  2037     0353                     u1660:
  2038     0353                     l1999:
  2039                           
  2040                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2041     0353  3001               	movlw	1
  2042     0354  07A7               	addwf	sprintf@f,f
  2043     0355  30FF               	movlw	-1
  2044     0356  0727               	addwf	sprintf@f,w
  2045     0357  0084               	movwf	4
  2046     0358  120A  118A  2768  120A  118A  	fcall	stringdir
  2047     035D  00B3               	movwf	sprintf@c
  2048     035E  0833               	movf	sprintf@c,w
  2049     035F  1D03               	btfss	3,2
  2050     0360  2B62               	goto	u1671
  2051     0361  2B63               	goto	u1670
  2052     0362                     u1671:
  2053     0362  2AAB               	goto	l1959
  2054     0363                     u1670:
  2055     0363                     l2001:
  2056                           
  2057                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2058     0363  0832               	movf	sprintf@sp,w
  2059     0364  0084               	movwf	4
  2060     0365  1383               	bcf	3,7	;select IRP bank0
  2061     0366  0180               	clrf	0
  2062     0367                     l313:
  2063     0367  0008               	return
  2064     0368                     __end_of_sprintf:
  2065                           
  2066                           	psect	text2
  2067     0631                     __ptext2:	
  2068 ;; *************** function ___lwmod *****************
  2069 ;; Defined at:
  2070 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2071 ;; Parameters:    Size  Location     Type
  2072 ;;  divisor         2    3[BANK0 ] unsigned int 
  2073 ;;  dividend        2    5[BANK0 ] unsigned int 
  2074 ;; Auto vars:     Size  Location     Type
  2075 ;;  counter         1    9[COMMON] unsigned char 
  2076 ;; Return value:  Size  Location     Type
  2077 ;;                  2    3[BANK0 ] unsigned int 
  2078 ;; Registers used:
  2079 ;;		wreg, status,2, status,0
  2080 ;; Tracked objects:
  2081 ;;		On entry : 0/0
  2082 ;;		On exit  : 0/0
  2083 ;;		Unchanged: 0/0
  2084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2085 ;;      Params:         0       4       0       0       0
  2086 ;;      Locals:         1       0       0       0       0
  2087 ;;      Temps:          1       0       0       0       0
  2088 ;;      Totals:         2       4       0       0       0
  2089 ;;Total ram usage:        6 bytes
  2090 ;; Hardware stack levels used: 1
  2091 ;; Hardware stack levels required when called: 1
  2092 ;; This function calls:
  2093 ;;		Nothing
  2094 ;; This function is called by:
  2095 ;;		_sprintf
  2096 ;; This function uses a non-reentrant model
  2097 ;;
  2098                           
  2099     0631                     ___lwmod:	
  2100                           ;psect for function ___lwmod
  2101                           
  2102     0631                     l1901:	
  2103                           ;incstack = 0
  2104                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2105                           
  2106     0631  1283               	bcf	3,5	;RP0=0, select bank0
  2107     0632  1303               	bcf	3,6	;RP1=0, select bank0
  2108     0633  0823               	movf	___lwmod@divisor,w
  2109     0634  0424               	iorwf	___lwmod@divisor+1,w
  2110     0635  1903               	btfsc	3,2
  2111     0636  2E38               	goto	u1571
  2112     0637  2E39               	goto	u1570
  2113     0638                     u1571:
  2114     0638  2E68               	goto	l1919
  2115     0639                     u1570:
  2116     0639                     l1903:
  2117     0639  01F9               	clrf	___lwmod@counter
  2118     063A  0AF9               	incf	___lwmod@counter,f
  2119     063B  2E47               	goto	l1909
  2120     063C                     l1905:
  2121     063C  3001               	movlw	1
  2122     063D                     u1585:
  2123     063D  1003               	clrc
  2124     063E  0DA3               	rlf	___lwmod@divisor,f
  2125     063F  0DA4               	rlf	___lwmod@divisor+1,f
  2126     0640  3EFF               	addlw	-1
  2127     0641  1D03               	skipz
  2128     0642  2E3D               	goto	u1585
  2129     0643                     l1907:
  2130     0643  3001               	movlw	1
  2131     0644  00F8               	movwf	??___lwmod
  2132     0645  0878               	movf	??___lwmod,w
  2133     0646  07F9               	addwf	___lwmod@counter,f
  2134     0647                     l1909:
  2135     0647  1FA4               	btfss	___lwmod@divisor+1,7
  2136     0648  2E4A               	goto	u1591
  2137     0649  2E4B               	goto	u1590
  2138     064A                     u1591:
  2139     064A  2E3C               	goto	l1905
  2140     064B                     u1590:
  2141     064B                     l1911:
  2142     064B  0824               	movf	___lwmod@divisor+1,w
  2143     064C  0226               	subwf	___lwmod@dividend+1,w
  2144     064D  1D03               	skipz
  2145     064E  2E51               	goto	u1605
  2146     064F  0823               	movf	___lwmod@divisor,w
  2147     0650  0225               	subwf	___lwmod@dividend,w
  2148     0651                     u1605:
  2149     0651  1C03               	skipc
  2150     0652  2E54               	goto	u1601
  2151     0653  2E55               	goto	u1600
  2152     0654                     u1601:
  2153     0654  2E5B               	goto	l1915
  2154     0655                     u1600:
  2155     0655                     l1913:
  2156     0655  0823               	movf	___lwmod@divisor,w
  2157     0656  02A5               	subwf	___lwmod@dividend,f
  2158     0657  0824               	movf	___lwmod@divisor+1,w
  2159     0658  1C03               	skipc
  2160     0659  03A6               	decf	___lwmod@dividend+1,f
  2161     065A  02A6               	subwf	___lwmod@dividend+1,f
  2162     065B                     l1915:
  2163     065B  3001               	movlw	1
  2164     065C                     u1615:
  2165     065C  1003               	clrc
  2166     065D  0CA4               	rrf	___lwmod@divisor+1,f
  2167     065E  0CA3               	rrf	___lwmod@divisor,f
  2168     065F  3EFF               	addlw	-1
  2169     0660  1D03               	skipz
  2170     0661  2E5C               	goto	u1615
  2171     0662                     l1917:
  2172     0662  3001               	movlw	1
  2173     0663  02F9               	subwf	___lwmod@counter,f
  2174     0664  1D03               	btfss	3,2
  2175     0665  2E67               	goto	u1621
  2176     0666  2E68               	goto	u1620
  2177     0667                     u1621:
  2178     0667  2E4B               	goto	l1911
  2179     0668                     u1620:
  2180     0668                     l1919:
  2181     0668  0826               	movf	___lwmod@dividend+1,w
  2182     0669  00A4               	movwf	?___lwmod+1
  2183     066A  0825               	movf	___lwmod@dividend,w
  2184     066B  00A3               	movwf	?___lwmod
  2185     066C                     l599:
  2186     066C  0008               	return
  2187     066D                     __end_of___lwmod:
  2188                           
  2189                           	psect	text3
  2190     05A5                     __ptext3:	
  2191 ;; *************** function ___lwdiv *****************
  2192 ;; Defined at:
  2193 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2194 ;; Parameters:    Size  Location     Type
  2195 ;;  divisor         2    3[COMMON] unsigned int 
  2196 ;;  dividend        2    5[COMMON] unsigned int 
  2197 ;; Auto vars:     Size  Location     Type
  2198 ;;  quotient        2    1[BANK0 ] unsigned int 
  2199 ;;  counter         1    0[BANK0 ] unsigned char 
  2200 ;; Return value:  Size  Location     Type
  2201 ;;                  2    3[COMMON] unsigned int 
  2202 ;; Registers used:
  2203 ;;		wreg, status,2, status,0
  2204 ;; Tracked objects:
  2205 ;;		On entry : 0/0
  2206 ;;		On exit  : 0/0
  2207 ;;		Unchanged: 0/0
  2208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2209 ;;      Params:         4       0       0       0       0
  2210 ;;      Locals:         0       3       0       0       0
  2211 ;;      Temps:          1       0       0       0       0
  2212 ;;      Totals:         5       3       0       0       0
  2213 ;;Total ram usage:        8 bytes
  2214 ;; Hardware stack levels used: 1
  2215 ;; Hardware stack levels required when called: 1
  2216 ;; This function calls:
  2217 ;;		Nothing
  2218 ;; This function is called by:
  2219 ;;		_sprintf
  2220 ;; This function uses a non-reentrant model
  2221 ;;
  2222                           
  2223     05A5                     ___lwdiv:	
  2224                           ;psect for function ___lwdiv
  2225                           
  2226     05A5                     l1875:	
  2227                           ;incstack = 0
  2228                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2229                           
  2230     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  2231     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  2232     05A7  01A1               	clrf	___lwdiv@quotient
  2233     05A8  01A2               	clrf	___lwdiv@quotient+1
  2234     05A9                     l1877:
  2235     05A9  0873               	movf	___lwdiv@divisor,w
  2236     05AA  0474               	iorwf	___lwdiv@divisor+1,w
  2237     05AB  1903               	btfsc	3,2
  2238     05AC  2DAE               	goto	u1501
  2239     05AD  2DAF               	goto	u1500
  2240     05AE                     u1501:
  2241     05AE  2DE6               	goto	l1897
  2242     05AF                     u1500:
  2243     05AF                     l1879:
  2244     05AF  01A0               	clrf	___lwdiv@counter
  2245     05B0  0AA0               	incf	___lwdiv@counter,f
  2246     05B1  2DBD               	goto	l1885
  2247     05B2                     l1881:
  2248     05B2  3001               	movlw	1
  2249     05B3                     u1515:
  2250     05B3  1003               	clrc
  2251     05B4  0DF3               	rlf	___lwdiv@divisor,f
  2252     05B5  0DF4               	rlf	___lwdiv@divisor+1,f
  2253     05B6  3EFF               	addlw	-1
  2254     05B7  1D03               	skipz
  2255     05B8  2DB3               	goto	u1515
  2256     05B9                     l1883:
  2257     05B9  3001               	movlw	1
  2258     05BA  00F7               	movwf	??___lwdiv
  2259     05BB  0877               	movf	??___lwdiv,w
  2260     05BC  07A0               	addwf	___lwdiv@counter,f
  2261     05BD                     l1885:
  2262     05BD  1FF4               	btfss	___lwdiv@divisor+1,7
  2263     05BE  2DC0               	goto	u1521
  2264     05BF  2DC1               	goto	u1520
  2265     05C0                     u1521:
  2266     05C0  2DB2               	goto	l1881
  2267     05C1                     u1520:
  2268     05C1                     l1887:
  2269     05C1  3001               	movlw	1
  2270     05C2                     u1535:
  2271     05C2  1003               	clrc
  2272     05C3  0DA1               	rlf	___lwdiv@quotient,f
  2273     05C4  0DA2               	rlf	___lwdiv@quotient+1,f
  2274     05C5  3EFF               	addlw	-1
  2275     05C6  1D03               	skipz
  2276     05C7  2DC2               	goto	u1535
  2277     05C8  0874               	movf	___lwdiv@divisor+1,w
  2278     05C9  0276               	subwf	___lwdiv@dividend+1,w
  2279     05CA  1D03               	skipz
  2280     05CB  2DCE               	goto	u1545
  2281     05CC  0873               	movf	___lwdiv@divisor,w
  2282     05CD  0275               	subwf	___lwdiv@dividend,w
  2283     05CE                     u1545:
  2284     05CE  1C03               	skipc
  2285     05CF  2DD1               	goto	u1541
  2286     05D0  2DD2               	goto	u1540
  2287     05D1                     u1541:
  2288     05D1  2DD9               	goto	l1893
  2289     05D2                     u1540:
  2290     05D2                     l1889:
  2291     05D2  0873               	movf	___lwdiv@divisor,w
  2292     05D3  02F5               	subwf	___lwdiv@dividend,f
  2293     05D4  0874               	movf	___lwdiv@divisor+1,w
  2294     05D5  1C03               	skipc
  2295     05D6  03F6               	decf	___lwdiv@dividend+1,f
  2296     05D7  02F6               	subwf	___lwdiv@dividend+1,f
  2297     05D8                     l1891:
  2298     05D8  1421               	bsf	___lwdiv@quotient,0
  2299     05D9                     l1893:
  2300     05D9  3001               	movlw	1
  2301     05DA                     u1555:
  2302     05DA  1003               	clrc
  2303     05DB  0CF4               	rrf	___lwdiv@divisor+1,f
  2304     05DC  0CF3               	rrf	___lwdiv@divisor,f
  2305     05DD  3EFF               	addlw	-1
  2306     05DE  1D03               	skipz
  2307     05DF  2DDA               	goto	u1555
  2308     05E0                     l1895:
  2309     05E0  3001               	movlw	1
  2310     05E1  02A0               	subwf	___lwdiv@counter,f
  2311     05E2  1D03               	btfss	3,2
  2312     05E3  2DE5               	goto	u1561
  2313     05E4  2DE6               	goto	u1560
  2314     05E5                     u1561:
  2315     05E5  2DC1               	goto	l1887
  2316     05E6                     u1560:
  2317     05E6                     l1897:
  2318     05E6  0822               	movf	___lwdiv@quotient+1,w
  2319     05E7  00F4               	movwf	?___lwdiv+1
  2320     05E8  0821               	movf	___lwdiv@quotient,w
  2321     05E9  00F3               	movwf	?___lwdiv
  2322     05EA                     l589:
  2323     05EA  0008               	return
  2324     05EB                     __end_of___lwdiv:
  2325                           
  2326                           	psect	text4
  2327     06DC                     __ptext4:	
  2328 ;; *************** function _setup *****************
  2329 ;; Defined at:
  2330 ;;		line 160 in file "main_M.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;		None
  2333 ;; Auto vars:     Size  Location     Type
  2334 ;;		None
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      void 
  2337 ;; Registers used:
  2338 ;;		wreg, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       0       0       0       0
  2345 ;;      Locals:         0       0       0       0       0
  2346 ;;      Temps:          0       0       0       0       0
  2347 ;;      Totals:         0       0       0       0       0
  2348 ;;Total ram usage:        0 bytes
  2349 ;; Hardware stack levels used: 1
  2350 ;; Hardware stack levels required when called: 4
  2351 ;; This function calls:
  2352 ;;		_I2C_Master_Init
  2353 ;;		_Lcd_Init_4bits
  2354 ;;		_setupINTOSC
  2355 ;; This function is called by:
  2356 ;;		_main
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360     06DC                     _setup:	
  2361                           ;psect for function _setup
  2362                           
  2363     06DC                     l1923:	
  2364                           ;incstack = 0
  2365                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2366                           
  2367                           
  2368                           ;main_M.c: 162:     ANSEL = 0;
  2369     06DC  1683               	bsf	3,5	;RP0=1, select bank3
  2370     06DD  1703               	bsf	3,6	;RP1=1, select bank3
  2371     06DE  0188               	clrf	8	;volatile
  2372                           
  2373                           ;main_M.c: 163:     ANSELH = 0;
  2374     06DF  0189               	clrf	9	;volatile
  2375                           
  2376                           ;main_M.c: 165:     TRISA = 0;
  2377     06E0  1683               	bsf	3,5	;RP0=1, select bank1
  2378     06E1  1303               	bcf	3,6	;RP1=0, select bank1
  2379     06E2  0185               	clrf	5	;volatile
  2380     06E3                     l1925:
  2381                           
  2382                           ;main_M.c: 166:     TRISB = 0b00000111;
  2383     06E3  3007               	movlw	7
  2384     06E4  0086               	movwf	6	;volatile
  2385     06E5                     l1927:
  2386                           
  2387                           ;main_M.c: 167:     TRISD = 0;
  2388     06E5  0188               	clrf	8	;volatile
  2389     06E6                     l1929:
  2390                           
  2391                           ;main_M.c: 169:     OPTION_REGbits.nRBPU = 0;
  2392     06E6  1381               	bcf	1,7	;volatile
  2393     06E7                     l1931:
  2394                           
  2395                           ;main_M.c: 170:     WPUBbits.WPUB0 = 1;
  2396     06E7  1415               	bsf	21,0	;volatile
  2397     06E8                     l1933:
  2398                           
  2399                           ;main_M.c: 171:     WPUBbits.WPUB1 = 1;
  2400     06E8  1495               	bsf	21,1	;volatile
  2401     06E9                     l1935:
  2402                           
  2403                           ;main_M.c: 172:     WPUBbits.WPUB2 = 1;
  2404     06E9  1515               	bsf	21,2	;volatile
  2405                           
  2406                           ;main_M.c: 173:     IOCB = 0b00000111;
  2407     06EA  3007               	movlw	7
  2408     06EB  0096               	movwf	22	;volatile
  2409     06EC                     l1937:
  2410                           
  2411                           ;main_M.c: 175:     PORTA = 0;
  2412     06EC  1283               	bcf	3,5	;RP0=0, select bank0
  2413     06ED  1303               	bcf	3,6	;RP1=0, select bank0
  2414     06EE  0185               	clrf	5	;volatile
  2415     06EF                     l1939:
  2416                           
  2417                           ;main_M.c: 176:     PORTB = 0;
  2418     06EF  0186               	clrf	6	;volatile
  2419     06F0                     l1941:
  2420                           
  2421                           ;main_M.c: 177:     PORTD = 0;
  2422     06F0  0188               	clrf	8	;volatile
  2423     06F1                     l1943:
  2424                           
  2425                           ;main_M.c: 179:     I2C_Master_Init(100000);
  2426     06F1  3000               	movlw	0
  2427     06F2  00AB               	movwf	I2C_Master_Init@c+3
  2428     06F3  3001               	movlw	1
  2429     06F4  00AA               	movwf	I2C_Master_Init@c+2
  2430     06F5  3086               	movlw	134
  2431     06F6  00A9               	movwf	I2C_Master_Init@c+1
  2432     06F7  30A0               	movlw	160
  2433     06F8  00A8               	movwf	I2C_Master_Init@c
  2434     06F9  120A  118A  266D  120A  118A  	fcall	_I2C_Master_Init
  2435     06FE                     l1945:
  2436                           
  2437                           ;main_M.c: 180:     setupINTOSC(FOSC_8MHZ);
  2438     06FE  3007               	movlw	7
  2439     06FF  120A  118A  27F0  120A  118A  	fcall	_setupINTOSC
  2440     0704                     l1947:
  2441                           
  2442                           ;main_M.c: 181:     Lcd_Init_4bits();
  2443     0704  120A  118A  24A1  120A  118A  	fcall	_Lcd_Init_4bits
  2444     0709                     l1949:
  2445                           
  2446                           ;main_M.c: 183:     INTCONbits.GIE = 1;
  2447     0709  178B               	bsf	11,7	;volatile
  2448     070A                     l1951:
  2449                           
  2450                           ;main_M.c: 184:     INTCONbits.PEIE = 1;
  2451     070A  170B               	bsf	11,6	;volatile
  2452     070B                     l1953:
  2453                           
  2454                           ;main_M.c: 185:     INTCONbits.RBIE = 1;
  2455     070B  158B               	bsf	11,3	;volatile
  2456     070C                     l1955:
  2457                           
  2458                           ;main_M.c: 186:     INTCONbits.RBIF = 0;
  2459     070C  100B               	bcf	11,0	;volatile
  2460     070D                     l186:
  2461     070D  0008               	return
  2462     070E                     __end_of_setup:
  2463                           
  2464                           	psect	text5
  2465     07F0                     __ptext5:	
  2466 ;; *************** function _setupINTOSC *****************
  2467 ;; Defined at:
  2468 ;;		line 11 in file "configINTOSC.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  F               1    wreg     enum E1292
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;  F               1    4[COMMON] enum E1292
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         0       0       0       0       0
  2483 ;;      Locals:         1       0       0       0       0
  2484 ;;      Temps:          1       0       0       0       0
  2485 ;;      Totals:         2       0       0       0       0
  2486 ;;Total ram usage:        2 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; Hardware stack levels required when called: 1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_setup
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496     07F0                     _setupINTOSC:	
  2497                           ;psect for function _setupINTOSC
  2498                           
  2499                           
  2500                           ;incstack = 0
  2501                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  2502                           ;setupINTOSC@F stored from wreg
  2503     07F0  00F4               	movwf	setupINTOSC@F
  2504     07F1                     l1405:
  2505                           
  2506                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  2507     07F1  0874               	movf	setupINTOSC@F,w
  2508     07F2  00F3               	movwf	??_setupINTOSC
  2509     07F3  0EF3               	swapf	??_setupINTOSC,f
  2510     07F4  1683               	bsf	3,5	;RP0=1, select bank1
  2511     07F5  1303               	bcf	3,6	;RP1=0, select bank1
  2512     07F6  080F               	movf	15,w	;volatile
  2513     07F7  0673               	xorwf	??_setupINTOSC,w
  2514     07F8  398F               	andlw	-113
  2515     07F9  0673               	xorwf	??_setupINTOSC,w
  2516     07FA  008F               	movwf	15	;volatile
  2517     07FB                     l1407:
  2518                           
  2519                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  2520     07FB  140F               	bsf	15,0	;volatile
  2521     07FC                     l60:
  2522     07FC  0008               	return
  2523     07FD                     __end_of_setupINTOSC:
  2524                           
  2525                           	psect	text6
  2526     04A1                     __ptext6:	
  2527 ;; *************** function _Lcd_Init_4bits *****************
  2528 ;; Defined at:
  2529 ;;		line 66 in file "configLCD_4bits.c"
  2530 ;; Parameters:    Size  Location     Type
  2531 ;;		None
  2532 ;; Auto vars:     Size  Location     Type
  2533 ;;		None
  2534 ;; Return value:  Size  Location     Type
  2535 ;;                  1    wreg      void 
  2536 ;; Registers used:
  2537 ;;		wreg, status,2, status,0, pclath, cstack
  2538 ;; Tracked objects:
  2539 ;;		On entry : 0/0
  2540 ;;		On exit  : 0/0
  2541 ;;		Unchanged: 0/0
  2542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2543 ;;      Params:         0       0       0       0       0
  2544 ;;      Locals:         0       0       0       0       0
  2545 ;;      Temps:          2       0       0       0       0
  2546 ;;      Totals:         2       0       0       0       0
  2547 ;;Total ram usage:        2 bytes
  2548 ;; Hardware stack levels used: 1
  2549 ;; Hardware stack levels required when called: 3
  2550 ;; This function calls:
  2551 ;;		_Lcd_Cmd_4bits
  2552 ;;		_Lcd_Port_4bits
  2553 ;; This function is called by:
  2554 ;;		_setup
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558     04A1                     _Lcd_Init_4bits:	
  2559                           ;psect for function _Lcd_Init_4bits
  2560                           
  2561     04A1                     l1409:	
  2562                           ;incstack = 0
  2563                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  2564                           
  2565                           
  2566                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  2567     04A1  3000               	movlw	0
  2568     04A2  120A  118A  273C  120A  118A  	fcall	_Lcd_Port_4bits
  2569     04A7                     l1411:
  2570                           
  2571                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2572     04A7  3034               	movlw	52
  2573     04A8  00F8               	movwf	??_Lcd_Init_4bits+1
  2574     04A9  30F1               	movlw	241
  2575     04AA  00F7               	movwf	??_Lcd_Init_4bits
  2576     04AB                     u1817:
  2577     04AB  0BF7               	decfsz	??_Lcd_Init_4bits,f
  2578     04AC  2CAB               	goto	u1817
  2579     04AD  0BF8               	decfsz	??_Lcd_Init_4bits+1,f
  2580     04AE  2CAB               	goto	u1817
  2581     04AF  2CB0               	nop2
  2582     04B0                     l1413:
  2583                           
  2584                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  2585     04B0  3003               	movlw	3
  2586     04B1  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  2587                           
  2588                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2589     04B6  300D               	movlw	13
  2590     04B7  00F8               	movwf	??_Lcd_Init_4bits+1
  2591     04B8  30FB               	movlw	251
  2592     04B9  00F7               	movwf	??_Lcd_Init_4bits
  2593     04BA                     u1827:
  2594     04BA  0BF7               	decfsz	??_Lcd_Init_4bits,f
  2595     04BB  2CBA               	goto	u1827
  2596     04BC  0BF8               	decfsz	??_Lcd_Init_4bits+1,f
  2597     04BD  2CBA               	goto	u1827
  2598     04BE  2CBF               	nop2
  2599     04BF                     l1415:
  2600                           
  2601                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  2602     04BF  3003               	movlw	3
  2603     04C0  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  2604     04C5                     l1417:
  2605                           
  2606                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2607     04C5  301D               	movlw	29
  2608     04C6  00F8               	movwf	??_Lcd_Init_4bits+1
  2609     04C7  3091               	movlw	145
  2610     04C8  00F7               	movwf	??_Lcd_Init_4bits
  2611     04C9                     u1837:
  2612     04C9  0BF7               	decfsz	??_Lcd_Init_4bits,f
  2613     04CA  2CC9               	goto	u1837
  2614     04CB  0BF8               	decfsz	??_Lcd_Init_4bits+1,f
  2615     04CC  2CC9               	goto	u1837
  2616                           
  2617                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  2618     04CD  3003               	movlw	3
  2619     04CE  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  2620                           
  2621                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  2622     04D3  3002               	movlw	2
  2623     04D4  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  2624                           
  2625                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  2626     04D9  3002               	movlw	2
  2627     04DA  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  2628                           
  2629                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  2630     04DF  3008               	movlw	8
  2631     04E0  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  2632                           
  2633                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  2634     04E5  3000               	movlw	0
  2635     04E6  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  2636                           
  2637                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  2638     04EB  300C               	movlw	12
  2639     04EC  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  2640                           
  2641                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  2642     04F1  3000               	movlw	0
  2643     04F2  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  2644                           
  2645                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  2646     04F7  3006               	movlw	6
  2647     04F8  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  2648     04FD                     l90:
  2649     04FD  0008               	return
  2650     04FE                     __end_of_Lcd_Init_4bits:
  2651                           
  2652                           	psect	text7
  2653     066D                     __ptext7:	
  2654 ;; *************** function _I2C_Master_Init *****************
  2655 ;; Defined at:
  2656 ;;		line 13 in file "configI2C.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  c               4    8[BANK0 ] const unsigned long 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;		None
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  1    wreg      void 
  2663 ;; Registers used:
  2664 ;;		wreg, status,2, status,0, pclath, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         0       4       0       0       0
  2671 ;;      Locals:         0       0       0       0       0
  2672 ;;      Temps:          0       4       0       0       0
  2673 ;;      Totals:         0       8       0       0       0
  2674 ;;Total ram usage:        8 bytes
  2675 ;; Hardware stack levels used: 1
  2676 ;; Hardware stack levels required when called: 2
  2677 ;; This function calls:
  2678 ;;		___lldiv
  2679 ;; This function is called by:
  2680 ;;		_setup
  2681 ;; This function uses a non-reentrant model
  2682 ;;
  2683                           
  2684     066D                     _I2C_Master_Init:	
  2685                           ;psect for function _I2C_Master_Init
  2686                           
  2687     066D                     l1817:	
  2688                           ;incstack = 0
  2689                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2690                           
  2691                           
  2692                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
  2693     066D  3028               	movlw	40
  2694     066E  1283               	bcf	3,5	;RP0=0, select bank0
  2695     066F  1303               	bcf	3,6	;RP1=0, select bank0
  2696     0670  0094               	movwf	20	;volatile
  2697     0671                     l1819:
  2698                           
  2699                           ;configI2C.c: 16:     SSPCON2 = 0;
  2700     0671  1683               	bsf	3,5	;RP0=1, select bank1
  2701     0672  1303               	bcf	3,6	;RP1=0, select bank1
  2702     0673  0191               	clrf	17	;volatile
  2703     0674                     l1821:
  2704                           
  2705                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
  2706     0674  1283               	bcf	3,5	;RP0=0, select bank0
  2707     0675  1303               	bcf	3,6	;RP1=0, select bank0
  2708     0676  0828               	movf	I2C_Master_Init@c,w
  2709     0677  00AC               	movwf	??_I2C_Master_Init
  2710     0678  0829               	movf	I2C_Master_Init@c+1,w
  2711     0679  00AD               	movwf	??_I2C_Master_Init+1
  2712     067A  082A               	movf	I2C_Master_Init@c+2,w
  2713     067B  00AE               	movwf	??_I2C_Master_Init+2
  2714     067C  082B               	movf	I2C_Master_Init@c+3,w
  2715     067D  00AF               	movwf	??_I2C_Master_Init+3
  2716     067E  3002               	movlw	2
  2717     067F                     u1465:
  2718     067F  1003               	clrc
  2719     0680  0DAC               	rlf	??_I2C_Master_Init,f
  2720     0681  0DAD               	rlf	??_I2C_Master_Init+1,f
  2721     0682  0DAE               	rlf	??_I2C_Master_Init+2,f
  2722     0683  0DAF               	rlf	??_I2C_Master_Init+3,f
  2723     0684                     u1460:
  2724     0684  3EFF               	addlw	-1
  2725     0685  1D03               	skipz
  2726     0686  2E7F               	goto	u1465
  2727     0687  082F               	movf	??_I2C_Master_Init+3,w
  2728     0688  00A3               	movwf	___lldiv@divisor+3
  2729     0689  082E               	movf	??_I2C_Master_Init+2,w
  2730     068A  00A2               	movwf	___lldiv@divisor+2
  2731     068B  082D               	movf	??_I2C_Master_Init+1,w
  2732     068C  00A1               	movwf	___lldiv@divisor+1
  2733     068D  082C               	movf	??_I2C_Master_Init,w
  2734     068E  00A0               	movwf	___lldiv@divisor
  2735     068F  3000               	movlw	0
  2736     0690  00A7               	movwf	___lldiv@dividend+3
  2737     0691  307A               	movlw	122
  2738     0692  00A6               	movwf	___lldiv@dividend+2
  2739     0693  3012               	movlw	18
  2740     0694  00A5               	movwf	___lldiv@dividend+1
  2741     0695  3000               	movlw	0
  2742     0696  00A4               	movwf	___lldiv@dividend
  2743     0697  120A  118A  23D1  120A  118A  	fcall	___lldiv
  2744     069C  1283               	bcf	3,5	;RP0=0, select bank0
  2745     069D  1303               	bcf	3,6	;RP1=0, select bank0
  2746     069E  0820               	movf	?___lldiv,w
  2747     069F  3EFF               	addlw	255
  2748     06A0  1683               	bsf	3,5	;RP0=1, select bank1
  2749     06A1  1303               	bcf	3,6	;RP1=0, select bank1
  2750     06A2  0093               	movwf	19	;volatile
  2751     06A3                     l1823:
  2752                           
  2753                           ;configI2C.c: 18:     SSPSTAT = 0;
  2754     06A3  0194               	clrf	20	;volatile
  2755     06A4                     l1825:
  2756                           
  2757                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
  2758     06A4  1587               	bsf	7,3	;volatile
  2759     06A5                     l1827:
  2760                           
  2761                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
  2762     06A5  1607               	bsf	7,4	;volatile
  2763     06A6                     l29:
  2764     06A6  0008               	return
  2765     06A7                     __end_of_I2C_Master_Init:
  2766                           
  2767                           	psect	text8
  2768     03D1                     __ptext8:	
  2769 ;; *************** function ___lldiv *****************
  2770 ;; Defined at:
  2771 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2772 ;; Parameters:    Size  Location     Type
  2773 ;;  divisor         4    0[BANK0 ] unsigned long 
  2774 ;;  dividend        4    4[BANK0 ] unsigned long 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  quotient        4    4[COMMON] unsigned long 
  2777 ;;  counter         1    8[COMMON] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  4    0[BANK0 ] unsigned long 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2787 ;;      Params:         0       8       0       0       0
  2788 ;;      Locals:         5       0       0       0       0
  2789 ;;      Temps:          1       0       0       0       0
  2790 ;;      Totals:         6       8       0       0       0
  2791 ;;Total ram usage:       14 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 1
  2794 ;; This function calls:
  2795 ;;		Nothing
  2796 ;; This function is called by:
  2797 ;;		_I2C_Master_Init
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801     03D1                     ___lldiv:	
  2802                           ;psect for function ___lldiv
  2803                           
  2804     03D1                     l1793:	
  2805                           ;incstack = 0
  2806                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2807                           
  2808     03D1  3000               	movlw	0
  2809     03D2  00F7               	movwf	___lldiv@quotient+3
  2810     03D3  3000               	movlw	0
  2811     03D4  00F6               	movwf	___lldiv@quotient+2
  2812     03D5  3000               	movlw	0
  2813     03D6  00F5               	movwf	___lldiv@quotient+1
  2814     03D7  3000               	movlw	0
  2815     03D8  00F4               	movwf	___lldiv@quotient
  2816     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2817     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2818     03DB  0823               	movf	___lldiv@divisor+3,w
  2819     03DC  0422               	iorwf	___lldiv@divisor+2,w
  2820     03DD  0421               	iorwf	___lldiv@divisor+1,w
  2821     03DE  0420               	iorwf	___lldiv@divisor,w
  2822     03DF  1903               	skipnz
  2823     03E0  2BE2               	goto	u1391
  2824     03E1  2BE3               	goto	u1390
  2825     03E2                     u1391:
  2826     03E2  2C30               	goto	l1813
  2827     03E3                     u1390:
  2828     03E3                     l1795:
  2829     03E3  01F8               	clrf	___lldiv@counter
  2830     03E4  0AF8               	incf	___lldiv@counter,f
  2831     03E5  2BF3               	goto	l1799
  2832     03E6                     l1797:
  2833     03E6  3001               	movlw	1
  2834     03E7  00F3               	movwf	??___lldiv
  2835     03E8                     u1405:
  2836     03E8  1003               	clrc
  2837     03E9  0DA0               	rlf	___lldiv@divisor,f
  2838     03EA  0DA1               	rlf	___lldiv@divisor+1,f
  2839     03EB  0DA2               	rlf	___lldiv@divisor+2,f
  2840     03EC  0DA3               	rlf	___lldiv@divisor+3,f
  2841     03ED  0BF3               	decfsz	??___lldiv,f
  2842     03EE  2BE8               	goto	u1405
  2843     03EF  3001               	movlw	1
  2844     03F0  00F3               	movwf	??___lldiv
  2845     03F1  0873               	movf	??___lldiv,w
  2846     03F2  07F8               	addwf	___lldiv@counter,f
  2847     03F3                     l1799:
  2848     03F3  1FA3               	btfss	___lldiv@divisor+3,7
  2849     03F4  2BF6               	goto	u1411
  2850     03F5  2BF7               	goto	u1410
  2851     03F6                     u1411:
  2852     03F6  2BE6               	goto	l1797
  2853     03F7                     u1410:
  2854     03F7                     l1801:
  2855     03F7  3001               	movlw	1
  2856     03F8  00F3               	movwf	??___lldiv
  2857     03F9                     u1425:
  2858     03F9  1003               	clrc
  2859     03FA  0DF4               	rlf	___lldiv@quotient,f
  2860     03FB  0DF5               	rlf	___lldiv@quotient+1,f
  2861     03FC  0DF6               	rlf	___lldiv@quotient+2,f
  2862     03FD  0DF7               	rlf	___lldiv@quotient+3,f
  2863     03FE  0BF3               	decfsz	??___lldiv,f
  2864     03FF  2BF9               	goto	u1425
  2865     0400                     l1803:
  2866     0400  0823               	movf	___lldiv@divisor+3,w
  2867     0401  0227               	subwf	___lldiv@dividend+3,w
  2868     0402  1D03               	skipz
  2869     0403  2C0E               	goto	u1435
  2870     0404  0822               	movf	___lldiv@divisor+2,w
  2871     0405  0226               	subwf	___lldiv@dividend+2,w
  2872     0406  1D03               	skipz
  2873     0407  2C0E               	goto	u1435
  2874     0408  0821               	movf	___lldiv@divisor+1,w
  2875     0409  0225               	subwf	___lldiv@dividend+1,w
  2876     040A  1D03               	skipz
  2877     040B  2C0E               	goto	u1435
  2878     040C  0820               	movf	___lldiv@divisor,w
  2879     040D  0224               	subwf	___lldiv@dividend,w
  2880     040E                     u1435:
  2881     040E  1C03               	skipc
  2882     040F  2C11               	goto	u1431
  2883     0410  2C12               	goto	u1430
  2884     0411                     u1431:
  2885     0411  2C21               	goto	l1809
  2886     0412                     u1430:
  2887     0412                     l1805:
  2888     0412  0820               	movf	___lldiv@divisor,w
  2889     0413  02A4               	subwf	___lldiv@dividend,f
  2890     0414  0821               	movf	___lldiv@divisor+1,w
  2891     0415  1C03               	skipc
  2892     0416  0F21               	incfsz	___lldiv@divisor+1,w
  2893     0417  02A5               	subwf	___lldiv@dividend+1,f
  2894     0418  0822               	movf	___lldiv@divisor+2,w
  2895     0419  1C03               	skipc
  2896     041A  0F22               	incfsz	___lldiv@divisor+2,w
  2897     041B  02A6               	subwf	___lldiv@dividend+2,f
  2898     041C  0823               	movf	___lldiv@divisor+3,w
  2899     041D  1C03               	skipc
  2900     041E  0F23               	incfsz	___lldiv@divisor+3,w
  2901     041F  02A7               	subwf	___lldiv@dividend+3,f
  2902     0420                     l1807:
  2903     0420  1474               	bsf	___lldiv@quotient,0
  2904     0421                     l1809:
  2905     0421  3001               	movlw	1
  2906     0422                     u1445:
  2907     0422  1003               	clrc
  2908     0423  0CA3               	rrf	___lldiv@divisor+3,f
  2909     0424  0CA2               	rrf	___lldiv@divisor+2,f
  2910     0425  0CA1               	rrf	___lldiv@divisor+1,f
  2911     0426  0CA0               	rrf	___lldiv@divisor,f
  2912     0427  3EFF               	addlw	-1
  2913     0428  1D03               	skipz
  2914     0429  2C22               	goto	u1445
  2915     042A                     l1811:
  2916     042A  3001               	movlw	1
  2917     042B  02F8               	subwf	___lldiv@counter,f
  2918     042C  1D03               	btfss	3,2
  2919     042D  2C2F               	goto	u1451
  2920     042E  2C30               	goto	u1450
  2921     042F                     u1451:
  2922     042F  2BF7               	goto	l1801
  2923     0430                     u1450:
  2924     0430                     l1813:
  2925     0430  0877               	movf	___lldiv@quotient+3,w
  2926     0431  00A3               	movwf	?___lldiv+3
  2927     0432  0876               	movf	___lldiv@quotient+2,w
  2928     0433  00A2               	movwf	?___lldiv+2
  2929     0434  0875               	movf	___lldiv@quotient+1,w
  2930     0435  00A1               	movwf	?___lldiv+1
  2931     0436  0874               	movf	___lldiv@quotient,w
  2932     0437  00A0               	movwf	?___lldiv
  2933     0438                     l353:
  2934     0438  0008               	return
  2935     0439                     __end_of___lldiv:
  2936                           
  2937                           	psect	text9
  2938     0439                     __ptext9:	
  2939 ;; *************** function _leerRTC *****************
  2940 ;; Defined at:
  2941 ;;		line 13 in file "DS3231.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  R               1    wreg     enum E1292
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;  R               1    3[BANK0 ] enum E1292
  2946 ;;  DATO            1    4[BANK0 ] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      unsigned char 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0, pclath, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2956 ;;      Params:         0       0       0       0       0
  2957 ;;      Locals:         0       2       0       0       0
  2958 ;;      Temps:          0       3       0       0       0
  2959 ;;      Totals:         0       5       0       0       0
  2960 ;;Total ram usage:        5 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 3
  2963 ;; This function calls:
  2964 ;;		_I2C_Master_Read
  2965 ;;		_I2C_Master_RepeatedStart
  2966 ;;		_I2C_Master_Start
  2967 ;;		_I2C_Master_Stop
  2968 ;;		_I2C_Master_Write
  2969 ;;		___bmul
  2970 ;; This function is called by:
  2971 ;;		_main
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975     0439                     _leerRTC:	
  2976                           ;psect for function _leerRTC
  2977                           
  2978                           
  2979                           ;incstack = 0
  2980                           ; Regs used in _leerRTC: [wreg+status,2+status,0+pclath+cstack]
  2981                           ;leerRTC@R stored from wreg
  2982     0439  1283               	bcf	3,5	;RP0=0, select bank0
  2983     043A  1303               	bcf	3,6	;RP1=0, select bank0
  2984     043B  00A3               	movwf	leerRTC@R
  2985     043C                     l2009:
  2986                           
  2987                           ;DS3231.c: 15:     uint8_t DATO;;DS3231.c: 17:     I2C_Master_Start();
  2988     043C  120A  158A  27CA  120A  118A  	fcall	_I2C_Master_Start
  2989                           
  2990                           ;DS3231.c: 18:     I2C_Master_Write(0xD0);
  2991     0441  30D0               	movlw	208
  2992     0442  00F3               	movwf	I2C_Master_Write@d
  2993     0443  3000               	movlw	0
  2994     0444  00F4               	movwf	I2C_Master_Write@d+1
  2995     0445  120A  158A  27DC  120A  118A  	fcall	_I2C_Master_Write
  2996                           
  2997                           ;DS3231.c: 19:     I2C_Master_Write(R);
  2998     044A  1283               	bcf	3,5	;RP0=0, select bank0
  2999     044B  1303               	bcf	3,6	;RP1=0, select bank0
  3000     044C  0823               	movf	leerRTC@R,w
  3001     044D  00A0               	movwf	??_leerRTC
  3002     044E  01A1               	clrf	??_leerRTC+1
  3003     044F  0820               	movf	??_leerRTC,w
  3004     0450  00F3               	movwf	I2C_Master_Write@d
  3005     0451  0821               	movf	??_leerRTC+1,w
  3006     0452  00F4               	movwf	I2C_Master_Write@d+1
  3007     0453  120A  158A  27DC  120A  118A  	fcall	_I2C_Master_Write
  3008                           
  3009                           ;DS3231.c: 20:     I2C_Master_RepeatedStart();
  3010     0458  120A  158A  27C1  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3011                           
  3012                           ;DS3231.c: 21:     I2C_Master_Write(0xD1);
  3013     045D  30D1               	movlw	209
  3014     045E  00F3               	movwf	I2C_Master_Write@d
  3015     045F  3000               	movlw	0
  3016     0460  00F4               	movwf	I2C_Master_Write@d+1
  3017     0461  120A  158A  27DC  120A  118A  	fcall	_I2C_Master_Write
  3018                           
  3019                           ;DS3231.c: 22:     DATO = I2C_Master_Read(0);
  3020     0466  3000               	movlw	0
  3021     0467  00F3               	movwf	I2C_Master_Read@a
  3022     0468  00F4               	movwf	I2C_Master_Read@a+1
  3023     0469  120A  118A  270E  120A  118A  	fcall	_I2C_Master_Read
  3024     046E  0873               	movf	?_I2C_Master_Read,w
  3025     046F  1283               	bcf	3,5	;RP0=0, select bank0
  3026     0470  1303               	bcf	3,6	;RP1=0, select bank0
  3027     0471  00A4               	movwf	leerRTC@DATO
  3028                           
  3029                           ;DS3231.c: 23:     I2C_Master_Stop();
  3030     0472  120A  158A  27D3  120A  118A  	fcall	_I2C_Master_Stop
  3031     0477                     l2011:
  3032                           
  3033                           ;DS3231.c: 24:     _delay((unsigned long)((200)*(8000000/4000.0)));
  3034     0477  3003               	movlw	3
  3035     0478  1283               	bcf	3,5	;RP0=0, select bank0
  3036     0479  1303               	bcf	3,6	;RP1=0, select bank0
  3037     047A  00A2               	movwf	??_leerRTC+2
  3038     047B  3008               	movlw	8
  3039     047C  00A1               	movwf	??_leerRTC+1
  3040     047D  3076               	movlw	118
  3041     047E  00A0               	movwf	??_leerRTC
  3042     047F                     u1847:
  3043     047F  0BA0               	decfsz	??_leerRTC,f
  3044     0480  2C7F               	goto	u1847
  3045     0481  0BA1               	decfsz	??_leerRTC+1,f
  3046     0482  2C7F               	goto	u1847
  3047     0483  0BA2               	decfsz	??_leerRTC+2,f
  3048     0484  2C7F               	goto	u1847
  3049     0485  0000               	nop
  3050     0486                     l2013:
  3051                           
  3052                           ;DS3231.c: 26:     DATO = (DATO >> 4) * 10 + (DATO & 0x0F);
  3053     0486  300F               	movlw	15
  3054     0487  1283               	bcf	3,5	;RP0=0, select bank0
  3055     0488  1303               	bcf	3,6	;RP1=0, select bank0
  3056     0489  0524               	andwf	leerRTC@DATO,w
  3057     048A  00A0               	movwf	??_leerRTC
  3058     048B  300A               	movlw	10
  3059     048C  00F3               	movwf	___bmul@multiplicand
  3060     048D  0824               	movf	leerRTC@DATO,w
  3061     048E  00A1               	movwf	??_leerRTC+1
  3062     048F  3004               	movlw	4
  3063     0490                     u1685:
  3064     0490  1003               	clrc
  3065     0491  0CA1               	rrf	??_leerRTC+1,f
  3066     0492  3EFF               	addlw	-1
  3067     0493  1D03               	skipz
  3068     0494  2C90               	goto	u1685
  3069     0495  0821               	movf	??_leerRTC+1,w
  3070     0496  120A  118A  27B6  120A  118A  	fcall	___bmul
  3071     049B  1283               	bcf	3,5	;RP0=0, select bank0
  3072     049C  1303               	bcf	3,6	;RP1=0, select bank0
  3073     049D  0720               	addwf	??_leerRTC,w
  3074     049E  00A4               	movwf	leerRTC@DATO
  3075                           
  3076                           ;DS3231.c: 28:     return DATO;
  3077     049F  0824               	movf	leerRTC@DATO,w
  3078     04A0                     l203:
  3079     04A0  0008               	return
  3080     04A1                     __end_of_leerRTC:
  3081                           
  3082                           	psect	text10
  3083     07B6                     __ptext10:	
  3084 ;; *************** function ___bmul *****************
  3085 ;; Defined at:
  3086 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3087 ;; Parameters:    Size  Location     Type
  3088 ;;  multiplier      1    wreg     unsigned char 
  3089 ;;  multiplicand    1    3[COMMON] unsigned char 
  3090 ;; Auto vars:     Size  Location     Type
  3091 ;;  multiplier      1    6[COMMON] unsigned char 
  3092 ;;  product         1    5[COMMON] unsigned char 
  3093 ;; Return value:  Size  Location     Type
  3094 ;;                  1    wreg      unsigned char 
  3095 ;; Registers used:
  3096 ;;		wreg, status,2, status,0
  3097 ;; Tracked objects:
  3098 ;;		On entry : 0/0
  3099 ;;		On exit  : 0/0
  3100 ;;		Unchanged: 0/0
  3101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3102 ;;      Params:         1       0       0       0       0
  3103 ;;      Locals:         2       0       0       0       0
  3104 ;;      Temps:          1       0       0       0       0
  3105 ;;      Totals:         4       0       0       0       0
  3106 ;;Total ram usage:        4 bytes
  3107 ;; Hardware stack levels used: 1
  3108 ;; Hardware stack levels required when called: 1
  3109 ;; This function calls:
  3110 ;;		Nothing
  3111 ;; This function is called by:
  3112 ;;		_leerRTC
  3113 ;; This function uses a non-reentrant model
  3114 ;;
  3115                           
  3116     07B6                     ___bmul:	
  3117                           ;psect for function ___bmul
  3118                           
  3119                           
  3120                           ;incstack = 0
  3121                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3122                           ;___bmul@multiplier stored from wreg
  3123     07B6  00F6               	movwf	___bmul@multiplier
  3124     07B7                     l1861:
  3125     07B7  01F5               	clrf	___bmul@product
  3126     07B8                     l1863:
  3127     07B8  1C76               	btfss	___bmul@multiplier,0
  3128     07B9  2FBB               	goto	u1481
  3129     07BA  2FBC               	goto	u1480
  3130     07BB                     u1481:
  3131     07BB  2FC0               	goto	l1867
  3132     07BC                     u1480:
  3133     07BC                     l1865:
  3134     07BC  0873               	movf	___bmul@multiplicand,w
  3135     07BD  00F4               	movwf	??___bmul
  3136     07BE  0874               	movf	??___bmul,w
  3137     07BF  07F5               	addwf	___bmul@product,f
  3138     07C0                     l1867:
  3139     07C0  1003               	clrc
  3140     07C1  0DF3               	rlf	___bmul@multiplicand,f
  3141     07C2                     l1869:
  3142     07C2  1003               	clrc
  3143     07C3  0CF6               	rrf	___bmul@multiplier,f
  3144     07C4  0876               	movf	___bmul@multiplier,w
  3145     07C5  1D03               	btfss	3,2
  3146     07C6  2FC8               	goto	u1491
  3147     07C7  2FC9               	goto	u1490
  3148     07C8                     u1491:
  3149     07C8  2FB8               	goto	l1863
  3150     07C9                     u1490:
  3151     07C9                     l1871:
  3152     07C9  0875               	movf	___bmul@product,w
  3153     07CA                     l343:
  3154     07CA  0008               	return
  3155     07CB                     __end_of___bmul:
  3156                           
  3157                           	psect	text11
  3158     0FDC                     __ptext11:	
  3159 ;; *************** function _I2C_Master_Write *****************
  3160 ;; Defined at:
  3161 ;;		line 62 in file "configI2C.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  d               2    3[COMMON] unsigned int 
  3164 ;; Auto vars:     Size  Location     Type
  3165 ;;		None
  3166 ;; Return value:  Size  Location     Type
  3167 ;;                  1    wreg      void 
  3168 ;; Registers used:
  3169 ;;		wreg, status,2, status,0, pclath, cstack
  3170 ;; Tracked objects:
  3171 ;;		On entry : 0/0
  3172 ;;		On exit  : 0/0
  3173 ;;		Unchanged: 0/0
  3174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3175 ;;      Params:         2       0       0       0       0
  3176 ;;      Locals:         0       0       0       0       0
  3177 ;;      Temps:          0       0       0       0       0
  3178 ;;      Totals:         2       0       0       0       0
  3179 ;;Total ram usage:        2 bytes
  3180 ;; Hardware stack levels used: 1
  3181 ;; Hardware stack levels required when called: 2
  3182 ;; This function calls:
  3183 ;;		_I2C_Master_Wait
  3184 ;; This function is called by:
  3185 ;;		_main
  3186 ;;		_leerRTC
  3187 ;;		_modifRTC
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191     0FDC                     _I2C_Master_Write:	
  3192                           ;psect for function _I2C_Master_Write
  3193                           
  3194     0FDC                     l1841:	
  3195                           ;incstack = 0
  3196                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3197                           
  3198                           
  3199                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
  3200     0FDC  120A  158A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  3201     0FE1                     l1843:
  3202                           
  3203                           ;configI2C.c: 65:     SSPBUF = d;
  3204     0FE1  0873               	movf	I2C_Master_Write@d,w
  3205     0FE2  1283               	bcf	3,5	;RP0=0, select bank0
  3206     0FE3  1303               	bcf	3,6	;RP1=0, select bank0
  3207     0FE4  0093               	movwf	19	;volatile
  3208     0FE5                     l47:
  3209     0FE5  0008               	return
  3210     0FE6                     __end_of_I2C_Master_Write:
  3211                           
  3212                           	psect	text12
  3213     0FD3                     __ptext12:	
  3214 ;; *************** function _I2C_Master_Stop *****************
  3215 ;; Defined at:
  3216 ;;		line 52 in file "configI2C.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;		None
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;		None
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0, pclath, cstack
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3230 ;;      Params:         0       0       0       0       0
  3231 ;;      Locals:         0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0
  3233 ;;      Totals:         0       0       0       0       0
  3234 ;;Total ram usage:        0 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 2
  3237 ;; This function calls:
  3238 ;;		_I2C_Master_Wait
  3239 ;; This function is called by:
  3240 ;;		_main
  3241 ;;		_leerRTC
  3242 ;;		_modifRTC
  3243 ;; This function uses a non-reentrant model
  3244 ;;
  3245                           
  3246     0FD3                     _I2C_Master_Stop:	
  3247                           ;psect for function _I2C_Master_Stop
  3248                           
  3249     0FD3                     l1837:	
  3250                           ;incstack = 0
  3251                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3252                           
  3253                           
  3254                           ;configI2C.c: 54:     I2C_Master_Wait();
  3255     0FD3  120A  158A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  3256     0FD8                     l1839:
  3257                           
  3258                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
  3259     0FD8  1683               	bsf	3,5	;RP0=1, select bank1
  3260     0FD9  1303               	bcf	3,6	;RP1=0, select bank1
  3261     0FDA  1511               	bsf	17,2	;volatile
  3262     0FDB                     l44:
  3263     0FDB  0008               	return
  3264     0FDC                     __end_of_I2C_Master_Stop:
  3265                           
  3266                           	psect	text13
  3267     0FCA                     __ptext13:	
  3268 ;; *************** function _I2C_Master_Start *****************
  3269 ;; Defined at:
  3270 ;;		line 36 in file "configI2C.c"
  3271 ;; Parameters:    Size  Location     Type
  3272 ;;		None
  3273 ;; Auto vars:     Size  Location     Type
  3274 ;;		None
  3275 ;; Return value:  Size  Location     Type
  3276 ;;                  1    wreg      void 
  3277 ;; Registers used:
  3278 ;;		wreg, status,2, status,0, pclath, cstack
  3279 ;; Tracked objects:
  3280 ;;		On entry : 0/0
  3281 ;;		On exit  : 0/0
  3282 ;;		Unchanged: 0/0
  3283 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3284 ;;      Params:         0       0       0       0       0
  3285 ;;      Locals:         0       0       0       0       0
  3286 ;;      Temps:          0       0       0       0       0
  3287 ;;      Totals:         0       0       0       0       0
  3288 ;;Total ram usage:        0 bytes
  3289 ;; Hardware stack levels used: 1
  3290 ;; Hardware stack levels required when called: 2
  3291 ;; This function calls:
  3292 ;;		_I2C_Master_Wait
  3293 ;; This function is called by:
  3294 ;;		_main
  3295 ;;		_leerRTC
  3296 ;;		_modifRTC
  3297 ;; This function uses a non-reentrant model
  3298 ;;
  3299                           
  3300     0FCA                     _I2C_Master_Start:	
  3301                           ;psect for function _I2C_Master_Start
  3302                           
  3303     0FCA                     l1829:	
  3304                           ;incstack = 0
  3305                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3306                           
  3307                           
  3308                           ;configI2C.c: 38:     I2C_Master_Wait();
  3309     0FCA  120A  158A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  3310     0FCF                     l1831:
  3311                           
  3312                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
  3313     0FCF  1683               	bsf	3,5	;RP0=1, select bank1
  3314     0FD0  1303               	bcf	3,6	;RP1=0, select bank1
  3315     0FD1  1411               	bsf	17,0	;volatile
  3316     0FD2                     l38:
  3317     0FD2  0008               	return
  3318     0FD3                     __end_of_I2C_Master_Start:
  3319                           
  3320                           	psect	text14
  3321     0FC1                     __ptext14:	
  3322 ;; *************** function _I2C_Master_RepeatedStart *****************
  3323 ;; Defined at:
  3324 ;;		line 44 in file "configI2C.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		wreg, status,2, status,0, pclath, cstack
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3338 ;;      Params:         0       0       0       0       0
  3339 ;;      Locals:         0       0       0       0       0
  3340 ;;      Temps:          0       0       0       0       0
  3341 ;;      Totals:         0       0       0       0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 2
  3345 ;; This function calls:
  3346 ;;		_I2C_Master_Wait
  3347 ;; This function is called by:
  3348 ;;		_leerRTC
  3349 ;;		_modifRTC
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353     0FC1                     _I2C_Master_RepeatedStart:	
  3354                           ;psect for function _I2C_Master_RepeatedStart
  3355                           
  3356     0FC1                     l1833:	
  3357                           ;incstack = 0
  3358                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3359                           
  3360                           
  3361                           ;configI2C.c: 46:     I2C_Master_Wait();
  3362     0FC1  120A  158A  27F3  120A  158A  	fcall	_I2C_Master_Wait
  3363     0FC6                     l1835:
  3364                           
  3365                           ;configI2C.c: 47:     SSPCON2bits.RSEN = 1;
  3366     0FC6  1683               	bsf	3,5	;RP0=1, select bank1
  3367     0FC7  1303               	bcf	3,6	;RP1=0, select bank1
  3368     0FC8  1491               	bsf	17,1	;volatile
  3369     0FC9                     l41:
  3370     0FC9  0008               	return
  3371     0FCA                     __end_of_I2C_Master_RepeatedStart:
  3372                           
  3373                           	psect	text15
  3374     070E                     __ptext15:	
  3375 ;; *************** function _I2C_Master_Read *****************
  3376 ;; Defined at:
  3377 ;;		line 71 in file "configI2C.c"
  3378 ;; Parameters:    Size  Location     Type
  3379 ;;  a               2    3[COMMON] unsigned short 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  temp            2    7[COMMON] unsigned short 
  3382 ;; Return value:  Size  Location     Type
  3383 ;;                  2    3[COMMON] unsigned short 
  3384 ;; Registers used:
  3385 ;;		wreg, status,2, status,0, pclath, cstack
  3386 ;; Tracked objects:
  3387 ;;		On entry : 0/0
  3388 ;;		On exit  : 0/0
  3389 ;;		Unchanged: 0/0
  3390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3391 ;;      Params:         2       0       0       0       0
  3392 ;;      Locals:         2       0       0       0       0
  3393 ;;      Temps:          2       0       0       0       0
  3394 ;;      Totals:         6       0       0       0       0
  3395 ;;Total ram usage:        6 bytes
  3396 ;; Hardware stack levels used: 1
  3397 ;; Hardware stack levels required when called: 2
  3398 ;; This function calls:
  3399 ;;		_I2C_Master_Wait
  3400 ;; This function is called by:
  3401 ;;		_main
  3402 ;;		_leerRTC
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406     070E                     _I2C_Master_Read:	
  3407                           ;psect for function _I2C_Master_Read
  3408                           
  3409     070E                     l1845:	
  3410                           ;incstack = 0
  3411                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3412                           
  3413                           
  3414                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
  3415     070E  120A  158A  27F3  120A  118A  	fcall	_I2C_Master_Wait
  3416     0713                     l1847:
  3417                           
  3418                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
  3419     0713  1683               	bsf	3,5	;RP0=1, select bank1
  3420     0714  1303               	bcf	3,6	;RP1=0, select bank1
  3421     0715  1591               	bsf	17,3	;volatile
  3422                           
  3423                           ;configI2C.c: 76:     I2C_Master_Wait();
  3424     0716  120A  158A  27F3  120A  118A  	fcall	_I2C_Master_Wait
  3425     071B                     l1849:
  3426                           
  3427                           ;configI2C.c: 77:     temp = SSPBUF;
  3428     071B  1283               	bcf	3,5	;RP0=0, select bank0
  3429     071C  1303               	bcf	3,6	;RP1=0, select bank0
  3430     071D  0813               	movf	19,w	;volatile
  3431     071E  00F5               	movwf	??_I2C_Master_Read
  3432     071F  01F6               	clrf	??_I2C_Master_Read+1
  3433     0720  0875               	movf	??_I2C_Master_Read,w
  3434     0721  00F7               	movwf	I2C_Master_Read@temp
  3435     0722  0876               	movf	??_I2C_Master_Read+1,w
  3436     0723  00F8               	movwf	I2C_Master_Read@temp+1
  3437     0724                     l1851:
  3438                           
  3439                           ;configI2C.c: 78:     I2C_Master_Wait();
  3440     0724  120A  158A  27F3  120A  118A  	fcall	_I2C_Master_Wait
  3441     0729                     l1853:
  3442                           
  3443                           ;configI2C.c: 79:     if(a == 1){
  3444     0729  0373               	decf	I2C_Master_Read@a,w
  3445     072A  0474               	iorwf	I2C_Master_Read@a+1,w
  3446     072B  1D03               	btfss	3,2
  3447     072C  2F2E               	goto	u1471
  3448     072D  2F2F               	goto	u1470
  3449     072E                     u1471:
  3450     072E  2F33               	goto	l50
  3451     072F                     u1470:
  3452     072F                     l1855:
  3453                           
  3454                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
  3455     072F  1683               	bsf	3,5	;RP0=1, select bank1
  3456     0730  1303               	bcf	3,6	;RP1=0, select bank1
  3457     0731  1291               	bcf	17,5	;volatile
  3458                           
  3459                           ;configI2C.c: 81:     }else{
  3460     0732  2F36               	goto	l51
  3461     0733                     l50:
  3462                           
  3463                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
  3464     0733  1683               	bsf	3,5	;RP0=1, select bank1
  3465     0734  1303               	bcf	3,6	;RP1=0, select bank1
  3466     0735  1691               	bsf	17,5	;volatile
  3467     0736                     l51:	
  3468                           ;configI2C.c: 83:     }
  3469                           
  3470                           
  3471                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
  3472     0736  1611               	bsf	17,4	;volatile
  3473     0737                     l1857:
  3474                           
  3475                           ;configI2C.c: 85:     return temp;
  3476     0737  0878               	movf	I2C_Master_Read@temp+1,w
  3477     0738  00F4               	movwf	?_I2C_Master_Read+1
  3478     0739  0877               	movf	I2C_Master_Read@temp,w
  3479     073A  00F3               	movwf	?_I2C_Master_Read
  3480     073B                     l52:
  3481     073B  0008               	return
  3482     073C                     __end_of_I2C_Master_Read:
  3483                           
  3484                           	psect	text16
  3485     0FF3                     __ptext16:	
  3486 ;; *************** function _I2C_Master_Wait *****************
  3487 ;; Defined at:
  3488 ;;		line 29 in file "configI2C.c"
  3489 ;; Parameters:    Size  Location     Type
  3490 ;;		None
  3491 ;; Auto vars:     Size  Location     Type
  3492 ;;		None
  3493 ;; Return value:  Size  Location     Type
  3494 ;;                  1    wreg      void 
  3495 ;; Registers used:
  3496 ;;		wreg, status,2
  3497 ;; Tracked objects:
  3498 ;;		On entry : 0/0
  3499 ;;		On exit  : 0/0
  3500 ;;		Unchanged: 0/0
  3501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3502 ;;      Params:         0       0       0       0       0
  3503 ;;      Locals:         0       0       0       0       0
  3504 ;;      Temps:          0       0       0       0       0
  3505 ;;      Totals:         0       0       0       0       0
  3506 ;;Total ram usage:        0 bytes
  3507 ;; Hardware stack levels used: 1
  3508 ;; Hardware stack levels required when called: 1
  3509 ;; This function calls:
  3510 ;;		Nothing
  3511 ;; This function is called by:
  3512 ;;		_I2C_Master_Start
  3513 ;;		_I2C_Master_RepeatedStart
  3514 ;;		_I2C_Master_Stop
  3515 ;;		_I2C_Master_Write
  3516 ;;		_I2C_Master_Read
  3517 ;; This function uses a non-reentrant model
  3518 ;;
  3519                           
  3520     0FF3                     _I2C_Master_Wait:	
  3521                           ;psect for function _I2C_Master_Wait
  3522                           
  3523     0FF3                     l1789:	
  3524                           ;incstack = 0
  3525                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3526                           
  3527     0FF3                     l32:	
  3528                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3529                           
  3530     0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  3531     0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  3532     0FF5  1914               	btfsc	20,2	;volatile
  3533     0FF6  2FF8               	goto	u1371
  3534     0FF7  2FF9               	goto	u1370
  3535     0FF8                     u1371:
  3536     0FF8  2FF3               	goto	l32
  3537     0FF9                     u1370:
  3538     0FF9                     l1791:
  3539     0FF9  0811               	movf	17,w	;volatile
  3540     0FFA  391F               	andlw	31
  3541     0FFB  1D03               	btfss	3,2
  3542     0FFC  2FFE               	goto	u1381
  3543     0FFD  2FFF               	goto	u1380
  3544     0FFE                     u1381:
  3545     0FFE  2FF3               	goto	l32
  3546     0FFF                     u1380:
  3547     0FFF                     l35:
  3548     0FFF  0008               	return
  3549     1000                     __end_of_I2C_Master_Wait:
  3550                           
  3551                           	psect	text17
  3552     04FE                     __ptext17:	
  3553 ;; *************** function ___awmod *****************
  3554 ;; Defined at:
  3555 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3556 ;; Parameters:    Size  Location     Type
  3557 ;;  divisor         2    4[BANK0 ] int 
  3558 ;;  dividend        2    6[BANK0 ] int 
  3559 ;; Auto vars:     Size  Location     Type
  3560 ;;  sign            1    9[BANK0 ] unsigned char 
  3561 ;;  counter         1    8[BANK0 ] unsigned char 
  3562 ;; Return value:  Size  Location     Type
  3563 ;;                  2    4[BANK0 ] int 
  3564 ;; Registers used:
  3565 ;;		wreg, status,2, status,0
  3566 ;; Tracked objects:
  3567 ;;		On entry : 0/0
  3568 ;;		On exit  : 0/0
  3569 ;;		Unchanged: 0/0
  3570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3571 ;;      Params:         0       4       0       0       0
  3572 ;;      Locals:         0       2       0       0       0
  3573 ;;      Temps:          1       0       0       0       0
  3574 ;;      Totals:         1       6       0       0       0
  3575 ;;Total ram usage:        7 bytes
  3576 ;; Hardware stack levels used: 1
  3577 ;; Hardware stack levels required when called: 1
  3578 ;; This function calls:
  3579 ;;		Nothing
  3580 ;; This function is called by:
  3581 ;;		_main
  3582 ;;		_modifRTC
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586     04FE                     ___awmod:	
  3587                           ;psect for function ___awmod
  3588                           
  3589     04FE                     l2017:	
  3590                           ;incstack = 0
  3591                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3592                           
  3593     04FE  1283               	bcf	3,5	;RP0=0, select bank0
  3594     04FF  1303               	bcf	3,6	;RP1=0, select bank0
  3595     0500  01A9               	clrf	___awmod@sign
  3596     0501                     l2019:
  3597     0501  1FA7               	btfss	___awmod@dividend+1,7
  3598     0502  2D04               	goto	u1691
  3599     0503  2D05               	goto	u1690
  3600     0504                     u1691:
  3601     0504  2D0C               	goto	l2025
  3602     0505                     u1690:
  3603     0505                     l2021:
  3604     0505  09A6               	comf	___awmod@dividend,f
  3605     0506  09A7               	comf	___awmod@dividend+1,f
  3606     0507  0AA6               	incf	___awmod@dividend,f
  3607     0508  1903               	skipnz
  3608     0509  0AA7               	incf	___awmod@dividend+1,f
  3609     050A                     l2023:
  3610     050A  01A9               	clrf	___awmod@sign
  3611     050B  0AA9               	incf	___awmod@sign,f
  3612     050C                     l2025:
  3613     050C  1FA5               	btfss	___awmod@divisor+1,7
  3614     050D  2D0F               	goto	u1701
  3615     050E  2D10               	goto	u1700
  3616     050F                     u1701:
  3617     050F  2D15               	goto	l2029
  3618     0510                     u1700:
  3619     0510                     l2027:
  3620     0510  09A4               	comf	___awmod@divisor,f
  3621     0511  09A5               	comf	___awmod@divisor+1,f
  3622     0512  0AA4               	incf	___awmod@divisor,f
  3623     0513  1903               	skipnz
  3624     0514  0AA5               	incf	___awmod@divisor+1,f
  3625     0515                     l2029:
  3626     0515  0824               	movf	___awmod@divisor,w
  3627     0516  0425               	iorwf	___awmod@divisor+1,w
  3628     0517  1903               	btfsc	3,2
  3629     0518  2D1A               	goto	u1711
  3630     0519  2D1B               	goto	u1710
  3631     051A                     u1711:
  3632     051A  2D4A               	goto	l2047
  3633     051B                     u1710:
  3634     051B                     l2031:
  3635     051B  01A8               	clrf	___awmod@counter
  3636     051C  0AA8               	incf	___awmod@counter,f
  3637     051D  2D29               	goto	l2037
  3638     051E                     l2033:
  3639     051E  3001               	movlw	1
  3640     051F                     u1725:
  3641     051F  1003               	clrc
  3642     0520  0DA4               	rlf	___awmod@divisor,f
  3643     0521  0DA5               	rlf	___awmod@divisor+1,f
  3644     0522  3EFF               	addlw	-1
  3645     0523  1D03               	skipz
  3646     0524  2D1F               	goto	u1725
  3647     0525                     l2035:
  3648     0525  3001               	movlw	1
  3649     0526  00F8               	movwf	??___awmod
  3650     0527  0878               	movf	??___awmod,w
  3651     0528  07A8               	addwf	___awmod@counter,f
  3652     0529                     l2037:
  3653     0529  1FA5               	btfss	___awmod@divisor+1,7
  3654     052A  2D2C               	goto	u1731
  3655     052B  2D2D               	goto	u1730
  3656     052C                     u1731:
  3657     052C  2D1E               	goto	l2033
  3658     052D                     u1730:
  3659     052D                     l2039:
  3660     052D  0825               	movf	___awmod@divisor+1,w
  3661     052E  0227               	subwf	___awmod@dividend+1,w
  3662     052F  1D03               	skipz
  3663     0530  2D33               	goto	u1745
  3664     0531  0824               	movf	___awmod@divisor,w
  3665     0532  0226               	subwf	___awmod@dividend,w
  3666     0533                     u1745:
  3667     0533  1C03               	skipc
  3668     0534  2D36               	goto	u1741
  3669     0535  2D37               	goto	u1740
  3670     0536                     u1741:
  3671     0536  2D3D               	goto	l2043
  3672     0537                     u1740:
  3673     0537                     l2041:
  3674     0537  0824               	movf	___awmod@divisor,w
  3675     0538  02A6               	subwf	___awmod@dividend,f
  3676     0539  0825               	movf	___awmod@divisor+1,w
  3677     053A  1C03               	skipc
  3678     053B  03A7               	decf	___awmod@dividend+1,f
  3679     053C  02A7               	subwf	___awmod@dividend+1,f
  3680     053D                     l2043:
  3681     053D  3001               	movlw	1
  3682     053E                     u1755:
  3683     053E  1003               	clrc
  3684     053F  0CA5               	rrf	___awmod@divisor+1,f
  3685     0540  0CA4               	rrf	___awmod@divisor,f
  3686     0541  3EFF               	addlw	-1
  3687     0542  1D03               	skipz
  3688     0543  2D3E               	goto	u1755
  3689     0544                     l2045:
  3690     0544  3001               	movlw	1
  3691     0545  02A8               	subwf	___awmod@counter,f
  3692     0546  1D03               	btfss	3,2
  3693     0547  2D49               	goto	u1761
  3694     0548  2D4A               	goto	u1760
  3695     0549                     u1761:
  3696     0549  2D2D               	goto	l2039
  3697     054A                     u1760:
  3698     054A                     l2047:
  3699     054A  0829               	movf	___awmod@sign,w
  3700     054B  1903               	btfsc	3,2
  3701     054C  2D4E               	goto	u1771
  3702     054D  2D4F               	goto	u1770
  3703     054E                     u1771:
  3704     054E  2D54               	goto	l2051
  3705     054F                     u1770:
  3706     054F                     l2049:
  3707     054F  09A6               	comf	___awmod@dividend,f
  3708     0550  09A7               	comf	___awmod@dividend+1,f
  3709     0551  0AA6               	incf	___awmod@dividend,f
  3710     0552  1903               	skipnz
  3711     0553  0AA7               	incf	___awmod@dividend+1,f
  3712     0554                     l2051:
  3713     0554  0827               	movf	___awmod@dividend+1,w
  3714     0555  00A5               	movwf	?___awmod+1
  3715     0556  0826               	movf	___awmod@dividend,w
  3716     0557  00A4               	movwf	?___awmod
  3717     0558                     l483:
  3718     0558  0008               	return
  3719     0559                     __end_of___awmod:
  3720                           
  3721                           	psect	text18
  3722     0368                     __ptext18:	
  3723 ;; *************** function ___awdiv *****************
  3724 ;; Defined at:
  3725 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3726 ;; Parameters:    Size  Location     Type
  3727 ;;  divisor         2    3[COMMON] int 
  3728 ;;  dividend        2    5[COMMON] int 
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  quotient        2    2[BANK0 ] int 
  3731 ;;  sign            1    1[BANK0 ] unsigned char 
  3732 ;;  counter         1    0[BANK0 ] unsigned char 
  3733 ;; Return value:  Size  Location     Type
  3734 ;;                  2    3[COMMON] int 
  3735 ;; Registers used:
  3736 ;;		wreg, status,2, status,0
  3737 ;; Tracked objects:
  3738 ;;		On entry : 0/0
  3739 ;;		On exit  : 0/0
  3740 ;;		Unchanged: 0/0
  3741 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3742 ;;      Params:         4       0       0       0       0
  3743 ;;      Locals:         0       4       0       0       0
  3744 ;;      Temps:          1       0       0       0       0
  3745 ;;      Totals:         5       4       0       0       0
  3746 ;;Total ram usage:        9 bytes
  3747 ;; Hardware stack levels used: 1
  3748 ;; Hardware stack levels required when called: 1
  3749 ;; This function calls:
  3750 ;;		Nothing
  3751 ;; This function is called by:
  3752 ;;		_main
  3753 ;;		_modifRTC
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757     0368                     ___awdiv:	
  3758                           ;psect for function ___awdiv
  3759                           
  3760     0368                     l1625:	
  3761                           ;incstack = 0
  3762                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3763                           
  3764     0368  1283               	bcf	3,5	;RP0=0, select bank0
  3765     0369  1303               	bcf	3,6	;RP1=0, select bank0
  3766     036A  01A1               	clrf	___awdiv@sign
  3767     036B                     l1627:
  3768     036B  1FF4               	btfss	___awdiv@divisor+1,7
  3769     036C  2B6E               	goto	u1131
  3770     036D  2B6F               	goto	u1130
  3771     036E                     u1131:
  3772     036E  2B76               	goto	l1633
  3773     036F                     u1130:
  3774     036F                     l1629:
  3775     036F  09F3               	comf	___awdiv@divisor,f
  3776     0370  09F4               	comf	___awdiv@divisor+1,f
  3777     0371  0AF3               	incf	___awdiv@divisor,f
  3778     0372  1903               	skipnz
  3779     0373  0AF4               	incf	___awdiv@divisor+1,f
  3780     0374                     l1631:
  3781     0374  01A1               	clrf	___awdiv@sign
  3782     0375  0AA1               	incf	___awdiv@sign,f
  3783     0376                     l1633:
  3784     0376  1FF6               	btfss	___awdiv@dividend+1,7
  3785     0377  2B79               	goto	u1141
  3786     0378  2B7A               	goto	u1140
  3787     0379                     u1141:
  3788     0379  2B83               	goto	l1639
  3789     037A                     u1140:
  3790     037A                     l1635:
  3791     037A  09F5               	comf	___awdiv@dividend,f
  3792     037B  09F6               	comf	___awdiv@dividend+1,f
  3793     037C  0AF5               	incf	___awdiv@dividend,f
  3794     037D  1903               	skipnz
  3795     037E  0AF6               	incf	___awdiv@dividend+1,f
  3796     037F                     l1637:
  3797     037F  3001               	movlw	1
  3798     0380  00F7               	movwf	??___awdiv
  3799     0381  0877               	movf	??___awdiv,w
  3800     0382  06A1               	xorwf	___awdiv@sign,f
  3801     0383                     l1639:
  3802     0383  01A2               	clrf	___awdiv@quotient
  3803     0384  01A3               	clrf	___awdiv@quotient+1
  3804     0385                     l1641:
  3805     0385  0873               	movf	___awdiv@divisor,w
  3806     0386  0474               	iorwf	___awdiv@divisor+1,w
  3807     0387  1903               	btfsc	3,2
  3808     0388  2B8A               	goto	u1151
  3809     0389  2B8B               	goto	u1150
  3810     038A                     u1151:
  3811     038A  2BC2               	goto	l1661
  3812     038B                     u1150:
  3813     038B                     l1643:
  3814     038B  01A0               	clrf	___awdiv@counter
  3815     038C  0AA0               	incf	___awdiv@counter,f
  3816     038D  2B99               	goto	l1649
  3817     038E                     l1645:
  3818     038E  3001               	movlw	1
  3819     038F                     u1165:
  3820     038F  1003               	clrc
  3821     0390  0DF3               	rlf	___awdiv@divisor,f
  3822     0391  0DF4               	rlf	___awdiv@divisor+1,f
  3823     0392  3EFF               	addlw	-1
  3824     0393  1D03               	skipz
  3825     0394  2B8F               	goto	u1165
  3826     0395                     l1647:
  3827     0395  3001               	movlw	1
  3828     0396  00F7               	movwf	??___awdiv
  3829     0397  0877               	movf	??___awdiv,w
  3830     0398  07A0               	addwf	___awdiv@counter,f
  3831     0399                     l1649:
  3832     0399  1FF4               	btfss	___awdiv@divisor+1,7
  3833     039A  2B9C               	goto	u1171
  3834     039B  2B9D               	goto	u1170
  3835     039C                     u1171:
  3836     039C  2B8E               	goto	l1645
  3837     039D                     u1170:
  3838     039D                     l1651:
  3839     039D  3001               	movlw	1
  3840     039E                     u1185:
  3841     039E  1003               	clrc
  3842     039F  0DA2               	rlf	___awdiv@quotient,f
  3843     03A0  0DA3               	rlf	___awdiv@quotient+1,f
  3844     03A1  3EFF               	addlw	-1
  3845     03A2  1D03               	skipz
  3846     03A3  2B9E               	goto	u1185
  3847     03A4  0874               	movf	___awdiv@divisor+1,w
  3848     03A5  0276               	subwf	___awdiv@dividend+1,w
  3849     03A6  1D03               	skipz
  3850     03A7  2BAA               	goto	u1195
  3851     03A8  0873               	movf	___awdiv@divisor,w
  3852     03A9  0275               	subwf	___awdiv@dividend,w
  3853     03AA                     u1195:
  3854     03AA  1C03               	skipc
  3855     03AB  2BAD               	goto	u1191
  3856     03AC  2BAE               	goto	u1190
  3857     03AD                     u1191:
  3858     03AD  2BB5               	goto	l1657
  3859     03AE                     u1190:
  3860     03AE                     l1653:
  3861     03AE  0873               	movf	___awdiv@divisor,w
  3862     03AF  02F5               	subwf	___awdiv@dividend,f
  3863     03B0  0874               	movf	___awdiv@divisor+1,w
  3864     03B1  1C03               	skipc
  3865     03B2  03F6               	decf	___awdiv@dividend+1,f
  3866     03B3  02F6               	subwf	___awdiv@dividend+1,f
  3867     03B4                     l1655:
  3868     03B4  1422               	bsf	___awdiv@quotient,0
  3869     03B5                     l1657:
  3870     03B5  3001               	movlw	1
  3871     03B6                     u1205:
  3872     03B6  1003               	clrc
  3873     03B7  0CF4               	rrf	___awdiv@divisor+1,f
  3874     03B8  0CF3               	rrf	___awdiv@divisor,f
  3875     03B9  3EFF               	addlw	-1
  3876     03BA  1D03               	skipz
  3877     03BB  2BB6               	goto	u1205
  3878     03BC                     l1659:
  3879     03BC  3001               	movlw	1
  3880     03BD  02A0               	subwf	___awdiv@counter,f
  3881     03BE  1D03               	btfss	3,2
  3882     03BF  2BC1               	goto	u1211
  3883     03C0  2BC2               	goto	u1210
  3884     03C1                     u1211:
  3885     03C1  2B9D               	goto	l1651
  3886     03C2                     u1210:
  3887     03C2                     l1661:
  3888     03C2  0821               	movf	___awdiv@sign,w
  3889     03C3  1903               	btfsc	3,2
  3890     03C4  2BC6               	goto	u1221
  3891     03C5  2BC7               	goto	u1220
  3892     03C6                     u1221:
  3893     03C6  2BCC               	goto	l1665
  3894     03C7                     u1220:
  3895     03C7                     l1663:
  3896     03C7  09A2               	comf	___awdiv@quotient,f
  3897     03C8  09A3               	comf	___awdiv@quotient+1,f
  3898     03C9  0AA2               	incf	___awdiv@quotient,f
  3899     03CA  1903               	skipnz
  3900     03CB  0AA3               	incf	___awdiv@quotient+1,f
  3901     03CC                     l1665:
  3902     03CC  0823               	movf	___awdiv@quotient+1,w
  3903     03CD  00F4               	movwf	?___awdiv+1
  3904     03CE  0822               	movf	___awdiv@quotient,w
  3905     03CF  00F3               	movwf	?___awdiv
  3906     03D0                     l470:
  3907     03D0  0008               	return
  3908     03D1                     __end_of___awdiv:
  3909                           
  3910                           	psect	text19
  3911     05EB                     __ptext19:	
  3912 ;; *************** function _Lcd_Write_String_4bits *****************
  3913 ;; Defined at:
  3914 ;;		line 99 in file "configLCD_4bits.c"
  3915 ;; Parameters:    Size  Location     Type
  3916 ;;  a               2    8[COMMON] PTR unsigned char 
  3917 ;;		 -> main@ADC1(9), STR_1(4), main@fecha(10), main@tiempo(8), 
  3918 ;; Auto vars:     Size  Location     Type
  3919 ;;  i               2    3[BANK0 ] int 
  3920 ;; Return value:  Size  Location     Type
  3921 ;;                  1    wreg      void 
  3922 ;; Registers used:
  3923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3924 ;; Tracked objects:
  3925 ;;		On entry : 0/0
  3926 ;;		On exit  : 0/0
  3927 ;;		Unchanged: 0/0
  3928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3929 ;;      Params:         2       0       0       0       0
  3930 ;;      Locals:         0       2       0       0       0
  3931 ;;      Temps:          0       3       0       0       0
  3932 ;;      Totals:         2       5       0       0       0
  3933 ;;Total ram usage:        7 bytes
  3934 ;; Hardware stack levels used: 1
  3935 ;; Hardware stack levels required when called: 3
  3936 ;; This function calls:
  3937 ;;		_Lcd_Write_Char_4bits
  3938 ;; This function is called by:
  3939 ;;		_main
  3940 ;; This function uses a non-reentrant model
  3941 ;;
  3942                           
  3943     05EB                     _Lcd_Write_String_4bits:	
  3944                           ;psect for function _Lcd_Write_String_4bits
  3945                           
  3946     05EB                     l1523:	
  3947                           ;incstack = 0
  3948                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3949                           
  3950                           
  3951                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  3952     05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3953     05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3954     05ED  01A3               	clrf	Lcd_Write_String_4bits@i
  3955     05EE  01A4               	clrf	Lcd_Write_String_4bits@i+1
  3956     05EF  2E14               	goto	l1529
  3957     05F0                     l1525:
  3958                           
  3959                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  3960     05F0  0823               	movf	Lcd_Write_String_4bits@i,w
  3961     05F1  0778               	addwf	Lcd_Write_String_4bits@a,w
  3962     05F2  00A1               	movwf	??_Lcd_Write_String_4bits+1
  3963     05F3  0879               	movf	Lcd_Write_String_4bits@a+1,w
  3964     05F4  00A0               	movwf	??_Lcd_Write_String_4bits
  3965     05F5  1803               	skipnc
  3966     05F6  0AA0               	incf	??_Lcd_Write_String_4bits,f
  3967     05F7  1FA3               	btfss	Lcd_Write_String_4bits@i,7
  3968     05F8  2DFA               	goto	u1040
  3969     05F9  03A0               	decf	??_Lcd_Write_String_4bits,f
  3970     05FA                     u1040:
  3971     05FA  1283               	bcf	3,5	;RP0=0, select bank0
  3972     05FB  1303               	bcf	3,6	;RP1=0, select bank0
  3973     05FC  0820               	movf	??_Lcd_Write_String_4bits,w
  3974     05FD  00A2               	movwf	??_Lcd_Write_String_4bits+2
  3975     05FE  0822               	movf	??_Lcd_Write_String_4bits+2,w
  3976     05FF  00FF               	movwf	btemp+1
  3977     0600  0821               	movf	??_Lcd_Write_String_4bits+1,w
  3978     0601  0084               	movwf	4
  3979     0602  120A  118A  275E  120A  118A  	fcall	stringtab
  3980     0607  120A  118A  26A7  120A  118A  	fcall	_Lcd_Write_Char_4bits
  3981     060C                     l1527:
  3982     060C  3001               	movlw	1
  3983     060D  1283               	bcf	3,5	;RP0=0, select bank0
  3984     060E  1303               	bcf	3,6	;RP1=0, select bank0
  3985     060F  07A3               	addwf	Lcd_Write_String_4bits@i,f
  3986     0610  1803               	skipnc
  3987     0611  0AA4               	incf	Lcd_Write_String_4bits@i+1,f
  3988     0612  3000               	movlw	0
  3989     0613  07A4               	addwf	Lcd_Write_String_4bits@i+1,f
  3990     0614                     l1529:
  3991     0614  0823               	movf	Lcd_Write_String_4bits@i,w
  3992     0615  0778               	addwf	Lcd_Write_String_4bits@a,w
  3993     0616  00A1               	movwf	??_Lcd_Write_String_4bits+1
  3994     0617  0879               	movf	Lcd_Write_String_4bits@a+1,w
  3995     0618  00A0               	movwf	??_Lcd_Write_String_4bits
  3996     0619  1803               	skipnc
  3997     061A  0AA0               	incf	??_Lcd_Write_String_4bits,f
  3998     061B  1FA3               	btfss	Lcd_Write_String_4bits@i,7
  3999     061C  2E1E               	goto	u1050
  4000     061D  03A0               	decf	??_Lcd_Write_String_4bits,f
  4001     061E                     u1050:
  4002     061E  1283               	bcf	3,5	;RP0=0, select bank0
  4003     061F  1303               	bcf	3,6	;RP1=0, select bank0
  4004     0620  0820               	movf	??_Lcd_Write_String_4bits,w
  4005     0621  00A2               	movwf	??_Lcd_Write_String_4bits+2
  4006     0622  0822               	movf	??_Lcd_Write_String_4bits+2,w
  4007     0623  00FF               	movwf	btemp+1
  4008     0624  0821               	movf	??_Lcd_Write_String_4bits+1,w
  4009     0625  0084               	movwf	4
  4010     0626  120A  118A  275E  120A  118A  	fcall	stringtab
  4011     062B  3A00               	xorlw	0
  4012     062C  1D03               	skipz
  4013     062D  2E2F               	goto	u1061
  4014     062E  2E30               	goto	u1060
  4015     062F                     u1061:
  4016     062F  2DF0               	goto	l1525
  4017     0630                     u1060:
  4018     0630                     l99:
  4019     0630  0008               	return
  4020     0631                     __end_of_Lcd_Write_String_4bits:
  4021                           
  4022                           	psect	text20
  4023     06A7                     __ptext20:	
  4024 ;; *************** function _Lcd_Write_Char_4bits *****************
  4025 ;; Defined at:
  4026 ;;		line 84 in file "configLCD_4bits.c"
  4027 ;; Parameters:    Size  Location     Type
  4028 ;;  a               1    wreg     unsigned char 
  4029 ;; Auto vars:     Size  Location     Type
  4030 ;;  a               1    7[COMMON] unsigned char 
  4031 ;;  y               1    6[COMMON] unsigned char 
  4032 ;;  temp            1    5[COMMON] unsigned char 
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, pclath, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4042 ;;      Params:         0       0       0       0       0
  4043 ;;      Locals:         3       0       0       0       0
  4044 ;;      Temps:          1       0       0       0       0
  4045 ;;      Totals:         4       0       0       0       0
  4046 ;;Total ram usage:        4 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; Hardware stack levels required when called: 2
  4049 ;; This function calls:
  4050 ;;		_Lcd_Port_4bits
  4051 ;; This function is called by:
  4052 ;;		_Lcd_Write_String_4bits
  4053 ;; This function uses a non-reentrant model
  4054 ;;
  4055                           
  4056     06A7                     _Lcd_Write_Char_4bits:	
  4057                           ;psect for function _Lcd_Write_Char_4bits
  4058                           
  4059                           
  4060                           ;incstack = 0
  4061                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  4062                           ;Lcd_Write_Char_4bits@a stored from wreg
  4063     06A7  00F7               	movwf	Lcd_Write_Char_4bits@a
  4064     06A8                     l1419:
  4065                           
  4066                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  4067     06A8  0877               	movf	Lcd_Write_Char_4bits@a,w
  4068     06A9  390F               	andlw	15
  4069     06AA  00F5               	movwf	Lcd_Write_Char_4bits@temp
  4070                           
  4071                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  4072     06AB  0877               	movf	Lcd_Write_Char_4bits@a,w
  4073     06AC  39F0               	andlw	240
  4074     06AD  00F6               	movwf	Lcd_Write_Char_4bits@y
  4075     06AE                     l1421:
  4076                           
  4077                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  4078     06AE  1283               	bcf	3,5	;RP0=0, select bank0
  4079     06AF  1303               	bcf	3,6	;RP1=0, select bank0
  4080     06B0  1508               	bsf	8,2	;volatile
  4081     06B1                     l1423:
  4082                           
  4083                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  4084     06B1  0876               	movf	Lcd_Write_Char_4bits@y,w
  4085     06B2  00F4               	movwf	??_Lcd_Write_Char_4bits
  4086     06B3  3004               	movlw	4
  4087     06B4                     u845:
  4088     06B4  1003               	clrc
  4089     06B5  0CF4               	rrf	??_Lcd_Write_Char_4bits,f
  4090     06B6  3EFF               	addlw	-1
  4091     06B7  1D03               	skipz
  4092     06B8  2EB4               	goto	u845
  4093     06B9  0874               	movf	??_Lcd_Write_Char_4bits,w
  4094     06BA  120A  118A  273C  120A  118A  	fcall	_Lcd_Port_4bits
  4095     06BF                     l1425:
  4096                           
  4097                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  4098     06BF  1283               	bcf	3,5	;RP0=0, select bank0
  4099     06C0  1303               	bcf	3,6	;RP1=0, select bank0
  4100     06C1  1588               	bsf	8,3	;volatile
  4101     06C2                     l1427:
  4102                           
  4103                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4104     06C2  301A               	movlw	26
  4105     06C3  00F4               	movwf	??_Lcd_Write_Char_4bits
  4106     06C4                     u1857:
  4107     06C4  0BF4               	decfsz	??_Lcd_Write_Char_4bits,f
  4108     06C5  2EC4               	goto	u1857
  4109     06C6  0000               	nop
  4110     06C7                     l1429:
  4111                           
  4112                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  4113     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  4114     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  4115     06C9  1188               	bcf	8,3	;volatile
  4116     06CA                     l1431:
  4117                           
  4118                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  4119     06CA  0875               	movf	Lcd_Write_Char_4bits@temp,w
  4120     06CB  120A  118A  273C  120A  118A  	fcall	_Lcd_Port_4bits
  4121     06D0                     l1433:
  4122                           
  4123                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  4124     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  4125     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  4126     06D2  1588               	bsf	8,3	;volatile
  4127     06D3                     l1435:
  4128                           
  4129                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4130     06D3  301A               	movlw	26
  4131     06D4  00F4               	movwf	??_Lcd_Write_Char_4bits
  4132     06D5                     u1867:
  4133     06D5  0BF4               	decfsz	??_Lcd_Write_Char_4bits,f
  4134     06D6  2ED5               	goto	u1867
  4135     06D7  0000               	nop
  4136     06D8                     l1437:
  4137                           
  4138                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  4139     06D8  1283               	bcf	3,5	;RP0=0, select bank0
  4140     06D9  1303               	bcf	3,6	;RP1=0, select bank0
  4141     06DA  1188               	bcf	8,3	;volatile
  4142     06DB                     l93:
  4143     06DB  0008               	return
  4144     06DC                     __end_of_Lcd_Write_Char_4bits:
  4145                           
  4146                           	psect	text21
  4147     0559                     __ptext21:	
  4148 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  4149 ;; Defined at:
  4150 ;;		line 49 in file "configLCD_4bits.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  a               1    wreg     unsigned char 
  4153 ;;  b               1    7[COMMON] unsigned char 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  a               1    0[BANK0 ] unsigned char 
  4156 ;;  temp            1    3[BANK0 ] unsigned char 
  4157 ;;  y               1    2[BANK0 ] unsigned char 
  4158 ;;  z               1    1[BANK0 ] unsigned char 
  4159 ;; Return value:  Size  Location     Type
  4160 ;;                  1    wreg      void 
  4161 ;; Registers used:
  4162 ;;		wreg, status,2, status,0, pclath, cstack
  4163 ;; Tracked objects:
  4164 ;;		On entry : 0/0
  4165 ;;		On exit  : 0/0
  4166 ;;		Unchanged: 0/0
  4167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4168 ;;      Params:         1       0       0       0       0
  4169 ;;      Locals:         0       4       0       0       0
  4170 ;;      Temps:          1       0       0       0       0
  4171 ;;      Totals:         2       4       0       0       0
  4172 ;;Total ram usage:        6 bytes
  4173 ;; Hardware stack levels used: 1
  4174 ;; Hardware stack levels required when called: 3
  4175 ;; This function calls:
  4176 ;;		_Lcd_Cmd_4bits
  4177 ;; This function is called by:
  4178 ;;		_main
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182     0559                     _Lcd_Set_Cursor_4bits:	
  4183                           ;psect for function _Lcd_Set_Cursor_4bits
  4184                           
  4185                           
  4186                           ;incstack = 0
  4187                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  4188                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  4189     0559  1283               	bcf	3,5	;RP0=0, select bank0
  4190     055A  1303               	bcf	3,6	;RP1=0, select bank0
  4191     055B  00A0               	movwf	Lcd_Set_Cursor_4bits@a
  4192     055C                     l1503:
  4193                           
  4194                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  4195     055C  0320               	decf	Lcd_Set_Cursor_4bits@a,w
  4196     055D  1D03               	btfss	3,2
  4197     055E  2D60               	goto	u1001
  4198     055F  2D61               	goto	u1000
  4199     0560                     u1001:
  4200     0560  2D80               	goto	l1513
  4201     0561                     u1000:
  4202     0561                     l1505:
  4203                           
  4204                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  4205     0561  0877               	movf	Lcd_Set_Cursor_4bits@b,w
  4206     0562  3E7F               	addlw	127
  4207     0563  00A3               	movwf	Lcd_Set_Cursor_4bits@temp
  4208                           
  4209                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  4210     0564  0823               	movf	Lcd_Set_Cursor_4bits@temp,w
  4211     0565  00F8               	movwf	??_Lcd_Set_Cursor_4bits
  4212     0566  3004               	movlw	4
  4213     0567                     u1015:
  4214     0567  1003               	clrc
  4215     0568  0CF8               	rrf	??_Lcd_Set_Cursor_4bits,f
  4216     0569  3EFF               	addlw	-1
  4217     056A  1D03               	skipz
  4218     056B  2D67               	goto	u1015
  4219     056C  0878               	movf	??_Lcd_Set_Cursor_4bits,w
  4220     056D  00A1               	movwf	Lcd_Set_Cursor_4bits@z
  4221     056E                     l1507:
  4222                           
  4223                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  4224     056E  0823               	movf	Lcd_Set_Cursor_4bits@temp,w
  4225     056F  390F               	andlw	15
  4226     0570  00A2               	movwf	Lcd_Set_Cursor_4bits@y
  4227     0571                     l1509:
  4228                           
  4229                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  4230     0571  0821               	movf	Lcd_Set_Cursor_4bits@z,w
  4231     0572  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  4232     0577                     l1511:
  4233                           
  4234                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  4235     0577  1283               	bcf	3,5	;RP0=0, select bank0
  4236     0578  1303               	bcf	3,6	;RP1=0, select bank0
  4237     0579  0822               	movf	Lcd_Set_Cursor_4bits@y,w
  4238     057A  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  4239                           
  4240                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  4241     057F  2DA4               	goto	l87
  4242     0580                     l1513:
  4243     0580  3002               	movlw	2
  4244     0581  0620               	xorwf	Lcd_Set_Cursor_4bits@a,w
  4245     0582  1D03               	btfss	3,2
  4246     0583  2D85               	goto	u1021
  4247     0584  2D86               	goto	u1020
  4248     0585                     u1021:
  4249     0585  2DA4               	goto	l87
  4250     0586                     u1020:
  4251     0586                     l1515:
  4252                           
  4253                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  4254     0586  0877               	movf	Lcd_Set_Cursor_4bits@b,w
  4255     0587  3EBF               	addlw	191
  4256     0588  00A3               	movwf	Lcd_Set_Cursor_4bits@temp
  4257                           
  4258                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  4259     0589  0823               	movf	Lcd_Set_Cursor_4bits@temp,w
  4260     058A  00F8               	movwf	??_Lcd_Set_Cursor_4bits
  4261     058B  3004               	movlw	4
  4262     058C                     u1035:
  4263     058C  1003               	clrc
  4264     058D  0CF8               	rrf	??_Lcd_Set_Cursor_4bits,f
  4265     058E  3EFF               	addlw	-1
  4266     058F  1D03               	skipz
  4267     0590  2D8C               	goto	u1035
  4268     0591  0878               	movf	??_Lcd_Set_Cursor_4bits,w
  4269     0592  00A1               	movwf	Lcd_Set_Cursor_4bits@z
  4270     0593                     l1517:
  4271                           
  4272                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  4273     0593  0823               	movf	Lcd_Set_Cursor_4bits@temp,w
  4274     0594  390F               	andlw	15
  4275     0595  00A2               	movwf	Lcd_Set_Cursor_4bits@y
  4276     0596                     l1519:
  4277                           
  4278                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  4279     0596  0821               	movf	Lcd_Set_Cursor_4bits@z,w
  4280     0597  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  4281     059C                     l1521:
  4282                           
  4283                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  4284     059C  1283               	bcf	3,5	;RP0=0, select bank0
  4285     059D  1303               	bcf	3,6	;RP1=0, select bank0
  4286     059E  0822               	movf	Lcd_Set_Cursor_4bits@y,w
  4287     059F  120A  118A  279C  120A  118A  	fcall	_Lcd_Cmd_4bits
  4288     05A4                     l87:
  4289     05A4  0008               	return
  4290     05A5                     __end_of_Lcd_Set_Cursor_4bits:
  4291                           
  4292                           	psect	text22
  4293     0FE6                     __ptext22:	
  4294 ;; *************** function _Lcd_Clear_4bits *****************
  4295 ;; Defined at:
  4296 ;;		line 44 in file "configLCD_4bits.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0, pclath, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4310 ;;      Params:         0       0       0       0       0
  4311 ;;      Locals:         0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0
  4313 ;;      Totals:         0       0       0       0       0
  4314 ;;Total ram usage:        0 bytes
  4315 ;; Hardware stack levels used: 1
  4316 ;; Hardware stack levels required when called: 3
  4317 ;; This function calls:
  4318 ;;		_Lcd_Cmd_4bits
  4319 ;; This function is called by:
  4320 ;;		_main
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324     0FE6                     _Lcd_Clear_4bits:	
  4325                           ;psect for function _Lcd_Clear_4bits
  4326                           
  4327     0FE6                     l1501:	
  4328                           ;incstack = 0
  4329                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  4330                           
  4331                           
  4332                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  4333     0FE6  3000               	movlw	0
  4334     0FE7  120A  118A  279C  120A  158A  	fcall	_Lcd_Cmd_4bits
  4335                           
  4336                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  4337     0FEC  3001               	movlw	1
  4338     0FED  120A  118A  279C  120A  158A  	fcall	_Lcd_Cmd_4bits
  4339     0FF2                     l81:
  4340     0FF2  0008               	return
  4341     0FF3                     __end_of_Lcd_Clear_4bits:
  4342                           
  4343                           	psect	text23
  4344     079C                     __ptext23:	
  4345 ;; *************** function _Lcd_Cmd_4bits *****************
  4346 ;; Defined at:
  4347 ;;		line 36 in file "configLCD_4bits.c"
  4348 ;; Parameters:    Size  Location     Type
  4349 ;;  a               1    wreg     unsigned char 
  4350 ;; Auto vars:     Size  Location     Type
  4351 ;;  a               1    6[COMMON] unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  1    wreg      void 
  4354 ;; Registers used:
  4355 ;;		wreg, status,2, status,0, pclath, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4361 ;;      Params:         0       0       0       0       0
  4362 ;;      Locals:         1       0       0       0       0
  4363 ;;      Temps:          2       0       0       0       0
  4364 ;;      Totals:         3       0       0       0       0
  4365 ;;Total ram usage:        3 bytes
  4366 ;; Hardware stack levels used: 1
  4367 ;; Hardware stack levels required when called: 2
  4368 ;; This function calls:
  4369 ;;		_Lcd_Port_4bits
  4370 ;; This function is called by:
  4371 ;;		_Lcd_Clear_4bits
  4372 ;;		_Lcd_Set_Cursor_4bits
  4373 ;;		_Lcd_Init_4bits
  4374 ;;		_Lcd_Shift_Right_4bits
  4375 ;;		_Lcd_Shift_Left_4bits
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379     079C                     _Lcd_Cmd_4bits:	
  4380                           ;psect for function _Lcd_Cmd_4bits
  4381                           
  4382                           
  4383                           ;incstack = 0
  4384                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  4385                           ;Lcd_Cmd_4bits@a stored from wreg
  4386     079C  00F6               	movwf	Lcd_Cmd_4bits@a
  4387     079D                     l1327:
  4388                           
  4389                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  4390     079D  1283               	bcf	3,5	;RP0=0, select bank0
  4391     079E  1303               	bcf	3,6	;RP1=0, select bank0
  4392     079F  1108               	bcf	8,2	;volatile
  4393     07A0                     l1329:
  4394                           
  4395                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  4396     07A0  0876               	movf	Lcd_Cmd_4bits@a,w
  4397     07A1  120A  118A  273C  120A  118A  	fcall	_Lcd_Port_4bits
  4398     07A6                     l1331:
  4399                           
  4400                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  4401     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  4402     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  4403     07A8  1588               	bsf	8,3	;volatile
  4404     07A9                     l1333:
  4405                           
  4406                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4407     07A9  300B               	movlw	11
  4408     07AA  00F5               	movwf	??_Lcd_Cmd_4bits+1
  4409     07AB  3062               	movlw	98
  4410     07AC  00F4               	movwf	??_Lcd_Cmd_4bits
  4411     07AD                     u1877:
  4412     07AD  0BF4               	decfsz	??_Lcd_Cmd_4bits,f
  4413     07AE  2FAD               	goto	u1877
  4414     07AF  0BF5               	decfsz	??_Lcd_Cmd_4bits+1,f
  4415     07B0  2FAD               	goto	u1877
  4416     07B1  0000               	nop
  4417     07B2                     l1335:
  4418                           
  4419                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  4420     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  4421     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  4422     07B4  1188               	bcf	8,3	;volatile
  4423     07B5                     l78:
  4424     07B5  0008               	return
  4425     07B6                     __end_of_Lcd_Cmd_4bits:
  4426                           
  4427                           	psect	text24
  4428     073C                     __ptext24:	
  4429 ;; *************** function _Lcd_Port_4bits *****************
  4430 ;; Defined at:
  4431 ;;		line 14 in file "configLCD_4bits.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  a               1    wreg     unsigned char 
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;  a               1    3[COMMON] unsigned char 
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      void 
  4438 ;; Registers used:
  4439 ;;		wreg
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 0/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4445 ;;      Params:         0       0       0       0       0
  4446 ;;      Locals:         1       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0
  4448 ;;      Totals:         1       0       0       0       0
  4449 ;;Total ram usage:        1 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 1
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_Lcd_Cmd_4bits
  4456 ;;		_Lcd_Init_4bits
  4457 ;;		_Lcd_Write_Char_4bits
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461     073C                     _Lcd_Port_4bits:	
  4462                           ;psect for function _Lcd_Port_4bits
  4463                           
  4464                           
  4465                           ;incstack = 0
  4466                           ; Regs used in _Lcd_Port_4bits: [wreg]
  4467                           ;Lcd_Port_4bits@a stored from wreg
  4468     073C  00F3               	movwf	Lcd_Port_4bits@a
  4469     073D                     l1313:
  4470                           
  4471                           ;configLCD_4bits.c: 15:     if (a & 1)
  4472     073D  1C73               	btfss	Lcd_Port_4bits@a,0
  4473     073E  2F40               	goto	u691
  4474     073F  2F41               	goto	u690
  4475     0740                     u691:
  4476     0740  2F45               	goto	l67
  4477     0741                     u690:
  4478     0741                     l1315:
  4479                           
  4480                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  4481     0741  1283               	bcf	3,5	;RP0=0, select bank0
  4482     0742  1303               	bcf	3,6	;RP1=0, select bank0
  4483     0743  1608               	bsf	8,4	;volatile
  4484     0744  2F48               	goto	l68
  4485     0745                     l67:	
  4486                           ;configLCD_4bits.c: 17:     else
  4487                           
  4488                           
  4489                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  4490     0745  1283               	bcf	3,5	;RP0=0, select bank0
  4491     0746  1303               	bcf	3,6	;RP1=0, select bank0
  4492     0747  1208               	bcf	8,4	;volatile
  4493     0748                     l68:
  4494                           
  4495                           ;configLCD_4bits.c: 20:     if (a & 2)
  4496     0748  1CF3               	btfss	Lcd_Port_4bits@a,1
  4497     0749  2F4B               	goto	u701
  4498     074A  2F4C               	goto	u700
  4499     074B                     u701:
  4500     074B  2F4E               	goto	l69
  4501     074C                     u700:
  4502     074C                     l1317:
  4503                           
  4504                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  4505     074C  1688               	bsf	8,5	;volatile
  4506     074D  2F4F               	goto	l70
  4507     074E                     l69:	
  4508                           ;configLCD_4bits.c: 22:     else
  4509                           
  4510                           
  4511                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  4512     074E  1288               	bcf	8,5	;volatile
  4513     074F                     l70:
  4514                           
  4515                           ;configLCD_4bits.c: 25:     if (a & 4)
  4516     074F  1D73               	btfss	Lcd_Port_4bits@a,2
  4517     0750  2F52               	goto	u711
  4518     0751  2F53               	goto	u710
  4519     0752                     u711:
  4520     0752  2F55               	goto	l71
  4521     0753                     u710:
  4522     0753                     l1319:
  4523                           
  4524                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  4525     0753  1708               	bsf	8,6	;volatile
  4526     0754  2F56               	goto	l72
  4527     0755                     l71:	
  4528                           ;configLCD_4bits.c: 27:     else
  4529                           
  4530                           
  4531                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  4532     0755  1308               	bcf	8,6	;volatile
  4533     0756                     l72:
  4534                           
  4535                           ;configLCD_4bits.c: 30:     if (a & 8)
  4536     0756  1DF3               	btfss	Lcd_Port_4bits@a,3
  4537     0757  2F59               	goto	u721
  4538     0758  2F5A               	goto	u720
  4539     0759                     u721:
  4540     0759  2F5C               	goto	l73
  4541     075A                     u720:
  4542     075A                     l1321:
  4543                           
  4544                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  4545     075A  1788               	bsf	8,7	;volatile
  4546     075B  2F5D               	goto	l75
  4547     075C                     l73:	
  4548                           ;configLCD_4bits.c: 32:     else
  4549                           
  4550                           
  4551                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  4552     075C  1388               	bcf	8,7	;volatile
  4553     075D                     l75:
  4554     075D  0008               	return
  4555     075E                     __end_of_Lcd_Port_4bits:
  4556                           
  4557                           	psect	text25
  4558     077F                     __ptext25:	
  4559 ;; *************** function _ISR *****************
  4560 ;; Defined at:
  4561 ;;		line 63 in file "main_M.c"
  4562 ;; Parameters:    Size  Location     Type
  4563 ;;		None
  4564 ;; Auto vars:     Size  Location     Type
  4565 ;;		None
  4566 ;; Return value:  Size  Location     Type
  4567 ;;                  1    wreg      void 
  4568 ;; Registers used:
  4569 ;;		wreg, status,2, status,0
  4570 ;; Tracked objects:
  4571 ;;		On entry : 0/0
  4572 ;;		On exit  : 0/0
  4573 ;;		Unchanged: 0/0
  4574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4575 ;;      Params:         0       0       0       0       0
  4576 ;;      Locals:         0       0       0       0       0
  4577 ;;      Temps:          3       0       0       0       0
  4578 ;;      Totals:         3       0       0       0       0
  4579 ;;Total ram usage:        3 bytes
  4580 ;; Hardware stack levels used: 1
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		Interrupt level 1
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588     077F                     _ISR:	
  4589                           ;psect for function _ISR
  4590                           
  4591     077F                     i1l1711:
  4592                           
  4593                           ;main_M.c: 65:     if (INTCONbits.RBIF == 1)
  4594     077F  1C0B               	btfss	11,0	;volatile
  4595     0780  2F82               	goto	u132_21
  4596     0781  2F83               	goto	u132_20
  4597     0782                     u132_21:
  4598     0782  2F95               	goto	i1l171
  4599     0783                     u132_20:
  4600     0783                     i1l1713:
  4601                           
  4602                           ;main_M.c: 66:     {;main_M.c: 67:         if(!PORTBbits.RB0)
  4603     0783  1283               	bcf	3,5	;RP0=0, select bank0
  4604     0784  1303               	bcf	3,6	;RP1=0, select bank0
  4605     0785  1806               	btfsc	6,0	;volatile
  4606     0786  2F88               	goto	u133_21
  4607     0787  2F89               	goto	u133_20
  4608     0788                     u133_21:
  4609     0788  2F94               	goto	i1l1719
  4610     0789                     u133_20:
  4611     0789                     i1l1715:
  4612                           
  4613                           ;main_M.c: 68:         {;main_M.c: 69:             modo++;
  4614     0789  3001               	movlw	1
  4615     078A  00F0               	movwf	??_ISR
  4616     078B  0870               	movf	??_ISR,w
  4617     078C  07EF               	addwf	_modo,f
  4618                           
  4619                           ;main_M.c: 71:             if(modo == 6)
  4620     078D  3006               	movlw	6
  4621     078E  066F               	xorwf	_modo,w
  4622     078F  1D03               	btfss	3,2
  4623     0790  2F92               	goto	u134_21
  4624     0791  2F93               	goto	u134_20
  4625     0792                     u134_21:
  4626     0792  2F94               	goto	i1l1719
  4627     0793                     u134_20:
  4628     0793                     i1l1717:
  4629                           
  4630                           ;main_M.c: 72:             {;main_M.c: 73:             modo = 0;
  4631     0793  01EF               	clrf	_modo
  4632     0794                     i1l1719:
  4633                           
  4634                           ;main_M.c: 76:         INTCONbits.RBIF = 0;
  4635     0794  100B               	bcf	11,0	;volatile
  4636     0795                     i1l171:
  4637     0795  0872               	movf	??_ISR+2,w
  4638     0796  008A               	movwf	10
  4639     0797  0E71               	swapf	??_ISR+1,w
  4640     0798  0083               	movwf	3
  4641     0799  0EFE               	swapf	btemp,f
  4642     079A  0E7E               	swapf	btemp,w
  4643     079B  0009               	retfie
  4644     079C                     __end_of_ISR:
  4645     007E                     btemp	set	126	;btemp
  4646     007E                     wtemp0	set	126
  4647                           
  4648                           	psect	intentry
  4649     0004                     __pintentry:	
  4650                           ;incstack = 0
  4651                           ; Regs used in _ISR: [wreg+status,2+status,0]
  4652                           
  4653     0004                     interrupt_function:
  4654     007E                     saved_w	set	btemp
  4655     0004  00FE               	movwf	btemp
  4656     0005  0E03               	swapf	3,w
  4657     0006  00F1               	movwf	??_ISR+1
  4658     0007  080A               	movf	10,w
  4659     0008  00F2               	movwf	??_ISR+2
  4660     0009  120A  118A  2F7F   	ljmp	_ISR
  4661                           
  4662                           	psect	idloc
  4663                           
  4664                           ;Config register IDLOC0 @ 0x2000
  4665                           ;	unspecified, using default values
  4666     2000                     	org	8192
  4667     2000  3FFF               	dw	16383
  4668                           
  4669                           ;Config register IDLOC1 @ 0x2001
  4670                           ;	unspecified, using default values
  4671     2001                     	org	8193
  4672     2001  3FFF               	dw	16383
  4673                           
  4674                           ;Config register IDLOC2 @ 0x2002
  4675                           ;	unspecified, using default values
  4676     2002                     	org	8194
  4677     2002  3FFF               	dw	16383
  4678                           
  4679                           ;Config register IDLOC3 @ 0x2003
  4680                           ;	unspecified, using default values
  4681     2003                     	org	8195
  4682     2003  3FFF               	dw	16383
  4683                           
  4684                           	psect	config
  4685                           
  4686                           ;Config register CONFIG1 @ 0x2007
  4687                           ;	Oscillator Selection bits
  4688                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4689                           ;	Watchdog Timer Enable bit
  4690                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4691                           ;	Power-up Timer Enable bit
  4692                           ;	PWRTE = OFF, PWRT disabled
  4693                           ;	RE3/MCLR pin function select bit
  4694                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4695                           ;	Code Protection bit
  4696                           ;	CP = OFF, Program memory code protection is disabled
  4697                           ;	Data Code Protection bit
  4698                           ;	CPD = OFF, Data memory code protection is disabled
  4699                           ;	Brown Out Reset Selection bits
  4700                           ;	BOREN = OFF, BOR disabled
  4701                           ;	Internal External Switchover bit
  4702                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4703                           ;	Fail-Safe Clock Monitor Enabled bit
  4704                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4705                           ;	Low Voltage Programming Enable bit
  4706                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4707                           ;	In-Circuit Debugger Mode bit
  4708                           ;	DEBUG = 0x1, unprogramme  4709     2007                     	org	8199
  4710     2007  20D4               	dw	8404
  4711                           
  4712                           ;Config register CONFIG2 @ 0x2008
  4713                           ;	Brown-out Reset Selection bit
  4714                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4715                           ;	Flash Program Memory Self Write Enable bits
  4716                           ;	WRT = OFF, Write protection off
  4717     2008                     	org	8200
  4718     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    10
    Data        18
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     61      80
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@ADC1(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 10
		 -> main@ADC1(BANK0[9]), STR_1(CODE[4]), main@fecha(BANK0[10]), main@tiempo(BANK0[8]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String_4bits
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init_4bits
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    _leerRTC->_I2C_Master_Read
    ___awmod->___awdiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                41    41      0   11532
                                             20 BANK0     41    41      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                            _leerRTC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1777
                                              7 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     762
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              7 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _leerRTC                                              5     5      0    1352
                                              0 BANK0      5     5      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     751
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     245
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    2053
                                              8 COMMON     1     1      0
                                              4 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1668
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2     724
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              4 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1     836
                                              7 COMMON     2     1      1
                                              0 BANK0      4     4      0
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              4 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _leerRTC
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___bmul
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     3D      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      5B      12        0.0%
ABS                  0      0      5B       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 16 11:45:23 2023

                               _D 007A                                 pc 0002                    ___bmul@product 0075  
                              l32 0FF3                                l41 0FC9                                l50 0733  
                              l35 0FFF                                l51 0736                                l52 073B  
                              l44 0FDB                                l60 07FC                                l29 06A6  
                              l70 074F                                l38 0FD2                                l71 0755  
                              l47 0FE5                                l72 0756                                l73 075C  
                              l81 0FF2                                l90 04FD                                l75 075D  
                              l67 0745                                l68 0748                                l69 074E  
                              l93 06DB                                l78 07B5                                l87 05A4  
                              l99 0630                      ___awdiv@sign 0021                                fsr 0004  
                             l203 04A0                               l313 0367                               l343 07CA  
                             l353 0438                               l186 070D                               l470 03D0  
                             l483 0558                               l589 05EA                               l599 066C  
                             _GIE 005F                               u700 074C                               _ISR 077F  
                             u701 074B                               u710 0753                               u711 0752  
                             u720 075A                               u721 0759                               u690 0741  
                             u691 0740                               u845 06B4                               fsr0 0004  
                             indf 0000                      ___awmod@sign 0029                       leerRTC@DATO 0024  
                            ?_ISR 0070                              l2001 0363                              l2011 0477  
                            l2021 0505                              l2013 0486                              l2031 051B  
                            l2023 050A                              l1321 075A                              l1313 073D  
                            l2041 0537                              l2033 051E                              l2025 050C  
                            l2017 04FE                              l2009 043C                              l2121 02D4  
                            l1315 0741                              l1331 07A6                              l2051 0554  
                            l2043 053D                              l2035 0525                              l2027 0510  
                            l2019 0501                              l1411 04A7                              l1317 074C  
                            l1333 07A9                              l1501 0FE6                              l1421 06AE  
                            l2045 0544                              l2037 0529                              l2029 0515  
                            l1413 04B0                              l1405 07F1                              l2061 0061  
                            l1319 0753                              l1335 07B2                              l1327 079D  
                            l1511 0577                              l1503 055C                              l1431 06CA  
                            l1423 06B1                              l2039 052D                              l2047 054A  
                            l1415 04BF                              l1407 07FB                              l2071 0088  
                            l2063 006A                              l2055 0023                              l1329 07A0  
                            l1521 059C                              l1505 0561                              l1513 0580  
                            l1433 06D0                              l1425 06BF                              l2049 054F  
                            l1417 04C5                              l1409 04A1                              l2081 00F8  
                            l2073 008D                              l2065 006E                              l2057 0028  
                            l1515 0586                              l1507 056E                              l1435 06D3  
                            l1427 06C2                              l1419 06A8                              l1523 05EB  
                            l2091 0144                              l2083 0100                              l2075 009C  
                            l2067 0073                              l2059 003F                              l1517 0593  
                            l1509 0571                              l1437 06D8                              l1429 06C7  
                            l1525 05F0                              l2093 0287                              l2085 0109  
                            l2077 00B2                              l2069 007C                              l1519 0596  
                            l1527 060C                              l1631 0374                              l2095 0290  
                            l2087 011A                              l2079 00D5                              l1529 0614  
                            l1641 0385                              l1633 0376                              l1625 0368  
                            l1801 03F7                              l2089 013C                              l1651 039D  
                            l1643 038B                              l1635 037A                              l1627 036B  
                            l1811 042A                              l1803 0400                              l1653 03AE  
                            l1645 038E                              l1661 03C2                              l1637 037F  
                            l1629 036F                              l1805 0412                              l1813 0430  
                            l1821 0674                              l1901 0631                              l1663 03C7  
                            l1655 03B4                              l1647 0395                              l1639 0383  
                            l1831 0FCF                              l1807 0420                              l1823 06A3  
                            l1911 064B                              l1903 0639                              l1665 03CC  
                            l1657 03B5                              l1649 0399                              l1833 0FC1  
                            l1841 0FDC                              l1809 0421                              l1825 06A4  
                            l1817 066D                              l1913 0655                              l1905 063C  
                            l1659 03BC                              l1851 0724                              l1835 0FC6  
                            l1843 0FE1                              l1827 06A5                              l1819 0671  
                            l1931 06E7                              l1923 06DC                              l1915 065B  
                            l1907 0643                              l1853 0729                              l1845 070E  
                            l1829 0FCA                              l1837 0FD3                              l1861 07B7  
                            l1941 06F0                              l1933 06E8                              l1925 06E3  
                            l1917 0662                              l1909 0647                              l1791 0FF9  
                            l1855 072F                              l1847 0713                              l1839 0FD8  
                            l1871 07C9                              l1863 07B8                              l1951 070A  
                            l1943 06F1                              l1935 06E9                              l1927 06E5  
                            l1919 0668                              l1857 0737                              l1849 071B  
                            l1865 07BC                              l1793 03D1                              l1953 070B  
                            l1945 06FE                              l1937 06EC                              l1929 06E6  
                            l1881 05B2                              l1961 02B1                              l1867 07C0  
                            l1795 03E3                              l1955 070C                              l1947 0704  
                            l1939 06EF                              l1891 05D8                              l1883 05B9  
                            l1875 05A5                              l1971 02C2                              l1963 02B6  
                            l1789 0FF3                              l1869 07C2                              l1797 03E6  
                            l1949 0709                              l1893 05D9                              l1885 05BD  
                            l1877 05A9                              l1973 02DC                              l1965 02BB  
                            l1957 02A8                              l1799 03F3                              l1895 05E0  
                            l1887 05C1                              l1879 05AF                              l1991 0313  
                            l1983 02EA                              l1975 02E4                              l1967 02BD  
                            l1959 02AB                              l1889 05D2                              l1897 05E6  
                            l1993 0341                              l1977 02E8                              l1995 0346  
                            l1987 0306                              l1997 034A                              l1989 0310  
                            l1999 0353                              STR_1 0778                              STR_2 077C  
                            STR_3 077C                              STR_4 077C                              u1000 0561  
                            u1001 0560                              u1020 0586                              u1021 0585  
                            u1015 0567                              u1040 05FA                              u1050 061E  
                            u1210 03C2                              u1130 036F                              u1035 058C  
                            u1211 03C1                              u1131 036E                              u1060 0630  
                            u1220 03C7                              u1140 037A                              u1061 062F  
                            u1221 03C6                              u1205 03B6                              u1141 0379  
                            u1150 038B                              u1151 038A                              u1170 039D  
                            u1410 03F7                              u1171 039C                              u1411 03F6  
                            u1500 05AF                              _IOCB 0096                              u1165 038F  
                            u1405 03E8                              u1501 05AE                              u1190 03AE  
                            u1430 0412                              u1191 03AD                              u1431 0411  
                            u1520 05C1                              u1600 0655                              u1185 039E  
                            u1425 03F9                              u1521 05C0                              u1601 0654  
                            u1370 0FF9                              u1450 0430                              u1195 03AA  
                            u1371 0FF8                              u1451 042F                              u1435 040E  
                            u1515 05B3                              u1700 0510                              u1380 0FFF  
                            u1460 0684                              u1540 05D2                              u1620 0668  
                            u1701 050F                              u1381 0FFE                              u1445 0422  
                            u1541 05D1                              u1621 0667                              u1605 0651  
                            u1710 051B                              u1470 072F                              u1390 03E3  
                            u1630 02B1                              u1711 051A                              u1471 072E  
                            u1391 03E2                              u1535 05C2                              u1615 065C  
                            u1631 02B0                              u1480 07BC                              u1560 05E6  
                            u1640 0305                              u1481 07BB                              u1465 067F  
                            u1561 05E5                              u1545 05CE                              u1641 0304  
                            u1730 052D                              u1490 07C9                              u1570 0639  
                            u1650 0310                              u1731 052C                              u1491 07C8  
                            u1555 05DA                              u1571 0638                              u1651 030F  
                            u1740 0537                              u1660 0353                              u1741 0536  
                            u1725 051F                              u1661 0352                              u1645 0301  
                            u1590 064B                              u1670 0363                              u1591 064A  
                            u1671 0362                              u1807 0095                              u1760 054A  
                            u1761 0549                              u1745 0533                              u1817 04AB  
                            u1585 063D                              u1770 054F                              u1690 0505  
                            u1771 054E                              u1755 053E                              u1691 0504  
                            u1827 04BA                              u1780 0032                              u1685 0490  
                            u1837 04C9                              u1790 0047                              u1847 047F  
                            u1857 06C4                              u1867 06D5                              _PEIE 005E  
                            u1877 07AD  __end_of_I2C_Master_RepeatedStart 0FCA                              _main 0023  
          _Lcd_Write_String_4bits 05EB                              _modo 006F                              btemp 007E  
                            start 000C                 ___bmul@multiplier 0076                             ??_ISR 0070  
                ?_I2C_Master_Init 0028                  ?_I2C_Master_Read 0073                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                             ?_main 0070                 ??_Lcd_Clear_4bits 0077  
                 __end_of___awdiv 03D1                   __end_of___awmod 0559                             _ANSEL 0188  
                 __end_of___lldiv 0439                   ___awdiv@divisor 0073                   __end_of___lwdiv 05EB  
                           i1l171 0795                   __end_of___lwmod 066D                   ___awdiv@counter 0020  
                           _PORTA 0005                             _PORTB 0006                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           _SSPIE 0463                             _SSPIF 0063             __end_of_Lcd_Cmd_4bits 07B6  
                 __end_of_leerRTC 04A1                   __end_of_dpowers 0778                             _setup 06DC  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __end_of_sprintf 0368                   __initialization 000F                      __end_of_main 02A5  
                          ??_main 0034                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0073  
              ??_I2C_Master_Start 0073                ??_I2C_Master_Write 0075                  ___awdiv@dividend 0075  
                          ?_setup 0070                            _ANSELH 0189                            i1l1711 077F  
                          i1l1713 0783                            i1l1715 0789                            i1l1717 0793  
                          i1l1719 0794                            u132_20 0783                            u132_21 0782  
                          u133_20 0789                            u133_21 0788                            u134_20 0793  
                          u134_21 0792                            _SSPADD 0093                            _TRISC3 043B  
                          _TRISC4 043C                            _SSPCON 0014                            _SSPBUF 0013  
        Lcd_Write_Char_4bits@temp 0075          _I2C_Master_RepeatedStart 0FC1                            ___bmul 07B6  
                       ??___awdiv 0077                         ??___awmod 0078                         ??___lldiv 0073  
                       ??___lwdiv 0077                         ??___lwmod 0078                  ___awdiv@quotient 0022  
                 ___awmod@divisor 0024                   ___awmod@counter 0028                            main@AO 005B  
                       ??_leerRTC 0020                      ?_setupINTOSC 0070                            saved_w 007E  
                  _Lcd_Init_4bits 04A1                         ??_sprintf 002A           __end_of__initialization 001F  
             ___bmul@multiplicand 0073                    __pcstackCOMMON 0070                      __pidataBANK0 07DE  
           Lcd_Write_Char_4bits@a 0077             Lcd_Write_Char_4bits@y 0076                     __end_of_setup 070E  
                  _OPTION_REGbits 0081            __end_of_Lcd_Init_4bits 04FE           ?_Lcd_Write_String_4bits 0078  
                         ??_setup 0079                        __pbssBANK0 006F                    _Lcd_Port_4bits 073C  
                 _Lcd_Clear_4bits 0FE6                        __pmaintext 0023                           ?___bmul 0073  
                      __pintentry 0004      __end_of_Lcd_Write_Char_4bits 06DC                   Lcd_Port_4bits@a 0073  
                 ?_Lcd_Init_4bits 0070    __end_of_Lcd_Write_String_4bits 0631                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 075E            __end_of_Lcd_Port_4bits 075E  
                         ___awdiv 0368                           ___awmod 04FE                           ___lldiv 03D1  
                         ___lwdiv 05A5                           ___lwmod 0631                           __ptext1 02A5  
                         __ptext2 0631                           __ptext3 05A5                           __ptext4 06DC  
                         __ptext5 07F0                           __ptext6 04A1                           __ptext7 066D  
                         __ptext8 03D1                           __ptext9 0439                           _leerRTC 0439  
                         _dpowers 076E                  ___awmod@dividend 0026                           main@DIA 0059  
                         main@HOR 0058                           main@MES 005A                           main@MIN 0057  
                         main@SEG 0056      __end_of_Lcd_Set_Cursor_4bits 05A5                           _sprintf 02A5  
            end_of_initialization 001F        ??_I2C_Master_RepeatedStart 0073                   ?_Lcd_Port_4bits 0070  
         __end_of_Lcd_Clear_4bits 0FF3                   ___lldiv@divisor 0020                   ___lldiv@counter 0078  
                I2C_Master_Init@c 0028                  I2C_Master_Read@a 0073                         _PORTBbits 0006  
                       _PORTDbits 0008                        main@VAL1_C 0055                        main@VAL1_D 0054  
                      main@VAL1_U 0053                         _TRISCbits 0087                        main@tiempo 004B  
            _Lcd_Write_Char_4bits 06A7                    __end_of___bmul 07CB               start_initialization 000F  
                     __end_of_ISR 079C                     _Lcd_Cmd_4bits 079C             Lcd_Set_Cursor_4bits@a 0020  
           Lcd_Set_Cursor_4bits@b 0077             Lcd_Set_Cursor_4bits@y 0022             Lcd_Set_Cursor_4bits@z 0021  
                ?_Lcd_Clear_4bits 0070                 ??_I2C_Master_Init 002C                 ??_I2C_Master_Read 0075  
               ??_I2C_Master_Wait 0073                 ??_I2C_Master_Stop 0073             ?_Lcd_Write_Char_4bits 0070  
                        ??___bmul 0074          Lcd_Set_Cursor_4bits@temp 0023                        init_fetch0 07CB  
            _Lcd_Set_Cursor_4bits 0559                       __pdataBANK0 005D                  ??_Lcd_Init_4bits 0077  
                     __pbssCOMMON 007A                         ___latbits 0002                     __pcstackBANK0 0020  
                  ?_Lcd_Cmd_4bits 0070                       sprintf@flag 002D                       sprintf@prec 0031  
                _I2C_Master_Start 0FCA                  _I2C_Master_Write 0FDC                  ___lwdiv@dividend 0075  
           ?_Lcd_Set_Cursor_4bits 0077                          ?___awdiv 0073                          ?___awmod 0024  
                        ?___lldiv 0020                          ?___lwdiv 0073                          ?___lwmod 0023  
                       __pstrings 075E                          ?_leerRTC 0070                  ??_Lcd_Port_4bits 0073  
                ___lwdiv@quotient 0021                          ?_sprintf 0027                 interrupt_function 0004  
          ??_Lcd_Write_Char_4bits 0074                         main@F1416 0067                         main@F1418 005D  
                     __stringbase 076D                     ??_setupINTOSC 0073                         main@fecha 0041  
                 ??_Lcd_Cmd_4bits 0074                          _WPUBbits 0095               I2C_Master_Read@temp 0077  
         Lcd_Write_String_4bits@a 0078           Lcd_Write_String_4bits@i 0023            ??_Lcd_Set_Cursor_4bits 0078  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 076E          ??_Lcd_Write_String_4bits 0020  
                  Lcd_Cmd_4bits@a 0076                        sprintf@val 002F                   _I2C_Master_Init 066D  
                 _I2C_Master_Read 070E                   _I2C_Master_Wait 0FF3                   _I2C_Master_Stop 0FD3  
                 ___lwdiv@divisor 0073                   ___lwdiv@counter 0020                          __ptext10 07B6  
                        __ptext11 0FDC                          __ptext20 06A7                          __ptext12 0FD3  
                        __ptext21 0559                          __ptext13 0FCA                          __ptext22 0FE6  
                        __ptext14 0FC1                          __ptext23 079C                          __ptext15 070E  
                        __ptext24 073C                          __ptext16 0FF3                          __ptext25 077F  
                        __ptext17 04FE                          __ptext18 0368                          __ptext19 05EB  
             __end_of_setupINTOSC 07FD                          main@ADC1 0038                          main@VAL1 005C  
                        leerRTC@R 0023          __end_of_I2C_Master_Start 0FD3          __end_of_I2C_Master_Write 0FE6  
                      _INTCONbits 000B                          init_ram0 07CF                          intlevel1 0000  
                       sprintf@ap 002E                         sprintf@sp 0032                  ___lwmod@dividend 0025  
                ___lldiv@dividend 0024                         stringcode 0768                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 06A7           __end_of_I2C_Master_Read 073C           __end_of_I2C_Master_Wait 1000  
         __end_of_I2C_Master_Stop 0FDC                       _setupINTOSC 07F0                          sprintf@c 0033  
                        sprintf@f 0027                      setupINTOSC@F 0074                  ___lldiv@quotient 0074  
               I2C_Master_Write@d 0073                   ___lwmod@divisor 0023                   ___lwmod@counter 0079  
                        stringdir 0768                          stringtab 075E                       _SSPCON2bits 0091  
