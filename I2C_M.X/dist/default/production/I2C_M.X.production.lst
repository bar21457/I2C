

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 15 16:51:15 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text21,local,class=CODE,merge=1,delta=2
    30                           	psect	text22,local,class=CODE,merge=1,delta=2
    31                           	psect	text23,local,class=CODE,merge=1,delta=2
    32                           	psect	text24,local,class=CODE,merge=1,delta=2
    33                           	psect	text25,local,class=CODE,merge=1,delta=2
    34                           	psect	text26,local,class=CODE,merge=1,delta=2
    35                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    36                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    37                           	dabs	1,0x7E,2
    38     0000                     
    39                           ; Version 2.40
    40                           ; Generated 17/11/2021 GMT
    41                           ; 
    42                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    43                           ; All rights reserved.
    44                           ; 
    45                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    46                           ; 
    47                           ; Redistribution and use in source and binary forms, with or without modification, are
    48                           ; permitted provided that the following conditions are met:
    49                           ; 
    50                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    51                           ;        conditions and the following disclaimer.
    52                           ; 
    53                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    54                           ;        of conditions and the following disclaimer in the documentation and/or other
    55                           ;        materials provided with the distribution. Publication is not required when
    56                           ;        this file is used in an embedded application.
    57                           ; 
    58                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    59                           ;        software without specific prior written permission.
    60                           ; 
    61                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    62                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    63                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    64                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    65                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    66                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    67                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    68                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    69                           ; 
    70                           ; 
    71                           ; Code-generator required, PIC16F887 Definitions
    72                           ; 
    73                           ; SFR Addresses
    74     0000                     	;# 
    75     0001                     	;# 
    76     0002                     	;# 
    77     0003                     	;# 
    78     0004                     	;# 
    79     0005                     	;# 
    80     0006                     	;# 
    81     0007                     	;# 
    82     0008                     	;# 
    83     0009                     	;# 
    84     000A                     	;# 
    85     000B                     	;# 
    86     000C                     	;# 
    87     000D                     	;# 
    88     000E                     	;# 
    89     000E                     	;# 
    90     000F                     	;# 
    91     0010                     	;# 
    92     0011                     	;# 
    93     0012                     	;# 
    94     0013                     	;# 
    95     0014                     	;# 
    96     0015                     	;# 
    97     0015                     	;# 
    98     0016                     	;# 
    99     0017                     	;# 
   100     0018                     	;# 
   101     0019                     	;# 
   102     001A                     	;# 
   103     001B                     	;# 
   104     001B                     	;# 
   105     001C                     	;# 
   106     001D                     	;# 
   107     001E                     	;# 
   108     001F                     	;# 
   109     0081                     	;# 
   110     0085                     	;# 
   111     0086                     	;# 
   112     0087                     	;# 
   113     0088                     	;# 
   114     0089                     	;# 
   115     008C                     	;# 
   116     008D                     	;# 
   117     008E                     	;# 
   118     008F                     	;# 
   119     0090                     	;# 
   120     0091                     	;# 
   121     0092                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0093                     	;# 
   125     0094                     	;# 
   126     0095                     	;# 
   127     0096                     	;# 
   128     0097                     	;# 
   129     0098                     	;# 
   130     0099                     	;# 
   131     009A                     	;# 
   132     009B                     	;# 
   133     009C                     	;# 
   134     009D                     	;# 
   135     009E                     	;# 
   136     009F                     	;# 
   137     0105                     	;# 
   138     0107                     	;# 
   139     0108                     	;# 
   140     0109                     	;# 
   141     010C                     	;# 
   142     010C                     	;# 
   143     010D                     	;# 
   144     010E                     	;# 
   145     010F                     	;# 
   146     0185                     	;# 
   147     0187                     	;# 
   148     0188                     	;# 
   149     0189                     	;# 
   150     018C                     	;# 
   151     018D                     	;# 
   152     0000                     	;# 
   153     0001                     	;# 
   154     0002                     	;# 
   155     0003                     	;# 
   156     0004                     	;# 
   157     0005                     	;# 
   158     0006                     	;# 
   159     0007                     	;# 
   160     0008                     	;# 
   161     0009                     	;# 
   162     000A                     	;# 
   163     000B                     	;# 
   164     000C                     	;# 
   165     000D                     	;# 
   166     000E                     	;# 
   167     000E                     	;# 
   168     000F                     	;# 
   169     0010                     	;# 
   170     0011                     	;# 
   171     0012                     	;# 
   172     0013                     	;# 
   173     0014                     	;# 
   174     0015                     	;# 
   175     0015                     	;# 
   176     0016                     	;# 
   177     0017                     	;# 
   178     0018                     	;# 
   179     0019                     	;# 
   180     001A                     	;# 
   181     001B                     	;# 
   182     001B                     	;# 
   183     001C                     	;# 
   184     001D                     	;# 
   185     001E                     	;# 
   186     001F                     	;# 
   187     0081                     	;# 
   188     0085                     	;# 
   189     0086                     	;# 
   190     0087                     	;# 
   191     0088                     	;# 
   192     0089                     	;# 
   193     008C                     	;# 
   194     008D                     	;# 
   195     008E                     	;# 
   196     008F                     	;# 
   197     0090                     	;# 
   198     0091                     	;# 
   199     0092                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0093                     	;# 
   203     0094                     	;# 
   204     0095                     	;# 
   205     0096                     	;# 
   206     0097                     	;# 
   207     0098                     	;# 
   208     0099                     	;# 
   209     009A                     	;# 
   210     009B                     	;# 
   211     009C                     	;# 
   212     009D                     	;# 
   213     009E                     	;# 
   214     009F                     	;# 
   215     0105                     	;# 
   216     0107                     	;# 
   217     0108                     	;# 
   218     0109                     	;# 
   219     010C                     	;# 
   220     010C                     	;# 
   221     010D                     	;# 
   222     010E                     	;# 
   223     010F                     	;# 
   224     0185                     	;# 
   225     0187                     	;# 
   226     0188                     	;# 
   227     0189                     	;# 
   228     018C                     	;# 
   229     018D                     	;# 
   230     0000                     	;# 
   231     0001                     	;# 
   232     0002                     	;# 
   233     0003                     	;# 
   234     0004                     	;# 
   235     0005                     	;# 
   236     0006                     	;# 
   237     0007                     	;# 
   238     0008                     	;# 
   239     0009                     	;# 
   240     000A                     	;# 
   241     000B                     	;# 
   242     000C                     	;# 
   243     000D                     	;# 
   244     000E                     	;# 
   245     000E                     	;# 
   246     000F                     	;# 
   247     0010                     	;# 
   248     0011                     	;# 
   249     0012                     	;# 
   250     0013                     	;# 
   251     0014                     	;# 
   252     0015                     	;# 
   253     0015                     	;# 
   254     0016                     	;# 
   255     0017                     	;# 
   256     0018                     	;# 
   257     0019                     	;# 
   258     001A                     	;# 
   259     001B                     	;# 
   260     001B                     	;# 
   261     001C                     	;# 
   262     001D                     	;# 
   263     001E                     	;# 
   264     001F                     	;# 
   265     0081                     	;# 
   266     0085                     	;# 
   267     0086                     	;# 
   268     0087                     	;# 
   269     0088                     	;# 
   270     0089                     	;# 
   271     008C                     	;# 
   272     008D                     	;# 
   273     008E                     	;# 
   274     008F                     	;# 
   275     0090                     	;# 
   276     0091                     	;# 
   277     0092                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0093                     	;# 
   281     0094                     	;# 
   282     0095                     	;# 
   283     0096                     	;# 
   284     0097                     	;# 
   285     0098                     	;# 
   286     0099                     	;# 
   287     009A                     	;# 
   288     009B                     	;# 
   289     009C                     	;# 
   290     009D                     	;# 
   291     009E                     	;# 
   292     009F                     	;# 
   293     0105                     	;# 
   294     0107                     	;# 
   295     0108                     	;# 
   296     0109                     	;# 
   297     010C                     	;# 
   298     010C                     	;# 
   299     010D                     	;# 
   300     010E                     	;# 
   301     010F                     	;# 
   302     0185                     	;# 
   303     0187                     	;# 
   304     0188                     	;# 
   305     0189                     	;# 
   306     018C                     	;# 
   307     018D                     	;# 
   308     0000                     	;# 
   309     0001                     	;# 
   310     0002                     	;# 
   311     0003                     	;# 
   312     0004                     	;# 
   313     0005                     	;# 
   314     0006                     	;# 
   315     0007                     	;# 
   316     0008                     	;# 
   317     0009                     	;# 
   318     000A                     	;# 
   319     000B                     	;# 
   320     000C                     	;# 
   321     000D                     	;# 
   322     000E                     	;# 
   323     000E                     	;# 
   324     000F                     	;# 
   325     0010                     	;# 
   326     0011                     	;# 
   327     0012                     	;# 
   328     0013                     	;# 
   329     0014                     	;# 
   330     0015                     	;# 
   331     0015                     	;# 
   332     0016                     	;# 
   333     0017                     	;# 
   334     0018                     	;# 
   335     0019                     	;# 
   336     001A                     	;# 
   337     001B                     	;# 
   338     001B                     	;# 
   339     001C                     	;# 
   340     001D                     	;# 
   341     001E                     	;# 
   342     001F                     	;# 
   343     0081                     	;# 
   344     0085                     	;# 
   345     0086                     	;# 
   346     0087                     	;# 
   347     0088                     	;# 
   348     0089                     	;# 
   349     008C                     	;# 
   350     008D                     	;# 
   351     008E                     	;# 
   352     008F                     	;# 
   353     0090                     	;# 
   354     0091                     	;# 
   355     0092                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0093                     	;# 
   359     0094                     	;# 
   360     0095                     	;# 
   361     0096                     	;# 
   362     0097                     	;# 
   363     0098                     	;# 
   364     0099                     	;# 
   365     009A                     	;# 
   366     009B                     	;# 
   367     009C                     	;# 
   368     009D                     	;# 
   369     009E                     	;# 
   370     009F                     	;# 
   371     0105                     	;# 
   372     0107                     	;# 
   373     0108                     	;# 
   374     0109                     	;# 
   375     010C                     	;# 
   376     010C                     	;# 
   377     010D                     	;# 
   378     010E                     	;# 
   379     010F                     	;# 
   380     0185                     	;# 
   381     0187                     	;# 
   382     0188                     	;# 
   383     0189                     	;# 
   384     018C                     	;# 
   385     018D                     	;# 
   386     0000                     	;# 
   387     0001                     	;# 
   388     0002                     	;# 
   389     0003                     	;# 
   390     0004                     	;# 
   391     0005                     	;# 
   392     0006                     	;# 
   393     0007                     	;# 
   394     0008                     	;# 
   395     0009                     	;# 
   396     000A                     	;# 
   397     000B                     	;# 
   398     000C                     	;# 
   399     000D                     	;# 
   400     000E                     	;# 
   401     000E                     	;# 
   402     000F                     	;# 
   403     0010                     	;# 
   404     0011                     	;# 
   405     0012                     	;# 
   406     0013                     	;# 
   407     0014                     	;# 
   408     0015                     	;# 
   409     0015                     	;# 
   410     0016                     	;# 
   411     0017                     	;# 
   412     0018                     	;# 
   413     0019                     	;# 
   414     001A                     	;# 
   415     001B                     	;# 
   416     001B                     	;# 
   417     001C                     	;# 
   418     001D                     	;# 
   419     001E                     	;# 
   420     001F                     	;# 
   421     0081                     	;# 
   422     0085                     	;# 
   423     0086                     	;# 
   424     0087                     	;# 
   425     0088                     	;# 
   426     0089                     	;# 
   427     008C                     	;# 
   428     008D                     	;# 
   429     008E                     	;# 
   430     008F                     	;# 
   431     0090                     	;# 
   432     0091                     	;# 
   433     0092                     	;# 
   434     0093                     	;# 
   435     0093                     	;# 
   436     0093                     	;# 
   437     0094                     	;# 
   438     0095                     	;# 
   439     0096                     	;# 
   440     0097                     	;# 
   441     0098                     	;# 
   442     0099                     	;# 
   443     009A                     	;# 
   444     009B                     	;# 
   445     009C                     	;# 
   446     009D                     	;# 
   447     009E                     	;# 
   448     009F                     	;# 
   449     0105                     	;# 
   450     0107                     	;# 
   451     0108                     	;# 
   452     0109                     	;# 
   453     010C                     	;# 
   454     010C                     	;# 
   455     010D                     	;# 
   456     010E                     	;# 
   457     010F                     	;# 
   458     0185                     	;# 
   459     0187                     	;# 
   460     0188                     	;# 
   461     0189                     	;# 
   462     018C                     	;# 
   463     018D                     	;# 
   464     0000                     	;# 
   465     0001                     	;# 
   466     0002                     	;# 
   467     0003                     	;# 
   468     0004                     	;# 
   469     0005                     	;# 
   470     0006                     	;# 
   471     0007                     	;# 
   472     0008                     	;# 
   473     0009                     	;# 
   474     000A                     	;# 
   475     000B                     	;# 
   476     000C                     	;# 
   477     000D                     	;# 
   478     000E                     	;# 
   479     000E                     	;# 
   480     000F                     	;# 
   481     0010                     	;# 
   482     0011                     	;# 
   483     0012                     	;# 
   484     0013                     	;# 
   485     0014                     	;# 
   486     0015                     	;# 
   487     0015                     	;# 
   488     0016                     	;# 
   489     0017                     	;# 
   490     0018                     	;# 
   491     0019                     	;# 
   492     001A                     	;# 
   493     001B                     	;# 
   494     001B                     	;# 
   495     001C                     	;# 
   496     001D                     	;# 
   497     001E                     	;# 
   498     001F                     	;# 
   499     0081                     	;# 
   500     0085                     	;# 
   501     0086                     	;# 
   502     0087                     	;# 
   503     0088                     	;# 
   504     0089                     	;# 
   505     008C                     	;# 
   506     008D                     	;# 
   507     008E                     	;# 
   508     008F                     	;# 
   509     0090                     	;# 
   510     0091                     	;# 
   511     0092                     	;# 
   512     0093                     	;# 
   513     0093                     	;# 
   514     0093                     	;# 
   515     0094                     	;# 
   516     0095                     	;# 
   517     0096                     	;# 
   518     0097                     	;# 
   519     0098                     	;# 
   520     0099                     	;# 
   521     009A                     	;# 
   522     009B                     	;# 
   523     009C                     	;# 
   524     009D                     	;# 
   525     009E                     	;# 
   526     009F                     	;# 
   527     0105                     	;# 
   528     0107                     	;# 
   529     0108                     	;# 
   530     0109                     	;# 
   531     010C                     	;# 
   532     010C                     	;# 
   533     010D                     	;# 
   534     010E                     	;# 
   535     010F                     	;# 
   536     0185                     	;# 
   537     0187                     	;# 
   538     0188                     	;# 
   539     0189                     	;# 
   540     018C                     	;# 
   541     018D                     	;# 
   542                           
   543                           	psect	strings
   544     0003                     __pstrings:
   545     0003                     stringtab:
   546     0003                     __stringtab:
   547                           
   548                           ;	String table - string pointers are 1 byte each
   549     0003  1BFF               	btfsc	btemp+1,7
   550     0004  280D               	ljmp	stringcode
   551     0005  1383               	bcf	3,7
   552     0006  187F               	btfsc	btemp+1,0
   553     0007  1783               	bsf	3,7
   554     0008  0800               	movf	0,w
   555     0009  0A84               	incf	4,f
   556     000A  1903               	skipnz
   557     000B  0AFF               	incf	btemp+1,f
   558     000C  0008               	return
   559     000D                     stringcode:
   560     000D                     stringdir:
   561     000D  3000               	movlw	high stringdir
   562     000E  008A               	movwf	10
   563     000F  0804               	movf	4,w
   564     0010  0A84               	incf	4,f
   565     0011  0782               	addwf	2,f
   566     0012                     __stringbase:
   567     0012  3400               	retlw	0
   568     0013                     __end_of__stringtab:
   569     0013                     _dpowers:
   570     0013  3401               	retlw	1
   571     0014  3400               	retlw	0
   572     0015  340A               	retlw	10
   573     0016  3400               	retlw	0
   574     0017  3464               	retlw	100
   575     0018  3400               	retlw	0
   576     0019  34E8               	retlw	232
   577     001A  3403               	retlw	3
   578     001B  3410               	retlw	16
   579     001C  3427               	retlw	39
   580     001D                     __end_of_dpowers:
   581     0008                     _PORTD	set	8
   582     0006                     _PORTB	set	6
   583     0008                     _PORTDbits	set	8
   584     0013                     _SSPBUF	set	19
   585     0014                     _SSPCON	set	20
   586     0063                     _SSPIF	set	99
   587     005E                     _PEIE	set	94
   588     005F                     _GIE	set	95
   589     0088                     _TRISD	set	136
   590     0086                     _TRISB	set	134
   591     008F                     _OSCCONbits	set	143
   592     0091                     _SSPCON2bits	set	145
   593     0087                     _TRISCbits	set	135
   594     0094                     _SSPSTAT	set	148
   595     0093                     _SSPADD	set	147
   596     0091                     _SSPCON2	set	145
   597     0463                     _SSPIE	set	1123
   598     043C                     _TRISC4	set	1084
   599     043B                     _TRISC3	set	1083
   600     0189                     _ANSELH	set	393
   601     0188                     _ANSEL	set	392
   602     001D                     STR_1:
   603     001D  3453               	retlw	83	;'S'
   604     001E  3431               	retlw	49	;'1'
   605     001F  343A               	retlw	58	;':'
   606     0020  3400               	retlw	0
   607     0021                     STR_4:
   608     0021  3425               	retlw	37	;'%'
   609     0022  3475               	retlw	117	;'u'
   610     0023  3400               	retlw	0
   611     001F                     
   612                           	psect	cinit
   613     07FC                     start_initialization:	
   614                           ; #config settings
   615                           
   616     07FC                     __initialization:
   617     07FC                     end_of_initialization:	
   618                           ;End of C runtime variable initialization code
   619                           
   620     07FC                     __end_of__initialization:
   621     07FC  0183               	clrf	3
   622     07FD  120A  118A  2D61   	ljmp	_main	;jump to C main() function
   623                           
   624                           	psect	cstackCOMMON
   625     0070                     __pcstackCOMMON:
   626     0070                     ?_setup:
   627     0070                     ?_leerSEG:	
   628                           ; 1 bytes @ 0x0
   629                           
   630     0070                     ?_leerMIN:	
   631                           ; 1 bytes @ 0x0
   632                           
   633     0070                     ?_leerHOR:	
   634                           ; 1 bytes @ 0x0
   635                           
   636     0070                     ?_I2C_Master_Wait:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ??_I2C_Master_Wait:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ?_I2C_Master_Start:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ??_I2C_Master_Start:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ?_I2C_Master_RepeatedStart:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ??_I2C_Master_RepeatedStart:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ?_I2C_Master_Stop:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ??_I2C_Master_Stop:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ?_I2C_Master_Write:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_setupINTOSC:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ??_setupINTOSC:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ?_Lcd_Port_4bits:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ??_Lcd_Port_4bits:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ?_Lcd_Cmd_4bits:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?_Lcd_Clear_4bits:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_Lcd_Init_4bits:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ?_Lcd_Write_Char_4bits:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?_main:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ?___bmul:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?_I2C_Master_Read:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ?___awdiv:	
   697                           ; 2 bytes @ 0x0
   698                           
   699     0070                     ?___lwdiv:	
   700                           ; 2 bytes @ 0x0
   701                           
   702     0070                     ?___lldiv:	
   703                           ; 2 bytes @ 0x0
   704                           
   705     0070                     Lcd_Port_4bits@a:	
   706                           ; 4 bytes @ 0x0
   707                           
   708     0070                     ___bmul@multiplicand:	
   709                           ; 1 bytes @ 0x0
   710                           
   711     0070                     I2C_Master_Write@d:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0070                     I2C_Master_Read@a:	
   715                           ; 2 bytes @ 0x0
   716                           
   717     0070                     ___awdiv@divisor:	
   718                           ; 2 bytes @ 0x0
   719                           
   720     0070                     ___lwdiv@divisor:	
   721                           ; 2 bytes @ 0x0
   722                           
   723     0070                     ___lldiv@divisor:	
   724                           ; 2 bytes @ 0x0
   725                           
   726                           
   727                           ; 4 bytes @ 0x0
   728     0070                     	ds	1
   729     0071                     ??_Lcd_Cmd_4bits:
   730     0071                     ??_Lcd_Write_Char_4bits:	
   731                           ; 1 bytes @ 0x1
   732                           
   733     0071                     ??___bmul:	
   734                           ; 1 bytes @ 0x1
   735                           
   736     0071                     setupINTOSC@F:	
   737                           ; 1 bytes @ 0x1
   738                           
   739                           
   740                           ; 1 bytes @ 0x1
   741     0071                     	ds	1
   742     0072                     ??_I2C_Master_Write:
   743     0072                     ??_I2C_Master_Read:	
   744                           ; 1 bytes @ 0x2
   745                           
   746     0072                     Lcd_Write_Char_4bits@temp:	
   747                           ; 1 bytes @ 0x2
   748                           
   749     0072                     ___bmul@product:	
   750                           ; 1 bytes @ 0x2
   751                           
   752     0072                     ___awdiv@dividend:	
   753                           ; 1 bytes @ 0x2
   754                           
   755     0072                     ___lwdiv@dividend:	
   756                           ; 2 bytes @ 0x2
   757                           
   758                           
   759                           ; 2 bytes @ 0x2
   760     0072                     	ds	1
   761     0073                     Lcd_Cmd_4bits@a:
   762     0073                     Lcd_Write_Char_4bits@y:	
   763                           ; 1 bytes @ 0x3
   764                           
   765     0073                     ___bmul@multiplier:	
   766                           ; 1 bytes @ 0x3
   767                           
   768                           
   769                           ; 1 bytes @ 0x3
   770     0073                     	ds	1
   771     0074                     ??_Lcd_Clear_4bits:
   772     0074                     ?_Lcd_Set_Cursor_4bits:	
   773                           ; 1 bytes @ 0x4
   774                           
   775     0074                     ??_Lcd_Init_4bits:	
   776                           ; 1 bytes @ 0x4
   777                           
   778     0074                     ??___awdiv:	
   779                           ; 1 bytes @ 0x4
   780                           
   781     0074                     ??___lwdiv:	
   782                           ; 1 bytes @ 0x4
   783                           
   784     0074                     Lcd_Set_Cursor_4bits@b:	
   785                           ; 1 bytes @ 0x4
   786                           
   787     0074                     Lcd_Write_Char_4bits@a:	
   788                           ; 1 bytes @ 0x4
   789                           
   790     0074                     I2C_Master_Read@temp:	
   791                           ; 1 bytes @ 0x4
   792                           
   793     0074                     ___lldiv@dividend:	
   794                           ; 2 bytes @ 0x4
   795                           
   796                           
   797                           ; 4 bytes @ 0x4
   798     0074                     	ds	1
   799     0075                     ??_Lcd_Set_Cursor_4bits:
   800     0075                     ?_Lcd_Write_String_4bits:	
   801                           ; 1 bytes @ 0x5
   802                           
   803     0075                     ___awdiv@counter:	
   804                           ; 1 bytes @ 0x5
   805                           
   806     0075                     Lcd_Write_String_4bits@a:	
   807                           ; 1 bytes @ 0x5
   808                           
   809     0075                     ___lwdiv@quotient:	
   810                           ; 2 bytes @ 0x5
   811                           
   812                           
   813                           ; 2 bytes @ 0x5
   814     0075                     	ds	1
   815     0076                     ??_leerSEG:
   816     0076                     ??_leerMIN:	
   817                           ; 1 bytes @ 0x6
   818                           
   819     0076                     ??_leerHOR:	
   820                           ; 1 bytes @ 0x6
   821                           
   822     0076                     Lcd_Set_Cursor_4bits@a:	
   823                           ; 1 bytes @ 0x6
   824                           
   825     0076                     ___awdiv@sign:	
   826                           ; 1 bytes @ 0x6
   827                           
   828                           
   829                           ; 1 bytes @ 0x6
   830     0076                     	ds	1
   831     0077                     ??_Lcd_Write_String_4bits:
   832     0077                     Lcd_Set_Cursor_4bits@z:	
   833                           ; 1 bytes @ 0x7
   834                           
   835     0077                     ___lwdiv@counter:	
   836                           ; 1 bytes @ 0x7
   837                           
   838     0077                     ___awdiv@quotient:	
   839                           ; 1 bytes @ 0x7
   840                           
   841                           
   842                           ; 2 bytes @ 0x7
   843     0077                     	ds	1
   844     0078                     ??___lldiv:
   845     0078                     ?___lwmod:	
   846                           ; 1 bytes @ 0x8
   847                           
   848     0078                     Lcd_Set_Cursor_4bits@y:	
   849                           ; 2 bytes @ 0x8
   850                           
   851     0078                     ___lwmod@divisor:	
   852                           ; 1 bytes @ 0x8
   853                           
   854                           
   855                           ; 2 bytes @ 0x8
   856     0078                     	ds	1
   857     0079                     ?___awmod:
   858     0079                     Lcd_Set_Cursor_4bits@temp:	
   859                           ; 2 bytes @ 0x9
   860                           
   861     0079                     leerSEG@SEG:	
   862                           ; 1 bytes @ 0x9
   863                           
   864     0079                     leerMIN@MIN:	
   865                           ; 1 bytes @ 0x9
   866                           
   867     0079                     leerHOR@HOR:	
   868                           ; 1 bytes @ 0x9
   869                           
   870     0079                     ___awmod@divisor:	
   871                           ; 1 bytes @ 0x9
   872                           
   873     0079                     ___lldiv@quotient:	
   874                           ; 2 bytes @ 0x9
   875                           
   876                           
   877                           ; 4 bytes @ 0x9
   878     0079                     	ds	1
   879     007A                     Lcd_Write_String_4bits@i:
   880     007A                     ___lwmod@dividend:	
   881                           ; 2 bytes @ 0xA
   882                           
   883                           
   884                           ; 2 bytes @ 0xA
   885     007A                     	ds	1
   886     007B                     ___awmod@dividend:
   887                           
   888                           ; 2 bytes @ 0xB
   889     007B                     	ds	1
   890     007C                     ??___lwmod:
   891                           
   892                           ; 1 bytes @ 0xC
   893     007C                     	ds	1
   894     007D                     ??___awmod:
   895     007D                     ___lldiv@counter:	
   896                           ; 1 bytes @ 0xD
   897                           
   898     007D                     ___lwmod@counter:	
   899                           ; 1 bytes @ 0xD
   900                           
   901                           
   902                           ; 1 bytes @ 0xD
   903     007D                     	ds	1
   904     007E                     ??_setup:
   905                           
   906                           	psect	cstackBANK0
   907     0020                     __pcstackBANK0:	
   908                           ; 1 bytes @ 0xE
   909                           
   910     0020                     ?_I2C_Master_Init:
   911     0020                     ?_sprintf:	
   912                           ; 1 bytes @ 0x0
   913                           
   914     0020                     sprintf@f:	
   915                           ; 2 bytes @ 0x0
   916                           
   917     0020                     ___awmod@counter:	
   918                           ; 1 bytes @ 0x0
   919                           
   920     0020                     I2C_Master_Init@c:	
   921                           ; 1 bytes @ 0x0
   922                           
   923                           
   924                           ; 4 bytes @ 0x0
   925     0020                     	ds	1
   926     0021                     ___awmod@sign:
   927                           
   928                           ; 1 bytes @ 0x1
   929     0021                     	ds	2
   930     0023                     ??_sprintf:
   931                           
   932                           ; 1 bytes @ 0x3
   933     0023                     	ds	1
   934     0024                     ??_I2C_Master_Init:
   935                           
   936                           ; 1 bytes @ 0x4
   937     0024                     	ds	2
   938     0026                     sprintf@flag:
   939                           
   940                           ; 1 bytes @ 0x6
   941     0026                     	ds	1
   942     0027                     sprintf@ap:
   943                           
   944                           ; 1 bytes @ 0x7
   945     0027                     	ds	1
   946     0028                     sprintf@val:
   947                           
   948                           ; 2 bytes @ 0x8
   949     0028                     	ds	2
   950     002A                     sprintf@prec:
   951                           
   952                           ; 1 bytes @ 0xA
   953     002A                     	ds	1
   954     002B                     sprintf@sp:
   955                           
   956                           ; 1 bytes @ 0xB
   957     002B                     	ds	1
   958     002C                     sprintf@c:
   959                           
   960                           ; 1 bytes @ 0xC
   961     002C                     	ds	1
   962     002D                     ??_main:
   963                           
   964                           ; 1 bytes @ 0xD
   965     002D                     	ds	3
   966     0030                     main@stringSEG:
   967                           
   968                           ; 9 bytes @ 0x10
   969     0030                     	ds	9
   970     0039                     main@stringMIN:
   971                           
   972                           ; 9 bytes @ 0x19
   973     0039                     	ds	9
   974     0042                     main@stringHOR:
   975                           
   976                           ; 9 bytes @ 0x22
   977     0042                     	ds	9
   978     004B                     main@ADC1:
   979                           
   980                           ; 9 bytes @ 0x2B
   981     004B                     	ds	9
   982     0054                     main@VAL1_U:
   983                           
   984                           ; 1 bytes @ 0x34
   985     0054                     	ds	1
   986     0055                     main@VAL1_D:
   987                           
   988                           ; 1 bytes @ 0x35
   989     0055                     	ds	1
   990     0056                     main@VAL1_C:
   991                           
   992                           ; 1 bytes @ 0x36
   993     0056                     	ds	1
   994     0057                     main@SEG_U:
   995                           
   996                           ; 1 bytes @ 0x37
   997     0057                     	ds	1
   998     0058                     main@SEG_D:
   999                           
  1000                           ; 1 bytes @ 0x38
  1001     0058                     	ds	1
  1002     0059                     main@MIN_U:
  1003                           
  1004                           ; 1 bytes @ 0x39
  1005     0059                     	ds	1
  1006     005A                     main@MIN_D:
  1007                           
  1008                           ; 1 bytes @ 0x3A
  1009     005A                     	ds	1
  1010     005B                     main@HOR_U:
  1011                           
  1012                           ; 1 bytes @ 0x3B
  1013     005B                     	ds	1
  1014     005C                     main@HOR_D:
  1015                           
  1016                           ; 1 bytes @ 0x3C
  1017     005C                     	ds	1
  1018     005D                     main@SEG:
  1019                           
  1020                           ; 1 bytes @ 0x3D
  1021     005D                     	ds	1
  1022     005E                     main@MIN:
  1023                           
  1024                           ; 1 bytes @ 0x3E
  1025     005E                     	ds	1
  1026     005F                     main@HOR:
  1027                           
  1028                           ; 1 bytes @ 0x3F
  1029     005F                     	ds	1
  1030     0060                     main@VAL1:
  1031                           
  1032                           ; 1 bytes @ 0x40
  1033     0060                     	ds	1
  1034                           
  1035                           	psect	maintext
  1036     0561                     __pmaintext:	
  1037 ;;
  1038 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1039 ;;
  1040 ;; *************** function _main *****************
  1041 ;; Defined at:
  1042 ;;		line 61 in file "main_M.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;		None
  1045 ;; Auto vars:     Size  Location     Type
  1046 ;;  ADC1            9   43[BANK0 ] unsigned char [9]
  1047 ;;  stringHOR       9   34[BANK0 ] unsigned char [9]
  1048 ;;  stringMIN       9   25[BANK0 ] unsigned char [9]
  1049 ;;  stringSEG       9   16[BANK0 ] unsigned char [9]
  1050 ;;  VAL1            1   64[BANK0 ] unsigned char 
  1051 ;;  HOR             1   63[BANK0 ] unsigned char 
  1052 ;;  MIN             1   62[BANK0 ] unsigned char 
  1053 ;;  SEG             1   61[BANK0 ] unsigned char 
  1054 ;;  HOR_D           1   60[BANK0 ] unsigned char 
  1055 ;;  HOR_U           1   59[BANK0 ] unsigned char 
  1056 ;;  MIN_D           1   58[BANK0 ] unsigned char 
  1057 ;;  MIN_U           1   57[BANK0 ] unsigned char 
  1058 ;;  SEG_D           1   56[BANK0 ] unsigned char 
  1059 ;;  SEG_U           1   55[BANK0 ] unsigned char 
  1060 ;;  VAL1_C          1   54[BANK0 ] unsigned char 
  1061 ;;  VAL1_D          1   53[BANK0 ] unsigned char 
  1062 ;;  VAL1_U          1   52[BANK0 ] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  1    wreg      void 
  1065 ;; Registers used:
  1066 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1067 ;; Tracked objects:
  1068 ;;		On entry : B00/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1072 ;;      Params:         0       0       0       0       0
  1073 ;;      Locals:         0      49       0       0       0
  1074 ;;      Temps:          0       3       0       0       0
  1075 ;;      Totals:         0      52       0       0       0
  1076 ;;Total ram usage:       52 bytes
  1077 ;; Hardware stack levels required when called: 4
  1078 ;; This function calls:
  1079 ;;		_I2C_Master_Read
  1080 ;;		_I2C_Master_Start
  1081 ;;		_I2C_Master_Stop
  1082 ;;		_I2C_Master_Write
  1083 ;;		_Lcd_Clear_4bits
  1084 ;;		_Lcd_Set_Cursor_4bits
  1085 ;;		_Lcd_Write_String_4bits
  1086 ;;		___awdiv
  1087 ;;		___awmod
  1088 ;;		_leerHOR
  1089 ;;		_leerMIN
  1090 ;;		_leerSEG
  1091 ;;		_setup
  1092 ;;		_sprintf
  1093 ;; This function is called by:
  1094 ;;		Startup code after reset
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098     0561                     _main:	
  1099                           ;psect for function _main
  1100                           
  1101     0561                     l1698:	
  1102                           ;incstack = 0
  1103                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1104                           
  1105                           
  1106                           ;main_M.c: 63:     setup();
  1107     0561  120A  118A  2051  120A  118A  	fcall	_setup
  1108                           
  1109                           ;main_M.c: 65:     uint8_t VAL1, VAL1_U, VAL1_D, VAL1_C;;main_M.c: 66:     uint8_t SEG, 
      +                          SEG_U, SEG_D;;main_M.c: 67:     uint8_t MIN, MIN_U, MIN_D;;main_M.c: 68:     uint8_t HOR
      +                          , HOR_U, HOR_D;;main_M.c: 70:     char ADC1[9];;main_M.c: 71:     char stringSEG[9];;mai
      +                          n_M.c: 72:     char stringMIN[9];;main_M.c: 73:     char stringHOR[9];;main_M.c: 75:    
      +                           Lcd_Clear_4bits();
  1110     0566  120A  158A  27AA  120A  118A  	fcall	_Lcd_Clear_4bits
  1111                           
  1112                           ;main_M.c: 76:     Lcd_Set_Cursor_4bits(1,1);
  1113     056B  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1114     056C  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1115     056D  3001               	movlw	1
  1116     056E  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1117     0573                     l1700:
  1118                           
  1119                           ;main_M.c: 77:     Lcd_Write_String_4bits("S1:");
  1120     0573  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1121     0574  00F5               	movwf	Lcd_Write_String_4bits@a
  1122     0575  3080               	movlw	128
  1123     0576  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1124     0577  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1125     057C                     l1702:
  1126                           
  1127                           ;main_M.c: 78:     Lcd_Set_Cursor_4bits(1,10);
  1128     057C  300A               	movlw	10
  1129     057D  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1130     057E  3001               	movlw	1
  1131     057F  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1132                           
  1133                           ;main_M.c: 79:     Lcd_Write_String_4bits(":");
  1134     0584  300D               	movlw	(low (((STR_1+2)-__stringbase)| (0+32768)))& (0+255)
  1135     0585  00F5               	movwf	Lcd_Write_String_4bits@a
  1136     0586  3080               	movlw	128
  1137     0587  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1138     0588  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1139     058D                     l1704:
  1140                           
  1141                           ;main_M.c: 80:     Lcd_Set_Cursor_4bits(1,13);
  1142     058D  300D               	movlw	13
  1143     058E  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1144     058F  3001               	movlw	1
  1145     0590  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1146     0595                     l1706:
  1147                           
  1148                           ;main_M.c: 81:     Lcd_Write_String_4bits(":");
  1149     0595  300D               	movlw	(low (((STR_1+2)-__stringbase)| (0+32768)))& (0+255)
  1150     0596  00F5               	movwf	Lcd_Write_String_4bits@a
  1151     0597  3080               	movlw	128
  1152     0598  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1153     0599  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1154     059E                     l154:	
  1155                           ;main_M.c: 83:     while(1)
  1156                           
  1157                           
  1158                           ;main_M.c: 84:     {;main_M.c: 86:         I2C_Master_Start();
  1159     059E  120A  158A  2798  120A  118A  	fcall	_I2C_Master_Start
  1160                           
  1161                           ;main_M.c: 87:         I2C_Master_Write(0x11);
  1162     05A3  3011               	movlw	17
  1163     05A4  00F0               	movwf	I2C_Master_Write@d
  1164     05A5  3000               	movlw	0
  1165     05A6  00F1               	movwf	I2C_Master_Write@d+1
  1166     05A7  120A  118A  2025  120A  118A  	fcall	_I2C_Master_Write
  1167                           
  1168                           ;main_M.c: 88:         VAL1 = I2C_Master_Read(0);
  1169     05AC  3000               	movlw	0
  1170     05AD  00F0               	movwf	I2C_Master_Read@a
  1171     05AE  00F1               	movwf	I2C_Master_Read@a+1
  1172     05AF  120A  118A  2076  120A  118A  	fcall	_I2C_Master_Read
  1173     05B4  0870               	movf	?_I2C_Master_Read,w
  1174     05B5  1283               	bcf	3,5	;RP0=0, select bank0
  1175     05B6  1303               	bcf	3,6	;RP1=0, select bank0
  1176     05B7  00E0               	movwf	main@VAL1
  1177                           
  1178                           ;main_M.c: 89:         I2C_Master_Stop();
  1179     05B8  120A  158A  27A1  120A  118A  	fcall	_I2C_Master_Stop
  1180     05BD                     l1708:
  1181                           
  1182                           ;main_M.c: 90:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1183     05BD  3003               	movlw	3
  1184     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  1185     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  1186     05C0  00AF               	movwf	??_main+2
  1187     05C1  3008               	movlw	8
  1188     05C2  00AE               	movwf	??_main+1
  1189     05C3  3076               	movlw	118
  1190     05C4  00AD               	movwf	??_main
  1191     05C5                     u1317:
  1192     05C5  0BAD               	decfsz	??_main,f
  1193     05C6  2DC5               	goto	u1317
  1194     05C7  0BAE               	decfsz	??_main+1,f
  1195     05C8  2DC5               	goto	u1317
  1196     05C9  0BAF               	decfsz	??_main+2,f
  1197     05CA  2DC5               	goto	u1317
  1198     05CB  0000               	nop
  1199     05CC                     l1710:
  1200                           
  1201                           ;main_M.c: 92:         VAL1_C = (VAL1/100);
  1202     05CC  3064               	movlw	100
  1203     05CD  00F0               	movwf	___awdiv@divisor
  1204     05CE  3000               	movlw	0
  1205     05CF  00F1               	movwf	___awdiv@divisor+1
  1206     05D0  1283               	bcf	3,5	;RP0=0, select bank0
  1207     05D1  1303               	bcf	3,6	;RP1=0, select bank0
  1208     05D2  0860               	movf	main@VAL1,w
  1209     05D3  00AD               	movwf	??_main
  1210     05D4  01AE               	clrf	??_main+1
  1211     05D5  082D               	movf	??_main,w
  1212     05D6  00F2               	movwf	___awdiv@dividend
  1213     05D7  082E               	movf	??_main+1,w
  1214     05D8  00F3               	movwf	___awdiv@dividend+1
  1215     05D9  120A  118A  2439  120A  118A  	fcall	___awdiv
  1216     05DE  0870               	movf	?___awdiv,w
  1217     05DF  1283               	bcf	3,5	;RP0=0, select bank0
  1218     05E0  1303               	bcf	3,6	;RP1=0, select bank0
  1219     05E1  00D6               	movwf	main@VAL1_C
  1220     05E2                     l1712:
  1221                           
  1222                           ;main_M.c: 93:         VAL1_D = (VAL1/10)%10;
  1223     05E2  300A               	movlw	10
  1224     05E3  00F9               	movwf	___awmod@divisor
  1225     05E4  3000               	movlw	0
  1226     05E5  00FA               	movwf	___awmod@divisor+1
  1227     05E6  300A               	movlw	10
  1228     05E7  00F0               	movwf	___awdiv@divisor
  1229     05E8  3000               	movlw	0
  1230     05E9  00F1               	movwf	___awdiv@divisor+1
  1231     05EA  0860               	movf	main@VAL1,w
  1232     05EB  00AD               	movwf	??_main
  1233     05EC  01AE               	clrf	??_main+1
  1234     05ED  082D               	movf	??_main,w
  1235     05EE  00F2               	movwf	___awdiv@dividend
  1236     05EF  082E               	movf	??_main+1,w
  1237     05F0  00F3               	movwf	___awdiv@dividend+1
  1238     05F1  120A  118A  2439  120A  118A  	fcall	___awdiv
  1239     05F6  0871               	movf	?___awdiv+1,w
  1240     05F7  00FC               	movwf	___awmod@dividend+1
  1241     05F8  0870               	movf	?___awdiv,w
  1242     05F9  00FB               	movwf	___awmod@dividend
  1243     05FA  120A  118A  231B  120A  118A  	fcall	___awmod
  1244     05FF  0879               	movf	?___awmod,w
  1245     0600  1283               	bcf	3,5	;RP0=0, select bank0
  1246     0601  1303               	bcf	3,6	;RP1=0, select bank0
  1247     0602  00D5               	movwf	main@VAL1_D
  1248     0603                     l1714:
  1249                           
  1250                           ;main_M.c: 94:         VAL1_U = VAL1%10;
  1251     0603  300A               	movlw	10
  1252     0604  00F9               	movwf	___awmod@divisor
  1253     0605  3000               	movlw	0
  1254     0606  00FA               	movwf	___awmod@divisor+1
  1255     0607  0860               	movf	main@VAL1,w
  1256     0608  00AD               	movwf	??_main
  1257     0609  01AE               	clrf	??_main+1
  1258     060A  082D               	movf	??_main,w
  1259     060B  00FB               	movwf	___awmod@dividend
  1260     060C  082E               	movf	??_main+1,w
  1261     060D  00FC               	movwf	___awmod@dividend+1
  1262     060E  120A  118A  231B  120A  118A  	fcall	___awmod
  1263     0613  0879               	movf	?___awmod,w
  1264     0614  1283               	bcf	3,5	;RP0=0, select bank0
  1265     0615  1303               	bcf	3,6	;RP1=0, select bank0
  1266     0616  00D4               	movwf	main@VAL1_U
  1267     0617                     l1716:
  1268                           
  1269                           ;main_M.c: 96:         sprintf(ADC1, "%u", VAL1_C);
  1270     0617  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1271     0618  00A0               	movwf	sprintf@f
  1272     0619  0856               	movf	main@VAL1_C,w
  1273     061A  00AD               	movwf	??_main
  1274     061B  01AE               	clrf	??_main+1
  1275     061C  082D               	movf	??_main,w
  1276     061D  00A1               	movwf	?_sprintf+1
  1277     061E  082E               	movf	??_main+1,w
  1278     061F  00A2               	movwf	?_sprintf+2
  1279     0620  304B               	movlw	(low (main@ADC1| 0))& (0+255)
  1280     0621  120A  118A  24A0  120A  118A  	fcall	_sprintf
  1281     0626                     l1718:
  1282                           
  1283                           ;main_M.c: 97:         Lcd_Set_Cursor_4bits(2,1);
  1284     0626  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1285     0627  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1286     0628  3002               	movlw	2
  1287     0629  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1288     062E                     l1720:
  1289                           
  1290                           ;main_M.c: 98:         Lcd_Write_String_4bits(ADC1);
  1291     062E  304B               	movlw	(low (main@ADC1| 0))& (0+255)
  1292     062F  00F5               	movwf	Lcd_Write_String_4bits@a
  1293     0630  3000               	movlw	0
  1294     0631  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1295     0632  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1296     0637                     l1722:
  1297                           
  1298                           ;main_M.c: 100:         sprintf(ADC1, "%u", VAL1_D);
  1299     0637  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1300     0638  1283               	bcf	3,5	;RP0=0, select bank0
  1301     0639  1303               	bcf	3,6	;RP1=0, select bank0
  1302     063A  00A0               	movwf	sprintf@f
  1303     063B  0855               	movf	main@VAL1_D,w
  1304     063C  00AD               	movwf	??_main
  1305     063D  01AE               	clrf	??_main+1
  1306     063E  082D               	movf	??_main,w
  1307     063F  00A1               	movwf	?_sprintf+1
  1308     0640  082E               	movf	??_main+1,w
  1309     0641  00A2               	movwf	?_sprintf+2
  1310     0642  304B               	movlw	(low (main@ADC1| 0))& (0+255)
  1311     0643  120A  118A  24A0  120A  118A  	fcall	_sprintf
  1312     0648                     l1724:
  1313                           
  1314                           ;main_M.c: 101:         Lcd_Set_Cursor_4bits(2,2);
  1315     0648  3002               	movlw	2
  1316     0649  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1317     064A  3002               	movlw	2
  1318     064B  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1319     0650                     l1726:
  1320                           
  1321                           ;main_M.c: 102:         Lcd_Write_String_4bits(ADC1);
  1322     0650  304B               	movlw	(low (main@ADC1| 0))& (0+255)
  1323     0651  00F5               	movwf	Lcd_Write_String_4bits@a
  1324     0652  3000               	movlw	0
  1325     0653  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1326     0654  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1327     0659                     l1728:
  1328                           
  1329                           ;main_M.c: 104:         sprintf(ADC1, "%u", VAL1_U);
  1330     0659  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1331     065A  1283               	bcf	3,5	;RP0=0, select bank0
  1332     065B  1303               	bcf	3,6	;RP1=0, select bank0
  1333     065C  00A0               	movwf	sprintf@f
  1334     065D  0854               	movf	main@VAL1_U,w
  1335     065E  00AD               	movwf	??_main
  1336     065F  01AE               	clrf	??_main+1
  1337     0660  082D               	movf	??_main,w
  1338     0661  00A1               	movwf	?_sprintf+1
  1339     0662  082E               	movf	??_main+1,w
  1340     0663  00A2               	movwf	?_sprintf+2
  1341     0664  304B               	movlw	(low (main@ADC1| 0))& (0+255)
  1342     0665  120A  118A  24A0  120A  118A  	fcall	_sprintf
  1343     066A                     l1730:
  1344                           
  1345                           ;main_M.c: 105:         Lcd_Set_Cursor_4bits(2,3);
  1346     066A  3003               	movlw	3
  1347     066B  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1348     066C  3002               	movlw	2
  1349     066D  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1350     0672                     l1732:
  1351                           
  1352                           ;main_M.c: 106:         Lcd_Write_String_4bits(ADC1);
  1353     0672  304B               	movlw	(low (main@ADC1| 0))& (0+255)
  1354     0673  00F5               	movwf	Lcd_Write_String_4bits@a
  1355     0674  3000               	movlw	0
  1356     0675  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1357     0676  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1358     067B                     l1734:
  1359                           
  1360                           ;main_M.c: 108:         SEG = leerSEG();
  1361     067B  120A  118A  2217  120A  118A  	fcall	_leerSEG
  1362     0680  1283               	bcf	3,5	;RP0=0, select bank0
  1363     0681  1303               	bcf	3,6	;RP1=0, select bank0
  1364     0682  00DD               	movwf	main@SEG
  1365     0683                     l1736:
  1366                           
  1367                           ;main_M.c: 110:         SEG_D = (SEG/10)%10;
  1368     0683  300A               	movlw	10
  1369     0684  00F9               	movwf	___awmod@divisor
  1370     0685  3000               	movlw	0
  1371     0686  00FA               	movwf	___awmod@divisor+1
  1372     0687  300A               	movlw	10
  1373     0688  00F0               	movwf	___awdiv@divisor
  1374     0689  3000               	movlw	0
  1375     068A  00F1               	movwf	___awdiv@divisor+1
  1376     068B  085D               	movf	main@SEG,w
  1377     068C  00AD               	movwf	??_main
  1378     068D  01AE               	clrf	??_main+1
  1379     068E  082D               	movf	??_main,w
  1380     068F  00F2               	movwf	___awdiv@dividend
  1381     0690  082E               	movf	??_main+1,w
  1382     0691  00F3               	movwf	___awdiv@dividend+1
  1383     0692  120A  118A  2439  120A  118A  	fcall	___awdiv
  1384     0697  0871               	movf	?___awdiv+1,w
  1385     0698  00FC               	movwf	___awmod@dividend+1
  1386     0699  0870               	movf	?___awdiv,w
  1387     069A  00FB               	movwf	___awmod@dividend
  1388     069B  120A  118A  231B  120A  118A  	fcall	___awmod
  1389     06A0  0879               	movf	?___awmod,w
  1390     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  1391     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  1392     06A3  00D8               	movwf	main@SEG_D
  1393     06A4                     l1738:
  1394                           
  1395                           ;main_M.c: 111:         SEG_U = SEG%10;
  1396     06A4  300A               	movlw	10
  1397     06A5  00F9               	movwf	___awmod@divisor
  1398     06A6  3000               	movlw	0
  1399     06A7  00FA               	movwf	___awmod@divisor+1
  1400     06A8  085D               	movf	main@SEG,w
  1401     06A9  00AD               	movwf	??_main
  1402     06AA  01AE               	clrf	??_main+1
  1403     06AB  082D               	movf	??_main,w
  1404     06AC  00FB               	movwf	___awmod@dividend
  1405     06AD  082E               	movf	??_main+1,w
  1406     06AE  00FC               	movwf	___awmod@dividend+1
  1407     06AF  120A  118A  231B  120A  118A  	fcall	___awmod
  1408     06B4  0879               	movf	?___awmod,w
  1409     06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1410     06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1411     06B7  00D7               	movwf	main@SEG_U
  1412     06B8                     l1740:
  1413                           
  1414                           ;main_M.c: 113:         sprintf(stringSEG, "%u", SEG_D);
  1415     06B8  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1416     06B9  00A0               	movwf	sprintf@f
  1417     06BA  0858               	movf	main@SEG_D,w
  1418     06BB  00AD               	movwf	??_main
  1419     06BC  01AE               	clrf	??_main+1
  1420     06BD  082D               	movf	??_main,w
  1421     06BE  00A1               	movwf	?_sprintf+1
  1422     06BF  082E               	movf	??_main+1,w
  1423     06C0  00A2               	movwf	?_sprintf+2
  1424     06C1  3030               	movlw	(low (main@stringSEG| 0))& (0+255)
  1425     06C2  120A  118A  24A0  120A  118A  	fcall	_sprintf
  1426     06C7                     l1742:
  1427                           
  1428                           ;main_M.c: 114:         Lcd_Set_Cursor_4bits(1,14);
  1429     06C7  300E               	movlw	14
  1430     06C8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1431     06C9  3001               	movlw	1
  1432     06CA  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1433     06CF                     l1744:
  1434                           
  1435                           ;main_M.c: 115:         Lcd_Write_String_4bits(stringSEG);
  1436     06CF  3030               	movlw	(low (main@stringSEG| 0))& (0+255)
  1437     06D0  00F5               	movwf	Lcd_Write_String_4bits@a
  1438     06D1  3000               	movlw	0
  1439     06D2  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1440     06D3  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1441     06D8                     l1746:
  1442                           
  1443                           ;main_M.c: 117:         sprintf(stringSEG, "%u", SEG_U);
  1444     06D8  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1445     06D9  1283               	bcf	3,5	;RP0=0, select bank0
  1446     06DA  1303               	bcf	3,6	;RP1=0, select bank0
  1447     06DB  00A0               	movwf	sprintf@f
  1448     06DC  0857               	movf	main@SEG_U,w
  1449     06DD  00AD               	movwf	??_main
  1450     06DE  01AE               	clrf	??_main+1
  1451     06DF  082D               	movf	??_main,w
  1452     06E0  00A1               	movwf	?_sprintf+1
  1453     06E1  082E               	movf	??_main+1,w
  1454     06E2  00A2               	movwf	?_sprintf+2
  1455     06E3  3030               	movlw	(low (main@stringSEG| 0))& (0+255)
  1456     06E4  120A  118A  24A0  120A  118A  	fcall	_sprintf
  1457     06E9                     l1748:
  1458                           
  1459                           ;main_M.c: 118:         Lcd_Set_Cursor_4bits(1,15);
  1460     06E9  300F               	movlw	15
  1461     06EA  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1462     06EB  3001               	movlw	1
  1463     06EC  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1464     06F1                     l1750:
  1465                           
  1466                           ;main_M.c: 119:         Lcd_Write_String_4bits(stringSEG);
  1467     06F1  3030               	movlw	(low (main@stringSEG| 0))& (0+255)
  1468     06F2  00F5               	movwf	Lcd_Write_String_4bits@a
  1469     06F3  3000               	movlw	0
  1470     06F4  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1471     06F5  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1472     06FA                     l1752:
  1473                           
  1474                           ;main_M.c: 121:         MIN = leerMIN();
  1475     06FA  120A  118A  22C4  120A  118A  	fcall	_leerMIN
  1476     06FF  1283               	bcf	3,5	;RP0=0, select bank0
  1477     0700  1303               	bcf	3,6	;RP1=0, select bank0
  1478     0701  00DE               	movwf	main@MIN
  1479     0702                     l1754:
  1480                           
  1481                           ;main_M.c: 123:         MIN_D = (MIN/10)%10;
  1482     0702  300A               	movlw	10
  1483     0703  00F9               	movwf	___awmod@divisor
  1484     0704  3000               	movlw	0
  1485     0705  00FA               	movwf	___awmod@divisor+1
  1486     0706  300A               	movlw	10
  1487     0707  00F0               	movwf	___awdiv@divisor
  1488     0708  3000               	movlw	0
  1489     0709  00F1               	movwf	___awdiv@divisor+1
  1490     070A  085E               	movf	main@MIN,w
  1491     070B  00AD               	movwf	??_main
  1492     070C  01AE               	clrf	??_main+1
  1493     070D  082D               	movf	??_main,w
  1494     070E  00F2               	movwf	___awdiv@dividend
  1495     070F  082E               	movf	??_main+1,w
  1496     0710  00F3               	movwf	___awdiv@dividend+1
  1497     0711  120A  118A  2439  120A  118A  	fcall	___awdiv
  1498     0716  0871               	movf	?___awdiv+1,w
  1499     0717  00FC               	movwf	___awmod@dividend+1
  1500     0718  0870               	movf	?___awdiv,w
  1501     0719  00FB               	movwf	___awmod@dividend
  1502     071A  120A  118A  231B  120A  118A  	fcall	___awmod
  1503     071F  0879               	movf	?___awmod,w
  1504     0720  1283               	bcf	3,5	;RP0=0, select bank0
  1505     0721  1303               	bcf	3,6	;RP1=0, select bank0
  1506     0722  00DA               	movwf	main@MIN_D
  1507     0723                     l1756:
  1508                           
  1509                           ;main_M.c: 124:         MIN_U = MIN%10;
  1510     0723  300A               	movlw	10
  1511     0724  00F9               	movwf	___awmod@divisor
  1512     0725  3000               	movlw	0
  1513     0726  00FA               	movwf	___awmod@divisor+1
  1514     0727  085E               	movf	main@MIN,w
  1515     0728  00AD               	movwf	??_main
  1516     0729  01AE               	clrf	??_main+1
  1517     072A  082D               	movf	??_main,w
  1518     072B  00FB               	movwf	___awmod@dividend
  1519     072C  082E               	movf	??_main+1,w
  1520     072D  00FC               	movwf	___awmod@dividend+1
  1521     072E  120A  118A  231B  120A  118A  	fcall	___awmod
  1522     0733  0879               	movf	?___awmod,w
  1523     0734  1283               	bcf	3,5	;RP0=0, select bank0
  1524     0735  1303               	bcf	3,6	;RP1=0, select bank0
  1525     0736  00D9               	movwf	main@MIN_U
  1526     0737                     l1758:
  1527                           
  1528                           ;main_M.c: 126:         sprintf(stringMIN, "%u", MIN_D);
  1529     0737  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1530     0738  00A0               	movwf	sprintf@f
  1531     0739  085A               	movf	main@MIN_D,w
  1532     073A  00AD               	movwf	??_main
  1533     073B  01AE               	clrf	??_main+1
  1534     073C  082D               	movf	??_main,w
  1535     073D  00A1               	movwf	?_sprintf+1
  1536     073E  082E               	movf	??_main+1,w
  1537     073F  00A2               	movwf	?_sprintf+2
  1538     0740  3039               	movlw	(low (main@stringMIN| 0))& (0+255)
  1539     0741  120A  118A  24A0  120A  118A  	fcall	_sprintf
  1540     0746                     l1760:
  1541                           
  1542                           ;main_M.c: 127:         Lcd_Set_Cursor_4bits(1,11);
  1543     0746  300B               	movlw	11
  1544     0747  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1545     0748  3001               	movlw	1
  1546     0749  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1547     074E                     l1762:
  1548                           
  1549                           ;main_M.c: 128:         Lcd_Write_String_4bits(stringMIN);
  1550     074E  3039               	movlw	(low (main@stringMIN| 0))& (0+255)
  1551     074F  00F5               	movwf	Lcd_Write_String_4bits@a
  1552     0750  3000               	movlw	0
  1553     0751  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1554     0752  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1555     0757                     l1764:
  1556                           
  1557                           ;main_M.c: 130:         sprintf(stringMIN, "%u", MIN_U);
  1558     0757  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1559     0758  1283               	bcf	3,5	;RP0=0, select bank0
  1560     0759  1303               	bcf	3,6	;RP1=0, select bank0
  1561     075A  00A0               	movwf	sprintf@f
  1562     075B  0859               	movf	main@MIN_U,w
  1563     075C  00AD               	movwf	??_main
  1564     075D  01AE               	clrf	??_main+1
  1565     075E  082D               	movf	??_main,w
  1566     075F  00A1               	movwf	?_sprintf+1
  1567     0760  082E               	movf	??_main+1,w
  1568     0761  00A2               	movwf	?_sprintf+2
  1569     0762  3039               	movlw	(low (main@stringMIN| 0))& (0+255)
  1570     0763  120A  118A  24A0  120A  118A  	fcall	_sprintf
  1571     0768                     l1766:
  1572                           
  1573                           ;main_M.c: 131:         Lcd_Set_Cursor_4bits(1,12);
  1574     0768  300C               	movlw	12
  1575     0769  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1576     076A  3001               	movlw	1
  1577     076B  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1578     0770                     l1768:
  1579                           
  1580                           ;main_M.c: 132:         Lcd_Write_String_4bits(stringMIN);
  1581     0770  3039               	movlw	(low (main@stringMIN| 0))& (0+255)
  1582     0771  00F5               	movwf	Lcd_Write_String_4bits@a
  1583     0772  3000               	movlw	0
  1584     0773  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1585     0774  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1586     0779                     l1770:
  1587                           
  1588                           ;main_M.c: 134:         HOR = leerHOR();
  1589     0779  120A  118A  226D  120A  118A  	fcall	_leerHOR
  1590     077E  1283               	bcf	3,5	;RP0=0, select bank0
  1591     077F  1303               	bcf	3,6	;RP1=0, select bank0
  1592     0780  00DF               	movwf	main@HOR
  1593     0781                     l1772:
  1594                           
  1595                           ;main_M.c: 136:         HOR_D = (HOR/10)%10;
  1596     0781  300A               	movlw	10
  1597     0782  00F9               	movwf	___awmod@divisor
  1598     0783  3000               	movlw	0
  1599     0784  00FA               	movwf	___awmod@divisor+1
  1600     0785  300A               	movlw	10
  1601     0786  00F0               	movwf	___awdiv@divisor
  1602     0787  3000               	movlw	0
  1603     0788  00F1               	movwf	___awdiv@divisor+1
  1604     0789  085F               	movf	main@HOR,w
  1605     078A  00AD               	movwf	??_main
  1606     078B  01AE               	clrf	??_main+1
  1607     078C  082D               	movf	??_main,w
  1608     078D  00F2               	movwf	___awdiv@dividend
  1609     078E  082E               	movf	??_main+1,w
  1610     078F  00F3               	movwf	___awdiv@dividend+1
  1611     0790  120A  118A  2439  120A  118A  	fcall	___awdiv
  1612     0795  0871               	movf	?___awdiv+1,w
  1613     0796  00FC               	movwf	___awmod@dividend+1
  1614     0797  0870               	movf	?___awdiv,w
  1615     0798  00FB               	movwf	___awmod@dividend
  1616     0799  120A  118A  231B  120A  118A  	fcall	___awmod
  1617     079E  0879               	movf	?___awmod,w
  1618     079F  1283               	bcf	3,5	;RP0=0, select bank0
  1619     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1620     07A1  00DC               	movwf	main@HOR_D
  1621     07A2                     l1774:
  1622                           
  1623                           ;main_M.c: 137:         HOR_U = HOR%10;
  1624     07A2  300A               	movlw	10
  1625     07A3  00F9               	movwf	___awmod@divisor
  1626     07A4  3000               	movlw	0
  1627     07A5  00FA               	movwf	___awmod@divisor+1
  1628     07A6  085F               	movf	main@HOR,w
  1629     07A7  00AD               	movwf	??_main
  1630     07A8  01AE               	clrf	??_main+1
  1631     07A9  082D               	movf	??_main,w
  1632     07AA  00FB               	movwf	___awmod@dividend
  1633     07AB  082E               	movf	??_main+1,w
  1634     07AC  00FC               	movwf	___awmod@dividend+1
  1635     07AD  120A  118A  231B  120A  118A  	fcall	___awmod
  1636     07B2  0879               	movf	?___awmod,w
  1637     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1638     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1639     07B5  00DB               	movwf	main@HOR_U
  1640     07B6                     l1776:
  1641                           
  1642                           ;main_M.c: 139:         sprintf(stringHOR, "%u", HOR_D);
  1643     07B6  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1644     07B7  00A0               	movwf	sprintf@f
  1645     07B8  085C               	movf	main@HOR_D,w
  1646     07B9  00AD               	movwf	??_main
  1647     07BA  01AE               	clrf	??_main+1
  1648     07BB  082D               	movf	??_main,w
  1649     07BC  00A1               	movwf	?_sprintf+1
  1650     07BD  082E               	movf	??_main+1,w
  1651     07BE  00A2               	movwf	?_sprintf+2
  1652     07BF  3042               	movlw	(low (main@stringHOR| 0))& (0+255)
  1653     07C0  120A  118A  24A0  120A  118A  	fcall	_sprintf
  1654     07C5                     l1778:
  1655                           
  1656                           ;main_M.c: 140:         Lcd_Set_Cursor_4bits(1,8);
  1657     07C5  3008               	movlw	8
  1658     07C6  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1659     07C7  3001               	movlw	1
  1660     07C8  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1661     07CD                     l1780:
  1662                           
  1663                           ;main_M.c: 141:         Lcd_Write_String_4bits(stringHOR);
  1664     07CD  3042               	movlw	(low (main@stringHOR| 0))& (0+255)
  1665     07CE  00F5               	movwf	Lcd_Write_String_4bits@a
  1666     07CF  3000               	movlw	0
  1667     07D0  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1668     07D1  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1669     07D6                     l1782:
  1670                           
  1671                           ;main_M.c: 143:         sprintf(stringHOR, "%u", HOR_U);
  1672     07D6  300F               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1673     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1674     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1675     07D9  00A0               	movwf	sprintf@f
  1676     07DA  085B               	movf	main@HOR_U,w
  1677     07DB  00AD               	movwf	??_main
  1678     07DC  01AE               	clrf	??_main+1
  1679     07DD  082D               	movf	??_main,w
  1680     07DE  00A1               	movwf	?_sprintf+1
  1681     07DF  082E               	movf	??_main+1,w
  1682     07E0  00A2               	movwf	?_sprintf+2
  1683     07E1  3042               	movlw	(low (main@stringHOR| 0))& (0+255)
  1684     07E2  120A  118A  24A0  120A  118A  	fcall	_sprintf
  1685     07E7                     l1784:
  1686                           
  1687                           ;main_M.c: 144:         Lcd_Set_Cursor_4bits(1,9);
  1688     07E7  3009               	movlw	9
  1689     07E8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1690     07E9  3001               	movlw	1
  1691     07EA  120A  118A  21D1  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1692     07EF                     l1786:
  1693                           
  1694                           ;main_M.c: 145:         Lcd_Write_String_4bits(stringHOR);
  1695     07EF  3042               	movlw	(low (main@stringHOR| 0))& (0+255)
  1696     07F0  00F5               	movwf	Lcd_Write_String_4bits@a
  1697     07F1  3000               	movlw	0
  1698     07F2  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1699     07F3  120A  118A  214B  120A  118A  	fcall	_Lcd_Write_String_4bits
  1700     07F8  2D9E               	goto	l154
  1701     07F9  120A  118A  2800   	ljmp	start
  1702     07FC                     __end_of_main:
  1703                           
  1704                           	psect	text1
  1705     04A0                     __ptext1:	
  1706 ;; *************** function _sprintf *****************
  1707 ;; Defined at:
  1708 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1709 ;; Parameters:    Size  Location     Type
  1710 ;;  sp              1    wreg     PTR unsigned char 
  1711 ;;		 -> main@stringHOR(9), main@stringMIN(9), main@stringSEG(9), main@ADC1(9), 
  1712 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1713 ;;		 -> STR_12(3), STR_11(3), STR_10(3), STR_9(3), 
  1714 ;;		 -> STR_8(3), STR_7(3), STR_6(3), STR_5(3), 
  1715 ;;		 -> STR_4(3), 
  1716 ;; Auto vars:     Size  Location     Type
  1717 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1718 ;;		 -> main@stringHOR(9), main@stringMIN(9), main@stringSEG(9), main@ADC1(9), 
  1719 ;;  tmpval          4    0        struct .
  1720 ;;  val             2    8[BANK0 ] unsigned int 
  1721 ;;  cp              2    0        PTR const unsigned char 
  1722 ;;  len             2    0        unsigned int 
  1723 ;;  c               1   12[BANK0 ] unsigned char 
  1724 ;;  prec            1   10[BANK0 ] char 
  1725 ;;  ap              1    7[BANK0 ] PTR void [1]
  1726 ;;		 -> ?_sprintf(2), 
  1727 ;;  flag            1    6[BANK0 ] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  2    0[BANK0 ] int 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       3       0       0       0
  1738 ;;      Locals:         0       7       0       0       0
  1739 ;;      Temps:          0       3       0       0       0
  1740 ;;      Totals:         0      13       0       0       0
  1741 ;;Total ram usage:       13 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 1
  1744 ;; This function calls:
  1745 ;;		___lwdiv
  1746 ;;		___lwmod
  1747 ;; This function is called by:
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752     04A0                     _sprintf:	
  1753                           ;psect for function _sprintf
  1754                           
  1755                           
  1756                           ;incstack = 0
  1757                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1758                           ;sprintf@sp stored from wreg
  1759     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  1760     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  1761     04A2  00AB               	movwf	sprintf@sp
  1762     04A3                     l1536:
  1763                           
  1764                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1765     04A3  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1766     04A4  00A7               	movwf	sprintf@ap
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1769     04A5  2D4C               	goto	l1578
  1770     04A6                     l1538:
  1771                           
  1772                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1773     04A6  3025               	movlw	37
  1774     04A7  062C               	xorwf	sprintf@c,w
  1775     04A8  1903               	btfsc	3,2
  1776     04A9  2CAB               	goto	u1041
  1777     04AA  2CAC               	goto	u1040
  1778     04AB                     u1041:
  1779     04AB  2CB6               	goto	l1544
  1780     04AC                     u1040:
  1781     04AC                     l1540:
  1782                           
  1783                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1784     04AC  082B               	movf	sprintf@sp,w
  1785     04AD  0084               	movwf	4
  1786     04AE  082C               	movf	sprintf@c,w
  1787     04AF  1383               	bcf	3,7	;select IRP bank0
  1788     04B0  0080               	movwf	0
  1789     04B1                     l1542:
  1790     04B1  3001               	movlw	1
  1791     04B2  00A3               	movwf	??_sprintf
  1792     04B3  0823               	movf	??_sprintf,w
  1793     04B4  07AB               	addwf	sprintf@sp,f
  1794                           
  1795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1796     04B5  2D4C               	goto	l1578
  1797     04B6                     l1544:
  1798                           
  1799                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1800     04B6  01A6               	clrf	sprintf@flag
  1801                           
  1802                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1803     04B7  2CBD               	goto	l1550
  1804     04B8                     l1546:
  1805                           
  1806                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1807     04B8  30C0               	movlw	192
  1808     04B9  00A3               	movwf	??_sprintf
  1809     04BA  0823               	movf	??_sprintf,w
  1810     04BB  04A6               	iorwf	sprintf@flag,f
  1811                           
  1812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1813     04BC  2CD7               	goto	l1552
  1814     04BD                     l1550:
  1815     04BD  3001               	movlw	1
  1816     04BE  07A0               	addwf	sprintf@f,f
  1817     04BF  30FF               	movlw	-1
  1818     04C0  0720               	addwf	sprintf@f,w
  1819     04C1  0084               	movwf	4
  1820     04C2  120A  118A  200D  120A  118A  	fcall	stringdir
  1821     04C7  00AC               	movwf	sprintf@c
  1822     04C8  00A3               	movwf	??_sprintf
  1823     04C9  01A4               	clrf	??_sprintf+1
  1824                           
  1825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1826                           ; Switch size 1, requested type "simple"
  1827                           ; Number of cases is 1, Range of values is 0 to 0
  1828                           ; switch strategies available:
  1829                           ; Name         Instructions Cycles
  1830                           ; simple_byte            4     3 (average)
  1831                           ; direct_byte           11     8 (fixed)
  1832                           ; jumptable            260     6 (fixed)
  1833                           ;	Chosen strategy is simple_byte
  1834     04CA  0824               	movf	??_sprintf+1,w
  1835     04CB  3A00               	xorlw	0	; case 0
  1836     04CC  1903               	skipnz
  1837     04CD  2CCF               	goto	l1808
  1838     04CE  2D4C               	goto	l1578
  1839     04CF                     l1808:
  1840                           
  1841                           ; Switch size 1, requested type "simple"
  1842                           ; Number of cases is 2, Range of values is 0 to 117
  1843                           ; switch strategies available:
  1844                           ; Name         Instructions Cycles
  1845                           ; simple_byte            7     4 (average)
  1846                           ; jumptable            260     6 (fixed)
  1847                           ;	Chosen strategy is simple_byte
  1848     04CF  0823               	movf	??_sprintf,w
  1849     04D0  3A00               	xorlw	0	; case 0
  1850     04D1  1903               	skipnz
  1851     04D2  2D5C               	goto	l1580
  1852     04D3  3A75               	xorlw	117	; case 117
  1853     04D4  1903               	skipnz
  1854     04D5  2CB8               	goto	l1546
  1855     04D6  2D4C               	goto	l1578
  1856     04D7                     l1552:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1859     04D7  0827               	movf	sprintf@ap,w
  1860     04D8  0084               	movwf	4
  1861     04D9  1383               	bcf	3,7	;select IRP bank0
  1862     04DA  0800               	movf	0,w
  1863     04DB  00A8               	movwf	sprintf@val
  1864     04DC  0A84               	incf	4,f
  1865     04DD  0800               	movf	0,w
  1866     04DE  00A9               	movwf	sprintf@val+1
  1867     04DF                     l1554:
  1868     04DF  3002               	movlw	2
  1869     04E0  00A3               	movwf	??_sprintf
  1870     04E1  0823               	movf	??_sprintf,w
  1871     04E2  07A7               	addwf	sprintf@ap,f
  1872     04E3                     l1556:
  1873                           
  1874                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1875     04E3  01AC               	clrf	sprintf@c
  1876     04E4  0AAC               	incf	sprintf@c,f
  1877     04E5                     l1562:
  1878                           
  1879                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1880     04E5  082C               	movf	sprintf@c,w
  1881     04E6  00A3               	movwf	??_sprintf
  1882     04E7  0723               	addwf	??_sprintf,w
  1883     04E8  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1884     04E9  0084               	movwf	4
  1885     04EA  120A  118A  200D  120A  118A  	fcall	stringdir
  1886     04EF  00A4               	movwf	??_sprintf+1
  1887     04F0  120A  118A  200D  120A  118A  	fcall	stringdir
  1888     04F5  00A5               	movwf	??_sprintf+2
  1889     04F6  0825               	movf	??_sprintf+2,w
  1890     04F7  0229               	subwf	sprintf@val+1,w
  1891     04F8  1D03               	skipz
  1892     04F9  2CFC               	goto	u1055
  1893     04FA  0824               	movf	??_sprintf+1,w
  1894     04FB  0228               	subwf	sprintf@val,w
  1895     04FC                     u1055:
  1896     04FC  1803               	skipnc
  1897     04FD  2CFF               	goto	u1051
  1898     04FE  2D00               	goto	u1050
  1899     04FF                     u1051:
  1900     04FF  2D01               	goto	l1566
  1901     0500                     u1050:
  1902     0500  2D0B               	goto	l1568
  1903     0501                     l1566:
  1904     0501  3001               	movlw	1
  1905     0502  00A3               	movwf	??_sprintf
  1906     0503  0823               	movf	??_sprintf,w
  1907     0504  07AC               	addwf	sprintf@c,f
  1908     0505  3005               	movlw	5
  1909     0506  062C               	xorwf	sprintf@c,w
  1910     0507  1D03               	btfss	3,2
  1911     0508  2D0A               	goto	u1061
  1912     0509  2D0B               	goto	u1060
  1913     050A                     u1061:
  1914     050A  2CE5               	goto	l1562
  1915     050B                     u1060:
  1916     050B                     l1568:
  1917                           
  1918                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1919     050B  082C               	movf	sprintf@c,w
  1920     050C  00AA               	movwf	sprintf@prec
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1923     050D  2D43               	goto	l1576
  1924     050E                     l1570:
  1925                           
  1926                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1927     050E  300A               	movlw	10
  1928     050F  00F8               	movwf	___lwmod@divisor
  1929     0510  3000               	movlw	0
  1930     0511  00F9               	movwf	___lwmod@divisor+1
  1931     0512  082A               	movf	sprintf@prec,w
  1932     0513  00A3               	movwf	??_sprintf
  1933     0514  0723               	addwf	??_sprintf,w
  1934     0515  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1935     0516  0084               	movwf	4
  1936     0517  120A  118A  200D  120A  118A  	fcall	stringdir
  1937     051C  00F0               	movwf	___lwdiv@divisor
  1938     051D  120A  118A  200D  120A  118A  	fcall	stringdir
  1939     0522  00F1               	movwf	___lwdiv@divisor+1
  1940     0523  0829               	movf	sprintf@val+1,w
  1941     0524  00F3               	movwf	___lwdiv@dividend+1
  1942     0525  0828               	movf	sprintf@val,w
  1943     0526  00F2               	movwf	___lwdiv@dividend
  1944     0527  120A  118A  218D  120A  118A  	fcall	___lwdiv
  1945     052C  0871               	movf	?___lwdiv+1,w
  1946     052D  00FB               	movwf	___lwmod@dividend+1
  1947     052E  0870               	movf	?___lwdiv,w
  1948     052F  00FA               	movwf	___lwmod@dividend
  1949     0530  120A  118A  2111  120A  118A  	fcall	___lwmod
  1950     0535  0878               	movf	?___lwmod,w
  1951     0536  3E30               	addlw	48
  1952     0537  1283               	bcf	3,5	;RP0=0, select bank0
  1953     0538  1303               	bcf	3,6	;RP1=0, select bank0
  1954     0539  00AC               	movwf	sprintf@c
  1955     053A                     l1572:
  1956                           
  1957                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1958     053A  082B               	movf	sprintf@sp,w
  1959     053B  0084               	movwf	4
  1960     053C  082C               	movf	sprintf@c,w
  1961     053D  1383               	bcf	3,7	;select IRP bank0
  1962     053E  0080               	movwf	0
  1963     053F                     l1574:
  1964     053F  3001               	movlw	1
  1965     0540  00A3               	movwf	??_sprintf
  1966     0541  0823               	movf	??_sprintf,w
  1967     0542  07AB               	addwf	sprintf@sp,f
  1968     0543                     l1576:
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1971     0543  30FF               	movlw	255
  1972     0544  00A3               	movwf	??_sprintf
  1973     0545  0823               	movf	??_sprintf,w
  1974     0546  07AA               	addwf	sprintf@prec,f
  1975     0547  0A2A               	incf	sprintf@prec,w
  1976     0548  1D03               	btfss	3,2
  1977     0549  2D4B               	goto	u1071
  1978     054A  2D4C               	goto	u1070
  1979     054B                     u1071:
  1980     054B  2D0E               	goto	l1570
  1981     054C                     u1070:
  1982     054C                     l1578:
  1983                           
  1984                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1985     054C  3001               	movlw	1
  1986     054D  07A0               	addwf	sprintf@f,f
  1987     054E  30FF               	movlw	-1
  1988     054F  0720               	addwf	sprintf@f,w
  1989     0550  0084               	movwf	4
  1990     0551  120A  118A  200D  120A  118A  	fcall	stringdir
  1991     0556  00AC               	movwf	sprintf@c
  1992     0557  082C               	movf	sprintf@c,w
  1993     0558  1D03               	btfss	3,2
  1994     0559  2D5B               	goto	u1081
  1995     055A  2D5C               	goto	u1080
  1996     055B                     u1081:
  1997     055B  2CA6               	goto	l1538
  1998     055C                     u1080:
  1999     055C                     l1580:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2002     055C  082B               	movf	sprintf@sp,w
  2003     055D  0084               	movwf	4
  2004     055E  1383               	bcf	3,7	;select IRP bank0
  2005     055F  0180               	clrf	0
  2006     0560                     l288:
  2007     0560  0008               	return
  2008     0561                     __end_of_sprintf:
  2009                           
  2010                           	psect	text2
  2011     0111                     __ptext2:	
  2012 ;; *************** function ___lwmod *****************
  2013 ;; Defined at:
  2014 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2015 ;; Parameters:    Size  Location     Type
  2016 ;;  divisor         2    8[COMMON] unsigned int 
  2017 ;;  dividend        2   10[COMMON] unsigned int 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  counter         1   13[COMMON] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  2    8[COMMON] unsigned int 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2, status,0
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2029 ;;      Params:         4       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0
  2031 ;;      Temps:          1       0       0       0       0
  2032 ;;      Totals:         6       0       0       0       0
  2033 ;;Total ram usage:        6 bytes
  2034 ;; Hardware stack levels used: 1
  2035 ;; This function calls:
  2036 ;;		Nothing
  2037 ;; This function is called by:
  2038 ;;		_sprintf
  2039 ;; This function uses a non-reentrant model
  2040 ;;
  2041                           
  2042     0111                     ___lwmod:	
  2043                           ;psect for function ___lwmod
  2044                           
  2045     0111                     l1476:	
  2046                           ;incstack = 0
  2047                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2048                           
  2049     0111  0878               	movf	___lwmod@divisor,w
  2050     0112  0479               	iorwf	___lwmod@divisor+1,w
  2051     0113  1903               	btfsc	3,2
  2052     0114  2916               	goto	u911
  2053     0115  2917               	goto	u910
  2054     0116                     u911:
  2055     0116  2946               	goto	l1494
  2056     0117                     u910:
  2057     0117                     l1478:
  2058     0117  01FD               	clrf	___lwmod@counter
  2059     0118  0AFD               	incf	___lwmod@counter,f
  2060     0119  2925               	goto	l1484
  2061     011A                     l1480:
  2062     011A  3001               	movlw	1
  2063     011B                     u925:
  2064     011B  1003               	clrc
  2065     011C  0DF8               	rlf	___lwmod@divisor,f
  2066     011D  0DF9               	rlf	___lwmod@divisor+1,f
  2067     011E  3EFF               	addlw	-1
  2068     011F  1D03               	skipz
  2069     0120  291B               	goto	u925
  2070     0121                     l1482:
  2071     0121  3001               	movlw	1
  2072     0122  00FC               	movwf	??___lwmod
  2073     0123  087C               	movf	??___lwmod,w
  2074     0124  07FD               	addwf	___lwmod@counter,f
  2075     0125                     l1484:
  2076     0125  1FF9               	btfss	___lwmod@divisor+1,7
  2077     0126  2928               	goto	u931
  2078     0127  2929               	goto	u930
  2079     0128                     u931:
  2080     0128  291A               	goto	l1480
  2081     0129                     u930:
  2082     0129                     l1486:
  2083     0129  0879               	movf	___lwmod@divisor+1,w
  2084     012A  027B               	subwf	___lwmod@dividend+1,w
  2085     012B  1D03               	skipz
  2086     012C  292F               	goto	u945
  2087     012D  0878               	movf	___lwmod@divisor,w
  2088     012E  027A               	subwf	___lwmod@dividend,w
  2089     012F                     u945:
  2090     012F  1C03               	skipc
  2091     0130  2932               	goto	u941
  2092     0131  2933               	goto	u940
  2093     0132                     u941:
  2094     0132  2939               	goto	l1490
  2095     0133                     u940:
  2096     0133                     l1488:
  2097     0133  0878               	movf	___lwmod@divisor,w
  2098     0134  02FA               	subwf	___lwmod@dividend,f
  2099     0135  0879               	movf	___lwmod@divisor+1,w
  2100     0136  1C03               	skipc
  2101     0137  03FB               	decf	___lwmod@dividend+1,f
  2102     0138  02FB               	subwf	___lwmod@dividend+1,f
  2103     0139                     l1490:
  2104     0139  3001               	movlw	1
  2105     013A                     u955:
  2106     013A  1003               	clrc
  2107     013B  0CF9               	rrf	___lwmod@divisor+1,f
  2108     013C  0CF8               	rrf	___lwmod@divisor,f
  2109     013D  3EFF               	addlw	-1
  2110     013E  1D03               	skipz
  2111     013F  293A               	goto	u955
  2112     0140                     l1492:
  2113     0140  3001               	movlw	1
  2114     0141  02FD               	subwf	___lwmod@counter,f
  2115     0142  1D03               	btfss	3,2
  2116     0143  2945               	goto	u961
  2117     0144  2946               	goto	u960
  2118     0145                     u961:
  2119     0145  2929               	goto	l1486
  2120     0146                     u960:
  2121     0146                     l1494:
  2122     0146  087B               	movf	___lwmod@dividend+1,w
  2123     0147  00F9               	movwf	?___lwmod+1
  2124     0148  087A               	movf	___lwmod@dividend,w
  2125     0149  00F8               	movwf	?___lwmod
  2126     014A                     l574:
  2127     014A  0008               	return
  2128     014B                     __end_of___lwmod:
  2129                           
  2130                           	psect	text3
  2131     018D                     __ptext3:	
  2132 ;; *************** function ___lwdiv *****************
  2133 ;; Defined at:
  2134 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  divisor         2    0[COMMON] unsigned int 
  2137 ;;  dividend        2    2[COMMON] unsigned int 
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;  quotient        2    5[COMMON] unsigned int 
  2140 ;;  counter         1    7[COMMON] unsigned char 
  2141 ;; Return value:  Size  Location     Type
  2142 ;;                  2    0[COMMON] unsigned int 
  2143 ;; Registers used:
  2144 ;;		wreg, status,2, status,0
  2145 ;; Tracked objects:
  2146 ;;		On entry : 0/0
  2147 ;;		On exit  : 0/0
  2148 ;;		Unchanged: 0/0
  2149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2150 ;;      Params:         4       0       0       0       0
  2151 ;;      Locals:         3       0       0       0       0
  2152 ;;      Temps:          1       0       0       0       0
  2153 ;;      Totals:         8       0       0       0       0
  2154 ;;Total ram usage:        8 bytes
  2155 ;; Hardware stack levels used: 1
  2156 ;; This function calls:
  2157 ;;		Nothing
  2158 ;; This function is called by:
  2159 ;;		_sprintf
  2160 ;; This function uses a non-reentrant model
  2161 ;;
  2162                           
  2163     018D                     ___lwdiv:	
  2164                           ;psect for function ___lwdiv
  2165                           
  2166     018D                     l1450:	
  2167                           ;incstack = 0
  2168                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2169                           
  2170     018D  01F5               	clrf	___lwdiv@quotient
  2171     018E  01F6               	clrf	___lwdiv@quotient+1
  2172     018F                     l1452:
  2173     018F  0870               	movf	___lwdiv@divisor,w
  2174     0190  0471               	iorwf	___lwdiv@divisor+1,w
  2175     0191  1903               	btfsc	3,2
  2176     0192  2994               	goto	u841
  2177     0193  2995               	goto	u840
  2178     0194                     u841:
  2179     0194  29CC               	goto	l1472
  2180     0195                     u840:
  2181     0195                     l1454:
  2182     0195  01F7               	clrf	___lwdiv@counter
  2183     0196  0AF7               	incf	___lwdiv@counter,f
  2184     0197  29A3               	goto	l1460
  2185     0198                     l1456:
  2186     0198  3001               	movlw	1
  2187     0199                     u855:
  2188     0199  1003               	clrc
  2189     019A  0DF0               	rlf	___lwdiv@divisor,f
  2190     019B  0DF1               	rlf	___lwdiv@divisor+1,f
  2191     019C  3EFF               	addlw	-1
  2192     019D  1D03               	skipz
  2193     019E  2999               	goto	u855
  2194     019F                     l1458:
  2195     019F  3001               	movlw	1
  2196     01A0  00F4               	movwf	??___lwdiv
  2197     01A1  0874               	movf	??___lwdiv,w
  2198     01A2  07F7               	addwf	___lwdiv@counter,f
  2199     01A3                     l1460:
  2200     01A3  1FF1               	btfss	___lwdiv@divisor+1,7
  2201     01A4  29A6               	goto	u861
  2202     01A5  29A7               	goto	u860
  2203     01A6                     u861:
  2204     01A6  2998               	goto	l1456
  2205     01A7                     u860:
  2206     01A7                     l1462:
  2207     01A7  3001               	movlw	1
  2208     01A8                     u875:
  2209     01A8  1003               	clrc
  2210     01A9  0DF5               	rlf	___lwdiv@quotient,f
  2211     01AA  0DF6               	rlf	___lwdiv@quotient+1,f
  2212     01AB  3EFF               	addlw	-1
  2213     01AC  1D03               	skipz
  2214     01AD  29A8               	goto	u875
  2215     01AE  0871               	movf	___lwdiv@divisor+1,w
  2216     01AF  0273               	subwf	___lwdiv@dividend+1,w
  2217     01B0  1D03               	skipz
  2218     01B1  29B4               	goto	u885
  2219     01B2  0870               	movf	___lwdiv@divisor,w
  2220     01B3  0272               	subwf	___lwdiv@dividend,w
  2221     01B4                     u885:
  2222     01B4  1C03               	skipc
  2223     01B5  29B7               	goto	u881
  2224     01B6  29B8               	goto	u880
  2225     01B7                     u881:
  2226     01B7  29BF               	goto	l1468
  2227     01B8                     u880:
  2228     01B8                     l1464:
  2229     01B8  0870               	movf	___lwdiv@divisor,w
  2230     01B9  02F2               	subwf	___lwdiv@dividend,f
  2231     01BA  0871               	movf	___lwdiv@divisor+1,w
  2232     01BB  1C03               	skipc
  2233     01BC  03F3               	decf	___lwdiv@dividend+1,f
  2234     01BD  02F3               	subwf	___lwdiv@dividend+1,f
  2235     01BE                     l1466:
  2236     01BE  1475               	bsf	___lwdiv@quotient,0
  2237     01BF                     l1468:
  2238     01BF  3001               	movlw	1
  2239     01C0                     u895:
  2240     01C0  1003               	clrc
  2241     01C1  0CF1               	rrf	___lwdiv@divisor+1,f
  2242     01C2  0CF0               	rrf	___lwdiv@divisor,f
  2243     01C3  3EFF               	addlw	-1
  2244     01C4  1D03               	skipz
  2245     01C5  29C0               	goto	u895
  2246     01C6                     l1470:
  2247     01C6  3001               	movlw	1
  2248     01C7  02F7               	subwf	___lwdiv@counter,f
  2249     01C8  1D03               	btfss	3,2
  2250     01C9  29CB               	goto	u901
  2251     01CA  29CC               	goto	u900
  2252     01CB                     u901:
  2253     01CB  29A7               	goto	l1462
  2254     01CC                     u900:
  2255     01CC                     l1472:
  2256     01CC  0876               	movf	___lwdiv@quotient+1,w
  2257     01CD  00F1               	movwf	?___lwdiv+1
  2258     01CE  0875               	movf	___lwdiv@quotient,w
  2259     01CF  00F0               	movwf	?___lwdiv
  2260     01D0                     l564:
  2261     01D0  0008               	return
  2262     01D1                     __end_of___lwdiv:
  2263                           
  2264                           	psect	text4
  2265     0051                     __ptext4:	
  2266 ;; *************** function _setup *****************
  2267 ;; Defined at:
  2268 ;;		line 155 in file "main_M.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, status,0, pclath, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2282 ;;      Params:         0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0
  2284 ;;      Temps:          0       0       0       0       0
  2285 ;;      Totals:         0       0       0       0       0
  2286 ;;Total ram usage:        0 bytes
  2287 ;; Hardware stack levels used: 1
  2288 ;; Hardware stack levels required when called: 3
  2289 ;; This function calls:
  2290 ;;		_I2C_Master_Init
  2291 ;;		_Lcd_Init_4bits
  2292 ;;		_setupINTOSC
  2293 ;; This function is called by:
  2294 ;;		_main
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298     0051                     _setup:	
  2299                           ;psect for function _setup
  2300                           
  2301     0051                     l1528:	
  2302                           ;incstack = 0
  2303                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2304                           
  2305                           
  2306                           ;main_M.c: 157:     ANSEL = 0;
  2307     0051  1683               	bsf	3,5	;RP0=1, select bank3
  2308     0052  1703               	bsf	3,6	;RP1=1, select bank3
  2309     0053  0188               	clrf	8	;volatile
  2310                           
  2311                           ;main_M.c: 158:     ANSELH = 0;
  2312     0054  0189               	clrf	9	;volatile
  2313                           
  2314                           ;main_M.c: 160:     TRISB = 0;
  2315     0055  1683               	bsf	3,5	;RP0=1, select bank1
  2316     0056  1303               	bcf	3,6	;RP1=0, select bank1
  2317     0057  0186               	clrf	6	;volatile
  2318                           
  2319                           ;main_M.c: 161:     TRISD = 0;
  2320     0058  0188               	clrf	8	;volatile
  2321                           
  2322                           ;main_M.c: 163:     PORTB = 0;
  2323     0059  1283               	bcf	3,5	;RP0=0, select bank0
  2324     005A  1303               	bcf	3,6	;RP1=0, select bank0
  2325     005B  0186               	clrf	6	;volatile
  2326                           
  2327                           ;main_M.c: 164:     PORTD = 0;
  2328     005C  0188               	clrf	8	;volatile
  2329     005D                     l1530:
  2330                           
  2331                           ;main_M.c: 166:     I2C_Master_Init(100000);
  2332     005D  3000               	movlw	0
  2333     005E  00A3               	movwf	I2C_Master_Init@c+3
  2334     005F  3001               	movlw	1
  2335     0060  00A2               	movwf	I2C_Master_Init@c+2
  2336     0061  3086               	movlw	134
  2337     0062  00A1               	movwf	I2C_Master_Init@c+1
  2338     0063  30A0               	movlw	160
  2339     0064  00A0               	movwf	I2C_Master_Init@c
  2340     0065  120A  118A  20D9  120A  118A  	fcall	_I2C_Master_Init
  2341     006A                     l1532:
  2342                           
  2343                           ;main_M.c: 167:     setupINTOSC(FOSC_8MHZ);
  2344     006A  3007               	movlw	7
  2345     006B  120A  158A  27C4  120A  118A  	fcall	_setupINTOSC
  2346     0070                     l1534:
  2347                           
  2348                           ;main_M.c: 168:     Lcd_Init_4bits();
  2349     0070  120A  118A  2376  120A  118A  	fcall	_Lcd_Init_4bits
  2350     0075                     l160:
  2351     0075  0008               	return
  2352     0076                     __end_of_setup:
  2353                           
  2354                           	psect	text5
  2355     0FC4                     __ptext5:	
  2356 ;; *************** function _setupINTOSC *****************
  2357 ;; Defined at:
  2358 ;;		line 11 in file "configINTOSC.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  F               1    wreg     enum E1292
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  F               1    1[COMMON] enum E1292
  2363 ;; Return value:  Size  Location     Type
  2364 ;;                  1    wreg      void 
  2365 ;; Registers used:
  2366 ;;		wreg, status,2, status,0
  2367 ;; Tracked objects:
  2368 ;;		On entry : 0/0
  2369 ;;		On exit  : 0/0
  2370 ;;		Unchanged: 0/0
  2371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2372 ;;      Params:         0       0       0       0       0
  2373 ;;      Locals:         1       0       0       0       0
  2374 ;;      Temps:          1       0       0       0       0
  2375 ;;      Totals:         2       0       0       0       0
  2376 ;;Total ram usage:        2 bytes
  2377 ;; Hardware stack levels used: 1
  2378 ;; This function calls:
  2379 ;;		Nothing
  2380 ;; This function is called by:
  2381 ;;		_setup
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385     0FC4                     _setupINTOSC:	
  2386                           ;psect for function _setupINTOSC
  2387                           
  2388                           
  2389                           ;incstack = 0
  2390                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  2391                           ;setupINTOSC@F stored from wreg
  2392     0FC4  00F1               	movwf	setupINTOSC@F
  2393     0FC5                     l1402:
  2394                           
  2395                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  2396     0FC5  0871               	movf	setupINTOSC@F,w
  2397     0FC6  00F0               	movwf	??_setupINTOSC
  2398     0FC7  0EF0               	swapf	??_setupINTOSC,f
  2399     0FC8  1683               	bsf	3,5	;RP0=1, select bank1
  2400     0FC9  1303               	bcf	3,6	;RP1=0, select bank1
  2401     0FCA  080F               	movf	15,w	;volatile
  2402     0FCB  0670               	xorwf	??_setupINTOSC,w
  2403     0FCC  398F               	andlw	-113
  2404     0FCD  0670               	xorwf	??_setupINTOSC,w
  2405     0FCE  008F               	movwf	15	;volatile
  2406     0FCF                     l1404:
  2407                           
  2408                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  2409     0FCF  140F               	bsf	15,0	;volatile
  2410     0FD0                     l60:
  2411     0FD0  0008               	return
  2412     0FD1                     __end_of_setupINTOSC:
  2413                           
  2414                           	psect	text6
  2415     0376                     __ptext6:	
  2416 ;; *************** function _Lcd_Init_4bits *****************
  2417 ;; Defined at:
  2418 ;;		line 66 in file "configLCD_4bits.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         0       0       0       0       0
  2434 ;;      Temps:          2       0       0       0       0
  2435 ;;      Totals:         2       0       0       0       0
  2436 ;;Total ram usage:        2 bytes
  2437 ;; Hardware stack levels used: 1
  2438 ;; Hardware stack levels required when called: 2
  2439 ;; This function calls:
  2440 ;;		_Lcd_Cmd_4bits
  2441 ;;		_Lcd_Port_4bits
  2442 ;; This function is called by:
  2443 ;;		_setup
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447     0376                     _Lcd_Init_4bits:	
  2448                           ;psect for function _Lcd_Init_4bits
  2449                           
  2450     0376                     l1406:	
  2451                           ;incstack = 0
  2452                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  2453                           
  2454                           
  2455                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  2456     0376  3000               	movlw	0
  2457     0377  120A  118A  202F  120A  118A  	fcall	_Lcd_Port_4bits
  2458     037C                     l1408:
  2459                           
  2460                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2461     037C  3034               	movlw	52
  2462     037D  00F5               	movwf	??_Lcd_Init_4bits+1
  2463     037E  30F1               	movlw	241
  2464     037F  00F4               	movwf	??_Lcd_Init_4bits
  2465     0380                     u1327:
  2466     0380  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2467     0381  2B80               	goto	u1327
  2468     0382  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2469     0383  2B80               	goto	u1327
  2470     0384  2B85               	nop2
  2471     0385                     l1410:
  2472                           
  2473                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  2474     0385  3003               	movlw	3
  2475     0386  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  2476                           
  2477                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2478     038B  300D               	movlw	13
  2479     038C  00F5               	movwf	??_Lcd_Init_4bits+1
  2480     038D  30FB               	movlw	251
  2481     038E  00F4               	movwf	??_Lcd_Init_4bits
  2482     038F                     u1337:
  2483     038F  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2484     0390  2B8F               	goto	u1337
  2485     0391  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2486     0392  2B8F               	goto	u1337
  2487     0393  2B94               	nop2
  2488     0394                     l1412:
  2489                           
  2490                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  2491     0394  3003               	movlw	3
  2492     0395  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  2493     039A                     l1414:
  2494                           
  2495                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2496     039A  301D               	movlw	29
  2497     039B  00F5               	movwf	??_Lcd_Init_4bits+1
  2498     039C  3091               	movlw	145
  2499     039D  00F4               	movwf	??_Lcd_Init_4bits
  2500     039E                     u1347:
  2501     039E  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2502     039F  2B9E               	goto	u1347
  2503     03A0  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2504     03A1  2B9E               	goto	u1347
  2505                           
  2506                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  2507     03A2  3003               	movlw	3
  2508     03A3  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  2509                           
  2510                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  2511     03A8  3002               	movlw	2
  2512     03A9  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  2513                           
  2514                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  2515     03AE  3002               	movlw	2
  2516     03AF  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  2517                           
  2518                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  2519     03B4  3008               	movlw	8
  2520     03B5  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  2521                           
  2522                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  2523     03BA  3000               	movlw	0
  2524     03BB  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  2525                           
  2526                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  2527     03C0  300C               	movlw	12
  2528     03C1  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  2529                           
  2530                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  2531     03C6  3000               	movlw	0
  2532     03C7  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  2533                           
  2534                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  2535     03CC  3006               	movlw	6
  2536     03CD  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  2537     03D2                     l90:
  2538     03D2  0008               	return
  2539     03D3                     __end_of_Lcd_Init_4bits:
  2540                           
  2541                           	psect	text7
  2542     00D9                     __ptext7:	
  2543 ;; *************** function _I2C_Master_Init *****************
  2544 ;; Defined at:
  2545 ;;		line 13 in file "configI2C.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  c               4    0[BANK0 ] const unsigned long 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, status,2, status,0, pclath, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2559 ;;      Params:         0       4       0       0       0
  2560 ;;      Locals:         0       0       0       0       0
  2561 ;;      Temps:          0       4       0       0       0
  2562 ;;      Totals:         0       8       0       0       0
  2563 ;;Total ram usage:        8 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 1
  2566 ;; This function calls:
  2567 ;;		___lldiv
  2568 ;; This function is called by:
  2569 ;;		_setup
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573     00D9                     _I2C_Master_Init:	
  2574                           ;psect for function _I2C_Master_Init
  2575                           
  2576     00D9                     l1358:	
  2577                           ;incstack = 0
  2578                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2579                           
  2580                           
  2581                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
  2582     00D9  3028               	movlw	40
  2583     00DA  1283               	bcf	3,5	;RP0=0, select bank0
  2584     00DB  1303               	bcf	3,6	;RP1=0, select bank0
  2585     00DC  0094               	movwf	20	;volatile
  2586     00DD                     l1360:
  2587                           
  2588                           ;configI2C.c: 16:     SSPCON2 = 0;
  2589     00DD  1683               	bsf	3,5	;RP0=1, select bank1
  2590     00DE  1303               	bcf	3,6	;RP1=0, select bank1
  2591     00DF  0191               	clrf	17	;volatile
  2592     00E0                     l1362:
  2593                           
  2594                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
  2595     00E0  1283               	bcf	3,5	;RP0=0, select bank0
  2596     00E1  1303               	bcf	3,6	;RP1=0, select bank0
  2597     00E2  0820               	movf	I2C_Master_Init@c,w
  2598     00E3  00A4               	movwf	??_I2C_Master_Init
  2599     00E4  0821               	movf	I2C_Master_Init@c+1,w
  2600     00E5  00A5               	movwf	??_I2C_Master_Init+1
  2601     00E6  0822               	movf	I2C_Master_Init@c+2,w
  2602     00E7  00A6               	movwf	??_I2C_Master_Init+2
  2603     00E8  0823               	movf	I2C_Master_Init@c+3,w
  2604     00E9  00A7               	movwf	??_I2C_Master_Init+3
  2605     00EA  3002               	movlw	2
  2606     00EB                     u795:
  2607     00EB  1003               	clrc
  2608     00EC  0DA4               	rlf	??_I2C_Master_Init,f
  2609     00ED  0DA5               	rlf	??_I2C_Master_Init+1,f
  2610     00EE  0DA6               	rlf	??_I2C_Master_Init+2,f
  2611     00EF  0DA7               	rlf	??_I2C_Master_Init+3,f
  2612     00F0                     u790:
  2613     00F0  3EFF               	addlw	-1
  2614     00F1  1D03               	skipz
  2615     00F2  28EB               	goto	u795
  2616     00F3  0827               	movf	??_I2C_Master_Init+3,w
  2617     00F4  00F3               	movwf	___lldiv@divisor+3
  2618     00F5  0826               	movf	??_I2C_Master_Init+2,w
  2619     00F6  00F2               	movwf	___lldiv@divisor+2
  2620     00F7  0825               	movf	??_I2C_Master_Init+1,w
  2621     00F8  00F1               	movwf	___lldiv@divisor+1
  2622     00F9  0824               	movf	??_I2C_Master_Init,w
  2623     00FA  00F0               	movwf	___lldiv@divisor
  2624     00FB  3000               	movlw	0
  2625     00FC  00F7               	movwf	___lldiv@dividend+3
  2626     00FD  307A               	movlw	122
  2627     00FE  00F6               	movwf	___lldiv@dividend+2
  2628     00FF  3012               	movlw	18
  2629     0100  00F5               	movwf	___lldiv@dividend+1
  2630     0101  3000               	movlw	0
  2631     0102  00F4               	movwf	___lldiv@dividend
  2632     0103  120A  118A  23D3  120A  118A  	fcall	___lldiv
  2633     0108  0870               	movf	?___lldiv,w
  2634     0109  3EFF               	addlw	255
  2635     010A  1683               	bsf	3,5	;RP0=1, select bank1
  2636     010B  1303               	bcf	3,6	;RP1=0, select bank1
  2637     010C  0093               	movwf	19	;volatile
  2638     010D                     l1364:
  2639                           
  2640                           ;configI2C.c: 18:     SSPSTAT = 0;
  2641     010D  0194               	clrf	20	;volatile
  2642     010E                     l1366:
  2643                           
  2644                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
  2645     010E  1587               	bsf	7,3	;volatile
  2646     010F                     l1368:
  2647                           
  2648                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
  2649     010F  1607               	bsf	7,4	;volatile
  2650     0110                     l29:
  2651     0110  0008               	return
  2652     0111                     __end_of_I2C_Master_Init:
  2653                           
  2654                           	psect	text8
  2655     03D3                     __ptext8:	
  2656 ;; *************** function ___lldiv *****************
  2657 ;; Defined at:
  2658 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2659 ;; Parameters:    Size  Location     Type
  2660 ;;  divisor         4    0[COMMON] unsigned long 
  2661 ;;  dividend        4    4[COMMON] unsigned long 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  quotient        4    9[COMMON] unsigned long 
  2664 ;;  counter         1   13[COMMON] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  4    0[COMMON] unsigned long 
  2667 ;; Registers used:
  2668 ;;		wreg, status,2, status,0
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2674 ;;      Params:         8       0       0       0       0
  2675 ;;      Locals:         5       0       0       0       0
  2676 ;;      Temps:          1       0       0       0       0
  2677 ;;      Totals:        14       0       0       0       0
  2678 ;;Total ram usage:       14 bytes
  2679 ;; Hardware stack levels used: 1
  2680 ;; This function calls:
  2681 ;;		Nothing
  2682 ;; This function is called by:
  2683 ;;		_I2C_Master_Init
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687     03D3                     ___lldiv:	
  2688                           ;psect for function ___lldiv
  2689                           
  2690     03D3                     l1334:	
  2691                           ;incstack = 0
  2692                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2693                           
  2694     03D3  3000               	movlw	0
  2695     03D4  00FC               	movwf	___lldiv@quotient+3
  2696     03D5  3000               	movlw	0
  2697     03D6  00FB               	movwf	___lldiv@quotient+2
  2698     03D7  3000               	movlw	0
  2699     03D8  00FA               	movwf	___lldiv@quotient+1
  2700     03D9  3000               	movlw	0
  2701     03DA  00F9               	movwf	___lldiv@quotient
  2702     03DB  0873               	movf	___lldiv@divisor+3,w
  2703     03DC  0472               	iorwf	___lldiv@divisor+2,w
  2704     03DD  0471               	iorwf	___lldiv@divisor+1,w
  2705     03DE  0470               	iorwf	___lldiv@divisor,w
  2706     03DF  1903               	skipnz
  2707     03E0  2BE2               	goto	u721
  2708     03E1  2BE3               	goto	u720
  2709     03E2                     u721:
  2710     03E2  2C30               	goto	l1354
  2711     03E3                     u720:
  2712     03E3                     l1336:
  2713     03E3  01FD               	clrf	___lldiv@counter
  2714     03E4  0AFD               	incf	___lldiv@counter,f
  2715     03E5  2BF3               	goto	l1340
  2716     03E6                     l1338:
  2717     03E6  3001               	movlw	1
  2718     03E7  00F8               	movwf	??___lldiv
  2719     03E8                     u735:
  2720     03E8  1003               	clrc
  2721     03E9  0DF0               	rlf	___lldiv@divisor,f
  2722     03EA  0DF1               	rlf	___lldiv@divisor+1,f
  2723     03EB  0DF2               	rlf	___lldiv@divisor+2,f
  2724     03EC  0DF3               	rlf	___lldiv@divisor+3,f
  2725     03ED  0BF8               	decfsz	??___lldiv,f
  2726     03EE  2BE8               	goto	u735
  2727     03EF  3001               	movlw	1
  2728     03F0  00F8               	movwf	??___lldiv
  2729     03F1  0878               	movf	??___lldiv,w
  2730     03F2  07FD               	addwf	___lldiv@counter,f
  2731     03F3                     l1340:
  2732     03F3  1FF3               	btfss	___lldiv@divisor+3,7
  2733     03F4  2BF6               	goto	u741
  2734     03F5  2BF7               	goto	u740
  2735     03F6                     u741:
  2736     03F6  2BE6               	goto	l1338
  2737     03F7                     u740:
  2738     03F7                     l1342:
  2739     03F7  3001               	movlw	1
  2740     03F8  00F8               	movwf	??___lldiv
  2741     03F9                     u755:
  2742     03F9  1003               	clrc
  2743     03FA  0DF9               	rlf	___lldiv@quotient,f
  2744     03FB  0DFA               	rlf	___lldiv@quotient+1,f
  2745     03FC  0DFB               	rlf	___lldiv@quotient+2,f
  2746     03FD  0DFC               	rlf	___lldiv@quotient+3,f
  2747     03FE  0BF8               	decfsz	??___lldiv,f
  2748     03FF  2BF9               	goto	u755
  2749     0400                     l1344:
  2750     0400  0873               	movf	___lldiv@divisor+3,w
  2751     0401  0277               	subwf	___lldiv@dividend+3,w
  2752     0402  1D03               	skipz
  2753     0403  2C0E               	goto	u765
  2754     0404  0872               	movf	___lldiv@divisor+2,w
  2755     0405  0276               	subwf	___lldiv@dividend+2,w
  2756     0406  1D03               	skipz
  2757     0407  2C0E               	goto	u765
  2758     0408  0871               	movf	___lldiv@divisor+1,w
  2759     0409  0275               	subwf	___lldiv@dividend+1,w
  2760     040A  1D03               	skipz
  2761     040B  2C0E               	goto	u765
  2762     040C  0870               	movf	___lldiv@divisor,w
  2763     040D  0274               	subwf	___lldiv@dividend,w
  2764     040E                     u765:
  2765     040E  1C03               	skipc
  2766     040F  2C11               	goto	u761
  2767     0410  2C12               	goto	u760
  2768     0411                     u761:
  2769     0411  2C21               	goto	l1350
  2770     0412                     u760:
  2771     0412                     l1346:
  2772     0412  0870               	movf	___lldiv@divisor,w
  2773     0413  02F4               	subwf	___lldiv@dividend,f
  2774     0414  0871               	movf	___lldiv@divisor+1,w
  2775     0415  1C03               	skipc
  2776     0416  0F71               	incfsz	___lldiv@divisor+1,w
  2777     0417  02F5               	subwf	___lldiv@dividend+1,f
  2778     0418  0872               	movf	___lldiv@divisor+2,w
  2779     0419  1C03               	skipc
  2780     041A  0F72               	incfsz	___lldiv@divisor+2,w
  2781     041B  02F6               	subwf	___lldiv@dividend+2,f
  2782     041C  0873               	movf	___lldiv@divisor+3,w
  2783     041D  1C03               	skipc
  2784     041E  0F73               	incfsz	___lldiv@divisor+3,w
  2785     041F  02F7               	subwf	___lldiv@dividend+3,f
  2786     0420                     l1348:
  2787     0420  1479               	bsf	___lldiv@quotient,0
  2788     0421                     l1350:
  2789     0421  3001               	movlw	1
  2790     0422                     u775:
  2791     0422  1003               	clrc
  2792     0423  0CF3               	rrf	___lldiv@divisor+3,f
  2793     0424  0CF2               	rrf	___lldiv@divisor+2,f
  2794     0425  0CF1               	rrf	___lldiv@divisor+1,f
  2795     0426  0CF0               	rrf	___lldiv@divisor,f
  2796     0427  3EFF               	addlw	-1
  2797     0428  1D03               	skipz
  2798     0429  2C22               	goto	u775
  2799     042A                     l1352:
  2800     042A  3001               	movlw	1
  2801     042B  02FD               	subwf	___lldiv@counter,f
  2802     042C  1D03               	btfss	3,2
  2803     042D  2C2F               	goto	u781
  2804     042E  2C30               	goto	u780
  2805     042F                     u781:
  2806     042F  2BF7               	goto	l1342
  2807     0430                     u780:
  2808     0430                     l1354:
  2809     0430  087C               	movf	___lldiv@quotient+3,w
  2810     0431  00F3               	movwf	?___lldiv+3
  2811     0432  087B               	movf	___lldiv@quotient+2,w
  2812     0433  00F2               	movwf	?___lldiv+2
  2813     0434  087A               	movf	___lldiv@quotient+1,w
  2814     0435  00F1               	movwf	?___lldiv+1
  2815     0436  0879               	movf	___lldiv@quotient,w
  2816     0437  00F0               	movwf	?___lldiv
  2817     0438                     l328:
  2818     0438  0008               	return
  2819     0439                     __end_of___lldiv:
  2820                           
  2821                           	psect	text9
  2822     0217                     __ptext9:	
  2823 ;; *************** function _leerSEG *****************
  2824 ;; Defined at:
  2825 ;;		line 13 in file "DS3231.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;		None
  2828 ;; Auto vars:     Size  Location     Type
  2829 ;;  SEG             1    9[COMMON] unsigned char 
  2830 ;; Return value:  Size  Location     Type
  2831 ;;                  1    wreg      unsigned char 
  2832 ;; Registers used:
  2833 ;;		wreg, status,2, status,0, pclath, cstack
  2834 ;; Tracked objects:
  2835 ;;		On entry : 0/0
  2836 ;;		On exit  : 0/0
  2837 ;;		Unchanged: 0/0
  2838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2839 ;;      Params:         0       0       0       0       0
  2840 ;;      Locals:         1       0       0       0       0
  2841 ;;      Temps:          3       0       0       0       0
  2842 ;;      Totals:         4       0       0       0       0
  2843 ;;Total ram usage:        4 bytes
  2844 ;; Hardware stack levels used: 1
  2845 ;; Hardware stack levels required when called: 2
  2846 ;; This function calls:
  2847 ;;		_I2C_Master_Read
  2848 ;;		_I2C_Master_RepeatedStart
  2849 ;;		_I2C_Master_Start
  2850 ;;		_I2C_Master_Stop
  2851 ;;		_I2C_Master_Write
  2852 ;;		___bmul
  2853 ;; This function is called by:
  2854 ;;		_main
  2855 ;; This function uses a non-reentrant model
  2856 ;;
  2857                           
  2858     0217                     _leerSEG:	
  2859                           ;psect for function _leerSEG
  2860                           
  2861     0217                     l1588:	
  2862                           ;incstack = 0
  2863                           ; Regs used in _leerSEG: [wreg+status,2+status,0+pclath+cstack]
  2864                           
  2865                           
  2866                           ;DS3231.c: 15:     uint8_t SEG;;DS3231.c: 17:     I2C_Master_Start();
  2867     0217  120A  158A  2798  120A  118A  	fcall	_I2C_Master_Start
  2868                           
  2869                           ;DS3231.c: 18:     I2C_Master_Write(0xD0);
  2870     021C  30D0               	movlw	208
  2871     021D  00F0               	movwf	I2C_Master_Write@d
  2872     021E  3000               	movlw	0
  2873     021F  00F1               	movwf	I2C_Master_Write@d+1
  2874     0220  120A  118A  2025  120A  118A  	fcall	_I2C_Master_Write
  2875                           
  2876                           ;DS3231.c: 19:     I2C_Master_Write(0x00);
  2877     0225  3000               	movlw	0
  2878     0226  00F0               	movwf	I2C_Master_Write@d
  2879     0227  00F1               	movwf	I2C_Master_Write@d+1
  2880     0228  120A  118A  2025  120A  118A  	fcall	_I2C_Master_Write
  2881                           
  2882                           ;DS3231.c: 20:     I2C_Master_RepeatedStart();
  2883     022D  120A  158A  278F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2884                           
  2885                           ;DS3231.c: 21:     I2C_Master_Write(0xD1);
  2886     0232  30D1               	movlw	209
  2887     0233  00F0               	movwf	I2C_Master_Write@d
  2888     0234  3000               	movlw	0
  2889     0235  00F1               	movwf	I2C_Master_Write@d+1
  2890     0236  120A  118A  2025  120A  118A  	fcall	_I2C_Master_Write
  2891                           
  2892                           ;DS3231.c: 22:     SEG = I2C_Master_Read(0);
  2893     023B  3000               	movlw	0
  2894     023C  00F0               	movwf	I2C_Master_Read@a
  2895     023D  00F1               	movwf	I2C_Master_Read@a+1
  2896     023E  120A  118A  2076  120A  118A  	fcall	_I2C_Master_Read
  2897     0243  0870               	movf	?_I2C_Master_Read,w
  2898     0244  00F9               	movwf	leerSEG@SEG
  2899                           
  2900                           ;DS3231.c: 23:     I2C_Master_Stop();
  2901     0245  120A  158A  27A1  120A  118A  	fcall	_I2C_Master_Stop
  2902     024A                     l1590:
  2903                           
  2904                           ;DS3231.c: 24:     _delay((unsigned long)((200)*(8000000/4000.0)));
  2905     024A  3003               	movlw	3
  2906     024B  00F8               	movwf	??_leerSEG+2
  2907     024C  3008               	movlw	8
  2908     024D  00F7               	movwf	??_leerSEG+1
  2909     024E  3077               	movlw	119
  2910     024F  00F6               	movwf	??_leerSEG
  2911     0250                     u1357:
  2912     0250  0BF6               	decfsz	??_leerSEG,f
  2913     0251  2A50               	goto	u1357
  2914     0252  0BF7               	decfsz	??_leerSEG+1,f
  2915     0253  2A50               	goto	u1357
  2916     0254  0BF8               	decfsz	??_leerSEG+2,f
  2917     0255  2A50               	goto	u1357
  2918     0256                     l1592:
  2919                           
  2920                           ;DS3231.c: 26:     SEG = (SEG >> 4) * 10 + (SEG & 0x0F);
  2921     0256  300F               	movlw	15
  2922     0257  0579               	andwf	leerSEG@SEG,w
  2923     0258  00F6               	movwf	??_leerSEG
  2924     0259  300A               	movlw	10
  2925     025A  00F0               	movwf	___bmul@multiplicand
  2926     025B  0879               	movf	leerSEG@SEG,w
  2927     025C  00F7               	movwf	??_leerSEG+1
  2928     025D  3004               	movlw	4
  2929     025E                     u1095:
  2930     025E  1003               	clrc
  2931     025F  0CF7               	rrf	??_leerSEG+1,f
  2932     0260  3EFF               	addlw	-1
  2933     0261  1D03               	skipz
  2934     0262  2A5E               	goto	u1095
  2935     0263  0877               	movf	??_leerSEG+1,w
  2936     0264  120A  158A  27D1  120A  118A  	fcall	___bmul
  2937     0269  0776               	addwf	??_leerSEG,w
  2938     026A  00F9               	movwf	leerSEG@SEG
  2939                           
  2940                           ;DS3231.c: 28:     return SEG;
  2941     026B  0879               	movf	leerSEG@SEG,w
  2942     026C                     l175:
  2943     026C  0008               	return
  2944     026D                     __end_of_leerSEG:
  2945                           
  2946                           	psect	text10
  2947     02C4                     __ptext10:	
  2948 ;; *************** function _leerMIN *****************
  2949 ;; Defined at:
  2950 ;;		line 31 in file "DS3231.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  MIN             1    9[COMMON] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  1    wreg      unsigned char 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0, pclath, cstack
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         0       0       0       0       0
  2965 ;;      Locals:         1       0       0       0       0
  2966 ;;      Temps:          3       0       0       0       0
  2967 ;;      Totals:         4       0       0       0       0
  2968 ;;Total ram usage:        4 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 2
  2971 ;; This function calls:
  2972 ;;		_I2C_Master_Read
  2973 ;;		_I2C_Master_RepeatedStart
  2974 ;;		_I2C_Master_Start
  2975 ;;		_I2C_Master_Stop
  2976 ;;		_I2C_Master_Write
  2977 ;;		___bmul
  2978 ;; This function is called by:
  2979 ;;		_main
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983     02C4                     _leerMIN:	
  2984                           ;psect for function _leerMIN
  2985                           
  2986     02C4                     l1596:	
  2987                           ;incstack = 0
  2988                           ; Regs used in _leerMIN: [wreg+status,2+status,0+pclath+cstack]
  2989                           
  2990                           
  2991                           ;DS3231.c: 33:     uint8_t MIN;;DS3231.c: 35:     I2C_Master_Start();
  2992     02C4  120A  158A  2798  120A  118A  	fcall	_I2C_Master_Start
  2993                           
  2994                           ;DS3231.c: 36:     I2C_Master_Write(0xD0);
  2995     02C9  30D0               	movlw	208
  2996     02CA  00F0               	movwf	I2C_Master_Write@d
  2997     02CB  3000               	movlw	0
  2998     02CC  00F1               	movwf	I2C_Master_Write@d+1
  2999     02CD  120A  118A  2025  120A  118A  	fcall	_I2C_Master_Write
  3000                           
  3001                           ;DS3231.c: 37:     I2C_Master_Write(0x01);
  3002     02D2  3001               	movlw	1
  3003     02D3  00F0               	movwf	I2C_Master_Write@d
  3004     02D4  3000               	movlw	0
  3005     02D5  00F1               	movwf	I2C_Master_Write@d+1
  3006     02D6  120A  118A  2025  120A  118A  	fcall	_I2C_Master_Write
  3007                           
  3008                           ;DS3231.c: 38:     I2C_Master_RepeatedStart();
  3009     02DB  120A  158A  278F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3010                           
  3011                           ;DS3231.c: 39:     I2C_Master_Write(0xD1);
  3012     02E0  30D1               	movlw	209
  3013     02E1  00F0               	movwf	I2C_Master_Write@d
  3014     02E2  3000               	movlw	0
  3015     02E3  00F1               	movwf	I2C_Master_Write@d+1
  3016     02E4  120A  118A  2025  120A  118A  	fcall	_I2C_Master_Write
  3017                           
  3018                           ;DS3231.c: 40:     MIN = I2C_Master_Read(0);
  3019     02E9  3000               	movlw	0
  3020     02EA  00F0               	movwf	I2C_Master_Read@a
  3021     02EB  00F1               	movwf	I2C_Master_Read@a+1
  3022     02EC  120A  118A  2076  120A  118A  	fcall	_I2C_Master_Read
  3023     02F1  0870               	movf	?_I2C_Master_Read,w
  3024     02F2  00F9               	movwf	leerMIN@MIN
  3025                           
  3026                           ;DS3231.c: 41:     I2C_Master_Stop();
  3027     02F3  120A  158A  27A1  120A  118A  	fcall	_I2C_Master_Stop
  3028     02F8                     l1598:
  3029                           
  3030                           ;DS3231.c: 42:     _delay((unsigned long)((200)*(8000000/4000.0)));
  3031     02F8  3003               	movlw	3
  3032     02F9  00F8               	movwf	??_leerMIN+2
  3033     02FA  3008               	movlw	8
  3034     02FB  00F7               	movwf	??_leerMIN+1
  3035     02FC  3077               	movlw	119
  3036     02FD  00F6               	movwf	??_leerMIN
  3037     02FE                     u1367:
  3038     02FE  0BF6               	decfsz	??_leerMIN,f
  3039     02FF  2AFE               	goto	u1367
  3040     0300  0BF7               	decfsz	??_leerMIN+1,f
  3041     0301  2AFE               	goto	u1367
  3042     0302  0BF8               	decfsz	??_leerMIN+2,f
  3043     0303  2AFE               	goto	u1367
  3044     0304                     l1600:
  3045                           
  3046                           ;DS3231.c: 44:     MIN = (MIN >> 4) * 10 + (MIN & 0x0F);
  3047     0304  300F               	movlw	15
  3048     0305  0579               	andwf	leerMIN@MIN,w
  3049     0306  00F6               	movwf	??_leerMIN
  3050     0307  300A               	movlw	10
  3051     0308  00F0               	movwf	___bmul@multiplicand
  3052     0309  0879               	movf	leerMIN@MIN,w
  3053     030A  00F7               	movwf	??_leerMIN+1
  3054     030B  3004               	movlw	4
  3055     030C                     u1105:
  3056     030C  1003               	clrc
  3057     030D  0CF7               	rrf	??_leerMIN+1,f
  3058     030E  3EFF               	addlw	-1
  3059     030F  1D03               	skipz
  3060     0310  2B0C               	goto	u1105
  3061     0311  0877               	movf	??_leerMIN+1,w
  3062     0312  120A  158A  27D1  120A  118A  	fcall	___bmul
  3063     0317  0776               	addwf	??_leerMIN,w
  3064     0318  00F9               	movwf	leerMIN@MIN
  3065                           
  3066                           ;DS3231.c: 46:     return MIN;
  3067     0319  0879               	movf	leerMIN@MIN,w
  3068     031A                     l178:
  3069     031A  0008               	return
  3070     031B                     __end_of_leerMIN:
  3071                           
  3072                           	psect	text11
  3073     026D                     __ptext11:	
  3074 ;; *************** function _leerHOR *****************
  3075 ;; Defined at:
  3076 ;;		line 49 in file "DS3231.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;  HOR             1    9[COMMON] unsigned char 
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      unsigned char 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0, pclath, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3090 ;;      Params:         0       0       0       0       0
  3091 ;;      Locals:         1       0       0       0       0
  3092 ;;      Temps:          3       0       0       0       0
  3093 ;;      Totals:         4       0       0       0       0
  3094 ;;Total ram usage:        4 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; Hardware stack levels required when called: 2
  3097 ;; This function calls:
  3098 ;;		_I2C_Master_Read
  3099 ;;		_I2C_Master_RepeatedStart
  3100 ;;		_I2C_Master_Start
  3101 ;;		_I2C_Master_Stop
  3102 ;;		_I2C_Master_Write
  3103 ;;		___bmul
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109     026D                     _leerHOR:	
  3110                           ;psect for function _leerHOR
  3111                           
  3112     026D                     l1604:	
  3113                           ;incstack = 0
  3114                           ; Regs used in _leerHOR: [wreg+status,2+status,0+pclath+cstack]
  3115                           
  3116                           
  3117                           ;DS3231.c: 51:     uint8_t HOR;;DS3231.c: 53:     I2C_Master_Start();
  3118     026D  120A  158A  2798  120A  118A  	fcall	_I2C_Master_Start
  3119                           
  3120                           ;DS3231.c: 54:     I2C_Master_Write(0xD0);
  3121     0272  30D0               	movlw	208
  3122     0273  00F0               	movwf	I2C_Master_Write@d
  3123     0274  3000               	movlw	0
  3124     0275  00F1               	movwf	I2C_Master_Write@d+1
  3125     0276  120A  118A  2025  120A  118A  	fcall	_I2C_Master_Write
  3126                           
  3127                           ;DS3231.c: 55:     I2C_Master_Write(0x02);
  3128     027B  3002               	movlw	2
  3129     027C  00F0               	movwf	I2C_Master_Write@d
  3130     027D  3000               	movlw	0
  3131     027E  00F1               	movwf	I2C_Master_Write@d+1
  3132     027F  120A  118A  2025  120A  118A  	fcall	_I2C_Master_Write
  3133                           
  3134                           ;DS3231.c: 56:     I2C_Master_RepeatedStart();
  3135     0284  120A  158A  278F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3136                           
  3137                           ;DS3231.c: 57:     I2C_Master_Write(0xD1);
  3138     0289  30D1               	movlw	209
  3139     028A  00F0               	movwf	I2C_Master_Write@d
  3140     028B  3000               	movlw	0
  3141     028C  00F1               	movwf	I2C_Master_Write@d+1
  3142     028D  120A  118A  2025  120A  118A  	fcall	_I2C_Master_Write
  3143                           
  3144                           ;DS3231.c: 58:     HOR = I2C_Master_Read(0);
  3145     0292  3000               	movlw	0
  3146     0293  00F0               	movwf	I2C_Master_Read@a
  3147     0294  00F1               	movwf	I2C_Master_Read@a+1
  3148     0295  120A  118A  2076  120A  118A  	fcall	_I2C_Master_Read
  3149     029A  0870               	movf	?_I2C_Master_Read,w
  3150     029B  00F9               	movwf	leerHOR@HOR
  3151                           
  3152                           ;DS3231.c: 59:     I2C_Master_Stop();
  3153     029C  120A  158A  27A1  120A  118A  	fcall	_I2C_Master_Stop
  3154     02A1                     l1606:
  3155                           
  3156                           ;DS3231.c: 60:     _delay((unsigned long)((200)*(8000000/4000.0)));
  3157     02A1  3003               	movlw	3
  3158     02A2  00F8               	movwf	??_leerHOR+2
  3159     02A3  3008               	movlw	8
  3160     02A4  00F7               	movwf	??_leerHOR+1
  3161     02A5  3077               	movlw	119
  3162     02A6  00F6               	movwf	??_leerHOR
  3163     02A7                     u1377:
  3164     02A7  0BF6               	decfsz	??_leerHOR,f
  3165     02A8  2AA7               	goto	u1377
  3166     02A9  0BF7               	decfsz	??_leerHOR+1,f
  3167     02AA  2AA7               	goto	u1377
  3168     02AB  0BF8               	decfsz	??_leerHOR+2,f
  3169     02AC  2AA7               	goto	u1377
  3170     02AD                     l1608:
  3171                           
  3172                           ;DS3231.c: 62:     HOR = (HOR >> 4) * 10 + (HOR & 0x0F);
  3173     02AD  300F               	movlw	15
  3174     02AE  0579               	andwf	leerHOR@HOR,w
  3175     02AF  00F6               	movwf	??_leerHOR
  3176     02B0  300A               	movlw	10
  3177     02B1  00F0               	movwf	___bmul@multiplicand
  3178     02B2  0879               	movf	leerHOR@HOR,w
  3179     02B3  00F7               	movwf	??_leerHOR+1
  3180     02B4  3004               	movlw	4
  3181     02B5                     u1115:
  3182     02B5  1003               	clrc
  3183     02B6  0CF7               	rrf	??_leerHOR+1,f
  3184     02B7  3EFF               	addlw	-1
  3185     02B8  1D03               	skipz
  3186     02B9  2AB5               	goto	u1115
  3187     02BA  0877               	movf	??_leerHOR+1,w
  3188     02BB  120A  158A  27D1  120A  118A  	fcall	___bmul
  3189     02C0  0776               	addwf	??_leerHOR,w
  3190     02C1  00F9               	movwf	leerHOR@HOR
  3191                           
  3192                           ;DS3231.c: 64:     return HOR;
  3193     02C2  0879               	movf	leerHOR@HOR,w
  3194     02C3                     l181:
  3195     02C3  0008               	return
  3196     02C4                     __end_of_leerHOR:
  3197                           
  3198                           	psect	text12
  3199     0FD1                     __ptext12:	
  3200 ;; *************** function ___bmul *****************
  3201 ;; Defined at:
  3202 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  multiplier      1    wreg     unsigned char 
  3205 ;;  multiplicand    1    0[COMMON] unsigned char 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  multiplier      1    3[COMMON] unsigned char 
  3208 ;;  product         1    2[COMMON] unsigned char 
  3209 ;; Return value:  Size  Location     Type
  3210 ;;                  1    wreg      unsigned char 
  3211 ;; Registers used:
  3212 ;;		wreg, status,2, status,0
  3213 ;; Tracked objects:
  3214 ;;		On entry : 0/0
  3215 ;;		On exit  : 0/0
  3216 ;;		Unchanged: 0/0
  3217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3218 ;;      Params:         1       0       0       0       0
  3219 ;;      Locals:         2       0       0       0       0
  3220 ;;      Temps:          1       0       0       0       0
  3221 ;;      Totals:         4       0       0       0       0
  3222 ;;Total ram usage:        4 bytes
  3223 ;; Hardware stack levels used: 1
  3224 ;; This function calls:
  3225 ;;		Nothing
  3226 ;; This function is called by:
  3227 ;;		_leerSEG
  3228 ;;		_leerMIN
  3229 ;;		_leerHOR
  3230 ;; This function uses a non-reentrant model
  3231 ;;
  3232                           
  3233     0FD1                     ___bmul:	
  3234                           ;psect for function ___bmul
  3235                           
  3236                           
  3237                           ;incstack = 0
  3238                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3239                           ;___bmul@multiplier stored from wreg
  3240     0FD1  00F3               	movwf	___bmul@multiplier
  3241     0FD2                     l1436:
  3242     0FD2  01F2               	clrf	___bmul@product
  3243     0FD3                     l1438:
  3244     0FD3  1C73               	btfss	___bmul@multiplier,0
  3245     0FD4  2FD6               	goto	u821
  3246     0FD5  2FD7               	goto	u820
  3247     0FD6                     u821:
  3248     0FD6  2FDB               	goto	l1442
  3249     0FD7                     u820:
  3250     0FD7                     l1440:
  3251     0FD7  0870               	movf	___bmul@multiplicand,w
  3252     0FD8  00F1               	movwf	??___bmul
  3253     0FD9  0871               	movf	??___bmul,w
  3254     0FDA  07F2               	addwf	___bmul@product,f
  3255     0FDB                     l1442:
  3256     0FDB  1003               	clrc
  3257     0FDC  0DF0               	rlf	___bmul@multiplicand,f
  3258     0FDD                     l1444:
  3259     0FDD  1003               	clrc
  3260     0FDE  0CF3               	rrf	___bmul@multiplier,f
  3261     0FDF  0873               	movf	___bmul@multiplier,w
  3262     0FE0  1D03               	btfss	3,2
  3263     0FE1  2FE3               	goto	u831
  3264     0FE2  2FE4               	goto	u830
  3265     0FE3                     u831:
  3266     0FE3  2FD3               	goto	l1438
  3267     0FE4                     u830:
  3268     0FE4                     l1446:
  3269     0FE4  0872               	movf	___bmul@product,w
  3270     0FE5                     l318:
  3271     0FE5  0008               	return
  3272     0FE6                     __end_of___bmul:
  3273                           
  3274                           	psect	text13
  3275     0025                     __ptext13:	
  3276 ;; *************** function _I2C_Master_Write *****************
  3277 ;; Defined at:
  3278 ;;		line 62 in file "configI2C.c"
  3279 ;; Parameters:    Size  Location     Type
  3280 ;;  d               2    0[COMMON] unsigned int 
  3281 ;; Auto vars:     Size  Location     Type
  3282 ;;		None
  3283 ;; Return value:  Size  Location     Type
  3284 ;;                  1    wreg      void 
  3285 ;; Registers used:
  3286 ;;		wreg, status,2, status,0, pclath, cstack
  3287 ;; Tracked objects:
  3288 ;;		On entry : 0/0
  3289 ;;		On exit  : 0/0
  3290 ;;		Unchanged: 0/0
  3291 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3292 ;;      Params:         2       0       0       0       0
  3293 ;;      Locals:         0       0       0       0       0
  3294 ;;      Temps:          0       0       0       0       0
  3295 ;;      Totals:         2       0       0       0       0
  3296 ;;Total ram usage:        2 bytes
  3297 ;; Hardware stack levels used: 1
  3298 ;; Hardware stack levels required when called: 1
  3299 ;; This function calls:
  3300 ;;		_I2C_Master_Wait
  3301 ;; This function is called by:
  3302 ;;		_main
  3303 ;;		_leerSEG
  3304 ;;		_leerMIN
  3305 ;;		_leerHOR
  3306 ;; This function uses a non-reentrant model
  3307 ;;
  3308                           
  3309     0025                     _I2C_Master_Write:	
  3310                           ;psect for function _I2C_Master_Write
  3311                           
  3312     0025                     l1382:	
  3313                           ;incstack = 0
  3314                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3315                           
  3316                           
  3317                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
  3318     0025  120A  158A  27B7  120A  118A  	fcall	_I2C_Master_Wait
  3319     002A                     l1384:
  3320                           
  3321                           ;configI2C.c: 65:     SSPBUF = d;
  3322     002A  0870               	movf	I2C_Master_Write@d,w
  3323     002B  1283               	bcf	3,5	;RP0=0, select bank0
  3324     002C  1303               	bcf	3,6	;RP1=0, select bank0
  3325     002D  0093               	movwf	19	;volatile
  3326     002E                     l47:
  3327     002E  0008               	return
  3328     002F                     __end_of_I2C_Master_Write:
  3329                           
  3330                           	psect	text14
  3331     0FA1                     __ptext14:	
  3332 ;; *************** function _I2C_Master_Stop *****************
  3333 ;; Defined at:
  3334 ;;		line 52 in file "configI2C.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;		None
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;		None
  3339 ;; Return value:  Size  Location     Type
  3340 ;;                  1    wreg      void 
  3341 ;; Registers used:
  3342 ;;		wreg, status,2, status,0, pclath, cstack
  3343 ;; Tracked objects:
  3344 ;;		On entry : 0/0
  3345 ;;		On exit  : 0/0
  3346 ;;		Unchanged: 0/0
  3347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3348 ;;      Params:         0       0       0       0       0
  3349 ;;      Locals:         0       0       0       0       0
  3350 ;;      Temps:          0       0       0       0       0
  3351 ;;      Totals:         0       0       0       0       0
  3352 ;;Total ram usage:        0 bytes
  3353 ;; Hardware stack levels used: 1
  3354 ;; Hardware stack levels required when called: 1
  3355 ;; This function calls:
  3356 ;;		_I2C_Master_Wait
  3357 ;; This function is called by:
  3358 ;;		_main
  3359 ;;		_leerSEG
  3360 ;;		_leerMIN
  3361 ;;		_leerHOR
  3362 ;; This function uses a non-reentrant model
  3363 ;;
  3364                           
  3365     0FA1                     _I2C_Master_Stop:	
  3366                           ;psect for function _I2C_Master_Stop
  3367                           
  3368     0FA1                     l1378:	
  3369                           ;incstack = 0
  3370                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3371                           
  3372                           
  3373                           ;configI2C.c: 54:     I2C_Master_Wait();
  3374     0FA1  120A  158A  27B7  120A  158A  	fcall	_I2C_Master_Wait
  3375     0FA6                     l1380:
  3376                           
  3377                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
  3378     0FA6  1683               	bsf	3,5	;RP0=1, select bank1
  3379     0FA7  1303               	bcf	3,6	;RP1=0, select bank1
  3380     0FA8  1511               	bsf	17,2	;volatile
  3381     0FA9                     l44:
  3382     0FA9  0008               	return
  3383     0FAA                     __end_of_I2C_Master_Stop:
  3384                           
  3385                           	psect	text15
  3386     0F98                     __ptext15:	
  3387 ;; *************** function _I2C_Master_Start *****************
  3388 ;; Defined at:
  3389 ;;		line 36 in file "configI2C.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;		None
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  1    wreg      void 
  3396 ;; Registers used:
  3397 ;;		wreg, status,2, status,0, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3403 ;;      Params:         0       0       0       0       0
  3404 ;;      Locals:         0       0       0       0       0
  3405 ;;      Temps:          0       0       0       0       0
  3406 ;;      Totals:         0       0       0       0       0
  3407 ;;Total ram usage:        0 bytes
  3408 ;; Hardware stack levels used: 1
  3409 ;; Hardware stack levels required when called: 1
  3410 ;; This function calls:
  3411 ;;		_I2C_Master_Wait
  3412 ;; This function is called by:
  3413 ;;		_main
  3414 ;;		_leerSEG
  3415 ;;		_leerMIN
  3416 ;;		_leerHOR
  3417 ;; This function uses a non-reentrant model
  3418 ;;
  3419                           
  3420     0F98                     _I2C_Master_Start:	
  3421                           ;psect for function _I2C_Master_Start
  3422                           
  3423     0F98                     l1370:	
  3424                           ;incstack = 0
  3425                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3426                           
  3427                           
  3428                           ;configI2C.c: 38:     I2C_Master_Wait();
  3429     0F98  120A  158A  27B7  120A  158A  	fcall	_I2C_Master_Wait
  3430     0F9D                     l1372:
  3431                           
  3432                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
  3433     0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  3434     0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  3435     0F9F  1411               	bsf	17,0	;volatile
  3436     0FA0                     l38:
  3437     0FA0  0008               	return
  3438     0FA1                     __end_of_I2C_Master_Start:
  3439                           
  3440                           	psect	text16
  3441     0F8F                     __ptext16:	
  3442 ;; *************** function _I2C_Master_RepeatedStart *****************
  3443 ;; Defined at:
  3444 ;;		line 44 in file "configI2C.c"
  3445 ;; Parameters:    Size  Location     Type
  3446 ;;		None
  3447 ;; Auto vars:     Size  Location     Type
  3448 ;;		None
  3449 ;; Return value:  Size  Location     Type
  3450 ;;                  1    wreg      void 
  3451 ;; Registers used:
  3452 ;;		wreg, status,2, status,0, pclath, cstack
  3453 ;; Tracked objects:
  3454 ;;		On entry : 0/0
  3455 ;;		On exit  : 0/0
  3456 ;;		Unchanged: 0/0
  3457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3458 ;;      Params:         0       0       0       0       0
  3459 ;;      Locals:         0       0       0       0       0
  3460 ;;      Temps:          0       0       0       0       0
  3461 ;;      Totals:         0       0       0       0       0
  3462 ;;Total ram usage:        0 bytes
  3463 ;; Hardware stack levels used: 1
  3464 ;; Hardware stack levels required when called: 1
  3465 ;; This function calls:
  3466 ;;		_I2C_Master_Wait
  3467 ;; This function is called by:
  3468 ;;		_leerSEG
  3469 ;;		_leerMIN
  3470 ;;		_leerHOR
  3471 ;; This function uses a non-reentrant model
  3472 ;;
  3473                           
  3474     0F8F                     _I2C_Master_RepeatedStart:	
  3475                           ;psect for function _I2C_Master_RepeatedStart
  3476                           
  3477     0F8F                     l1374:	
  3478                           ;incstack = 0
  3479                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3480                           
  3481                           
  3482                           ;configI2C.c: 46:     I2C_Master_Wait();
  3483     0F8F  120A  158A  27B7  120A  158A  	fcall	_I2C_Master_Wait
  3484     0F94                     l1376:
  3485                           
  3486                           ;configI2C.c: 47:     SSPCON2bits.RSEN = 1;
  3487     0F94  1683               	bsf	3,5	;RP0=1, select bank1
  3488     0F95  1303               	bcf	3,6	;RP1=0, select bank1
  3489     0F96  1491               	bsf	17,1	;volatile
  3490     0F97                     l41:
  3491     0F97  0008               	return
  3492     0F98                     __end_of_I2C_Master_RepeatedStart:
  3493                           
  3494                           	psect	text17
  3495     0076                     __ptext17:	
  3496 ;; *************** function _I2C_Master_Read *****************
  3497 ;; Defined at:
  3498 ;;		line 71 in file "configI2C.c"
  3499 ;; Parameters:    Size  Location     Type
  3500 ;;  a               2    0[COMMON] unsigned short 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  temp            2    4[COMMON] unsigned short 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  2    0[COMMON] unsigned short 
  3505 ;; Registers used:
  3506 ;;		wreg, status,2, status,0, pclath, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3512 ;;      Params:         2       0       0       0       0
  3513 ;;      Locals:         2       0       0       0       0
  3514 ;;      Temps:          2       0       0       0       0
  3515 ;;      Totals:         6       0       0       0       0
  3516 ;;Total ram usage:        6 bytes
  3517 ;; Hardware stack levels used: 1
  3518 ;; Hardware stack levels required when called: 1
  3519 ;; This function calls:
  3520 ;;		_I2C_Master_Wait
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;;		_leerSEG
  3524 ;;		_leerMIN
  3525 ;;		_leerHOR
  3526 ;; This function uses a non-reentrant model
  3527 ;;
  3528                           
  3529     0076                     _I2C_Master_Read:	
  3530                           ;psect for function _I2C_Master_Read
  3531                           
  3532     0076                     l1386:	
  3533                           ;incstack = 0
  3534                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3535                           
  3536                           
  3537                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
  3538     0076  120A  158A  27B7  120A  118A  	fcall	_I2C_Master_Wait
  3539     007B                     l1388:
  3540                           
  3541                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
  3542     007B  1683               	bsf	3,5	;RP0=1, select bank1
  3543     007C  1303               	bcf	3,6	;RP1=0, select bank1
  3544     007D  1591               	bsf	17,3	;volatile
  3545                           
  3546                           ;configI2C.c: 76:     I2C_Master_Wait();
  3547     007E  120A  158A  27B7  120A  118A  	fcall	_I2C_Master_Wait
  3548     0083                     l1390:
  3549                           
  3550                           ;configI2C.c: 77:     temp = SSPBUF;
  3551     0083  1283               	bcf	3,5	;RP0=0, select bank0
  3552     0084  1303               	bcf	3,6	;RP1=0, select bank0
  3553     0085  0813               	movf	19,w	;volatile
  3554     0086  00F2               	movwf	??_I2C_Master_Read
  3555     0087  01F3               	clrf	??_I2C_Master_Read+1
  3556     0088  0872               	movf	??_I2C_Master_Read,w
  3557     0089  00F4               	movwf	I2C_Master_Read@temp
  3558     008A  0873               	movf	??_I2C_Master_Read+1,w
  3559     008B  00F5               	movwf	I2C_Master_Read@temp+1
  3560     008C                     l1392:
  3561                           
  3562                           ;configI2C.c: 78:     I2C_Master_Wait();
  3563     008C  120A  158A  27B7  120A  118A  	fcall	_I2C_Master_Wait
  3564     0091                     l1394:
  3565                           
  3566                           ;configI2C.c: 79:     if(a == 1){
  3567     0091  0370               	decf	I2C_Master_Read@a,w
  3568     0092  0471               	iorwf	I2C_Master_Read@a+1,w
  3569     0093  1D03               	btfss	3,2
  3570     0094  2896               	goto	u801
  3571     0095  2897               	goto	u800
  3572     0096                     u801:
  3573     0096  289B               	goto	l50
  3574     0097                     u800:
  3575     0097                     l1396:
  3576                           
  3577                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
  3578     0097  1683               	bsf	3,5	;RP0=1, select bank1
  3579     0098  1303               	bcf	3,6	;RP1=0, select bank1
  3580     0099  1291               	bcf	17,5	;volatile
  3581                           
  3582                           ;configI2C.c: 81:     }else{
  3583     009A  289E               	goto	l51
  3584     009B                     l50:
  3585                           
  3586                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
  3587     009B  1683               	bsf	3,5	;RP0=1, select bank1
  3588     009C  1303               	bcf	3,6	;RP1=0, select bank1
  3589     009D  1691               	bsf	17,5	;volatile
  3590     009E                     l51:	
  3591                           ;configI2C.c: 83:     }
  3592                           
  3593                           
  3594                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
  3595     009E  1611               	bsf	17,4	;volatile
  3596     009F                     l1398:
  3597                           
  3598                           ;configI2C.c: 85:     return temp;
  3599     009F  0875               	movf	I2C_Master_Read@temp+1,w
  3600     00A0  00F1               	movwf	?_I2C_Master_Read+1
  3601     00A1  0874               	movf	I2C_Master_Read@temp,w
  3602     00A2  00F0               	movwf	?_I2C_Master_Read
  3603     00A3                     l52:
  3604     00A3  0008               	return
  3605     00A4                     __end_of_I2C_Master_Read:
  3606                           
  3607                           	psect	text18
  3608     0FB7                     __ptext18:	
  3609 ;; *************** function _I2C_Master_Wait *****************
  3610 ;; Defined at:
  3611 ;;		line 29 in file "configI2C.c"
  3612 ;; Parameters:    Size  Location     Type
  3613 ;;		None
  3614 ;; Auto vars:     Size  Location     Type
  3615 ;;		None
  3616 ;; Return value:  Size  Location     Type
  3617 ;;                  1    wreg      void 
  3618 ;; Registers used:
  3619 ;;		wreg, status,2
  3620 ;; Tracked objects:
  3621 ;;		On entry : 0/0
  3622 ;;		On exit  : 0/0
  3623 ;;		Unchanged: 0/0
  3624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3625 ;;      Params:         0       0       0       0       0
  3626 ;;      Locals:         0       0       0       0       0
  3627 ;;      Temps:          0       0       0       0       0
  3628 ;;      Totals:         0       0       0       0       0
  3629 ;;Total ram usage:        0 bytes
  3630 ;; Hardware stack levels used: 1
  3631 ;; This function calls:
  3632 ;;		Nothing
  3633 ;; This function is called by:
  3634 ;;		_I2C_Master_Start
  3635 ;;		_I2C_Master_RepeatedStart
  3636 ;;		_I2C_Master_Stop
  3637 ;;		_I2C_Master_Write
  3638 ;;		_I2C_Master_Read
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642     0FB7                     _I2C_Master_Wait:	
  3643                           ;psect for function _I2C_Master_Wait
  3644                           
  3645     0FB7                     l1320:	
  3646                           ;incstack = 0
  3647                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3648                           
  3649     0FB7                     l32:	
  3650                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3651                           
  3652     0FB7  1683               	bsf	3,5	;RP0=1, select bank1
  3653     0FB8  1303               	bcf	3,6	;RP1=0, select bank1
  3654     0FB9  1914               	btfsc	20,2	;volatile
  3655     0FBA  2FBC               	goto	u701
  3656     0FBB  2FBD               	goto	u700
  3657     0FBC                     u701:
  3658     0FBC  2FB7               	goto	l32
  3659     0FBD                     u700:
  3660     0FBD                     l1322:
  3661     0FBD  0811               	movf	17,w	;volatile
  3662     0FBE  391F               	andlw	31
  3663     0FBF  1D03               	btfss	3,2
  3664     0FC0  2FC2               	goto	u711
  3665     0FC1  2FC3               	goto	u710
  3666     0FC2                     u711:
  3667     0FC2  2FB7               	goto	l32
  3668     0FC3                     u710:
  3669     0FC3                     l35:
  3670     0FC3  0008               	return
  3671     0FC4                     __end_of_I2C_Master_Wait:
  3672                           
  3673                           	psect	text19
  3674     031B                     __ptext19:	
  3675 ;; *************** function ___awmod *****************
  3676 ;; Defined at:
  3677 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  divisor         2    9[COMMON] int 
  3680 ;;  dividend        2   11[COMMON] int 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;  sign            1    1[BANK0 ] unsigned char 
  3683 ;;  counter         1    0[BANK0 ] unsigned char 
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  2    9[COMMON] int 
  3686 ;; Registers used:
  3687 ;;		wreg, status,2, status,0
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3693 ;;      Params:         4       0       0       0       0
  3694 ;;      Locals:         0       2       0       0       0
  3695 ;;      Temps:          1       0       0       0       0
  3696 ;;      Totals:         5       2       0       0       0
  3697 ;;Total ram usage:        7 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_main
  3703 ;; This function uses a non-reentrant model
  3704 ;;
  3705                           
  3706     031B                     ___awmod:	
  3707                           ;psect for function ___awmod
  3708                           
  3709     031B                     l1656:	
  3710                           ;incstack = 0
  3711                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3712                           
  3713     031B  1283               	bcf	3,5	;RP0=0, select bank0
  3714     031C  1303               	bcf	3,6	;RP1=0, select bank0
  3715     031D  01A1               	clrf	___awmod@sign
  3716     031E                     l1658:
  3717     031E  1FFC               	btfss	___awmod@dividend+1,7
  3718     031F  2B21               	goto	u1221
  3719     0320  2B22               	goto	u1220
  3720     0321                     u1221:
  3721     0321  2B29               	goto	l1664
  3722     0322                     u1220:
  3723     0322                     l1660:
  3724     0322  09FB               	comf	___awmod@dividend,f
  3725     0323  09FC               	comf	___awmod@dividend+1,f
  3726     0324  0AFB               	incf	___awmod@dividend,f
  3727     0325  1903               	skipnz
  3728     0326  0AFC               	incf	___awmod@dividend+1,f
  3729     0327                     l1662:
  3730     0327  01A1               	clrf	___awmod@sign
  3731     0328  0AA1               	incf	___awmod@sign,f
  3732     0329                     l1664:
  3733     0329  1FFA               	btfss	___awmod@divisor+1,7
  3734     032A  2B2C               	goto	u1231
  3735     032B  2B2D               	goto	u1230
  3736     032C                     u1231:
  3737     032C  2B32               	goto	l1668
  3738     032D                     u1230:
  3739     032D                     l1666:
  3740     032D  09F9               	comf	___awmod@divisor,f
  3741     032E  09FA               	comf	___awmod@divisor+1,f
  3742     032F  0AF9               	incf	___awmod@divisor,f
  3743     0330  1903               	skipnz
  3744     0331  0AFA               	incf	___awmod@divisor+1,f
  3745     0332                     l1668:
  3746     0332  0879               	movf	___awmod@divisor,w
  3747     0333  047A               	iorwf	___awmod@divisor+1,w
  3748     0334  1903               	btfsc	3,2
  3749     0335  2B37               	goto	u1241
  3750     0336  2B38               	goto	u1240
  3751     0337                     u1241:
  3752     0337  2B67               	goto	l1686
  3753     0338                     u1240:
  3754     0338                     l1670:
  3755     0338  01A0               	clrf	___awmod@counter
  3756     0339  0AA0               	incf	___awmod@counter,f
  3757     033A  2B46               	goto	l1676
  3758     033B                     l1672:
  3759     033B  3001               	movlw	1
  3760     033C                     u1255:
  3761     033C  1003               	clrc
  3762     033D  0DF9               	rlf	___awmod@divisor,f
  3763     033E  0DFA               	rlf	___awmod@divisor+1,f
  3764     033F  3EFF               	addlw	-1
  3765     0340  1D03               	skipz
  3766     0341  2B3C               	goto	u1255
  3767     0342                     l1674:
  3768     0342  3001               	movlw	1
  3769     0343  00FD               	movwf	??___awmod
  3770     0344  087D               	movf	??___awmod,w
  3771     0345  07A0               	addwf	___awmod@counter,f
  3772     0346                     l1676:
  3773     0346  1FFA               	btfss	___awmod@divisor+1,7
  3774     0347  2B49               	goto	u1261
  3775     0348  2B4A               	goto	u1260
  3776     0349                     u1261:
  3777     0349  2B3B               	goto	l1672
  3778     034A                     u1260:
  3779     034A                     l1678:
  3780     034A  087A               	movf	___awmod@divisor+1,w
  3781     034B  027C               	subwf	___awmod@dividend+1,w
  3782     034C  1D03               	skipz
  3783     034D  2B50               	goto	u1275
  3784     034E  0879               	movf	___awmod@divisor,w
  3785     034F  027B               	subwf	___awmod@dividend,w
  3786     0350                     u1275:
  3787     0350  1C03               	skipc
  3788     0351  2B53               	goto	u1271
  3789     0352  2B54               	goto	u1270
  3790     0353                     u1271:
  3791     0353  2B5A               	goto	l1682
  3792     0354                     u1270:
  3793     0354                     l1680:
  3794     0354  0879               	movf	___awmod@divisor,w
  3795     0355  02FB               	subwf	___awmod@dividend,f
  3796     0356  087A               	movf	___awmod@divisor+1,w
  3797     0357  1C03               	skipc
  3798     0358  03FC               	decf	___awmod@dividend+1,f
  3799     0359  02FC               	subwf	___awmod@dividend+1,f
  3800     035A                     l1682:
  3801     035A  3001               	movlw	1
  3802     035B                     u1285:
  3803     035B  1003               	clrc
  3804     035C  0CFA               	rrf	___awmod@divisor+1,f
  3805     035D  0CF9               	rrf	___awmod@divisor,f
  3806     035E  3EFF               	addlw	-1
  3807     035F  1D03               	skipz
  3808     0360  2B5B               	goto	u1285
  3809     0361                     l1684:
  3810     0361  3001               	movlw	1
  3811     0362  02A0               	subwf	___awmod@counter,f
  3812     0363  1D03               	btfss	3,2
  3813     0364  2B66               	goto	u1291
  3814     0365  2B67               	goto	u1290
  3815     0366                     u1291:
  3816     0366  2B4A               	goto	l1678
  3817     0367                     u1290:
  3818     0367                     l1686:
  3819     0367  0821               	movf	___awmod@sign,w
  3820     0368  1903               	btfsc	3,2
  3821     0369  2B6B               	goto	u1301
  3822     036A  2B6C               	goto	u1300
  3823     036B                     u1301:
  3824     036B  2B71               	goto	l1690
  3825     036C                     u1300:
  3826     036C                     l1688:
  3827     036C  09FB               	comf	___awmod@dividend,f
  3828     036D  09FC               	comf	___awmod@dividend+1,f
  3829     036E  0AFB               	incf	___awmod@dividend,f
  3830     036F  1903               	skipnz
  3831     0370  0AFC               	incf	___awmod@dividend+1,f
  3832     0371                     l1690:
  3833     0371  087C               	movf	___awmod@dividend+1,w
  3834     0372  00FA               	movwf	?___awmod+1
  3835     0373  087B               	movf	___awmod@dividend,w
  3836     0374  00F9               	movwf	?___awmod
  3837     0375                     l458:
  3838     0375  0008               	return
  3839     0376                     __end_of___awmod:
  3840                           
  3841                           	psect	text20
  3842     0439                     __ptext20:	
  3843 ;; *************** function ___awdiv *****************
  3844 ;; Defined at:
  3845 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;  divisor         2    0[COMMON] int 
  3848 ;;  dividend        2    2[COMMON] int 
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  quotient        2    7[COMMON] int 
  3851 ;;  sign            1    6[COMMON] unsigned char 
  3852 ;;  counter         1    5[COMMON] unsigned char 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  2    0[COMMON] int 
  3855 ;; Registers used:
  3856 ;;		wreg, status,2, status,0
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3862 ;;      Params:         4       0       0       0       0
  3863 ;;      Locals:         4       0       0       0       0
  3864 ;;      Temps:          1       0       0       0       0
  3865 ;;      Totals:         9       0       0       0       0
  3866 ;;Total ram usage:        9 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; This function calls:
  3869 ;;		Nothing
  3870 ;; This function is called by:
  3871 ;;		_main
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875     0439                     ___awdiv:	
  3876                           ;psect for function ___awdiv
  3877                           
  3878     0439                     l1612:	
  3879                           ;incstack = 0
  3880                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3881                           
  3882     0439  01F6               	clrf	___awdiv@sign
  3883     043A                     l1614:
  3884     043A  1FF1               	btfss	___awdiv@divisor+1,7
  3885     043B  2C3D               	goto	u1121
  3886     043C  2C3E               	goto	u1120
  3887     043D                     u1121:
  3888     043D  2C45               	goto	l1620
  3889     043E                     u1120:
  3890     043E                     l1616:
  3891     043E  09F0               	comf	___awdiv@divisor,f
  3892     043F  09F1               	comf	___awdiv@divisor+1,f
  3893     0440  0AF0               	incf	___awdiv@divisor,f
  3894     0441  1903               	skipnz
  3895     0442  0AF1               	incf	___awdiv@divisor+1,f
  3896     0443                     l1618:
  3897     0443  01F6               	clrf	___awdiv@sign
  3898     0444  0AF6               	incf	___awdiv@sign,f
  3899     0445                     l1620:
  3900     0445  1FF3               	btfss	___awdiv@dividend+1,7
  3901     0446  2C48               	goto	u1131
  3902     0447  2C49               	goto	u1130
  3903     0448                     u1131:
  3904     0448  2C52               	goto	l1626
  3905     0449                     u1130:
  3906     0449                     l1622:
  3907     0449  09F2               	comf	___awdiv@dividend,f
  3908     044A  09F3               	comf	___awdiv@dividend+1,f
  3909     044B  0AF2               	incf	___awdiv@dividend,f
  3910     044C  1903               	skipnz
  3911     044D  0AF3               	incf	___awdiv@dividend+1,f
  3912     044E                     l1624:
  3913     044E  3001               	movlw	1
  3914     044F  00F4               	movwf	??___awdiv
  3915     0450  0874               	movf	??___awdiv,w
  3916     0451  06F6               	xorwf	___awdiv@sign,f
  3917     0452                     l1626:
  3918     0452  01F7               	clrf	___awdiv@quotient
  3919     0453  01F8               	clrf	___awdiv@quotient+1
  3920     0454                     l1628:
  3921     0454  0870               	movf	___awdiv@divisor,w
  3922     0455  0471               	iorwf	___awdiv@divisor+1,w
  3923     0456  1903               	btfsc	3,2
  3924     0457  2C59               	goto	u1141
  3925     0458  2C5A               	goto	u1140
  3926     0459                     u1141:
  3927     0459  2C91               	goto	l1648
  3928     045A                     u1140:
  3929     045A                     l1630:
  3930     045A  01F5               	clrf	___awdiv@counter
  3931     045B  0AF5               	incf	___awdiv@counter,f
  3932     045C  2C68               	goto	l1636
  3933     045D                     l1632:
  3934     045D  3001               	movlw	1
  3935     045E                     u1155:
  3936     045E  1003               	clrc
  3937     045F  0DF0               	rlf	___awdiv@divisor,f
  3938     0460  0DF1               	rlf	___awdiv@divisor+1,f
  3939     0461  3EFF               	addlw	-1
  3940     0462  1D03               	skipz
  3941     0463  2C5E               	goto	u1155
  3942     0464                     l1634:
  3943     0464  3001               	movlw	1
  3944     0465  00F4               	movwf	??___awdiv
  3945     0466  0874               	movf	??___awdiv,w
  3946     0467  07F5               	addwf	___awdiv@counter,f
  3947     0468                     l1636:
  3948     0468  1FF1               	btfss	___awdiv@divisor+1,7
  3949     0469  2C6B               	goto	u1161
  3950     046A  2C6C               	goto	u1160
  3951     046B                     u1161:
  3952     046B  2C5D               	goto	l1632
  3953     046C                     u1160:
  3954     046C                     l1638:
  3955     046C  3001               	movlw	1
  3956     046D                     u1175:
  3957     046D  1003               	clrc
  3958     046E  0DF7               	rlf	___awdiv@quotient,f
  3959     046F  0DF8               	rlf	___awdiv@quotient+1,f
  3960     0470  3EFF               	addlw	-1
  3961     0471  1D03               	skipz
  3962     0472  2C6D               	goto	u1175
  3963     0473  0871               	movf	___awdiv@divisor+1,w
  3964     0474  0273               	subwf	___awdiv@dividend+1,w
  3965     0475  1D03               	skipz
  3966     0476  2C79               	goto	u1185
  3967     0477  0870               	movf	___awdiv@divisor,w
  3968     0478  0272               	subwf	___awdiv@dividend,w
  3969     0479                     u1185:
  3970     0479  1C03               	skipc
  3971     047A  2C7C               	goto	u1181
  3972     047B  2C7D               	goto	u1180
  3973     047C                     u1181:
  3974     047C  2C84               	goto	l1644
  3975     047D                     u1180:
  3976     047D                     l1640:
  3977     047D  0870               	movf	___awdiv@divisor,w
  3978     047E  02F2               	subwf	___awdiv@dividend,f
  3979     047F  0871               	movf	___awdiv@divisor+1,w
  3980     0480  1C03               	skipc
  3981     0481  03F3               	decf	___awdiv@dividend+1,f
  3982     0482  02F3               	subwf	___awdiv@dividend+1,f
  3983     0483                     l1642:
  3984     0483  1477               	bsf	___awdiv@quotient,0
  3985     0484                     l1644:
  3986     0484  3001               	movlw	1
  3987     0485                     u1195:
  3988     0485  1003               	clrc
  3989     0486  0CF1               	rrf	___awdiv@divisor+1,f
  3990     0487  0CF0               	rrf	___awdiv@divisor,f
  3991     0488  3EFF               	addlw	-1
  3992     0489  1D03               	skipz
  3993     048A  2C85               	goto	u1195
  3994     048B                     l1646:
  3995     048B  3001               	movlw	1
  3996     048C  02F5               	subwf	___awdiv@counter,f
  3997     048D  1D03               	btfss	3,2
  3998     048E  2C90               	goto	u1201
  3999     048F  2C91               	goto	u1200
  4000     0490                     u1201:
  4001     0490  2C6C               	goto	l1638
  4002     0491                     u1200:
  4003     0491                     l1648:
  4004     0491  0876               	movf	___awdiv@sign,w
  4005     0492  1903               	btfsc	3,2
  4006     0493  2C95               	goto	u1211
  4007     0494  2C96               	goto	u1210
  4008     0495                     u1211:
  4009     0495  2C9B               	goto	l1652
  4010     0496                     u1210:
  4011     0496                     l1650:
  4012     0496  09F7               	comf	___awdiv@quotient,f
  4013     0497  09F8               	comf	___awdiv@quotient+1,f
  4014     0498  0AF7               	incf	___awdiv@quotient,f
  4015     0499  1903               	skipnz
  4016     049A  0AF8               	incf	___awdiv@quotient+1,f
  4017     049B                     l1652:
  4018     049B  0878               	movf	___awdiv@quotient+1,w
  4019     049C  00F1               	movwf	?___awdiv+1
  4020     049D  0877               	movf	___awdiv@quotient,w
  4021     049E  00F0               	movwf	?___awdiv
  4022     049F                     l445:
  4023     049F  0008               	return
  4024     04A0                     __end_of___awdiv:
  4025                           
  4026                           	psect	text21
  4027     014B                     __ptext21:	
  4028 ;; *************** function _Lcd_Write_String_4bits *****************
  4029 ;; Defined at:
  4030 ;;		line 99 in file "configLCD_4bits.c"
  4031 ;; Parameters:    Size  Location     Type
  4032 ;;  a               2    5[COMMON] PTR unsigned char 
  4033 ;;		 -> main@stringHOR(9), main@stringMIN(9), main@stringSEG(9), main@ADC1(9), 
  4034 ;;		 -> STR_3(2), STR_2(2), STR_1(4), 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  i               2   10[COMMON] int 
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4046 ;;      Params:         2       0       0       0       0
  4047 ;;      Locals:         2       0       0       0       0
  4048 ;;      Temps:          3       0       0       0       0
  4049 ;;      Totals:         7       0       0       0       0
  4050 ;;Total ram usage:        7 bytes
  4051 ;; Hardware stack levels used: 1
  4052 ;; Hardware stack levels required when called: 2
  4053 ;; This function calls:
  4054 ;;		_Lcd_Write_Char_4bits
  4055 ;; This function is called by:
  4056 ;;		_main
  4057 ;; This function uses a non-reentrant model
  4058 ;;
  4059                           
  4060     014B                     _Lcd_Write_String_4bits:	
  4061                           ;psect for function _Lcd_Write_String_4bits
  4062                           
  4063     014B                     l1520:	
  4064                           ;incstack = 0
  4065                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4066                           
  4067                           
  4068                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  4069     014B  01FA               	clrf	Lcd_Write_String_4bits@i
  4070     014C  01FB               	clrf	Lcd_Write_String_4bits@i+1
  4071     014D  2970               	goto	l1526
  4072     014E                     l1522:
  4073                           
  4074                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  4075     014E  087A               	movf	Lcd_Write_String_4bits@i,w
  4076     014F  0775               	addwf	Lcd_Write_String_4bits@a,w
  4077     0150  00F8               	movwf	??_Lcd_Write_String_4bits+1
  4078     0151  0876               	movf	Lcd_Write_String_4bits@a+1,w
  4079     0152  00F7               	movwf	??_Lcd_Write_String_4bits
  4080     0153  1803               	skipnc
  4081     0154  0AF7               	incf	??_Lcd_Write_String_4bits,f
  4082     0155  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  4083     0156  2958               	goto	u1010
  4084     0157  03F7               	decf	??_Lcd_Write_String_4bits,f
  4085     0158                     u1010:
  4086     0158  0877               	movf	??_Lcd_Write_String_4bits,w
  4087     0159  00F9               	movwf	??_Lcd_Write_String_4bits+2
  4088     015A  0879               	movf	??_Lcd_Write_String_4bits+2,w
  4089     015B  1283               	bcf	3,5	;RP0=0, select bank0
  4090     015C  1303               	bcf	3,6	;RP1=0, select bank0
  4091     015D  00FF               	movwf	btemp+1
  4092     015E  0878               	movf	??_Lcd_Write_String_4bits+1,w
  4093     015F  0084               	movwf	4
  4094     0160  120A  118A  2003  120A  118A  	fcall	stringtab
  4095     0165  120A  118A  20A4  120A  118A  	fcall	_Lcd_Write_Char_4bits
  4096     016A                     l1524:
  4097     016A  3001               	movlw	1
  4098     016B  07FA               	addwf	Lcd_Write_String_4bits@i,f
  4099     016C  1803               	skipnc
  4100     016D  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
  4101     016E  3000               	movlw	0
  4102     016F  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
  4103     0170                     l1526:
  4104     0170  087A               	movf	Lcd_Write_String_4bits@i,w
  4105     0171  0775               	addwf	Lcd_Write_String_4bits@a,w
  4106     0172  00F8               	movwf	??_Lcd_Write_String_4bits+1
  4107     0173  0876               	movf	Lcd_Write_String_4bits@a+1,w
  4108     0174  00F7               	movwf	??_Lcd_Write_String_4bits
  4109     0175  1803               	skipnc
  4110     0176  0AF7               	incf	??_Lcd_Write_String_4bits,f
  4111     0177  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  4112     0178  297A               	goto	u1020
  4113     0179  03F7               	decf	??_Lcd_Write_String_4bits,f
  4114     017A                     u1020:
  4115     017A  0877               	movf	??_Lcd_Write_String_4bits,w
  4116     017B  00F9               	movwf	??_Lcd_Write_String_4bits+2
  4117     017C  0879               	movf	??_Lcd_Write_String_4bits+2,w
  4118     017D  1283               	bcf	3,5	;RP0=0, select bank0
  4119     017E  1303               	bcf	3,6	;RP1=0, select bank0
  4120     017F  00FF               	movwf	btemp+1
  4121     0180  0878               	movf	??_Lcd_Write_String_4bits+1,w
  4122     0181  0084               	movwf	4
  4123     0182  120A  118A  2003  120A  118A  	fcall	stringtab
  4124     0187  3A00               	xorlw	0
  4125     0188  1D03               	skipz
  4126     0189  298B               	goto	u1031
  4127     018A  298C               	goto	u1030
  4128     018B                     u1031:
  4129     018B  294E               	goto	l1522
  4130     018C                     u1030:
  4131     018C                     l99:
  4132     018C  0008               	return
  4133     018D                     __end_of_Lcd_Write_String_4bits:
  4134                           
  4135                           	psect	text22
  4136     00A4                     __ptext22:	
  4137 ;; *************** function _Lcd_Write_Char_4bits *****************
  4138 ;; Defined at:
  4139 ;;		line 84 in file "configLCD_4bits.c"
  4140 ;; Parameters:    Size  Location     Type
  4141 ;;  a               1    wreg     unsigned char 
  4142 ;; Auto vars:     Size  Location     Type
  4143 ;;  a               1    4[COMMON] unsigned char 
  4144 ;;  y               1    3[COMMON] unsigned char 
  4145 ;;  temp            1    2[COMMON] unsigned char 
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, status,2, status,0, pclath, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4155 ;;      Params:         0       0       0       0       0
  4156 ;;      Locals:         3       0       0       0       0
  4157 ;;      Temps:          1       0       0       0       0
  4158 ;;      Totals:         4       0       0       0       0
  4159 ;;Total ram usage:        4 bytes
  4160 ;; Hardware stack levels used: 1
  4161 ;; Hardware stack levels required when called: 1
  4162 ;; This function calls:
  4163 ;;		_Lcd_Port_4bits
  4164 ;; This function is called by:
  4165 ;;		_Lcd_Write_String_4bits
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169     00A4                     _Lcd_Write_Char_4bits:	
  4170                           ;psect for function _Lcd_Write_Char_4bits
  4171                           
  4172                           
  4173                           ;incstack = 0
  4174                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  4175                           ;Lcd_Write_Char_4bits@a stored from wreg
  4176     00A4  00F4               	movwf	Lcd_Write_Char_4bits@a
  4177     00A5                     l1416:
  4178                           
  4179                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  4180     00A5  0874               	movf	Lcd_Write_Char_4bits@a,w
  4181     00A6  390F               	andlw	15
  4182     00A7  00F2               	movwf	Lcd_Write_Char_4bits@temp
  4183                           
  4184                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  4185     00A8  0874               	movf	Lcd_Write_Char_4bits@a,w
  4186     00A9  39F0               	andlw	240
  4187     00AA  00F3               	movwf	Lcd_Write_Char_4bits@y
  4188     00AB                     l1418:
  4189                           
  4190                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  4191     00AB  1283               	bcf	3,5	;RP0=0, select bank0
  4192     00AC  1303               	bcf	3,6	;RP1=0, select bank0
  4193     00AD  1508               	bsf	8,2	;volatile
  4194     00AE                     l1420:
  4195                           
  4196                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  4197     00AE  0873               	movf	Lcd_Write_Char_4bits@y,w
  4198     00AF  00F1               	movwf	??_Lcd_Write_Char_4bits
  4199     00B0  3004               	movlw	4
  4200     00B1                     u815:
  4201     00B1  1003               	clrc
  4202     00B2  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
  4203     00B3  3EFF               	addlw	-1
  4204     00B4  1D03               	skipz
  4205     00B5  28B1               	goto	u815
  4206     00B6  0871               	movf	??_Lcd_Write_Char_4bits,w
  4207     00B7  120A  118A  202F  120A  118A  	fcall	_Lcd_Port_4bits
  4208     00BC                     l1422:
  4209                           
  4210                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  4211     00BC  1283               	bcf	3,5	;RP0=0, select bank0
  4212     00BD  1303               	bcf	3,6	;RP1=0, select bank0
  4213     00BE  1588               	bsf	8,3	;volatile
  4214     00BF                     l1424:
  4215                           
  4216                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4217     00BF  301A               	movlw	26
  4218     00C0  00F1               	movwf	??_Lcd_Write_Char_4bits
  4219     00C1                     u1387:
  4220     00C1  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  4221     00C2  28C1               	goto	u1387
  4222     00C3  0000               	nop
  4223     00C4                     l1426:
  4224                           
  4225                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  4226     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  4227     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  4228     00C6  1188               	bcf	8,3	;volatile
  4229     00C7                     l1428:
  4230                           
  4231                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  4232     00C7  0872               	movf	Lcd_Write_Char_4bits@temp,w
  4233     00C8  120A  118A  202F  120A  118A  	fcall	_Lcd_Port_4bits
  4234     00CD                     l1430:
  4235                           
  4236                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  4237     00CD  1283               	bcf	3,5	;RP0=0, select bank0
  4238     00CE  1303               	bcf	3,6	;RP1=0, select bank0
  4239     00CF  1588               	bsf	8,3	;volatile
  4240     00D0                     l1432:
  4241                           
  4242                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4243     00D0  301A               	movlw	26
  4244     00D1  00F1               	movwf	??_Lcd_Write_Char_4bits
  4245     00D2                     u1397:
  4246     00D2  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  4247     00D3  28D2               	goto	u1397
  4248     00D4  0000               	nop
  4249     00D5                     l1434:
  4250                           
  4251                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  4252     00D5  1283               	bcf	3,5	;RP0=0, select bank0
  4253     00D6  1303               	bcf	3,6	;RP1=0, select bank0
  4254     00D7  1188               	bcf	8,3	;volatile
  4255     00D8                     l93:
  4256     00D8  0008               	return
  4257     00D9                     __end_of_Lcd_Write_Char_4bits:
  4258                           
  4259                           	psect	text23
  4260     01D1                     __ptext23:	
  4261 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  4262 ;; Defined at:
  4263 ;;		line 49 in file "configLCD_4bits.c"
  4264 ;; Parameters:    Size  Location     Type
  4265 ;;  a               1    wreg     unsigned char 
  4266 ;;  b               1    4[COMMON] unsigned char 
  4267 ;; Auto vars:     Size  Location     Type
  4268 ;;  a               1    6[COMMON] unsigned char 
  4269 ;;  temp            1    9[COMMON] unsigned char 
  4270 ;;  y               1    8[COMMON] unsigned char 
  4271 ;;  z               1    7[COMMON] unsigned char 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  1    wreg      void 
  4274 ;; Registers used:
  4275 ;;		wreg, status,2, status,0, pclath, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4281 ;;      Params:         1       0       0       0       0
  4282 ;;      Locals:         4       0       0       0       0
  4283 ;;      Temps:          1       0       0       0       0
  4284 ;;      Totals:         6       0       0       0       0
  4285 ;;Total ram usage:        6 bytes
  4286 ;; Hardware stack levels used: 1
  4287 ;; Hardware stack levels required when called: 2
  4288 ;; This function calls:
  4289 ;;		_Lcd_Cmd_4bits
  4290 ;; This function is called by:
  4291 ;;		_main
  4292 ;; This function uses a non-reentrant model
  4293 ;;
  4294                           
  4295     01D1                     _Lcd_Set_Cursor_4bits:	
  4296                           ;psect for function _Lcd_Set_Cursor_4bits
  4297                           
  4298                           
  4299                           ;incstack = 0
  4300                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  4301                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  4302     01D1  00F6               	movwf	Lcd_Set_Cursor_4bits@a
  4303     01D2                     l1500:
  4304                           
  4305                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  4306     01D2  0376               	decf	Lcd_Set_Cursor_4bits@a,w
  4307     01D3  1D03               	btfss	3,2
  4308     01D4  29D6               	goto	u971
  4309     01D5  29D7               	goto	u970
  4310     01D6                     u971:
  4311     01D6  29F4               	goto	l1510
  4312     01D7                     u970:
  4313     01D7                     l1502:
  4314                           
  4315                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  4316     01D7  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  4317     01D8  3E7F               	addlw	127
  4318     01D9  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  4319                           
  4320                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  4321     01DA  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  4322     01DB  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  4323     01DC  3004               	movlw	4
  4324     01DD                     u985:
  4325     01DD  1003               	clrc
  4326     01DE  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  4327     01DF  3EFF               	addlw	-1
  4328     01E0  1D03               	skipz
  4329     01E1  29DD               	goto	u985
  4330     01E2  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  4331     01E3  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  4332     01E4                     l1504:
  4333                           
  4334                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  4335     01E4  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  4336     01E5  390F               	andlw	15
  4337     01E6  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  4338     01E7                     l1506:
  4339                           
  4340                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  4341     01E7  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  4342     01E8  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  4343     01ED                     l1508:
  4344                           
  4345                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  4346     01ED  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  4347     01EE  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  4348                           
  4349                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  4350     01F3  2A16               	goto	l87
  4351     01F4                     l1510:
  4352     01F4  3002               	movlw	2
  4353     01F5  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
  4354     01F6  1D03               	btfss	3,2
  4355     01F7  29F9               	goto	u991
  4356     01F8  29FA               	goto	u990
  4357     01F9                     u991:
  4358     01F9  2A16               	goto	l87
  4359     01FA                     u990:
  4360     01FA                     l1512:
  4361                           
  4362                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  4363     01FA  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  4364     01FB  3EBF               	addlw	191
  4365     01FC  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  4366                           
  4367                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  4368     01FD  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  4369     01FE  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  4370     01FF  3004               	movlw	4
  4371     0200                     u1005:
  4372     0200  1003               	clrc
  4373     0201  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  4374     0202  3EFF               	addlw	-1
  4375     0203  1D03               	skipz
  4376     0204  2A00               	goto	u1005
  4377     0205  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  4378     0206  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  4379     0207                     l1514:
  4380                           
  4381                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  4382     0207  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  4383     0208  390F               	andlw	15
  4384     0209  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  4385     020A                     l1516:
  4386                           
  4387                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  4388     020A  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  4389     020B  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  4390     0210                     l1518:
  4391                           
  4392                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  4393     0210  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  4394     0211  120A  158A  27E6  120A  118A  	fcall	_Lcd_Cmd_4bits
  4395     0216                     l87:
  4396     0216  0008               	return
  4397     0217                     __end_of_Lcd_Set_Cursor_4bits:
  4398                           
  4399                           	psect	text24
  4400     0FAA                     __ptext24:	
  4401 ;; *************** function _Lcd_Clear_4bits *****************
  4402 ;; Defined at:
  4403 ;;		line 44 in file "configLCD_4bits.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;		None
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;		None
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, status,0, pclath, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4417 ;;      Params:         0       0       0       0       0
  4418 ;;      Locals:         0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0
  4420 ;;      Totals:         0       0       0       0       0
  4421 ;;Total ram usage:        0 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; Hardware stack levels required when called: 2
  4424 ;; This function calls:
  4425 ;;		_Lcd_Cmd_4bits
  4426 ;; This function is called by:
  4427 ;;		_main
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431     0FAA                     _Lcd_Clear_4bits:	
  4432                           ;psect for function _Lcd_Clear_4bits
  4433                           
  4434     0FAA                     l1498:	
  4435                           ;incstack = 0
  4436                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  4437                           
  4438                           
  4439                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  4440     0FAA  3000               	movlw	0
  4441     0FAB  120A  158A  27E6  120A  158A  	fcall	_Lcd_Cmd_4bits
  4442                           
  4443                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  4444     0FB0  3001               	movlw	1
  4445     0FB1  120A  158A  27E6  120A  158A  	fcall	_Lcd_Cmd_4bits
  4446     0FB6                     l81:
  4447     0FB6  0008               	return
  4448     0FB7                     __end_of_Lcd_Clear_4bits:
  4449                           
  4450                           	psect	text25
  4451     0FE6                     __ptext25:	
  4452 ;; *************** function _Lcd_Cmd_4bits *****************
  4453 ;; Defined at:
  4454 ;;		line 36 in file "configLCD_4bits.c"
  4455 ;; Parameters:    Size  Location     Type
  4456 ;;  a               1    wreg     unsigned char 
  4457 ;; Auto vars:     Size  Location     Type
  4458 ;;  a               1    3[COMMON] unsigned char 
  4459 ;; Return value:  Size  Location     Type
  4460 ;;                  1    wreg      void 
  4461 ;; Registers used:
  4462 ;;		wreg, status,2, status,0, pclath, cstack
  4463 ;; Tracked objects:
  4464 ;;		On entry : 0/0
  4465 ;;		On exit  : 0/0
  4466 ;;		Unchanged: 0/0
  4467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4468 ;;      Params:         0       0       0       0       0
  4469 ;;      Locals:         1       0       0       0       0
  4470 ;;      Temps:          2       0       0       0       0
  4471 ;;      Totals:         3       0       0       0       0
  4472 ;;Total ram usage:        3 bytes
  4473 ;; Hardware stack levels used: 1
  4474 ;; Hardware stack levels required when called: 1
  4475 ;; This function calls:
  4476 ;;		_Lcd_Port_4bits
  4477 ;; This function is called by:
  4478 ;;		_Lcd_Clear_4bits
  4479 ;;		_Lcd_Set_Cursor_4bits
  4480 ;;		_Lcd_Init_4bits
  4481 ;;		_Lcd_Shift_Right_4bits
  4482 ;;		_Lcd_Shift_Left_4bits
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486     0FE6                     _Lcd_Cmd_4bits:	
  4487                           ;psect for function _Lcd_Cmd_4bits
  4488                           
  4489                           
  4490                           ;incstack = 0
  4491                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  4492                           ;Lcd_Cmd_4bits@a stored from wreg
  4493     0FE6  00F3               	movwf	Lcd_Cmd_4bits@a
  4494     0FE7                     l1324:
  4495                           
  4496                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  4497     0FE7  1283               	bcf	3,5	;RP0=0, select bank0
  4498     0FE8  1303               	bcf	3,6	;RP1=0, select bank0
  4499     0FE9  1108               	bcf	8,2	;volatile
  4500     0FEA                     l1326:
  4501                           
  4502                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  4503     0FEA  0873               	movf	Lcd_Cmd_4bits@a,w
  4504     0FEB  120A  118A  202F  120A  158A  	fcall	_Lcd_Port_4bits
  4505     0FF0                     l1328:
  4506                           
  4507                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  4508     0FF0  1283               	bcf	3,5	;RP0=0, select bank0
  4509     0FF1  1303               	bcf	3,6	;RP1=0, select bank0
  4510     0FF2  1588               	bsf	8,3	;volatile
  4511     0FF3                     l1330:
  4512                           
  4513                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4514     0FF3  300B               	movlw	11
  4515     0FF4  00F2               	movwf	??_Lcd_Cmd_4bits+1
  4516     0FF5  3062               	movlw	98
  4517     0FF6  00F1               	movwf	??_Lcd_Cmd_4bits
  4518     0FF7                     u1407:
  4519     0FF7  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
  4520     0FF8  2FF7               	goto	u1407
  4521     0FF9  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
  4522     0FFA  2FF7               	goto	u1407
  4523     0FFB  0000               	nop
  4524     0FFC                     l1332:
  4525                           
  4526                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  4527     0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4528     0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4529     0FFE  1188               	bcf	8,3	;volatile
  4530     0FFF                     l78:
  4531     0FFF  0008               	return
  4532     1000                     __end_of_Lcd_Cmd_4bits:
  4533                           
  4534                           	psect	text26
  4535     002F                     __ptext26:	
  4536 ;; *************** function _Lcd_Port_4bits *****************
  4537 ;; Defined at:
  4538 ;;		line 14 in file "configLCD_4bits.c"
  4539 ;; Parameters:    Size  Location     Type
  4540 ;;  a               1    wreg     unsigned char 
  4541 ;; Auto vars:     Size  Location     Type
  4542 ;;  a               1    0[COMMON] unsigned char 
  4543 ;; Return value:  Size  Location     Type
  4544 ;;                  1    wreg      void 
  4545 ;; Registers used:
  4546 ;;		wreg
  4547 ;; Tracked objects:
  4548 ;;		On entry : 0/0
  4549 ;;		On exit  : 0/0
  4550 ;;		Unchanged: 0/0
  4551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4552 ;;      Params:         0       0       0       0       0
  4553 ;;      Locals:         1       0       0       0       0
  4554 ;;      Temps:          0       0       0       0       0
  4555 ;;      Totals:         1       0       0       0       0
  4556 ;;Total ram usage:        1 bytes
  4557 ;; Hardware stack levels used: 1
  4558 ;; This function calls:
  4559 ;;		Nothing
  4560 ;; This function is called by:
  4561 ;;		_Lcd_Cmd_4bits
  4562 ;;		_Lcd_Init_4bits
  4563 ;;		_Lcd_Write_Char_4bits
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567     002F                     _Lcd_Port_4bits:	
  4568                           ;psect for function _Lcd_Port_4bits
  4569                           
  4570                           
  4571                           ;incstack = 0
  4572                           ; Regs used in _Lcd_Port_4bits: [wreg]
  4573                           ;Lcd_Port_4bits@a stored from wreg
  4574     002F  00F0               	movwf	Lcd_Port_4bits@a
  4575     0030                     l1310:
  4576                           
  4577                           ;configLCD_4bits.c: 15:     if (a & 1)
  4578     0030  1C70               	btfss	Lcd_Port_4bits@a,0
  4579     0031  2833               	goto	u661
  4580     0032  2834               	goto	u660
  4581     0033                     u661:
  4582     0033  2838               	goto	l67
  4583     0034                     u660:
  4584     0034                     l1312:
  4585                           
  4586                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  4587     0034  1283               	bcf	3,5	;RP0=0, select bank0
  4588     0035  1303               	bcf	3,6	;RP1=0, select bank0
  4589     0036  1608               	bsf	8,4	;volatile
  4590     0037  283B               	goto	l68
  4591     0038                     l67:	
  4592                           ;configLCD_4bits.c: 17:     else
  4593                           
  4594                           
  4595                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  4596     0038  1283               	bcf	3,5	;RP0=0, select bank0
  4597     0039  1303               	bcf	3,6	;RP1=0, select bank0
  4598     003A  1208               	bcf	8,4	;volatile
  4599     003B                     l68:
  4600                           
  4601                           ;configLCD_4bits.c: 20:     if (a & 2)
  4602     003B  1CF0               	btfss	Lcd_Port_4bits@a,1
  4603     003C  283E               	goto	u671
  4604     003D  283F               	goto	u670
  4605     003E                     u671:
  4606     003E  2841               	goto	l69
  4607     003F                     u670:
  4608     003F                     l1314:
  4609                           
  4610                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  4611     003F  1688               	bsf	8,5	;volatile
  4612     0040  2842               	goto	l70
  4613     0041                     l69:	
  4614                           ;configLCD_4bits.c: 22:     else
  4615                           
  4616                           
  4617                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  4618     0041  1288               	bcf	8,5	;volatile
  4619     0042                     l70:
  4620                           
  4621                           ;configLCD_4bits.c: 25:     if (a & 4)
  4622     0042  1D70               	btfss	Lcd_Port_4bits@a,2
  4623     0043  2845               	goto	u681
  4624     0044  2846               	goto	u680
  4625     0045                     u681:
  4626     0045  2848               	goto	l71
  4627     0046                     u680:
  4628     0046                     l1316:
  4629                           
  4630                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  4631     0046  1708               	bsf	8,6	;volatile
  4632     0047  2849               	goto	l72
  4633     0048                     l71:	
  4634                           ;configLCD_4bits.c: 27:     else
  4635                           
  4636                           
  4637                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  4638     0048  1308               	bcf	8,6	;volatile
  4639     0049                     l72:
  4640                           
  4641                           ;configLCD_4bits.c: 30:     if (a & 8)
  4642     0049  1DF0               	btfss	Lcd_Port_4bits@a,3
  4643     004A  284C               	goto	u691
  4644     004B  284D               	goto	u690
  4645     004C                     u691:
  4646     004C  284F               	goto	l73
  4647     004D                     u690:
  4648     004D                     l1318:
  4649                           
  4650                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  4651     004D  1788               	bsf	8,7	;volatile
  4652     004E  2850               	goto	l75
  4653     004F                     l73:	
  4654                           ;configLCD_4bits.c: 32:     else
  4655                           
  4656                           
  4657                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  4658     004F  1388               	bcf	8,7	;volatile
  4659     0050                     l75:
  4660     0050  0008               	return
  4661     0051                     __end_of_Lcd_Port_4bits:
  4662     007E                     btemp	set	126	;btemp
  4663     007E                     wtemp0	set	126
  4664                           
  4665                           	psect	idloc
  4666                           
  4667                           ;Config register IDLOC0 @ 0x2000
  4668                           ;	unspecified, using default values
  4669     2000                     	org	8192
  4670     2000  3FFF               	dw	16383
  4671                           
  4672                           ;Config register IDLOC1 @ 0x2001
  4673                           ;	unspecified, using default values
  4674     2001                     	org	8193
  4675     2001  3FFF               	dw	16383
  4676                           
  4677                           ;Config register IDLOC2 @ 0x2002
  4678                           ;	unspecified, using default values
  4679     2002                     	org	8194
  4680     2002  3FFF               	dw	16383
  4681                           
  4682                           ;Config register IDLOC3 @ 0x2003
  4683                           ;	unspecified, using default values
  4684     2003                     	org	8195
  4685     2003  3FFF               	dw	16383
  4686                           
  4687                           	psect	config
  4688                           
  4689                           ;Config register CONFIG1 @ 0x2007
  4690                           ;	Oscillator Selection bits
  4691                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4692                           ;	Watchdog Timer Enable bit
  4693                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4694                           ;	Power-up Timer Enable bit
  4695                           ;	PWRTE = OFF, PWRT disabled
  4696                           ;	RE3/MCLR pin function select bit
  4697                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4698                           ;	Code Protection bit
  4699                           ;	CP = OFF, Program memory code protection is disabled
  4700                           ;	Data Code Protection bit
  4701                           ;	CPD = OFF, Data memory code protection is disabled
  4702                           ;	Brown Out Reset Selection bits
  4703                           ;	BOREN = OFF, BOR disabled
  4704                           ;	Internal External Switchover bit
  4705                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4706                           ;	Fail-Safe Clock Monitor Enabled bit
  4707                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4708                           ;	Low Voltage Programming Enable bit
  4709                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4710                           ;	In-Circuit Debugger Mode bit
  4711                           ;	DEBUG = 0x1, unprogramme  4712     2007                     	org	8199
  4713     2007  20D4               	dw	8404
  4714                           
  4715                           ;Config register CONFIG2 @ 0x2008
  4716                           ;	Brown-out Reset Selection bit
  4717                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4718                           ;	Flash Program Memory Self Write Enable bits
  4719                           ;	WRT = OFF, Write protection off
  4720     2008                     	org	8200
  4721     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     65      65
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_12(CODE[3]), STR_11(CODE[3]), STR_10(CODE[3]), STR_9(CODE[3]), 
		 -> STR_8(CODE[3]), STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@stringHOR(BANK0[9]), main@stringMIN(BANK0[9]), main@stringSEG(BANK0[9]), main@ADC1(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 9
		 -> main@stringHOR(BANK0[9]), main@stringMIN(BANK0[9]), main@stringSEG(BANK0[9]), main@ADC1(BANK0[9]), 
		 -> STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    _leerSEG->_I2C_Master_Read
    _leerMIN->_I2C_Master_Read
    _leerHOR->_I2C_Master_Read
    ___awmod->___awdiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                52    52      0   14304
                                             13 BANK0     52    52      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                            _leerHOR
                            _leerMIN
                            _leerSEG
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1993
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     632
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leerSEG                                              4     4      0    1519
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _leerMIN                                              4     4      0    1519
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _leerHOR                                              4     4      0    1519
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     320
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     782
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     349
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1512
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1060
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2    1180
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1    1292
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _leerHOR
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___bmul
   _leerMIN
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___bmul
   _leerSEG
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___bmul
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     41      41       5       81.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 15 16:51:15 2023

                               pc 0002                    ___bmul@product 0072                                l32 0FB7  
                              l41 0F97                                l50 009B                                l35 0FC3  
                              l51 009E                                l52 00A3                                l44 0FA9  
                              l60 0FD0                                l29 0110                                l70 0042  
                              l38 0FA0                                l71 0048                                l47 002E  
                              l72 0049                                l73 004F                                l81 0FB6  
                              l90 03D2                                l75 0050                                l67 0038  
                              l68 003B                                l69 0041                                l93 00D8  
                              l78 0FFF                                l87 0216                                l99 018C  
                    ___awdiv@sign 0076                                fsr 0004                               l160 0075  
                             l154 059E                               l181 02C3                               l318 0FE5  
                             l175 026C                               l328 0438                               l178 031A  
                             l445 049F                               l288 0560                               l458 0375  
                             l564 01D0                               l574 014A                               _GIE 005F  
                             u700 0FBD                               u701 0FBC                               u710 0FC3  
                             u711 0FC2                               u800 0097                               u720 03E3  
                             u801 0096                               u721 03E2                               u660 0034  
                             u820 0FD7                               u740 03F7                               u900 01CC  
                             u661 0033                               u821 0FD6                               u741 03F6  
                             u901 01CB                               u670 003F                               u830 0FE4  
                             u910 0117                               u671 003E                               u815 00B1  
                             u831 0FE3                               u735 03E8                               u911 0116  
                             u680 0046                               u760 0412                               u840 0195  
                             u681 0045                               u761 0411                               u841 0194  
                             u690 004D                               u930 0129                               u691 004C  
                             u755 03F9                               u931 0128                               u780 0430  
                             u860 01A7                               u940 0133                               u781 042F  
                             u765 040E                               u861 01A6                               u941 0132  
                             u925 011B                               u790 00F0                               u775 0422  
                             u855 0199                               u880 01B8                               u960 0146  
                             u881 01B7                               u961 0145                               u945 012F  
                             u970 01D7                               u971 01D6                               u795 00EB  
                             u875 01A8                               u955 013A                               u885 01B4  
                             u990 01FA                               u991 01F9                               u895 01C0  
                             u985 01DD                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0021                              l1310 0030                              l1312 0034  
                            l1320 0FB7                              l1314 003F                              l1330 0FF3  
                            l1322 0FBD                              l1410 0385                              l1402 0FC5  
                            l1316 0046                              l1332 0FFC                              l1324 0FE7  
                            l1500 01D2                              l1420 00AE                              l1340 03F3  
                            l1412 0394                              l1404 0FCF                              l1318 004D  
                            l1326 0FEA                              l1502 01D7                              l1510 01F4  
                            l1430 00CD                              l1422 00BC                              l1350 0421  
                            l1342 03F7                              l1334 03D3                              l1414 039A  
                            l1406 0376                              l1328 0FF0                              l1512 01FA  
                            l1504 01E4                              l1432 00D0                              l1424 00BF  
                            l1416 00A5                              l1520 014B                              l1440 0FD7  
                            l1600 0304                              l1352 042A                              l1344 0400  
                            l1336 03E3                              l1360 00DD                              l1408 037C  
                            l1514 0207                              l1506 01E7                              l1434 00D5  
                            l1426 00C4                              l1418 00AB                              l1522 014E  
                            l1370 0F98                              l1442 0FDB                              l1346 0412  
                            l1338 03E6                              l1354 0430                              l1362 00E0  
                            l1530 005D                              l1450 018D                              l1516 020A  
                            l1508 01ED                              l1428 00C7                              l1524 016A  
                            l1620 0445                              l1612 0439                              l1372 0F9D  
                            l1380 0FA6                              l1444 0FDD                              l1436 0FD2  
                            l1604 026D                              l1348 0420                              l1364 010D  
                            l1532 006A                              l1460 01A3                              l1452 018F  
                            l1540 04AC                              l1700 0573                              l1518 0210  
                            l1526 0170                              l1630 045A                              l1622 0449  
                            l1614 043A                              l1390 0083                              l1374 0F8F  
                            l1382 0025                              l1446 0FE4                              l1438 0FD3  
                            l1606 02A1                              l1366 010E                              l1358 00D9  
                            l1534 0070                              l1470 01C6                              l1462 01A7  
                            l1454 0195                              l1550 04BD                              l1542 04B1  
                            l1710 05CC                              l1702 057C                              l1640 047D  
                            l1632 045D                              l1624 044E                              l1616 043E  
                            l1392 008C                              l1376 0F94                              l1384 002A  
                            l1608 02AD                              l1368 010F                              l1528 0051  
                            l1464 01B8                              l1456 0198                              l1472 01CC  
                            l1480 011A                              l1552 04D7                              l1544 04B6  
                            l1536 04A3                              l1720 062E                              l1712 05E2  
                            l1704 058D                              l1650 0496                              l1642 0483  
                            l1634 0464                              l1626 0452                              l1618 0443  
                            l1394 0091                              l1386 0076                              l1378 0FA1  
                            l1466 01BE                              l1458 019F                              l1490 0139  
                            l1482 0121                              l1570 050E                              l1562 04E5  
                            l1554 04DF                              l1546 04B8                              l1538 04A6  
                            l1730 066A                              l1722 0637                              l1714 0603  
                            l1706 0595                              l1652 049B                              l1644 0484  
                            l1636 0468                              l1628 0454                              l1660 0322  
                            l1396 0097                              l1388 007B                              l1468 01BF  
                            l1492 0140                              l1484 0125                              l1476 0111  
                            l1572 053A                              l1556 04E3                              l1580 055C  
                            l1740 06B8                              l1732 0672                              l1724 0648  
                            l1716 0617                              l1708 05BD                              l1646 048B  
                            l1638 046C                              l1670 0338                              l1662 0327  
                            l1398 009F                              l1590 024A                              l1486 0129  
                            l1478 0117                              l1494 0146                              l1574 053F  
                            l1566 0501                              l1750 06F1                              l1742 06C7  
                            l1734 067B                              l1726 0650                              l1718 0626  
                            l1648 0491                              l1680 0354                              l1672 033B  
                            l1664 0329                              l1656 031B                              l1592 0256  
                            l1488 0133                              l1576 0543                              l1568 050B  
                            l1808 04CF                              l1760 0746                              l1752 06FA  
                            l1744 06CF                              l1736 0683                              l1728 0659  
                            l1498 0FAA                              l1690 0371                              l1682 035A  
                            l1674 0342                              l1666 032D                              l1658 031E  
                            l1578 054C                              l1770 0779                              l1762 074E  
                            l1754 0702                              l1746 06D8                              l1738 06A4  
                            l1684 0361                              l1676 0346                              l1668 0332  
                            l1596 02C4                              l1588 0217                              l1780 07CD  
                            l1772 0781                              l1764 0757                              l1756 0723  
                            l1748 06E9                              l1678 034A                              l1686 0367  
                            l1598 02F8                              l1782 07D6                              l1774 07A2  
                            l1766 0768                              l1758 0737                              l1688 036C  
                            l1784 07E7                              l1776 07B6                              l1768 0770  
                            l1786 07EF                              l1778 07C5                              l1698 0561  
                            STR_1 001D                              STR_2 001F                              STR_3 001F  
                            STR_4 0021                              STR_5 0021                              STR_6 0021  
                            STR_7 0021                              STR_8 0021                              STR_9 0021  
                            u1010 0158                              u1020 017A                              u1005 0200  
                            u1030 018C                              u1031 018B                              u1200 0491  
                            u1120 043E                              u1040 04AC                              u1201 0490  
                            u1121 043D                              u1105 030C                              u1041 04AB  
                            u1210 0496                              u1130 0449                              u1050 0500  
                            u1211 0495                              u1131 0448                              u1115 02B5  
                            u1051 04FF                              u1140 045A                              u1300 036C  
                            u1220 0322                              u1060 050B                              u1141 0459  
                            u1301 036B                              u1221 0321                              u1061 050A  
                            u1230 032D                              u1070 054C                              u1231 032C  
                            u1071 054B                              u1055 04FC                              u1160 046C  
                            u1240 0338                              u1080 055C                              u1161 046B  
                            u1241 0337                              u1081 055B                              u1155 045E  
                            u1180 047D                              u1260 034A                              u1181 047C  
                            u1261 0349                              u1317 05C5                              u1270 0354  
                            u1407 0FF7                              u1175 046D                              u1271 0353  
                            u1255 033C                              u1095 025E                              u1327 0380  
                            u1185 0479                              u1337 038F                              u1290 0367  
                            u1195 0485                              u1291 0366                              u1275 0350  
                            u1347 039E                              u1285 035B                              u1357 0250  
                            u1367 02FE                              u1377 02A7                              u1387 00C1  
                            u1397 00D2                              _PEIE 005E  __end_of_I2C_Master_RepeatedStart 0F98  
                            _main 0561            _Lcd_Write_String_4bits 014B                              btemp 007E  
                            start 0000                 ___bmul@multiplier 0073                  ?_I2C_Master_Init 0020  
                ?_I2C_Master_Read 0070                  ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070  
                           ?_main 0070                 ??_Lcd_Clear_4bits 0074                   __end_of___awdiv 04A0  
                           STR_10 0021                             STR_11 0021                             STR_12 0021  
                 __end_of___awmod 0376                             _ANSEL 0188                   __end_of___lldiv 0439  
                 ___awdiv@divisor 0070                   __end_of___lwdiv 01D1                   __end_of___lwmod 014B  
                 ___awdiv@counter 0075                             _PORTB 0006                             _PORTD 0008  
                           _TRISB 0086                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063             __end_of_Lcd_Cmd_4bits 1000                   __end_of_leerHOR 02C4  
                 __end_of_leerMIN 031B                   __end_of_leerSEG 026D                   __end_of_dpowers 001D  
                           _setup 0051                             pclath 000A                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 0561                   __initialization 07FC  
                    __end_of_main 07FC                            ??_main 002D                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072  
                ___awdiv@dividend 0072                            ?_setup 0070                            _ANSELH 0189  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013          Lcd_Write_Char_4bits@temp 0072  
        _I2C_Master_RepeatedStart 0F8F                            ___bmul 0FD1                         ??___awdiv 0074  
                       ??___awmod 007D                         ??___lldiv 0078                         ??___lwdiv 0074  
                       ??___lwmod 007C                  ___awdiv@quotient 0077                   ___awmod@divisor 0079  
                 ___awmod@counter 0020                         ??_leerHOR 0076                         ??_leerMIN 0076  
                       ??_leerSEG 0076                      ?_setupINTOSC 0070                    _Lcd_Init_4bits 0376  
                       ??_sprintf 0023                     main@stringHOR 0042                     main@stringMIN 0039  
                   main@stringSEG 0030           __end_of__initialization 07FC               ___bmul@multiplicand 0070  
                  __pcstackCOMMON 0070             Lcd_Write_Char_4bits@a 0074             Lcd_Write_Char_4bits@y 0073  
                   __end_of_setup 0076            __end_of_Lcd_Init_4bits 03D3           ?_Lcd_Write_String_4bits 0075  
                         ??_setup 007E                    _Lcd_Port_4bits 002F                   _Lcd_Clear_4bits 0FAA  
                      __pmaintext 0561                           ?___bmul 0070      __end_of_Lcd_Write_Char_4bits 00D9  
                 Lcd_Port_4bits@a 0070                   ?_Lcd_Init_4bits 0070    __end_of_Lcd_Write_String_4bits 018D  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0003  
          __end_of_Lcd_Port_4bits 0051                           ___awdiv 0439                           ___awmod 031B  
                         ___lldiv 03D3                           ___lwdiv 018D                           ___lwmod 0111  
                         __ptext1 04A0                           __ptext2 0111                           __ptext3 018D  
                         __ptext4 0051                           __ptext5 0FC4                           __ptext6 0376  
                         __ptext7 00D9                           __ptext8 03D3                           __ptext9 0217  
                         _leerHOR 026D                           _leerMIN 02C4                           _leerSEG 0217  
                         _dpowers 0013                  ___awmod@dividend 007B                           main@HOR 005F  
                         main@MIN 005E                           main@SEG 005D      __end_of_Lcd_Set_Cursor_4bits 0217  
                         _sprintf 04A0              end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070  
                 ?_Lcd_Port_4bits 0070           __end_of_Lcd_Clear_4bits 0FB7                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 0020                  I2C_Master_Read@a 0070  
                       _PORTDbits 0008                        main@VAL1_C 0056                        main@VAL1_D 0055  
                      main@VAL1_U 0054                         _TRISCbits 0087                        leerHOR@HOR 0079  
                      leerMIN@MIN 0079                        leerSEG@SEG 0079              _Lcd_Write_Char_4bits 00A4  
                  __end_of___bmul 0FE6               start_initialization 07FC                     _Lcd_Cmd_4bits 0FE6  
           Lcd_Set_Cursor_4bits@a 0076             Lcd_Set_Cursor_4bits@b 0074             Lcd_Set_Cursor_4bits@y 0078  
           Lcd_Set_Cursor_4bits@z 0077                  ?_Lcd_Clear_4bits 0070                 ??_I2C_Master_Init 0024  
               ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070  
           ?_Lcd_Write_Char_4bits 0070                          ??___bmul 0071          Lcd_Set_Cursor_4bits@temp 0079  
            _Lcd_Set_Cursor_4bits 01D1                  ??_Lcd_Init_4bits 0074                         ___latbits 0002  
                   __pcstackBANK0 0020                    ?_Lcd_Cmd_4bits 0070                       sprintf@flag 0026  
                     sprintf@prec 002A                  _I2C_Master_Start 0F98                  _I2C_Master_Write 0025  
                ___lwdiv@dividend 0072             ?_Lcd_Set_Cursor_4bits 0074                          ?___awdiv 0070  
                        ?___awmod 0079                          ?___lldiv 0070                          ?___lwdiv 0070  
                        ?___lwmod 0078                         __pstrings 0003                          ?_leerHOR 0070  
                        ?_leerMIN 0070                          ?_leerSEG 0070                  ??_Lcd_Port_4bits 0070  
                ___lwdiv@quotient 0075                          ?_sprintf 0020            ??_Lcd_Write_Char_4bits 0071  
                       main@HOR_D 005C                         main@MIN_D 005A                         main@HOR_U 005B  
                       main@MIN_U 0059                         main@SEG_D 0058                         main@SEG_U 0057  
                     __stringbase 0012                     ??_setupINTOSC 0070                   ??_Lcd_Cmd_4bits 0071  
             I2C_Master_Read@temp 0074           Lcd_Write_String_4bits@a 0075           Lcd_Write_String_4bits@i 007A  
          ??_Lcd_Set_Cursor_4bits 0075         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0013  
        ??_Lcd_Write_String_4bits 0077                    Lcd_Cmd_4bits@a 0073                        sprintf@val 0028  
                 _I2C_Master_Init 00D9                   _I2C_Master_Read 0076                   _I2C_Master_Wait 0FB7  
                 _I2C_Master_Stop 0FA1                   ___lwdiv@divisor 0070                   ___lwdiv@counter 0077  
                        __ptext10 02C4                          __ptext11 026D                          __ptext20 0439  
                        __ptext12 0FD1                          __ptext21 014B                          __ptext13 0025  
                        __ptext22 00A4                          __ptext14 0FA1                          __ptext23 01D1  
                        __ptext15 0F98                          __ptext24 0FAA                          __ptext16 0F8F  
                        __ptext25 0FE6                          __ptext17 0076                          __ptext26 002F  
                        __ptext18 0FB7                          __ptext19 031B               __end_of_setupINTOSC 0FD1  
                        main@ADC1 004B                          main@VAL1 0060          __end_of_I2C_Master_Start 0FA1  
        __end_of_I2C_Master_Write 002F                         sprintf@ap 0027                         sprintf@sp 002B  
                ___lwmod@dividend 007A                  ___lldiv@dividend 0074                         stringcode 000D  
                      _OSCCONbits 008F           __end_of_I2C_Master_Init 0111           __end_of_I2C_Master_Read 00A4  
         __end_of_I2C_Master_Wait 0FC4           __end_of_I2C_Master_Stop 0FAA                       _setupINTOSC 0FC4  
                        sprintf@c 002C                          sprintf@f 0020                      setupINTOSC@F 0071  
                ___lldiv@quotient 0079                 I2C_Master_Write@d 0070                   ___lwmod@divisor 0078  
                 ___lwmod@counter 007D                          stringdir 000D                          stringtab 0003  
                     _SSPCON2bits 0091  
