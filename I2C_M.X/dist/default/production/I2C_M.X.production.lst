

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 10 13:20:37 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2
    29                           	psect	text21,local,class=CODE,merge=1,delta=2
    30                           	psect	text22,local,class=CODE,merge=1,delta=2
    31                           	psect	text23,local,class=CODE,merge=1,delta=2
    32                           	psect	text24,local,class=CODE,merge=1,delta=2
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36     0000                     
    37                           ; Version 2.40
    38                           ; Generated 17/11/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F887 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72     0000                     	;# 
    73     0001                     	;# 
    74     0002                     	;# 
    75     0003                     	;# 
    76     0004                     	;# 
    77     0005                     	;# 
    78     0006                     	;# 
    79     0007                     	;# 
    80     0008                     	;# 
    81     0009                     	;# 
    82     000A                     	;# 
    83     000B                     	;# 
    84     000C                     	;# 
    85     000D                     	;# 
    86     000E                     	;# 
    87     000E                     	;# 
    88     000F                     	;# 
    89     0010                     	;# 
    90     0011                     	;# 
    91     0012                     	;# 
    92     0013                     	;# 
    93     0014                     	;# 
    94     0015                     	;# 
    95     0015                     	;# 
    96     0016                     	;# 
    97     0017                     	;# 
    98     0018                     	;# 
    99     0019                     	;# 
   100     001A                     	;# 
   101     001B                     	;# 
   102     001B                     	;# 
   103     001C                     	;# 
   104     001D                     	;# 
   105     001E                     	;# 
   106     001F                     	;# 
   107     0081                     	;# 
   108     0085                     	;# 
   109     0086                     	;# 
   110     0087                     	;# 
   111     0088                     	;# 
   112     0089                     	;# 
   113     008C                     	;# 
   114     008D                     	;# 
   115     008E                     	;# 
   116     008F                     	;# 
   117     0090                     	;# 
   118     0091                     	;# 
   119     0092                     	;# 
   120     0093                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0094                     	;# 
   124     0095                     	;# 
   125     0096                     	;# 
   126     0097                     	;# 
   127     0098                     	;# 
   128     0099                     	;# 
   129     009A                     	;# 
   130     009B                     	;# 
   131     009C                     	;# 
   132     009D                     	;# 
   133     009E                     	;# 
   134     009F                     	;# 
   135     0105                     	;# 
   136     0107                     	;# 
   137     0108                     	;# 
   138     0109                     	;# 
   139     010C                     	;# 
   140     010C                     	;# 
   141     010D                     	;# 
   142     010E                     	;# 
   143     010F                     	;# 
   144     0185                     	;# 
   145     0187                     	;# 
   146     0188                     	;# 
   147     0189                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     0000                     	;# 
   151     0001                     	;# 
   152     0002                     	;# 
   153     0003                     	;# 
   154     0004                     	;# 
   155     0005                     	;# 
   156     0006                     	;# 
   157     0007                     	;# 
   158     0008                     	;# 
   159     0009                     	;# 
   160     000A                     	;# 
   161     000B                     	;# 
   162     000C                     	;# 
   163     000D                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0011                     	;# 
   169     0012                     	;# 
   170     0013                     	;# 
   171     0014                     	;# 
   172     0015                     	;# 
   173     0015                     	;# 
   174     0016                     	;# 
   175     0017                     	;# 
   176     0018                     	;# 
   177     0019                     	;# 
   178     001A                     	;# 
   179     001B                     	;# 
   180     001B                     	;# 
   181     001C                     	;# 
   182     001D                     	;# 
   183     001E                     	;# 
   184     001F                     	;# 
   185     0081                     	;# 
   186     0085                     	;# 
   187     0086                     	;# 
   188     0087                     	;# 
   189     0088                     	;# 
   190     0089                     	;# 
   191     008C                     	;# 
   192     008D                     	;# 
   193     008E                     	;# 
   194     008F                     	;# 
   195     0090                     	;# 
   196     0091                     	;# 
   197     0092                     	;# 
   198     0093                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0094                     	;# 
   202     0095                     	;# 
   203     0096                     	;# 
   204     0097                     	;# 
   205     0098                     	;# 
   206     0099                     	;# 
   207     009A                     	;# 
   208     009B                     	;# 
   209     009C                     	;# 
   210     009D                     	;# 
   211     009E                     	;# 
   212     009F                     	;# 
   213     0105                     	;# 
   214     0107                     	;# 
   215     0108                     	;# 
   216     0109                     	;# 
   217     010C                     	;# 
   218     010C                     	;# 
   219     010D                     	;# 
   220     010E                     	;# 
   221     010F                     	;# 
   222     0185                     	;# 
   223     0187                     	;# 
   224     0188                     	;# 
   225     0189                     	;# 
   226     018C                     	;# 
   227     018D                     	;# 
   228     0000                     	;# 
   229     0001                     	;# 
   230     0002                     	;# 
   231     0003                     	;# 
   232     0004                     	;# 
   233     0005                     	;# 
   234     0006                     	;# 
   235     0007                     	;# 
   236     0008                     	;# 
   237     0009                     	;# 
   238     000A                     	;# 
   239     000B                     	;# 
   240     000C                     	;# 
   241     000D                     	;# 
   242     000E                     	;# 
   243     000E                     	;# 
   244     000F                     	;# 
   245     0010                     	;# 
   246     0011                     	;# 
   247     0012                     	;# 
   248     0013                     	;# 
   249     0014                     	;# 
   250     0015                     	;# 
   251     0015                     	;# 
   252     0016                     	;# 
   253     0017                     	;# 
   254     0018                     	;# 
   255     0019                     	;# 
   256     001A                     	;# 
   257     001B                     	;# 
   258     001B                     	;# 
   259     001C                     	;# 
   260     001D                     	;# 
   261     001E                     	;# 
   262     001F                     	;# 
   263     0081                     	;# 
   264     0085                     	;# 
   265     0086                     	;# 
   266     0087                     	;# 
   267     0088                     	;# 
   268     0089                     	;# 
   269     008C                     	;# 
   270     008D                     	;# 
   271     008E                     	;# 
   272     008F                     	;# 
   273     0090                     	;# 
   274     0091                     	;# 
   275     0092                     	;# 
   276     0093                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0094                     	;# 
   280     0095                     	;# 
   281     0096                     	;# 
   282     0097                     	;# 
   283     0098                     	;# 
   284     0099                     	;# 
   285     009A                     	;# 
   286     009B                     	;# 
   287     009C                     	;# 
   288     009D                     	;# 
   289     009E                     	;# 
   290     009F                     	;# 
   291     0105                     	;# 
   292     0107                     	;# 
   293     0108                     	;# 
   294     0109                     	;# 
   295     010C                     	;# 
   296     010C                     	;# 
   297     010D                     	;# 
   298     010E                     	;# 
   299     010F                     	;# 
   300     0185                     	;# 
   301     0187                     	;# 
   302     0188                     	;# 
   303     0189                     	;# 
   304     018C                     	;# 
   305     018D                     	;# 
   306     0000                     	;# 
   307     0001                     	;# 
   308     0002                     	;# 
   309     0003                     	;# 
   310     0004                     	;# 
   311     0005                     	;# 
   312     0006                     	;# 
   313     0007                     	;# 
   314     0008                     	;# 
   315     0009                     	;# 
   316     000A                     	;# 
   317     000B                     	;# 
   318     000C                     	;# 
   319     000D                     	;# 
   320     000E                     	;# 
   321     000E                     	;# 
   322     000F                     	;# 
   323     0010                     	;# 
   324     0011                     	;# 
   325     0012                     	;# 
   326     0013                     	;# 
   327     0014                     	;# 
   328     0015                     	;# 
   329     0015                     	;# 
   330     0016                     	;# 
   331     0017                     	;# 
   332     0018                     	;# 
   333     0019                     	;# 
   334     001A                     	;# 
   335     001B                     	;# 
   336     001B                     	;# 
   337     001C                     	;# 
   338     001D                     	;# 
   339     001E                     	;# 
   340     001F                     	;# 
   341     0081                     	;# 
   342     0085                     	;# 
   343     0086                     	;# 
   344     0087                     	;# 
   345     0088                     	;# 
   346     0089                     	;# 
   347     008C                     	;# 
   348     008D                     	;# 
   349     008E                     	;# 
   350     008F                     	;# 
   351     0090                     	;# 
   352     0091                     	;# 
   353     0092                     	;# 
   354     0093                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0094                     	;# 
   358     0095                     	;# 
   359     0096                     	;# 
   360     0097                     	;# 
   361     0098                     	;# 
   362     0099                     	;# 
   363     009A                     	;# 
   364     009B                     	;# 
   365     009C                     	;# 
   366     009D                     	;# 
   367     009E                     	;# 
   368     009F                     	;# 
   369     0105                     	;# 
   370     0107                     	;# 
   371     0108                     	;# 
   372     0109                     	;# 
   373     010C                     	;# 
   374     010C                     	;# 
   375     010D                     	;# 
   376     010E                     	;# 
   377     010F                     	;# 
   378     0185                     	;# 
   379     0187                     	;# 
   380     0188                     	;# 
   381     0189                     	;# 
   382     018C                     	;# 
   383     018D                     	;# 
   384     0000                     	;# 
   385     0001                     	;# 
   386     0002                     	;# 
   387     0003                     	;# 
   388     0004                     	;# 
   389     0005                     	;# 
   390     0006                     	;# 
   391     0007                     	;# 
   392     0008                     	;# 
   393     0009                     	;# 
   394     000A                     	;# 
   395     000B                     	;# 
   396     000C                     	;# 
   397     000D                     	;# 
   398     000E                     	;# 
   399     000E                     	;# 
   400     000F                     	;# 
   401     0010                     	;# 
   402     0011                     	;# 
   403     0012                     	;# 
   404     0013                     	;# 
   405     0014                     	;# 
   406     0015                     	;# 
   407     0015                     	;# 
   408     0016                     	;# 
   409     0017                     	;# 
   410     0018                     	;# 
   411     0019                     	;# 
   412     001A                     	;# 
   413     001B                     	;# 
   414     001B                     	;# 
   415     001C                     	;# 
   416     001D                     	;# 
   417     001E                     	;# 
   418     001F                     	;# 
   419     0081                     	;# 
   420     0085                     	;# 
   421     0086                     	;# 
   422     0087                     	;# 
   423     0088                     	;# 
   424     0089                     	;# 
   425     008C                     	;# 
   426     008D                     	;# 
   427     008E                     	;# 
   428     008F                     	;# 
   429     0090                     	;# 
   430     0091                     	;# 
   431     0092                     	;# 
   432     0093                     	;# 
   433     0093                     	;# 
   434     0093                     	;# 
   435     0094                     	;# 
   436     0095                     	;# 
   437     0096                     	;# 
   438     0097                     	;# 
   439     0098                     	;# 
   440     0099                     	;# 
   441     009A                     	;# 
   442     009B                     	;# 
   443     009C                     	;# 
   444     009D                     	;# 
   445     009E                     	;# 
   446     009F                     	;# 
   447     0105                     	;# 
   448     0107                     	;# 
   449     0108                     	;# 
   450     0109                     	;# 
   451     010C                     	;# 
   452     010C                     	;# 
   453     010D                     	;# 
   454     010E                     	;# 
   455     010F                     	;# 
   456     0185                     	;# 
   457     0187                     	;# 
   458     0188                     	;# 
   459     0189                     	;# 
   460     018C                     	;# 
   461     018D                     	;# 
   462     0000                     	;# 
   463     0001                     	;# 
   464     0002                     	;# 
   465     0003                     	;# 
   466     0004                     	;# 
   467     0005                     	;# 
   468     0006                     	;# 
   469     0007                     	;# 
   470     0008                     	;# 
   471     0009                     	;# 
   472     000A                     	;# 
   473     000B                     	;# 
   474     000C                     	;# 
   475     000D                     	;# 
   476     000E                     	;# 
   477     000E                     	;# 
   478     000F                     	;# 
   479     0010                     	;# 
   480     0011                     	;# 
   481     0012                     	;# 
   482     0013                     	;# 
   483     0014                     	;# 
   484     0015                     	;# 
   485     0015                     	;# 
   486     0016                     	;# 
   487     0017                     	;# 
   488     0018                     	;# 
   489     0019                     	;# 
   490     001A                     	;# 
   491     001B                     	;# 
   492     001B                     	;# 
   493     001C                     	;# 
   494     001D                     	;# 
   495     001E                     	;# 
   496     001F                     	;# 
   497     0081                     	;# 
   498     0085                     	;# 
   499     0086                     	;# 
   500     0087                     	;# 
   501     0088                     	;# 
   502     0089                     	;# 
   503     008C                     	;# 
   504     008D                     	;# 
   505     008E                     	;# 
   506     008F                     	;# 
   507     0090                     	;# 
   508     0091                     	;# 
   509     0092                     	;# 
   510     0093                     	;# 
   511     0093                     	;# 
   512     0093                     	;# 
   513     0094                     	;# 
   514     0095                     	;# 
   515     0096                     	;# 
   516     0097                     	;# 
   517     0098                     	;# 
   518     0099                     	;# 
   519     009A                     	;# 
   520     009B                     	;# 
   521     009C                     	;# 
   522     009D                     	;# 
   523     009E                     	;# 
   524     009F                     	;# 
   525     0105                     	;# 
   526     0107                     	;# 
   527     0108                     	;# 
   528     0109                     	;# 
   529     010C                     	;# 
   530     010C                     	;# 
   531     010D                     	;# 
   532     010E                     	;# 
   533     010F                     	;# 
   534     0185                     	;# 
   535     0187                     	;# 
   536     0188                     	;# 
   537     0189                     	;# 
   538     018C                     	;# 
   539     018D                     	;# 
   540                           
   541                           	psect	strings
   542     0003                     __pstrings:
   543     0003                     stringtab:
   544     0003                     __stringtab:
   545                           
   546                           ;	String table - string pointers are 1 byte each
   547     0003  1BFF               	btfsc	btemp+1,7
   548     0004  280D               	ljmp	stringcode
   549     0005  1383               	bcf	3,7
   550     0006  187F               	btfsc	btemp+1,0
   551     0007  1783               	bsf	3,7
   552     0008  0800               	movf	0,w
   553     0009  0A84               	incf	4,f
   554     000A  1903               	skipnz
   555     000B  0AFF               	incf	btemp+1,f
   556     000C  0008               	return
   557     000D                     stringcode:
   558     000D                     stringdir:
   559     000D  3000               	movlw	high stringdir
   560     000E  008A               	movwf	10
   561     000F  0804               	movf	4,w
   562     0010  0A84               	incf	4,f
   563     0011  0782               	addwf	2,f
   564     0012                     __stringbase:
   565     0012  3400               	retlw	0
   566     0013                     __end_of__stringtab:
   567     0013                     _dpowers:
   568     0013  3401               	retlw	1
   569     0014  3400               	retlw	0
   570     0015  340A               	retlw	10
   571     0016  3400               	retlw	0
   572     0017  3464               	retlw	100
   573     0018  3400               	retlw	0
   574     0019  34E8               	retlw	232
   575     001A  3403               	retlw	3
   576     001B  3410               	retlw	16
   577     001C  3427               	retlw	39
   578     001D                     __end_of_dpowers:
   579     0008                     _PORTD	set	8
   580     0006                     _PORTB	set	6
   581     0008                     _PORTDbits	set	8
   582     0013                     _SSPBUF	set	19
   583     0014                     _SSPCON	set	20
   584     0063                     _SSPIF	set	99
   585     005E                     _PEIE	set	94
   586     005F                     _GIE	set	95
   587     0088                     _TRISD	set	136
   588     0086                     _TRISB	set	134
   589     008F                     _OSCCONbits	set	143
   590     0091                     _SSPCON2bits	set	145
   591     0087                     _TRISCbits	set	135
   592     0094                     _SSPSTAT	set	148
   593     0093                     _SSPADD	set	147
   594     0091                     _SSPCON2	set	145
   595     0463                     _SSPIE	set	1123
   596     043C                     _TRISC4	set	1084
   597     043B                     _TRISC3	set	1083
   598     0189                     _ANSELH	set	393
   599     0188                     _ANSEL	set	392
   600     001D                     STR_2:
   601     001D  3453               	retlw	83	;'S'
   602     001E  3465               	retlw	101	;'e'
   603     001F  3467               	retlw	103	;'g'
   604     0020  3475               	retlw	117	;'u'
   605     0021  346E               	retlw	110	;'n'
   606     0022  3464               	retlw	100	;'d'
   607     0023  346F               	retlw	111	;'o'
   608     0024  3473               	retlw	115	;'s'
   609     0025  343A               	retlw	58	;':'
   610     0026  3400               	retlw	0
   611     0027                     STR_1:
   612     0027  3453               	retlw	83	;'S'
   613     0028  3431               	retlw	49	;'1'
   614     0029  343A               	retlw	58	;':'
   615     002A  3400               	retlw	0
   616     002B                     STR_3:
   617     002B  3425               	retlw	37	;'%'
   618     002C  3475               	retlw	117	;'u'
   619     002D  3400               	retlw	0
   620     002B                     
   621                           	psect	cinit
   622     07FC                     start_initialization:	
   623                           ; #config settings
   624                           
   625     07FC                     __initialization:
   626     07FC                     end_of_initialization:	
   627                           ;End of C runtime variable initialization code
   628                           
   629     07FC                     __end_of__initialization:
   630     07FC  0183               	clrf	3
   631     07FD  120A  118A  2EC5   	ljmp	_main	;jump to C main() function
   632                           
   633                           	psect	cstackCOMMON
   634     0070                     __pcstackCOMMON:
   635     0070                     ?_setup:
   636     0070                     ?_leerSEG:	
   637                           ; 1 bytes @ 0x0
   638                           
   639     0070                     ?_I2C_Master_Wait:	
   640                           ; 1 bytes @ 0x0
   641                           
   642     0070                     ??_I2C_Master_Wait:	
   643                           ; 1 bytes @ 0x0
   644                           
   645     0070                     ?_I2C_Master_Start:	
   646                           ; 1 bytes @ 0x0
   647                           
   648     0070                     ??_I2C_Master_Start:	
   649                           ; 1 bytes @ 0x0
   650                           
   651     0070                     ?_I2C_Master_RepeatedStart:	
   652                           ; 1 bytes @ 0x0
   653                           
   654     0070                     ??_I2C_Master_RepeatedStart:	
   655                           ; 1 bytes @ 0x0
   656                           
   657     0070                     ?_I2C_Master_Stop:	
   658                           ; 1 bytes @ 0x0
   659                           
   660     0070                     ??_I2C_Master_Stop:	
   661                           ; 1 bytes @ 0x0
   662                           
   663     0070                     ?_I2C_Master_Write:	
   664                           ; 1 bytes @ 0x0
   665                           
   666     0070                     ?_setupINTOSC:	
   667                           ; 1 bytes @ 0x0
   668                           
   669     0070                     ??_setupINTOSC:	
   670                           ; 1 bytes @ 0x0
   671                           
   672     0070                     ?_Lcd_Port_4bits:	
   673                           ; 1 bytes @ 0x0
   674                           
   675     0070                     ??_Lcd_Port_4bits:	
   676                           ; 1 bytes @ 0x0
   677                           
   678     0070                     ?_Lcd_Cmd_4bits:	
   679                           ; 1 bytes @ 0x0
   680                           
   681     0070                     ?_Lcd_Clear_4bits:	
   682                           ; 1 bytes @ 0x0
   683                           
   684     0070                     ?_Lcd_Init_4bits:	
   685                           ; 1 bytes @ 0x0
   686                           
   687     0070                     ?_Lcd_Write_Char_4bits:	
   688                           ; 1 bytes @ 0x0
   689                           
   690     0070                     ?_main:	
   691                           ; 1 bytes @ 0x0
   692                           
   693     0070                     ?___bmul:	
   694                           ; 1 bytes @ 0x0
   695                           
   696     0070                     ?_I2C_Master_Read:	
   697                           ; 1 bytes @ 0x0
   698                           
   699     0070                     ?___awdiv:	
   700                           ; 2 bytes @ 0x0
   701                           
   702     0070                     ?___lwdiv:	
   703                           ; 2 bytes @ 0x0
   704                           
   705     0070                     ?___lldiv:	
   706                           ; 2 bytes @ 0x0
   707                           
   708     0070                     Lcd_Port_4bits@a:	
   709                           ; 4 bytes @ 0x0
   710                           
   711     0070                     ___bmul@multiplicand:	
   712                           ; 1 bytes @ 0x0
   713                           
   714     0070                     I2C_Master_Write@d:	
   715                           ; 1 bytes @ 0x0
   716                           
   717     0070                     I2C_Master_Read@a:	
   718                           ; 2 bytes @ 0x0
   719                           
   720     0070                     ___awdiv@divisor:	
   721                           ; 2 bytes @ 0x0
   722                           
   723     0070                     ___lwdiv@divisor:	
   724                           ; 2 bytes @ 0x0
   725                           
   726     0070                     ___lldiv@divisor:	
   727                           ; 2 bytes @ 0x0
   728                           
   729                           
   730                           ; 4 bytes @ 0x0
   731     0070                     	ds	1
   732     0071                     ??_Lcd_Cmd_4bits:
   733     0071                     ??_Lcd_Write_Char_4bits:	
   734                           ; 1 bytes @ 0x1
   735                           
   736     0071                     ??___bmul:	
   737                           ; 1 bytes @ 0x1
   738                           
   739     0071                     setupINTOSC@F:	
   740                           ; 1 bytes @ 0x1
   741                           
   742                           
   743                           ; 1 bytes @ 0x1
   744     0071                     	ds	1
   745     0072                     ??_I2C_Master_Write:
   746     0072                     ??_I2C_Master_Read:	
   747                           ; 1 bytes @ 0x2
   748                           
   749     0072                     Lcd_Write_Char_4bits@temp:	
   750                           ; 1 bytes @ 0x2
   751                           
   752     0072                     ___bmul@product:	
   753                           ; 1 bytes @ 0x2
   754                           
   755     0072                     ___awdiv@dividend:	
   756                           ; 1 bytes @ 0x2
   757                           
   758     0072                     ___lwdiv@dividend:	
   759                           ; 2 bytes @ 0x2
   760                           
   761                           
   762                           ; 2 bytes @ 0x2
   763     0072                     	ds	1
   764     0073                     Lcd_Cmd_4bits@a:
   765     0073                     Lcd_Write_Char_4bits@y:	
   766                           ; 1 bytes @ 0x3
   767                           
   768     0073                     ___bmul@multiplier:	
   769                           ; 1 bytes @ 0x3
   770                           
   771                           
   772                           ; 1 bytes @ 0x3
   773     0073                     	ds	1
   774     0074                     ??_Lcd_Clear_4bits:
   775     0074                     ?_Lcd_Set_Cursor_4bits:	
   776                           ; 1 bytes @ 0x4
   777                           
   778     0074                     ??_Lcd_Init_4bits:	
   779                           ; 1 bytes @ 0x4
   780                           
   781     0074                     ??___awdiv:	
   782                           ; 1 bytes @ 0x4
   783                           
   784     0074                     ??___lwdiv:	
   785                           ; 1 bytes @ 0x4
   786                           
   787     0074                     Lcd_Set_Cursor_4bits@b:	
   788                           ; 1 bytes @ 0x4
   789                           
   790     0074                     Lcd_Write_Char_4bits@a:	
   791                           ; 1 bytes @ 0x4
   792                           
   793     0074                     I2C_Master_Read@temp:	
   794                           ; 1 bytes @ 0x4
   795                           
   796     0074                     ___lldiv@dividend:	
   797                           ; 2 bytes @ 0x4
   798                           
   799                           
   800                           ; 4 bytes @ 0x4
   801     0074                     	ds	1
   802     0075                     ??_Lcd_Set_Cursor_4bits:
   803     0075                     ?_Lcd_Write_String_4bits:	
   804                           ; 1 bytes @ 0x5
   805                           
   806     0075                     ___awdiv@counter:	
   807                           ; 1 bytes @ 0x5
   808                           
   809     0075                     Lcd_Write_String_4bits@a:	
   810                           ; 1 bytes @ 0x5
   811                           
   812     0075                     ___lwdiv@quotient:	
   813                           ; 2 bytes @ 0x5
   814                           
   815                           
   816                           ; 2 bytes @ 0x5
   817     0075                     	ds	1
   818     0076                     ??_leerSEG:
   819     0076                     Lcd_Set_Cursor_4bits@a:	
   820                           ; 1 bytes @ 0x6
   821                           
   822     0076                     ___awdiv@sign:	
   823                           ; 1 bytes @ 0x6
   824                           
   825                           
   826                           ; 1 bytes @ 0x6
   827     0076                     	ds	1
   828     0077                     ??_Lcd_Write_String_4bits:
   829     0077                     Lcd_Set_Cursor_4bits@z:	
   830                           ; 1 bytes @ 0x7
   831                           
   832     0077                     ___lwdiv@counter:	
   833                           ; 1 bytes @ 0x7
   834                           
   835     0077                     ___awdiv@quotient:	
   836                           ; 1 bytes @ 0x7
   837                           
   838                           
   839                           ; 2 bytes @ 0x7
   840     0077                     	ds	1
   841     0078                     ??___lldiv:
   842     0078                     ?___lwmod:	
   843                           ; 1 bytes @ 0x8
   844                           
   845     0078                     Lcd_Set_Cursor_4bits@y:	
   846                           ; 2 bytes @ 0x8
   847                           
   848     0078                     ___lwmod@divisor:	
   849                           ; 1 bytes @ 0x8
   850                           
   851                           
   852                           ; 2 bytes @ 0x8
   853     0078                     	ds	1
   854     0079                     ?___awmod:
   855     0079                     Lcd_Set_Cursor_4bits@temp:	
   856                           ; 2 bytes @ 0x9
   857                           
   858     0079                     leerSEG@SEG:	
   859                           ; 1 bytes @ 0x9
   860                           
   861     0079                     ___awmod@divisor:	
   862                           ; 1 bytes @ 0x9
   863                           
   864     0079                     ___lldiv@quotient:	
   865                           ; 2 bytes @ 0x9
   866                           
   867                           
   868                           ; 4 bytes @ 0x9
   869     0079                     	ds	1
   870     007A                     Lcd_Write_String_4bits@i:
   871     007A                     ___lwmod@dividend:	
   872                           ; 2 bytes @ 0xA
   873                           
   874                           
   875                           ; 2 bytes @ 0xA
   876     007A                     	ds	1
   877     007B                     ___awmod@dividend:
   878                           
   879                           ; 2 bytes @ 0xB
   880     007B                     	ds	1
   881     007C                     ??___lwmod:
   882                           
   883                           ; 1 bytes @ 0xC
   884     007C                     	ds	1
   885     007D                     ??___awmod:
   886     007D                     ___lldiv@counter:	
   887                           ; 1 bytes @ 0xD
   888                           
   889     007D                     ___lwmod@counter:	
   890                           ; 1 bytes @ 0xD
   891                           
   892                           
   893                           ; 1 bytes @ 0xD
   894     007D                     	ds	1
   895     007E                     ??_setup:
   896                           
   897                           	psect	cstackBANK0
   898     0020                     __pcstackBANK0:	
   899                           ; 1 bytes @ 0xE
   900                           
   901     0020                     ?_I2C_Master_Init:
   902     0020                     ?_sprintf:	
   903                           ; 1 bytes @ 0x0
   904                           
   905     0020                     sprintf@f:	
   906                           ; 2 bytes @ 0x0
   907                           
   908     0020                     ___awmod@counter:	
   909                           ; 1 bytes @ 0x0
   910                           
   911     0020                     I2C_Master_Init@c:	
   912                           ; 1 bytes @ 0x0
   913                           
   914                           
   915                           ; 4 bytes @ 0x0
   916     0020                     	ds	1
   917     0021                     ___awmod@sign:
   918                           
   919                           ; 1 bytes @ 0x1
   920     0021                     	ds	2
   921     0023                     ??_sprintf:
   922                           
   923                           ; 1 bytes @ 0x3
   924     0023                     	ds	1
   925     0024                     ??_I2C_Master_Init:
   926                           
   927                           ; 1 bytes @ 0x4
   928     0024                     	ds	2
   929     0026                     sprintf@flag:
   930                           
   931                           ; 1 bytes @ 0x6
   932     0026                     	ds	1
   933     0027                     sprintf@ap:
   934                           
   935                           ; 1 bytes @ 0x7
   936     0027                     	ds	1
   937     0028                     sprintf@val:
   938                           
   939                           ; 2 bytes @ 0x8
   940     0028                     	ds	2
   941     002A                     sprintf@prec:
   942                           
   943                           ; 1 bytes @ 0xA
   944     002A                     	ds	1
   945     002B                     sprintf@sp:
   946                           
   947                           ; 1 bytes @ 0xB
   948     002B                     	ds	1
   949     002C                     sprintf@c:
   950                           
   951                           ; 1 bytes @ 0xC
   952     002C                     	ds	1
   953     002D                     ??_main:
   954                           
   955                           ; 1 bytes @ 0xD
   956     002D                     	ds	3
   957     0030                     main@stringSEG:
   958                           
   959                           ; 9 bytes @ 0x10
   960     0030                     	ds	9
   961     0039                     main@ADC1:
   962                           
   963                           ; 9 bytes @ 0x19
   964     0039                     	ds	9
   965     0042                     main@VAL1_U:
   966                           
   967                           ; 1 bytes @ 0x22
   968     0042                     	ds	1
   969     0043                     main@VAL1_D:
   970                           
   971                           ; 1 bytes @ 0x23
   972     0043                     	ds	1
   973     0044                     main@VAL1_C:
   974                           
   975                           ; 1 bytes @ 0x24
   976     0044                     	ds	1
   977     0045                     main@SEG:
   978                           
   979                           ; 1 bytes @ 0x25
   980     0045                     	ds	1
   981     0046                     main@VAL1:
   982                           
   983                           ; 1 bytes @ 0x26
   984     0046                     	ds	1
   985                           
   986                           	psect	maintext
   987     06C5                     __pmaintext:	
   988 ;;
   989 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   990 ;;
   991 ;; *************** function _main *****************
   992 ;; Defined at:
   993 ;;		line 61 in file "main_M.c"
   994 ;; Parameters:    Size  Location     Type
   995 ;;		None
   996 ;; Auto vars:     Size  Location     Type
   997 ;;  ADC1            9   25[BANK0 ] unsigned char [9]
   998 ;;  stringSEG       9   16[BANK0 ] unsigned char [9]
   999 ;;  VAL1            1   38[BANK0 ] unsigned char 
  1000 ;;  SEG             1   37[BANK0 ] unsigned char 
  1001 ;;  VAL1_C          1   36[BANK0 ] unsigned char 
  1002 ;;  VAL1_D          1   35[BANK0 ] unsigned char 
  1003 ;;  VAL1_U          1   34[BANK0 ] unsigned char 
  1004 ;; Return value:  Size  Location     Type
  1005 ;;                  1    wreg      void 
  1006 ;; Registers used:
  1007 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1008 ;; Tracked objects:
  1009 ;;		On entry : B00/0
  1010 ;;		On exit  : 0/0
  1011 ;;		Unchanged: 0/0
  1012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1013 ;;      Params:         0       0       0       0       0
  1014 ;;      Locals:         0      23       0       0       0
  1015 ;;      Temps:          0       3       0       0       0
  1016 ;;      Totals:         0      26       0       0       0
  1017 ;;Total ram usage:       26 bytes
  1018 ;; Hardware stack levels required when called: 4
  1019 ;; This function calls:
  1020 ;;		_I2C_Master_Read
  1021 ;;		_I2C_Master_Start
  1022 ;;		_I2C_Master_Stop
  1023 ;;		_I2C_Master_Write
  1024 ;;		_Lcd_Clear_4bits
  1025 ;;		_Lcd_Set_Cursor_4bits
  1026 ;;		_Lcd_Write_String_4bits
  1027 ;;		___awdiv
  1028 ;;		___awmod
  1029 ;;		_leerSEG
  1030 ;;		_setup
  1031 ;;		_sprintf
  1032 ;; This function is called by:
  1033 ;;		Startup code after reset
  1034 ;; This function uses a non-reentrant model
  1035 ;;
  1036                           
  1037     06C5                     _main:	
  1038                           ;psect for function _main
  1039                           
  1040     06C5                     l1614:	
  1041                           ;incstack = 0
  1042                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1043                           
  1044                           
  1045                           ;main_M.c: 63:     setup();
  1046     06C5  120A  118A  2263  120A  118A  	fcall	_setup
  1047                           
  1048                           ;main_M.c: 65:     uint8_t VAL1;;main_M.c: 66:     uint8_t VAL1_U;;main_M.c: 67:     uin
      +                          t8_t VAL1_D;;main_M.c: 68:     uint8_t VAL1_C;;main_M.c: 70:     uint8_t SEG;;main_M.c: 
      +                          72:     char ADC1[9];;main_M.c: 73:     char stringSEG[9];;main_M.c: 75:     Lcd_Clear_4
      +                          bits();
  1049     06CA  120A  118A  21EB  120A  118A  	fcall	_Lcd_Clear_4bits
  1050                           
  1051                           ;main_M.c: 76:     Lcd_Set_Cursor_4bits(1,1);
  1052     06CF  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1053     06D0  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1054     06D1  3001               	movlw	1
  1055     06D2  120A  118A  23E3  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1056     06D7                     l1616:
  1057                           
  1058                           ;main_M.c: 77:     Lcd_Write_String_4bits("S1:");
  1059     06D7  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1060     06D8  00F5               	movwf	Lcd_Write_String_4bits@a
  1061     06D9  3080               	movlw	128
  1062     06DA  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1063     06DB  120A  118A  235D  120A  118A  	fcall	_Lcd_Write_String_4bits
  1064     06E0                     l1618:
  1065                           
  1066                           ;main_M.c: 78:     Lcd_Set_Cursor_4bits(1,7);
  1067     06E0  3007               	movlw	7
  1068     06E1  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1069     06E2  3001               	movlw	1
  1070     06E3  120A  118A  23E3  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1071                           
  1072                           ;main_M.c: 79:     Lcd_Write_String_4bits("Segundos:");
  1073     06E8  300B               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1074     06E9  00F5               	movwf	Lcd_Write_String_4bits@a
  1075     06EA  3080               	movlw	128
  1076     06EB  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1077     06EC  120A  118A  235D  120A  118A  	fcall	_Lcd_Write_String_4bits
  1078     06F1                     l1620:
  1079                           
  1080                           ;main_M.c: 82:     {;main_M.c: 84:         I2C_Master_Start();
  1081     06F1  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Start
  1082     06F6                     l1622:
  1083                           
  1084                           ;main_M.c: 85:         I2C_Master_Write(0x11);
  1085     06F6  3011               	movlw	17
  1086     06F7  00F0               	movwf	I2C_Master_Write@d
  1087     06F8  3000               	movlw	0
  1088     06F9  00F1               	movwf	I2C_Master_Write@d+1
  1089     06FA  120A  118A  21E1  120A  118A  	fcall	_I2C_Master_Write
  1090     06FF                     l1624:
  1091                           
  1092                           ;main_M.c: 86:         VAL1 = I2C_Master_Read(0);
  1093     06FF  3000               	movlw	0
  1094     0700  00F0               	movwf	I2C_Master_Read@a
  1095     0701  00F1               	movwf	I2C_Master_Read@a+1
  1096     0702  120A  118A  2288  120A  118A  	fcall	_I2C_Master_Read
  1097     0707  0870               	movf	?_I2C_Master_Read,w
  1098     0708  1283               	bcf	3,5	;RP0=0, select bank0
  1099     0709  1303               	bcf	3,6	;RP1=0, select bank0
  1100     070A  00C6               	movwf	main@VAL1
  1101     070B                     l1626:
  1102                           
  1103                           ;main_M.c: 87:         I2C_Master_Stop();
  1104     070B  120A  118A  21D8  120A  118A  	fcall	_I2C_Master_Stop
  1105     0710                     l1628:
  1106                           
  1107                           ;main_M.c: 88:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1108     0710  3003               	movlw	3
  1109     0711  1283               	bcf	3,5	;RP0=0, select bank0
  1110     0712  1303               	bcf	3,6	;RP1=0, select bank0
  1111     0713  00AF               	movwf	??_main+2
  1112     0714  3008               	movlw	8
  1113     0715  00AE               	movwf	??_main+1
  1114     0716  3076               	movlw	118
  1115     0717  00AD               	movwf	??_main
  1116     0718                     u1277:
  1117     0718  0BAD               	decfsz	??_main,f
  1118     0719  2F18               	goto	u1277
  1119     071A  0BAE               	decfsz	??_main+1,f
  1120     071B  2F18               	goto	u1277
  1121     071C  0BAF               	decfsz	??_main+2,f
  1122     071D  2F18               	goto	u1277
  1123     071E  0000               	nop
  1124     071F                     l1630:
  1125                           
  1126                           ;main_M.c: 90:         VAL1_C = (VAL1/100);
  1127     071F  3064               	movlw	100
  1128     0720  00F0               	movwf	___awdiv@divisor
  1129     0721  3000               	movlw	0
  1130     0722  00F1               	movwf	___awdiv@divisor+1
  1131     0723  1283               	bcf	3,5	;RP0=0, select bank0
  1132     0724  1303               	bcf	3,6	;RP1=0, select bank0
  1133     0725  0846               	movf	main@VAL1,w
  1134     0726  00AD               	movwf	??_main
  1135     0727  01AE               	clrf	??_main+1
  1136     0728  082D               	movf	??_main,w
  1137     0729  00F2               	movwf	___awdiv@dividend
  1138     072A  082E               	movf	??_main+1,w
  1139     072B  00F3               	movwf	___awdiv@dividend+1
  1140     072C  120A  118A  259D  120A  118A  	fcall	___awdiv
  1141     0731  0870               	movf	?___awdiv,w
  1142     0732  1283               	bcf	3,5	;RP0=0, select bank0
  1143     0733  1303               	bcf	3,6	;RP1=0, select bank0
  1144     0734  00C4               	movwf	main@VAL1_C
  1145     0735                     l1632:
  1146                           
  1147                           ;main_M.c: 91:         VAL1_D = (VAL1/10)%10;
  1148     0735  300A               	movlw	10
  1149     0736  00F9               	movwf	___awmod@divisor
  1150     0737  3000               	movlw	0
  1151     0738  00FA               	movwf	___awmod@divisor+1
  1152     0739  300A               	movlw	10
  1153     073A  00F0               	movwf	___awdiv@divisor
  1154     073B  3000               	movlw	0
  1155     073C  00F1               	movwf	___awdiv@divisor+1
  1156     073D  0846               	movf	main@VAL1,w
  1157     073E  00AD               	movwf	??_main
  1158     073F  01AE               	clrf	??_main+1
  1159     0740  082D               	movf	??_main,w
  1160     0741  00F2               	movwf	___awdiv@dividend
  1161     0742  082E               	movf	??_main+1,w
  1162     0743  00F3               	movwf	___awdiv@dividend+1
  1163     0744  120A  118A  259D  120A  118A  	fcall	___awdiv
  1164     0749  0871               	movf	?___awdiv+1,w
  1165     074A  00FC               	movwf	___awmod@dividend+1
  1166     074B  0870               	movf	?___awdiv,w
  1167     074C  00FB               	movwf	___awmod@dividend
  1168     074D  120A  118A  247F  120A  118A  	fcall	___awmod
  1169     0752  0879               	movf	?___awmod,w
  1170     0753  1283               	bcf	3,5	;RP0=0, select bank0
  1171     0754  1303               	bcf	3,6	;RP1=0, select bank0
  1172     0755  00C3               	movwf	main@VAL1_D
  1173     0756                     l1634:
  1174                           
  1175                           ;main_M.c: 92:         VAL1_U = VAL1%10;
  1176     0756  300A               	movlw	10
  1177     0757  00F9               	movwf	___awmod@divisor
  1178     0758  3000               	movlw	0
  1179     0759  00FA               	movwf	___awmod@divisor+1
  1180     075A  0846               	movf	main@VAL1,w
  1181     075B  00AD               	movwf	??_main
  1182     075C  01AE               	clrf	??_main+1
  1183     075D  082D               	movf	??_main,w
  1184     075E  00FB               	movwf	___awmod@dividend
  1185     075F  082E               	movf	??_main+1,w
  1186     0760  00FC               	movwf	___awmod@dividend+1
  1187     0761  120A  118A  247F  120A  118A  	fcall	___awmod
  1188     0766  0879               	movf	?___awmod,w
  1189     0767  1283               	bcf	3,5	;RP0=0, select bank0
  1190     0768  1303               	bcf	3,6	;RP1=0, select bank0
  1191     0769  00C2               	movwf	main@VAL1_U
  1192     076A                     l1636:
  1193                           
  1194                           ;main_M.c: 94:         sprintf(ADC1, "%u", VAL1_C);
  1195     076A  3019               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1196     076B  00A0               	movwf	sprintf@f
  1197     076C  0844               	movf	main@VAL1_C,w
  1198     076D  00AD               	movwf	??_main
  1199     076E  01AE               	clrf	??_main+1
  1200     076F  082D               	movf	??_main,w
  1201     0770  00A1               	movwf	?_sprintf+1
  1202     0771  082E               	movf	??_main+1,w
  1203     0772  00A2               	movwf	?_sprintf+2
  1204     0773  3039               	movlw	(low (main@ADC1| 0))& (0+255)
  1205     0774  120A  118A  2604  120A  118A  	fcall	_sprintf
  1206     0779                     l1638:
  1207                           
  1208                           ;main_M.c: 95:         Lcd_Set_Cursor_4bits(2,1);
  1209     0779  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1210     077A  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1211     077B  3002               	movlw	2
  1212     077C  120A  118A  23E3  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1213     0781                     l1640:
  1214                           
  1215                           ;main_M.c: 96:         Lcd_Write_String_4bits(ADC1);
  1216     0781  3039               	movlw	(low (main@ADC1| 0))& (0+255)
  1217     0782  00F5               	movwf	Lcd_Write_String_4bits@a
  1218     0783  3000               	movlw	0
  1219     0784  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1220     0785  120A  118A  235D  120A  118A  	fcall	_Lcd_Write_String_4bits
  1221     078A                     l1642:
  1222                           
  1223                           ;main_M.c: 98:         sprintf(ADC1, "%u", VAL1_D);
  1224     078A  3019               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1225     078B  1283               	bcf	3,5	;RP0=0, select bank0
  1226     078C  1303               	bcf	3,6	;RP1=0, select bank0
  1227     078D  00A0               	movwf	sprintf@f
  1228     078E  0843               	movf	main@VAL1_D,w
  1229     078F  00AD               	movwf	??_main
  1230     0790  01AE               	clrf	??_main+1
  1231     0791  082D               	movf	??_main,w
  1232     0792  00A1               	movwf	?_sprintf+1
  1233     0793  082E               	movf	??_main+1,w
  1234     0794  00A2               	movwf	?_sprintf+2
  1235     0795  3039               	movlw	(low (main@ADC1| 0))& (0+255)
  1236     0796  120A  118A  2604  120A  118A  	fcall	_sprintf
  1237     079B                     l1644:
  1238                           
  1239                           ;main_M.c: 99:         Lcd_Set_Cursor_4bits(2,2);
  1240     079B  3002               	movlw	2
  1241     079C  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1242     079D  3002               	movlw	2
  1243     079E  120A  118A  23E3  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1244     07A3                     l1646:
  1245                           
  1246                           ;main_M.c: 100:         Lcd_Write_String_4bits(ADC1);
  1247     07A3  3039               	movlw	(low (main@ADC1| 0))& (0+255)
  1248     07A4  00F5               	movwf	Lcd_Write_String_4bits@a
  1249     07A5  3000               	movlw	0
  1250     07A6  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1251     07A7  120A  118A  235D  120A  118A  	fcall	_Lcd_Write_String_4bits
  1252     07AC                     l1648:
  1253                           
  1254                           ;main_M.c: 102:         sprintf(ADC1, "%u", VAL1_U);
  1255     07AC  3019               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1256     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  1257     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  1258     07AF  00A0               	movwf	sprintf@f
  1259     07B0  0842               	movf	main@VAL1_U,w
  1260     07B1  00AD               	movwf	??_main
  1261     07B2  01AE               	clrf	??_main+1
  1262     07B3  082D               	movf	??_main,w
  1263     07B4  00A1               	movwf	?_sprintf+1
  1264     07B5  082E               	movf	??_main+1,w
  1265     07B6  00A2               	movwf	?_sprintf+2
  1266     07B7  3039               	movlw	(low (main@ADC1| 0))& (0+255)
  1267     07B8  120A  118A  2604  120A  118A  	fcall	_sprintf
  1268     07BD                     l1650:
  1269                           
  1270                           ;main_M.c: 103:         Lcd_Set_Cursor_4bits(2,3);
  1271     07BD  3003               	movlw	3
  1272     07BE  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1273     07BF  3002               	movlw	2
  1274     07C0  120A  118A  23E3  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1275     07C5                     l1652:
  1276                           
  1277                           ;main_M.c: 104:         Lcd_Write_String_4bits(ADC1);
  1278     07C5  3039               	movlw	(low (main@ADC1| 0))& (0+255)
  1279     07C6  00F5               	movwf	Lcd_Write_String_4bits@a
  1280     07C7  3000               	movlw	0
  1281     07C8  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1282     07C9  120A  118A  235D  120A  118A  	fcall	_Lcd_Write_String_4bits
  1283     07CE                     l1654:
  1284                           
  1285                           ;main_M.c: 106:         SEG = leerSEG();
  1286     07CE  120A  118A  2429  120A  118A  	fcall	_leerSEG
  1287     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  1288     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  1289     07D5  00C5               	movwf	main@SEG
  1290     07D6                     l1656:
  1291                           
  1292                           ;main_M.c: 108:         PORTB = SEG;
  1293     07D6  0845               	movf	main@SEG,w
  1294     07D7  0086               	movwf	6	;volatile
  1295     07D8                     l1658:
  1296                           
  1297                           ;main_M.c: 110:         sprintf(stringSEG, "%u", SEG);
  1298     07D8  3019               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1299     07D9  00A0               	movwf	sprintf@f
  1300     07DA  0845               	movf	main@SEG,w
  1301     07DB  00AD               	movwf	??_main
  1302     07DC  01AE               	clrf	??_main+1
  1303     07DD  082D               	movf	??_main,w
  1304     07DE  00A1               	movwf	?_sprintf+1
  1305     07DF  082E               	movf	??_main+1,w
  1306     07E0  00A2               	movwf	?_sprintf+2
  1307     07E1  3030               	movlw	(low (main@stringSEG| 0))& (0+255)
  1308     07E2  120A  118A  2604  120A  118A  	fcall	_sprintf
  1309                           
  1310                           ;main_M.c: 111:         Lcd_Set_Cursor_4bits(2,7);
  1311     07E7  3007               	movlw	7
  1312     07E8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1313     07E9  3002               	movlw	2
  1314     07EA  120A  118A  23E3  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1315     07EF                     l1660:
  1316                           
  1317                           ;main_M.c: 112:         Lcd_Write_String_4bits(stringSEG);
  1318     07EF  3030               	movlw	(low (main@stringSEG| 0))& (0+255)
  1319     07F0  00F5               	movwf	Lcd_Write_String_4bits@a
  1320     07F1  3000               	movlw	0
  1321     07F2  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1322     07F3  120A  118A  235D  120A  118A  	fcall	_Lcd_Write_String_4bits
  1323     07F8  2EF1               	goto	l1620
  1324     07F9  120A  118A  2800   	ljmp	start
  1325     07FC                     __end_of_main:
  1326                           
  1327                           	psect	text1
  1328     0604                     __ptext1:	
  1329 ;; *************** function _sprintf *****************
  1330 ;; Defined at:
  1331 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;  sp              1    wreg     PTR unsigned char 
  1334 ;;		 -> main@stringSEG(9), main@ADC1(9), 
  1335 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1336 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1339 ;;		 -> main@stringSEG(9), main@ADC1(9), 
  1340 ;;  tmpval          4    0        struct .
  1341 ;;  val             2    8[BANK0 ] unsigned int 
  1342 ;;  cp              2    0        PTR const unsigned char 
  1343 ;;  len             2    0        unsigned int 
  1344 ;;  c               1   12[BANK0 ] unsigned char 
  1345 ;;  prec            1   10[BANK0 ] char 
  1346 ;;  ap              1    7[BANK0 ] PTR void [1]
  1347 ;;		 -> ?_sprintf(2), 
  1348 ;;  flag            1    6[BANK0 ] unsigned char 
  1349 ;; Return value:  Size  Location     Type
  1350 ;;                  2    0[BANK0 ] int 
  1351 ;; Registers used:
  1352 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1353 ;; Tracked objects:
  1354 ;;		On entry : 0/0
  1355 ;;		On exit  : 0/0
  1356 ;;		Unchanged: 0/0
  1357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1358 ;;      Params:         0       3       0       0       0
  1359 ;;      Locals:         0       7       0       0       0
  1360 ;;      Temps:          0       3       0       0       0
  1361 ;;      Totals:         0      13       0       0       0
  1362 ;;Total ram usage:       13 bytes
  1363 ;; Hardware stack levels used: 1
  1364 ;; Hardware stack levels required when called: 1
  1365 ;; This function calls:
  1366 ;;		___lwdiv
  1367 ;;		___lwmod
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373     0604                     _sprintf:	
  1374                           ;psect for function _sprintf
  1375                           
  1376                           
  1377                           ;incstack = 0
  1378                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1379                           ;sprintf@sp stored from wreg
  1380     0604  1283               	bcf	3,5	;RP0=0, select bank0
  1381     0605  1303               	bcf	3,6	;RP1=0, select bank0
  1382     0606  00AB               	movwf	sprintf@sp
  1383     0607                     l1468:
  1384                           
  1385                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1386     0607  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1387     0608  00A7               	movwf	sprintf@ap
  1388                           
  1389                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1390     0609  2EB0               	goto	l1510
  1391     060A                     l1470:
  1392                           
  1393                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1394     060A  3025               	movlw	37
  1395     060B  062C               	xorwf	sprintf@c,w
  1396     060C  1903               	btfsc	3,2
  1397     060D  2E0F               	goto	u1021
  1398     060E  2E10               	goto	u1020
  1399     060F                     u1021:
  1400     060F  2E1A               	goto	l1476
  1401     0610                     u1020:
  1402     0610                     l1472:
  1403                           
  1404                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1405     0610  082B               	movf	sprintf@sp,w
  1406     0611  0084               	movwf	4
  1407     0612  082C               	movf	sprintf@c,w
  1408     0613  1383               	bcf	3,7	;select IRP bank0
  1409     0614  0080               	movwf	0
  1410     0615                     l1474:
  1411     0615  3001               	movlw	1
  1412     0616  00A3               	movwf	??_sprintf
  1413     0617  0823               	movf	??_sprintf,w
  1414     0618  07AB               	addwf	sprintf@sp,f
  1415                           
  1416                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1417     0619  2EB0               	goto	l1510
  1418     061A                     l1476:
  1419                           
  1420                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1421     061A  01A6               	clrf	sprintf@flag
  1422                           
  1423                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1424     061B  2E21               	goto	l1482
  1425     061C                     l1478:
  1426                           
  1427                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1428     061C  30C0               	movlw	192
  1429     061D  00A3               	movwf	??_sprintf
  1430     061E  0823               	movf	??_sprintf,w
  1431     061F  04A6               	iorwf	sprintf@flag,f
  1432                           
  1433                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1434     0620  2E3B               	goto	l1484
  1435     0621                     l1482:
  1436     0621  3001               	movlw	1
  1437     0622  07A0               	addwf	sprintf@f,f
  1438     0623  30FF               	movlw	-1
  1439     0624  0720               	addwf	sprintf@f,w
  1440     0625  0084               	movwf	4
  1441     0626  120A  118A  200D  120A  118A  	fcall	stringdir
  1442     062B  00AC               	movwf	sprintf@c
  1443     062C  00A3               	movwf	??_sprintf
  1444     062D  01A4               	clrf	??_sprintf+1
  1445                           
  1446                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1447                           ; Switch size 1, requested type "simple"
  1448                           ; Number of cases is 1, Range of values is 0 to 0
  1449                           ; switch strategies available:
  1450                           ; Name         Instructions Cycles
  1451                           ; simple_byte            4     3 (average)
  1452                           ; direct_byte           11     8 (fixed)
  1453                           ; jumptable            260     6 (fixed)
  1454                           ;	Chosen strategy is simple_byte
  1455     062E  0824               	movf	??_sprintf+1,w
  1456     062F  3A00               	xorlw	0	; case 0
  1457     0630  1903               	skipnz
  1458     0631  2E33               	goto	l1682
  1459     0632  2EB0               	goto	l1510
  1460     0633                     l1682:
  1461                           
  1462                           ; Switch size 1, requested type "simple"
  1463                           ; Number of cases is 2, Range of values is 0 to 117
  1464                           ; switch strategies available:
  1465                           ; Name         Instructions Cycles
  1466                           ; simple_byte            7     4 (average)
  1467                           ; jumptable            260     6 (fixed)
  1468                           ;	Chosen strategy is simple_byte
  1469     0633  0823               	movf	??_sprintf,w
  1470     0634  3A00               	xorlw	0	; case 0
  1471     0635  1903               	skipnz
  1472     0636  2EC0               	goto	l1512
  1473     0637  3A75               	xorlw	117	; case 117
  1474     0638  1903               	skipnz
  1475     0639  2E1C               	goto	l1478
  1476     063A  2EB0               	goto	l1510
  1477     063B                     l1484:
  1478                           
  1479                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1480     063B  0827               	movf	sprintf@ap,w
  1481     063C  0084               	movwf	4
  1482     063D  1383               	bcf	3,7	;select IRP bank0
  1483     063E  0800               	movf	0,w
  1484     063F  00A8               	movwf	sprintf@val
  1485     0640  0A84               	incf	4,f
  1486     0641  0800               	movf	0,w
  1487     0642  00A9               	movwf	sprintf@val+1
  1488     0643                     l1486:
  1489     0643  3002               	movlw	2
  1490     0644  00A3               	movwf	??_sprintf
  1491     0645  0823               	movf	??_sprintf,w
  1492     0646  07A7               	addwf	sprintf@ap,f
  1493     0647                     l1488:
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1496     0647  01AC               	clrf	sprintf@c
  1497     0648  0AAC               	incf	sprintf@c,f
  1498     0649                     l1494:
  1499                           
  1500                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1501     0649  082C               	movf	sprintf@c,w
  1502     064A  00A3               	movwf	??_sprintf
  1503     064B  0723               	addwf	??_sprintf,w
  1504     064C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1505     064D  0084               	movwf	4
  1506     064E  120A  118A  200D  120A  118A  	fcall	stringdir
  1507     0653  00A4               	movwf	??_sprintf+1
  1508     0654  120A  118A  200D  120A  118A  	fcall	stringdir
  1509     0659  00A5               	movwf	??_sprintf+2
  1510     065A  0825               	movf	??_sprintf+2,w
  1511     065B  0229               	subwf	sprintf@val+1,w
  1512     065C  1D03               	skipz
  1513     065D  2E60               	goto	u1035
  1514     065E  0824               	movf	??_sprintf+1,w
  1515     065F  0228               	subwf	sprintf@val,w
  1516     0660                     u1035:
  1517     0660  1803               	skipnc
  1518     0661  2E63               	goto	u1031
  1519     0662  2E64               	goto	u1030
  1520     0663                     u1031:
  1521     0663  2E65               	goto	l1498
  1522     0664                     u1030:
  1523     0664  2E6F               	goto	l1500
  1524     0665                     l1498:
  1525     0665  3001               	movlw	1
  1526     0666  00A3               	movwf	??_sprintf
  1527     0667  0823               	movf	??_sprintf,w
  1528     0668  07AC               	addwf	sprintf@c,f
  1529     0669  3005               	movlw	5
  1530     066A  062C               	xorwf	sprintf@c,w
  1531     066B  1D03               	btfss	3,2
  1532     066C  2E6E               	goto	u1041
  1533     066D  2E6F               	goto	u1040
  1534     066E                     u1041:
  1535     066E  2E49               	goto	l1494
  1536     066F                     u1040:
  1537     066F                     l1500:
  1538                           
  1539                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1540     066F  082C               	movf	sprintf@c,w
  1541     0670  00AA               	movwf	sprintf@prec
  1542                           
  1543                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1544     0671  2EA7               	goto	l1508
  1545     0672                     l1502:
  1546                           
  1547                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1548     0672  300A               	movlw	10
  1549     0673  00F8               	movwf	___lwmod@divisor
  1550     0674  3000               	movlw	0
  1551     0675  00F9               	movwf	___lwmod@divisor+1
  1552     0676  082A               	movf	sprintf@prec,w
  1553     0677  00A3               	movwf	??_sprintf
  1554     0678  0723               	addwf	??_sprintf,w
  1555     0679  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1556     067A  0084               	movwf	4
  1557     067B  120A  118A  200D  120A  118A  	fcall	stringdir
  1558     0680  00F0               	movwf	___lwdiv@divisor
  1559     0681  120A  118A  200D  120A  118A  	fcall	stringdir
  1560     0686  00F1               	movwf	___lwdiv@divisor+1
  1561     0687  0829               	movf	sprintf@val+1,w
  1562     0688  00F3               	movwf	___lwdiv@dividend+1
  1563     0689  0828               	movf	sprintf@val,w
  1564     068A  00F2               	movwf	___lwdiv@dividend
  1565     068B  120A  118A  239F  120A  118A  	fcall	___lwdiv
  1566     0690  0871               	movf	?___lwdiv+1,w
  1567     0691  00FB               	movwf	___lwmod@dividend+1
  1568     0692  0870               	movf	?___lwdiv,w
  1569     0693  00FA               	movwf	___lwmod@dividend
  1570     0694  120A  118A  2323  120A  118A  	fcall	___lwmod
  1571     0699  0878               	movf	?___lwmod,w
  1572     069A  3E30               	addlw	48
  1573     069B  1283               	bcf	3,5	;RP0=0, select bank0
  1574     069C  1303               	bcf	3,6	;RP1=0, select bank0
  1575     069D  00AC               	movwf	sprintf@c
  1576     069E                     l1504:
  1577                           
  1578                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1579     069E  082B               	movf	sprintf@sp,w
  1580     069F  0084               	movwf	4
  1581     06A0  082C               	movf	sprintf@c,w
  1582     06A1  1383               	bcf	3,7	;select IRP bank0
  1583     06A2  0080               	movwf	0
  1584     06A3                     l1506:
  1585     06A3  3001               	movlw	1
  1586     06A4  00A3               	movwf	??_sprintf
  1587     06A5  0823               	movf	??_sprintf,w
  1588     06A6  07AB               	addwf	sprintf@sp,f
  1589     06A7                     l1508:
  1590                           
  1591                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1592     06A7  30FF               	movlw	255
  1593     06A8  00A3               	movwf	??_sprintf
  1594     06A9  0823               	movf	??_sprintf,w
  1595     06AA  07AA               	addwf	sprintf@prec,f
  1596     06AB  0A2A               	incf	sprintf@prec,w
  1597     06AC  1D03               	btfss	3,2
  1598     06AD  2EAF               	goto	u1051
  1599     06AE  2EB0               	goto	u1050
  1600     06AF                     u1051:
  1601     06AF  2E72               	goto	l1502
  1602     06B0                     u1050:
  1603     06B0                     l1510:
  1604                           
  1605                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1606     06B0  3001               	movlw	1
  1607     06B1  07A0               	addwf	sprintf@f,f
  1608     06B2  30FF               	movlw	-1
  1609     06B3  0720               	addwf	sprintf@f,w
  1610     06B4  0084               	movwf	4
  1611     06B5  120A  118A  200D  120A  118A  	fcall	stringdir
  1612     06BA  00AC               	movwf	sprintf@c
  1613     06BB  082C               	movf	sprintf@c,w
  1614     06BC  1D03               	btfss	3,2
  1615     06BD  2EBF               	goto	u1061
  1616     06BE  2EC0               	goto	u1060
  1617     06BF                     u1061:
  1618     06BF  2E0A               	goto	l1470
  1619     06C0                     u1060:
  1620     06C0                     l1512:
  1621                           
  1622                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1623     06C0  082B               	movf	sprintf@sp,w
  1624     06C1  0084               	movwf	4
  1625     06C2  1383               	bcf	3,7	;select IRP bank0
  1626     06C3  0180               	clrf	0
  1627     06C4                     l278:
  1628     06C4  0008               	return
  1629     06C5                     __end_of_sprintf:
  1630                           
  1631                           	psect	text2
  1632     0323                     __ptext2:	
  1633 ;; *************** function ___lwmod *****************
  1634 ;; Defined at:
  1635 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;  divisor         2    8[COMMON] unsigned int 
  1638 ;;  dividend        2   10[COMMON] unsigned int 
  1639 ;; Auto vars:     Size  Location     Type
  1640 ;;  counter         1   13[COMMON] unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2    8[COMMON] unsigned int 
  1643 ;; Registers used:
  1644 ;;		wreg, status,2, status,0
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         4       0       0       0       0
  1651 ;;      Locals:         1       0       0       0       0
  1652 ;;      Temps:          1       0       0       0       0
  1653 ;;      Totals:         6       0       0       0       0
  1654 ;;Total ram usage:        6 bytes
  1655 ;; Hardware stack levels used: 1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_sprintf
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663     0323                     ___lwmod:	
  1664                           ;psect for function ___lwmod
  1665                           
  1666     0323                     l1408:	
  1667                           ;incstack = 0
  1668                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1669                           
  1670     0323  0878               	movf	___lwmod@divisor,w
  1671     0324  0479               	iorwf	___lwmod@divisor+1,w
  1672     0325  1903               	btfsc	3,2
  1673     0326  2B28               	goto	u891
  1674     0327  2B29               	goto	u890
  1675     0328                     u891:
  1676     0328  2B58               	goto	l1426
  1677     0329                     u890:
  1678     0329                     l1410:
  1679     0329  01FD               	clrf	___lwmod@counter
  1680     032A  0AFD               	incf	___lwmod@counter,f
  1681     032B  2B37               	goto	l1416
  1682     032C                     l1412:
  1683     032C  3001               	movlw	1
  1684     032D                     u905:
  1685     032D  1003               	clrc
  1686     032E  0DF8               	rlf	___lwmod@divisor,f
  1687     032F  0DF9               	rlf	___lwmod@divisor+1,f
  1688     0330  3EFF               	addlw	-1
  1689     0331  1D03               	skipz
  1690     0332  2B2D               	goto	u905
  1691     0333                     l1414:
  1692     0333  3001               	movlw	1
  1693     0334  00FC               	movwf	??___lwmod
  1694     0335  087C               	movf	??___lwmod,w
  1695     0336  07FD               	addwf	___lwmod@counter,f
  1696     0337                     l1416:
  1697     0337  1FF9               	btfss	___lwmod@divisor+1,7
  1698     0338  2B3A               	goto	u911
  1699     0339  2B3B               	goto	u910
  1700     033A                     u911:
  1701     033A  2B2C               	goto	l1412
  1702     033B                     u910:
  1703     033B                     l1418:
  1704     033B  0879               	movf	___lwmod@divisor+1,w
  1705     033C  027B               	subwf	___lwmod@dividend+1,w
  1706     033D  1D03               	skipz
  1707     033E  2B41               	goto	u925
  1708     033F  0878               	movf	___lwmod@divisor,w
  1709     0340  027A               	subwf	___lwmod@dividend,w
  1710     0341                     u925:
  1711     0341  1C03               	skipc
  1712     0342  2B44               	goto	u921
  1713     0343  2B45               	goto	u920
  1714     0344                     u921:
  1715     0344  2B4B               	goto	l1422
  1716     0345                     u920:
  1717     0345                     l1420:
  1718     0345  0878               	movf	___lwmod@divisor,w
  1719     0346  02FA               	subwf	___lwmod@dividend,f
  1720     0347  0879               	movf	___lwmod@divisor+1,w
  1721     0348  1C03               	skipc
  1722     0349  03FB               	decf	___lwmod@dividend+1,f
  1723     034A  02FB               	subwf	___lwmod@dividend+1,f
  1724     034B                     l1422:
  1725     034B  3001               	movlw	1
  1726     034C                     u935:
  1727     034C  1003               	clrc
  1728     034D  0CF9               	rrf	___lwmod@divisor+1,f
  1729     034E  0CF8               	rrf	___lwmod@divisor,f
  1730     034F  3EFF               	addlw	-1
  1731     0350  1D03               	skipz
  1732     0351  2B4C               	goto	u935
  1733     0352                     l1424:
  1734     0352  3001               	movlw	1
  1735     0353  02FD               	subwf	___lwmod@counter,f
  1736     0354  1D03               	btfss	3,2
  1737     0355  2B57               	goto	u941
  1738     0356  2B58               	goto	u940
  1739     0357                     u941:
  1740     0357  2B3B               	goto	l1418
  1741     0358                     u940:
  1742     0358                     l1426:
  1743     0358  087B               	movf	___lwmod@dividend+1,w
  1744     0359  00F9               	movwf	?___lwmod+1
  1745     035A  087A               	movf	___lwmod@dividend,w
  1746     035B  00F8               	movwf	?___lwmod
  1747     035C                     l564:
  1748     035C  0008               	return
  1749     035D                     __end_of___lwmod:
  1750                           
  1751                           	psect	text3
  1752     039F                     __ptext3:	
  1753 ;; *************** function ___lwdiv *****************
  1754 ;; Defined at:
  1755 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  divisor         2    0[COMMON] unsigned int 
  1758 ;;  dividend        2    2[COMMON] unsigned int 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  quotient        2    5[COMMON] unsigned int 
  1761 ;;  counter         1    7[COMMON] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  2    0[COMMON] unsigned int 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, status,0
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         4       0       0       0       0
  1772 ;;      Locals:         3       0       0       0       0
  1773 ;;      Temps:          1       0       0       0       0
  1774 ;;      Totals:         8       0       0       0       0
  1775 ;;Total ram usage:        8 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; This function calls:
  1778 ;;		Nothing
  1779 ;; This function is called by:
  1780 ;;		_sprintf
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784     039F                     ___lwdiv:	
  1785                           ;psect for function ___lwdiv
  1786                           
  1787     039F                     l1382:	
  1788                           ;incstack = 0
  1789                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1790                           
  1791     039F  01F5               	clrf	___lwdiv@quotient
  1792     03A0  01F6               	clrf	___lwdiv@quotient+1
  1793     03A1                     l1384:
  1794     03A1  0870               	movf	___lwdiv@divisor,w
  1795     03A2  0471               	iorwf	___lwdiv@divisor+1,w
  1796     03A3  1903               	btfsc	3,2
  1797     03A4  2BA6               	goto	u821
  1798     03A5  2BA7               	goto	u820
  1799     03A6                     u821:
  1800     03A6  2BDE               	goto	l1404
  1801     03A7                     u820:
  1802     03A7                     l1386:
  1803     03A7  01F7               	clrf	___lwdiv@counter
  1804     03A8  0AF7               	incf	___lwdiv@counter,f
  1805     03A9  2BB5               	goto	l1392
  1806     03AA                     l1388:
  1807     03AA  3001               	movlw	1
  1808     03AB                     u835:
  1809     03AB  1003               	clrc
  1810     03AC  0DF0               	rlf	___lwdiv@divisor,f
  1811     03AD  0DF1               	rlf	___lwdiv@divisor+1,f
  1812     03AE  3EFF               	addlw	-1
  1813     03AF  1D03               	skipz
  1814     03B0  2BAB               	goto	u835
  1815     03B1                     l1390:
  1816     03B1  3001               	movlw	1
  1817     03B2  00F4               	movwf	??___lwdiv
  1818     03B3  0874               	movf	??___lwdiv,w
  1819     03B4  07F7               	addwf	___lwdiv@counter,f
  1820     03B5                     l1392:
  1821     03B5  1FF1               	btfss	___lwdiv@divisor+1,7
  1822     03B6  2BB8               	goto	u841
  1823     03B7  2BB9               	goto	u840
  1824     03B8                     u841:
  1825     03B8  2BAA               	goto	l1388
  1826     03B9                     u840:
  1827     03B9                     l1394:
  1828     03B9  3001               	movlw	1
  1829     03BA                     u855:
  1830     03BA  1003               	clrc
  1831     03BB  0DF5               	rlf	___lwdiv@quotient,f
  1832     03BC  0DF6               	rlf	___lwdiv@quotient+1,f
  1833     03BD  3EFF               	addlw	-1
  1834     03BE  1D03               	skipz
  1835     03BF  2BBA               	goto	u855
  1836     03C0  0871               	movf	___lwdiv@divisor+1,w
  1837     03C1  0273               	subwf	___lwdiv@dividend+1,w
  1838     03C2  1D03               	skipz
  1839     03C3  2BC6               	goto	u865
  1840     03C4  0870               	movf	___lwdiv@divisor,w
  1841     03C5  0272               	subwf	___lwdiv@dividend,w
  1842     03C6                     u865:
  1843     03C6  1C03               	skipc
  1844     03C7  2BC9               	goto	u861
  1845     03C8  2BCA               	goto	u860
  1846     03C9                     u861:
  1847     03C9  2BD1               	goto	l1400
  1848     03CA                     u860:
  1849     03CA                     l1396:
  1850     03CA  0870               	movf	___lwdiv@divisor,w
  1851     03CB  02F2               	subwf	___lwdiv@dividend,f
  1852     03CC  0871               	movf	___lwdiv@divisor+1,w
  1853     03CD  1C03               	skipc
  1854     03CE  03F3               	decf	___lwdiv@dividend+1,f
  1855     03CF  02F3               	subwf	___lwdiv@dividend+1,f
  1856     03D0                     l1398:
  1857     03D0  1475               	bsf	___lwdiv@quotient,0
  1858     03D1                     l1400:
  1859     03D1  3001               	movlw	1
  1860     03D2                     u875:
  1861     03D2  1003               	clrc
  1862     03D3  0CF1               	rrf	___lwdiv@divisor+1,f
  1863     03D4  0CF0               	rrf	___lwdiv@divisor,f
  1864     03D5  3EFF               	addlw	-1
  1865     03D6  1D03               	skipz
  1866     03D7  2BD2               	goto	u875
  1867     03D8                     l1402:
  1868     03D8  3001               	movlw	1
  1869     03D9  02F7               	subwf	___lwdiv@counter,f
  1870     03DA  1D03               	btfss	3,2
  1871     03DB  2BDD               	goto	u881
  1872     03DC  2BDE               	goto	u880
  1873     03DD                     u881:
  1874     03DD  2BB9               	goto	l1394
  1875     03DE                     u880:
  1876     03DE                     l1404:
  1877     03DE  0876               	movf	___lwdiv@quotient+1,w
  1878     03DF  00F1               	movwf	?___lwdiv+1
  1879     03E0  0875               	movf	___lwdiv@quotient,w
  1880     03E1  00F0               	movwf	?___lwdiv
  1881     03E2                     l554:
  1882     03E2  0008               	return
  1883     03E3                     __end_of___lwdiv:
  1884                           
  1885                           	psect	text4
  1886     0263                     __ptext4:	
  1887 ;; *************** function _setup *****************
  1888 ;; Defined at:
  1889 ;;		line 121 in file "main_M.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;		None
  1892 ;; Auto vars:     Size  Location     Type
  1893 ;;		None
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, pclath, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         0       0       0       0       0
  1904 ;;      Locals:         0       0       0       0       0
  1905 ;;      Temps:          0       0       0       0       0
  1906 ;;      Totals:         0       0       0       0       0
  1907 ;;Total ram usage:        0 bytes
  1908 ;; Hardware stack levels used: 1
  1909 ;; Hardware stack levels required when called: 3
  1910 ;; This function calls:
  1911 ;;		_I2C_Master_Init
  1912 ;;		_Lcd_Init_4bits
  1913 ;;		_setupINTOSC
  1914 ;; This function is called by:
  1915 ;;		_main
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919     0263                     _setup:	
  1920                           ;psect for function _setup
  1921                           
  1922     0263                     l1460:	
  1923                           ;incstack = 0
  1924                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1925                           
  1926                           
  1927                           ;main_M.c: 123:     ANSEL = 0;
  1928     0263  1683               	bsf	3,5	;RP0=1, select bank3
  1929     0264  1703               	bsf	3,6	;RP1=1, select bank3
  1930     0265  0188               	clrf	8	;volatile
  1931                           
  1932                           ;main_M.c: 124:     ANSELH = 0;
  1933     0266  0189               	clrf	9	;volatile
  1934                           
  1935                           ;main_M.c: 126:     TRISB = 0;
  1936     0267  1683               	bsf	3,5	;RP0=1, select bank1
  1937     0268  1303               	bcf	3,6	;RP1=0, select bank1
  1938     0269  0186               	clrf	6	;volatile
  1939                           
  1940                           ;main_M.c: 127:     TRISD = 0;
  1941     026A  0188               	clrf	8	;volatile
  1942                           
  1943                           ;main_M.c: 129:     PORTB = 0;
  1944     026B  1283               	bcf	3,5	;RP0=0, select bank0
  1945     026C  1303               	bcf	3,6	;RP1=0, select bank0
  1946     026D  0186               	clrf	6	;volatile
  1947                           
  1948                           ;main_M.c: 130:     PORTD = 0;
  1949     026E  0188               	clrf	8	;volatile
  1950     026F                     l1462:
  1951                           
  1952                           ;main_M.c: 132:     I2C_Master_Init(100000);
  1953     026F  3000               	movlw	0
  1954     0270  00A3               	movwf	I2C_Master_Init@c+3
  1955     0271  3001               	movlw	1
  1956     0272  00A2               	movwf	I2C_Master_Init@c+2
  1957     0273  3086               	movlw	134
  1958     0274  00A1               	movwf	I2C_Master_Init@c+1
  1959     0275  30A0               	movlw	160
  1960     0276  00A0               	movwf	I2C_Master_Init@c
  1961     0277  120A  118A  22EB  120A  118A  	fcall	_I2C_Master_Init
  1962     027C                     l1464:
  1963                           
  1964                           ;main_M.c: 133:     setupINTOSC(FOSC_8MHZ);
  1965     027C  3007               	movlw	7
  1966     027D  120A  118A  2205  120A  118A  	fcall	_setupINTOSC
  1967     0282                     l1466:
  1968                           
  1969                           ;main_M.c: 134:     Lcd_Init_4bits();
  1970     0282  120A  118A  24DA  120A  118A  	fcall	_Lcd_Init_4bits
  1971     0287                     l156:
  1972     0287  0008               	return
  1973     0288                     __end_of_setup:
  1974                           
  1975                           	psect	text5
  1976     0205                     __ptext5:	
  1977 ;; *************** function _setupINTOSC *****************
  1978 ;; Defined at:
  1979 ;;		line 11 in file "configINTOSC.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  F               1    wreg     enum E1292
  1982 ;; Auto vars:     Size  Location     Type
  1983 ;;  F               1    1[COMMON] enum E1292
  1984 ;; Return value:  Size  Location     Type
  1985 ;;                  1    wreg      void 
  1986 ;; Registers used:
  1987 ;;		wreg, status,2, status,0
  1988 ;; Tracked objects:
  1989 ;;		On entry : 0/0
  1990 ;;		On exit  : 0/0
  1991 ;;		Unchanged: 0/0
  1992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1993 ;;      Params:         0       0       0       0       0
  1994 ;;      Locals:         1       0       0       0       0
  1995 ;;      Temps:          1       0       0       0       0
  1996 ;;      Totals:         2       0       0       0       0
  1997 ;;Total ram usage:        2 bytes
  1998 ;; Hardware stack levels used: 1
  1999 ;; This function calls:
  2000 ;;		Nothing
  2001 ;; This function is called by:
  2002 ;;		_setup
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006     0205                     _setupINTOSC:	
  2007                           ;psect for function _setupINTOSC
  2008                           
  2009                           
  2010                           ;incstack = 0
  2011                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  2012                           ;setupINTOSC@F stored from wreg
  2013     0205  00F1               	movwf	setupINTOSC@F
  2014     0206                     l1334:
  2015                           
  2016                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  2017     0206  0871               	movf	setupINTOSC@F,w
  2018     0207  00F0               	movwf	??_setupINTOSC
  2019     0208  0EF0               	swapf	??_setupINTOSC,f
  2020     0209  1683               	bsf	3,5	;RP0=1, select bank1
  2021     020A  1303               	bcf	3,6	;RP1=0, select bank1
  2022     020B  080F               	movf	15,w	;volatile
  2023     020C  0670               	xorwf	??_setupINTOSC,w
  2024     020D  398F               	andlw	-113
  2025     020E  0670               	xorwf	??_setupINTOSC,w
  2026     020F  008F               	movwf	15	;volatile
  2027     0210                     l1336:
  2028                           
  2029                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  2030     0210  140F               	bsf	15,0	;volatile
  2031     0211                     l60:
  2032     0211  0008               	return
  2033     0212                     __end_of_setupINTOSC:
  2034                           
  2035                           	psect	text6
  2036     04DA                     __ptext6:	
  2037 ;; *************** function _Lcd_Init_4bits *****************
  2038 ;; Defined at:
  2039 ;;		line 66 in file "configLCD_4bits.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;		None
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      void 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2, status,0, pclath, cstack
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2053 ;;      Params:         0       0       0       0       0
  2054 ;;      Locals:         0       0       0       0       0
  2055 ;;      Temps:          2       0       0       0       0
  2056 ;;      Totals:         2       0       0       0       0
  2057 ;;Total ram usage:        2 bytes
  2058 ;; Hardware stack levels used: 1
  2059 ;; Hardware stack levels required when called: 2
  2060 ;; This function calls:
  2061 ;;		_Lcd_Cmd_4bits
  2062 ;;		_Lcd_Port_4bits
  2063 ;; This function is called by:
  2064 ;;		_setup
  2065 ;; This function uses a non-reentrant model
  2066 ;;
  2067                           
  2068     04DA                     _Lcd_Init_4bits:	
  2069                           ;psect for function _Lcd_Init_4bits
  2070                           
  2071     04DA                     l1338:	
  2072                           ;incstack = 0
  2073                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  2074                           
  2075                           
  2076                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  2077     04DA  3000               	movlw	0
  2078     04DB  120A  118A  2241  120A  118A  	fcall	_Lcd_Port_4bits
  2079     04E0                     l1340:
  2080                           
  2081                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2082     04E0  3034               	movlw	52
  2083     04E1  00F5               	movwf	??_Lcd_Init_4bits+1
  2084     04E2  30F1               	movlw	241
  2085     04E3  00F4               	movwf	??_Lcd_Init_4bits
  2086     04E4                     u1287:
  2087     04E4  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2088     04E5  2CE4               	goto	u1287
  2089     04E6  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2090     04E7  2CE4               	goto	u1287
  2091     04E8  2CE9               	nop2
  2092     04E9                     l1342:
  2093                           
  2094                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  2095     04E9  3003               	movlw	3
  2096     04EA  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  2097                           
  2098                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2099     04EF  300D               	movlw	13
  2100     04F0  00F5               	movwf	??_Lcd_Init_4bits+1
  2101     04F1  30FB               	movlw	251
  2102     04F2  00F4               	movwf	??_Lcd_Init_4bits
  2103     04F3                     u1297:
  2104     04F3  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2105     04F4  2CF3               	goto	u1297
  2106     04F5  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2107     04F6  2CF3               	goto	u1297
  2108     04F7  2CF8               	nop2
  2109     04F8                     l1344:
  2110                           
  2111                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  2112     04F8  3003               	movlw	3
  2113     04F9  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  2114     04FE                     l1346:
  2115                           
  2116                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2117     04FE  301D               	movlw	29
  2118     04FF  00F5               	movwf	??_Lcd_Init_4bits+1
  2119     0500  3091               	movlw	145
  2120     0501  00F4               	movwf	??_Lcd_Init_4bits
  2121     0502                     u1307:
  2122     0502  0BF4               	decfsz	??_Lcd_Init_4bits,f
  2123     0503  2D02               	goto	u1307
  2124     0504  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  2125     0505  2D02               	goto	u1307
  2126                           
  2127                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  2128     0506  3003               	movlw	3
  2129     0507  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  2130                           
  2131                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  2132     050C  3002               	movlw	2
  2133     050D  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  2134                           
  2135                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  2136     0512  3002               	movlw	2
  2137     0513  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  2138                           
  2139                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  2140     0518  3008               	movlw	8
  2141     0519  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  2142                           
  2143                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  2144     051E  3000               	movlw	0
  2145     051F  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  2146                           
  2147                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  2148     0524  300C               	movlw	12
  2149     0525  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  2150                           
  2151                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  2152     052A  3000               	movlw	0
  2153     052B  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  2154                           
  2155                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  2156     0530  3006               	movlw	6
  2157     0531  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  2158     0536                     l90:
  2159     0536  0008               	return
  2160     0537                     __end_of_Lcd_Init_4bits:
  2161                           
  2162                           	psect	text7
  2163     02EB                     __ptext7:	
  2164 ;; *************** function _I2C_Master_Init *****************
  2165 ;; Defined at:
  2166 ;;		line 13 in file "configI2C.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  c               4    0[BANK0 ] const unsigned long 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, status,0, pclath, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2180 ;;      Params:         0       4       0       0       0
  2181 ;;      Locals:         0       0       0       0       0
  2182 ;;      Temps:          0       4       0       0       0
  2183 ;;      Totals:         0       8       0       0       0
  2184 ;;Total ram usage:        8 bytes
  2185 ;; Hardware stack levels used: 1
  2186 ;; Hardware stack levels required when called: 1
  2187 ;; This function calls:
  2188 ;;		___lldiv
  2189 ;; This function is called by:
  2190 ;;		_setup
  2191 ;; This function uses a non-reentrant model
  2192 ;;
  2193                           
  2194     02EB                     _I2C_Master_Init:	
  2195                           ;psect for function _I2C_Master_Init
  2196                           
  2197     02EB                     l1290:	
  2198                           ;incstack = 0
  2199                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2200                           
  2201                           
  2202                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
  2203     02EB  3028               	movlw	40
  2204     02EC  1283               	bcf	3,5	;RP0=0, select bank0
  2205     02ED  1303               	bcf	3,6	;RP1=0, select bank0
  2206     02EE  0094               	movwf	20	;volatile
  2207     02EF                     l1292:
  2208                           
  2209                           ;configI2C.c: 16:     SSPCON2 = 0;
  2210     02EF  1683               	bsf	3,5	;RP0=1, select bank1
  2211     02F0  1303               	bcf	3,6	;RP1=0, select bank1
  2212     02F1  0191               	clrf	17	;volatile
  2213     02F2                     l1294:
  2214                           
  2215                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
  2216     02F2  1283               	bcf	3,5	;RP0=0, select bank0
  2217     02F3  1303               	bcf	3,6	;RP1=0, select bank0
  2218     02F4  0820               	movf	I2C_Master_Init@c,w
  2219     02F5  00A4               	movwf	??_I2C_Master_Init
  2220     02F6  0821               	movf	I2C_Master_Init@c+1,w
  2221     02F7  00A5               	movwf	??_I2C_Master_Init+1
  2222     02F8  0822               	movf	I2C_Master_Init@c+2,w
  2223     02F9  00A6               	movwf	??_I2C_Master_Init+2
  2224     02FA  0823               	movf	I2C_Master_Init@c+3,w
  2225     02FB  00A7               	movwf	??_I2C_Master_Init+3
  2226     02FC  3002               	movlw	2
  2227     02FD                     u775:
  2228     02FD  1003               	clrc
  2229     02FE  0DA4               	rlf	??_I2C_Master_Init,f
  2230     02FF  0DA5               	rlf	??_I2C_Master_Init+1,f
  2231     0300  0DA6               	rlf	??_I2C_Master_Init+2,f
  2232     0301  0DA7               	rlf	??_I2C_Master_Init+3,f
  2233     0302                     u770:
  2234     0302  3EFF               	addlw	-1
  2235     0303  1D03               	skipz
  2236     0304  2AFD               	goto	u775
  2237     0305  0827               	movf	??_I2C_Master_Init+3,w
  2238     0306  00F3               	movwf	___lldiv@divisor+3
  2239     0307  0826               	movf	??_I2C_Master_Init+2,w
  2240     0308  00F2               	movwf	___lldiv@divisor+2
  2241     0309  0825               	movf	??_I2C_Master_Init+1,w
  2242     030A  00F1               	movwf	___lldiv@divisor+1
  2243     030B  0824               	movf	??_I2C_Master_Init,w
  2244     030C  00F0               	movwf	___lldiv@divisor
  2245     030D  3000               	movlw	0
  2246     030E  00F7               	movwf	___lldiv@dividend+3
  2247     030F  307A               	movlw	122
  2248     0310  00F6               	movwf	___lldiv@dividend+2
  2249     0311  3012               	movlw	18
  2250     0312  00F5               	movwf	___lldiv@dividend+1
  2251     0313  3000               	movlw	0
  2252     0314  00F4               	movwf	___lldiv@dividend
  2253     0315  120A  118A  2537  120A  118A  	fcall	___lldiv
  2254     031A  0870               	movf	?___lldiv,w
  2255     031B  3EFF               	addlw	255
  2256     031C  1683               	bsf	3,5	;RP0=1, select bank1
  2257     031D  1303               	bcf	3,6	;RP1=0, select bank1
  2258     031E  0093               	movwf	19	;volatile
  2259     031F                     l1296:
  2260                           
  2261                           ;configI2C.c: 18:     SSPSTAT = 0;
  2262     031F  0194               	clrf	20	;volatile
  2263     0320                     l1298:
  2264                           
  2265                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
  2266     0320  1587               	bsf	7,3	;volatile
  2267     0321                     l1300:
  2268                           
  2269                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
  2270     0321  1607               	bsf	7,4	;volatile
  2271     0322                     l29:
  2272     0322  0008               	return
  2273     0323                     __end_of_I2C_Master_Init:
  2274                           
  2275                           	psect	text8
  2276     0537                     __ptext8:	
  2277 ;; *************** function ___lldiv *****************
  2278 ;; Defined at:
  2279 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  divisor         4    0[COMMON] unsigned long 
  2282 ;;  dividend        4    4[COMMON] unsigned long 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  quotient        4    9[COMMON] unsigned long 
  2285 ;;  counter         1   13[COMMON] unsigned char 
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  4    0[COMMON] unsigned long 
  2288 ;; Registers used:
  2289 ;;		wreg, status,2, status,0
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2295 ;;      Params:         8       0       0       0       0
  2296 ;;      Locals:         5       0       0       0       0
  2297 ;;      Temps:          1       0       0       0       0
  2298 ;;      Totals:        14       0       0       0       0
  2299 ;;Total ram usage:       14 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_I2C_Master_Init
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308     0537                     ___lldiv:	
  2309                           ;psect for function ___lldiv
  2310                           
  2311     0537                     l1266:	
  2312                           ;incstack = 0
  2313                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2314                           
  2315     0537  3000               	movlw	0
  2316     0538  00FC               	movwf	___lldiv@quotient+3
  2317     0539  3000               	movlw	0
  2318     053A  00FB               	movwf	___lldiv@quotient+2
  2319     053B  3000               	movlw	0
  2320     053C  00FA               	movwf	___lldiv@quotient+1
  2321     053D  3000               	movlw	0
  2322     053E  00F9               	movwf	___lldiv@quotient
  2323     053F  0873               	movf	___lldiv@divisor+3,w
  2324     0540  0472               	iorwf	___lldiv@divisor+2,w
  2325     0541  0471               	iorwf	___lldiv@divisor+1,w
  2326     0542  0470               	iorwf	___lldiv@divisor,w
  2327     0543  1903               	skipnz
  2328     0544  2D46               	goto	u701
  2329     0545  2D47               	goto	u700
  2330     0546                     u701:
  2331     0546  2D94               	goto	l1286
  2332     0547                     u700:
  2333     0547                     l1268:
  2334     0547  01FD               	clrf	___lldiv@counter
  2335     0548  0AFD               	incf	___lldiv@counter,f
  2336     0549  2D57               	goto	l1272
  2337     054A                     l1270:
  2338     054A  3001               	movlw	1
  2339     054B  00F8               	movwf	??___lldiv
  2340     054C                     u715:
  2341     054C  1003               	clrc
  2342     054D  0DF0               	rlf	___lldiv@divisor,f
  2343     054E  0DF1               	rlf	___lldiv@divisor+1,f
  2344     054F  0DF2               	rlf	___lldiv@divisor+2,f
  2345     0550  0DF3               	rlf	___lldiv@divisor+3,f
  2346     0551  0BF8               	decfsz	??___lldiv,f
  2347     0552  2D4C               	goto	u715
  2348     0553  3001               	movlw	1
  2349     0554  00F8               	movwf	??___lldiv
  2350     0555  0878               	movf	??___lldiv,w
  2351     0556  07FD               	addwf	___lldiv@counter,f
  2352     0557                     l1272:
  2353     0557  1FF3               	btfss	___lldiv@divisor+3,7
  2354     0558  2D5A               	goto	u721
  2355     0559  2D5B               	goto	u720
  2356     055A                     u721:
  2357     055A  2D4A               	goto	l1270
  2358     055B                     u720:
  2359     055B                     l1274:
  2360     055B  3001               	movlw	1
  2361     055C  00F8               	movwf	??___lldiv
  2362     055D                     u735:
  2363     055D  1003               	clrc
  2364     055E  0DF9               	rlf	___lldiv@quotient,f
  2365     055F  0DFA               	rlf	___lldiv@quotient+1,f
  2366     0560  0DFB               	rlf	___lldiv@quotient+2,f
  2367     0561  0DFC               	rlf	___lldiv@quotient+3,f
  2368     0562  0BF8               	decfsz	??___lldiv,f
  2369     0563  2D5D               	goto	u735
  2370     0564                     l1276:
  2371     0564  0873               	movf	___lldiv@divisor+3,w
  2372     0565  0277               	subwf	___lldiv@dividend+3,w
  2373     0566  1D03               	skipz
  2374     0567  2D72               	goto	u745
  2375     0568  0872               	movf	___lldiv@divisor+2,w
  2376     0569  0276               	subwf	___lldiv@dividend+2,w
  2377     056A  1D03               	skipz
  2378     056B  2D72               	goto	u745
  2379     056C  0871               	movf	___lldiv@divisor+1,w
  2380     056D  0275               	subwf	___lldiv@dividend+1,w
  2381     056E  1D03               	skipz
  2382     056F  2D72               	goto	u745
  2383     0570  0870               	movf	___lldiv@divisor,w
  2384     0571  0274               	subwf	___lldiv@dividend,w
  2385     0572                     u745:
  2386     0572  1C03               	skipc
  2387     0573  2D75               	goto	u741
  2388     0574  2D76               	goto	u740
  2389     0575                     u741:
  2390     0575  2D85               	goto	l1282
  2391     0576                     u740:
  2392     0576                     l1278:
  2393     0576  0870               	movf	___lldiv@divisor,w
  2394     0577  02F4               	subwf	___lldiv@dividend,f
  2395     0578  0871               	movf	___lldiv@divisor+1,w
  2396     0579  1C03               	skipc
  2397     057A  0F71               	incfsz	___lldiv@divisor+1,w
  2398     057B  02F5               	subwf	___lldiv@dividend+1,f
  2399     057C  0872               	movf	___lldiv@divisor+2,w
  2400     057D  1C03               	skipc
  2401     057E  0F72               	incfsz	___lldiv@divisor+2,w
  2402     057F  02F6               	subwf	___lldiv@dividend+2,f
  2403     0580  0873               	movf	___lldiv@divisor+3,w
  2404     0581  1C03               	skipc
  2405     0582  0F73               	incfsz	___lldiv@divisor+3,w
  2406     0583  02F7               	subwf	___lldiv@dividend+3,f
  2407     0584                     l1280:
  2408     0584  1479               	bsf	___lldiv@quotient,0
  2409     0585                     l1282:
  2410     0585  3001               	movlw	1
  2411     0586                     u755:
  2412     0586  1003               	clrc
  2413     0587  0CF3               	rrf	___lldiv@divisor+3,f
  2414     0588  0CF2               	rrf	___lldiv@divisor+2,f
  2415     0589  0CF1               	rrf	___lldiv@divisor+1,f
  2416     058A  0CF0               	rrf	___lldiv@divisor,f
  2417     058B  3EFF               	addlw	-1
  2418     058C  1D03               	skipz
  2419     058D  2D86               	goto	u755
  2420     058E                     l1284:
  2421     058E  3001               	movlw	1
  2422     058F  02FD               	subwf	___lldiv@counter,f
  2423     0590  1D03               	btfss	3,2
  2424     0591  2D93               	goto	u761
  2425     0592  2D94               	goto	u760
  2426     0593                     u761:
  2427     0593  2D5B               	goto	l1274
  2428     0594                     u760:
  2429     0594                     l1286:
  2430     0594  087C               	movf	___lldiv@quotient+3,w
  2431     0595  00F3               	movwf	?___lldiv+3
  2432     0596  087B               	movf	___lldiv@quotient+2,w
  2433     0597  00F2               	movwf	?___lldiv+2
  2434     0598  087A               	movf	___lldiv@quotient+1,w
  2435     0599  00F1               	movwf	?___lldiv+1
  2436     059A  0879               	movf	___lldiv@quotient,w
  2437     059B  00F0               	movwf	?___lldiv
  2438     059C                     l318:
  2439     059C  0008               	return
  2440     059D                     __end_of___lldiv:
  2441                           
  2442                           	psect	text9
  2443     0429                     __ptext9:	
  2444 ;; *************** function _leerSEG *****************
  2445 ;; Defined at:
  2446 ;;		line 13 in file "DS3231.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  SEG             1    9[COMMON] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      unsigned char 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, status,0, pclath, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2460 ;;      Params:         0       0       0       0       0
  2461 ;;      Locals:         1       0       0       0       0
  2462 ;;      Temps:          3       0       0       0       0
  2463 ;;      Totals:         4       0       0       0       0
  2464 ;;Total ram usage:        4 bytes
  2465 ;; Hardware stack levels used: 1
  2466 ;; Hardware stack levels required when called: 2
  2467 ;; This function calls:
  2468 ;;		_I2C_Master_Read
  2469 ;;		_I2C_Master_RepeatedStart
  2470 ;;		_I2C_Master_Start
  2471 ;;		_I2C_Master_Stop
  2472 ;;		_I2C_Master_Write
  2473 ;;		___bmul
  2474 ;; This function is called by:
  2475 ;;		_main
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479     0429                     _leerSEG:	
  2480                           ;psect for function _leerSEG
  2481                           
  2482     0429                     l1520:	
  2483                           ;incstack = 0
  2484                           ; Regs used in _leerSEG: [wreg+status,2+status,0+pclath+cstack]
  2485                           
  2486                           
  2487                           ;DS3231.c: 15:     uint8_t SEG;;DS3231.c: 17:     I2C_Master_Start();
  2488     0429  120A  118A  21CF  120A  118A  	fcall	_I2C_Master_Start
  2489                           
  2490                           ;DS3231.c: 18:     I2C_Master_Write(0xD0);
  2491     042E  30D0               	movlw	208
  2492     042F  00F0               	movwf	I2C_Master_Write@d
  2493     0430  3000               	movlw	0
  2494     0431  00F1               	movwf	I2C_Master_Write@d+1
  2495     0432  120A  118A  21E1  120A  118A  	fcall	_I2C_Master_Write
  2496                           
  2497                           ;DS3231.c: 19:     I2C_Master_Write(0x00);
  2498     0437  3000               	movlw	0
  2499     0438  00F0               	movwf	I2C_Master_Write@d
  2500     0439  00F1               	movwf	I2C_Master_Write@d+1
  2501     043A  120A  118A  21E1  120A  118A  	fcall	_I2C_Master_Write
  2502                           
  2503                           ;DS3231.c: 20:     I2C_Master_RepeatedStart();
  2504     043F  120A  118A  21C6  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2505                           
  2506                           ;DS3231.c: 21:     I2C_Master_Write(0xD1);
  2507     0444  30D1               	movlw	209
  2508     0445  00F0               	movwf	I2C_Master_Write@d
  2509     0446  3000               	movlw	0
  2510     0447  00F1               	movwf	I2C_Master_Write@d+1
  2511     0448  120A  118A  21E1  120A  118A  	fcall	_I2C_Master_Write
  2512                           
  2513                           ;DS3231.c: 22:     SEG = I2C_Master_Read(0);
  2514     044D  3000               	movlw	0
  2515     044E  00F0               	movwf	I2C_Master_Read@a
  2516     044F  00F1               	movwf	I2C_Master_Read@a+1
  2517     0450  120A  118A  2288  120A  118A  	fcall	_I2C_Master_Read
  2518     0455  0870               	movf	?_I2C_Master_Read,w
  2519     0456  00F9               	movwf	leerSEG@SEG
  2520                           
  2521                           ;DS3231.c: 23:     I2C_Master_Stop();
  2522     0457  120A  118A  21D8  120A  118A  	fcall	_I2C_Master_Stop
  2523     045C                     l1522:
  2524                           
  2525                           ;DS3231.c: 24:     _delay((unsigned long)((200)*(8000000/4000.0)));
  2526     045C  3003               	movlw	3
  2527     045D  00F8               	movwf	??_leerSEG+2
  2528     045E  3008               	movlw	8
  2529     045F  00F7               	movwf	??_leerSEG+1
  2530     0460  3077               	movlw	119
  2531     0461  00F6               	movwf	??_leerSEG
  2532     0462                     u1317:
  2533     0462  0BF6               	decfsz	??_leerSEG,f
  2534     0463  2C62               	goto	u1317
  2535     0464  0BF7               	decfsz	??_leerSEG+1,f
  2536     0465  2C62               	goto	u1317
  2537     0466  0BF8               	decfsz	??_leerSEG+2,f
  2538     0467  2C62               	goto	u1317
  2539     0468                     l1524:
  2540                           
  2541                           ;DS3231.c: 26:     SEG = (SEG >> 4) * 10 + (SEG & 0x0F);
  2542     0468  300F               	movlw	15
  2543     0469  0579               	andwf	leerSEG@SEG,w
  2544     046A  00F6               	movwf	??_leerSEG
  2545     046B  300A               	movlw	10
  2546     046C  00F0               	movwf	___bmul@multiplicand
  2547     046D  0879               	movf	leerSEG@SEG,w
  2548     046E  00F7               	movwf	??_leerSEG+1
  2549     046F  3004               	movlw	4
  2550     0470                     u1075:
  2551     0470  1003               	clrc
  2552     0471  0CF7               	rrf	??_leerSEG+1,f
  2553     0472  3EFF               	addlw	-1
  2554     0473  1D03               	skipz
  2555     0474  2C70               	goto	u1075
  2556     0475  0877               	movf	??_leerSEG+1,w
  2557     0476  120A  118A  2212  120A  118A  	fcall	___bmul
  2558     047B  0776               	addwf	??_leerSEG,w
  2559     047C  00F9               	movwf	leerSEG@SEG
  2560                           
  2561                           ;DS3231.c: 28:     return SEG;
  2562     047D  0879               	movf	leerSEG@SEG,w
  2563     047E                     l171:
  2564     047E  0008               	return
  2565     047F                     __end_of_leerSEG:
  2566                           
  2567                           	psect	text10
  2568     0212                     __ptext10:	
  2569 ;; *************** function ___bmul *****************
  2570 ;; Defined at:
  2571 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  2572 ;; Parameters:    Size  Location     Type
  2573 ;;  multiplier      1    wreg     unsigned char 
  2574 ;;  multiplicand    1    0[COMMON] unsigned char 
  2575 ;; Auto vars:     Size  Location     Type
  2576 ;;  multiplier      1    3[COMMON] unsigned char 
  2577 ;;  product         1    2[COMMON] unsigned char 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      unsigned char 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2587 ;;      Params:         1       0       0       0       0
  2588 ;;      Locals:         2       0       0       0       0
  2589 ;;      Temps:          1       0       0       0       0
  2590 ;;      Totals:         4       0       0       0       0
  2591 ;;Total ram usage:        4 bytes
  2592 ;; Hardware stack levels used: 1
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_leerSEG
  2597 ;; This function uses a non-reentrant model
  2598 ;;
  2599                           
  2600     0212                     ___bmul:	
  2601                           ;psect for function ___bmul
  2602                           
  2603                           
  2604                           ;incstack = 0
  2605                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2606                           ;___bmul@multiplier stored from wreg
  2607     0212  00F3               	movwf	___bmul@multiplier
  2608     0213                     l1368:
  2609     0213  01F2               	clrf	___bmul@product
  2610     0214                     l1370:
  2611     0214  1C73               	btfss	___bmul@multiplier,0
  2612     0215  2A17               	goto	u801
  2613     0216  2A18               	goto	u800
  2614     0217                     u801:
  2615     0217  2A1C               	goto	l1374
  2616     0218                     u800:
  2617     0218                     l1372:
  2618     0218  0870               	movf	___bmul@multiplicand,w
  2619     0219  00F1               	movwf	??___bmul
  2620     021A  0871               	movf	??___bmul,w
  2621     021B  07F2               	addwf	___bmul@product,f
  2622     021C                     l1374:
  2623     021C  1003               	clrc
  2624     021D  0DF0               	rlf	___bmul@multiplicand,f
  2625     021E                     l1376:
  2626     021E  1003               	clrc
  2627     021F  0CF3               	rrf	___bmul@multiplier,f
  2628     0220  0873               	movf	___bmul@multiplier,w
  2629     0221  1D03               	btfss	3,2
  2630     0222  2A24               	goto	u811
  2631     0223  2A25               	goto	u810
  2632     0224                     u811:
  2633     0224  2A14               	goto	l1370
  2634     0225                     u810:
  2635     0225                     l1378:
  2636     0225  0872               	movf	___bmul@product,w
  2637     0226                     l308:
  2638     0226  0008               	return
  2639     0227                     __end_of___bmul:
  2640                           
  2641                           	psect	text11
  2642     01E1                     __ptext11:	
  2643 ;; *************** function _I2C_Master_Write *****************
  2644 ;; Defined at:
  2645 ;;		line 62 in file "configI2C.c"
  2646 ;; Parameters:    Size  Location     Type
  2647 ;;  d               2    0[COMMON] unsigned int 
  2648 ;; Auto vars:     Size  Location     Type
  2649 ;;		None
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      void 
  2652 ;; Registers used:
  2653 ;;		wreg, status,2, status,0, pclath, cstack
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         2       0       0       0       0
  2660 ;;      Locals:         0       0       0       0       0
  2661 ;;      Temps:          0       0       0       0       0
  2662 ;;      Totals:         2       0       0       0       0
  2663 ;;Total ram usage:        2 bytes
  2664 ;; Hardware stack levels used: 1
  2665 ;; Hardware stack levels required when called: 1
  2666 ;; This function calls:
  2667 ;;		_I2C_Master_Wait
  2668 ;; This function is called by:
  2669 ;;		_main
  2670 ;;		_leerSEG
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674     01E1                     _I2C_Master_Write:	
  2675                           ;psect for function _I2C_Master_Write
  2676                           
  2677     01E1                     l1314:	
  2678                           ;incstack = 0
  2679                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2680                           
  2681                           
  2682                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
  2683     01E1  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Wait
  2684     01E6                     l1316:
  2685                           
  2686                           ;configI2C.c: 65:     SSPBUF = d;
  2687     01E6  0870               	movf	I2C_Master_Write@d,w
  2688     01E7  1283               	bcf	3,5	;RP0=0, select bank0
  2689     01E8  1303               	bcf	3,6	;RP1=0, select bank0
  2690     01E9  0093               	movwf	19	;volatile
  2691     01EA                     l47:
  2692     01EA  0008               	return
  2693     01EB                     __end_of_I2C_Master_Write:
  2694                           
  2695                           	psect	text12
  2696     01D8                     __ptext12:	
  2697 ;; *************** function _I2C_Master_Stop *****************
  2698 ;; Defined at:
  2699 ;;		line 52 in file "configI2C.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, status,2, status,0, pclath, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2713 ;;      Params:         0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0
  2716 ;;      Totals:         0       0       0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 1
  2720 ;; This function calls:
  2721 ;;		_I2C_Master_Wait
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;;		_leerSEG
  2725 ;; This function uses a non-reentrant model
  2726 ;;
  2727                           
  2728     01D8                     _I2C_Master_Stop:	
  2729                           ;psect for function _I2C_Master_Stop
  2730                           
  2731     01D8                     l1310:	
  2732                           ;incstack = 0
  2733                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2734                           
  2735                           
  2736                           ;configI2C.c: 54:     I2C_Master_Wait();
  2737     01D8  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Wait
  2738     01DD                     l1312:
  2739                           
  2740                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
  2741     01DD  1683               	bsf	3,5	;RP0=1, select bank1
  2742     01DE  1303               	bcf	3,6	;RP1=0, select bank1
  2743     01DF  1511               	bsf	17,2	;volatile
  2744     01E0                     l44:
  2745     01E0  0008               	return
  2746     01E1                     __end_of_I2C_Master_Stop:
  2747                           
  2748                           	psect	text13
  2749     01CF                     __ptext13:	
  2750 ;; *************** function _I2C_Master_Start *****************
  2751 ;; Defined at:
  2752 ;;		line 36 in file "configI2C.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, pclath, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2766 ;;      Params:         0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0
  2769 ;;      Totals:         0       0       0       0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; Hardware stack levels required when called: 1
  2773 ;; This function calls:
  2774 ;;		_I2C_Master_Wait
  2775 ;; This function is called by:
  2776 ;;		_main
  2777 ;;		_leerSEG
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781     01CF                     _I2C_Master_Start:	
  2782                           ;psect for function _I2C_Master_Start
  2783                           
  2784     01CF                     l1302:	
  2785                           ;incstack = 0
  2786                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2787                           
  2788                           
  2789                           ;configI2C.c: 38:     I2C_Master_Wait();
  2790     01CF  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Wait
  2791     01D4                     l1304:
  2792                           
  2793                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
  2794     01D4  1683               	bsf	3,5	;RP0=1, select bank1
  2795     01D5  1303               	bcf	3,6	;RP1=0, select bank1
  2796     01D6  1411               	bsf	17,0	;volatile
  2797     01D7                     l38:
  2798     01D7  0008               	return
  2799     01D8                     __end_of_I2C_Master_Start:
  2800                           
  2801                           	psect	text14
  2802     01C6                     __ptext14:	
  2803 ;; *************** function _I2C_Master_RepeatedStart *****************
  2804 ;; Defined at:
  2805 ;;		line 44 in file "configI2C.c"
  2806 ;; Parameters:    Size  Location     Type
  2807 ;;		None
  2808 ;; Auto vars:     Size  Location     Type
  2809 ;;		None
  2810 ;; Return value:  Size  Location     Type
  2811 ;;                  1    wreg      void 
  2812 ;; Registers used:
  2813 ;;		wreg, status,2, status,0, pclath, cstack
  2814 ;; Tracked objects:
  2815 ;;		On entry : 0/0
  2816 ;;		On exit  : 0/0
  2817 ;;		Unchanged: 0/0
  2818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2819 ;;      Params:         0       0       0       0       0
  2820 ;;      Locals:         0       0       0       0       0
  2821 ;;      Temps:          0       0       0       0       0
  2822 ;;      Totals:         0       0       0       0       0
  2823 ;;Total ram usage:        0 bytes
  2824 ;; Hardware stack levels used: 1
  2825 ;; Hardware stack levels required when called: 1
  2826 ;; This function calls:
  2827 ;;		_I2C_Master_Wait
  2828 ;; This function is called by:
  2829 ;;		_leerSEG
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833     01C6                     _I2C_Master_RepeatedStart:	
  2834                           ;psect for function _I2C_Master_RepeatedStart
  2835                           
  2836     01C6                     l1306:	
  2837                           ;incstack = 0
  2838                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  2839                           
  2840                           
  2841                           ;configI2C.c: 46:     I2C_Master_Wait();
  2842     01C6  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Wait
  2843     01CB                     l1308:
  2844                           
  2845                           ;configI2C.c: 47:     SSPCON2bits.RSEN = 1;
  2846     01CB  1683               	bsf	3,5	;RP0=1, select bank1
  2847     01CC  1303               	bcf	3,6	;RP1=0, select bank1
  2848     01CD  1491               	bsf	17,1	;volatile
  2849     01CE                     l41:
  2850     01CE  0008               	return
  2851     01CF                     __end_of_I2C_Master_RepeatedStart:
  2852                           
  2853                           	psect	text15
  2854     0288                     __ptext15:	
  2855 ;; *************** function _I2C_Master_Read *****************
  2856 ;; Defined at:
  2857 ;;		line 71 in file "configI2C.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  a               2    0[COMMON] unsigned short 
  2860 ;; Auto vars:     Size  Location     Type
  2861 ;;  temp            2    4[COMMON] unsigned short 
  2862 ;; Return value:  Size  Location     Type
  2863 ;;                  2    0[COMMON] unsigned short 
  2864 ;; Registers used:
  2865 ;;		wreg, status,2, status,0, pclath, cstack
  2866 ;; Tracked objects:
  2867 ;;		On entry : 0/0
  2868 ;;		On exit  : 0/0
  2869 ;;		Unchanged: 0/0
  2870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2871 ;;      Params:         2       0       0       0       0
  2872 ;;      Locals:         2       0       0       0       0
  2873 ;;      Temps:          2       0       0       0       0
  2874 ;;      Totals:         6       0       0       0       0
  2875 ;;Total ram usage:        6 bytes
  2876 ;; Hardware stack levels used: 1
  2877 ;; Hardware stack levels required when called: 1
  2878 ;; This function calls:
  2879 ;;		_I2C_Master_Wait
  2880 ;; This function is called by:
  2881 ;;		_main
  2882 ;;		_leerSEG
  2883 ;; This function uses a non-reentrant model
  2884 ;;
  2885                           
  2886     0288                     _I2C_Master_Read:	
  2887                           ;psect for function _I2C_Master_Read
  2888                           
  2889     0288                     l1318:	
  2890                           ;incstack = 0
  2891                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2892                           
  2893                           
  2894                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
  2895     0288  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Wait
  2896     028D                     l1320:
  2897                           
  2898                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
  2899     028D  1683               	bsf	3,5	;RP0=1, select bank1
  2900     028E  1303               	bcf	3,6	;RP1=0, select bank1
  2901     028F  1591               	bsf	17,3	;volatile
  2902                           
  2903                           ;configI2C.c: 76:     I2C_Master_Wait();
  2904     0290  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Wait
  2905     0295                     l1322:
  2906                           
  2907                           ;configI2C.c: 77:     temp = SSPBUF;
  2908     0295  1283               	bcf	3,5	;RP0=0, select bank0
  2909     0296  1303               	bcf	3,6	;RP1=0, select bank0
  2910     0297  0813               	movf	19,w	;volatile
  2911     0298  00F2               	movwf	??_I2C_Master_Read
  2912     0299  01F3               	clrf	??_I2C_Master_Read+1
  2913     029A  0872               	movf	??_I2C_Master_Read,w
  2914     029B  00F4               	movwf	I2C_Master_Read@temp
  2915     029C  0873               	movf	??_I2C_Master_Read+1,w
  2916     029D  00F5               	movwf	I2C_Master_Read@temp+1
  2917     029E                     l1324:
  2918                           
  2919                           ;configI2C.c: 78:     I2C_Master_Wait();
  2920     029E  120A  118A  21F8  120A  118A  	fcall	_I2C_Master_Wait
  2921     02A3                     l1326:
  2922                           
  2923                           ;configI2C.c: 79:     if(a == 1){
  2924     02A3  0370               	decf	I2C_Master_Read@a,w
  2925     02A4  0471               	iorwf	I2C_Master_Read@a+1,w
  2926     02A5  1D03               	btfss	3,2
  2927     02A6  2AA8               	goto	u781
  2928     02A7  2AA9               	goto	u780
  2929     02A8                     u781:
  2930     02A8  2AAD               	goto	l50
  2931     02A9                     u780:
  2932     02A9                     l1328:
  2933                           
  2934                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
  2935     02A9  1683               	bsf	3,5	;RP0=1, select bank1
  2936     02AA  1303               	bcf	3,6	;RP1=0, select bank1
  2937     02AB  1291               	bcf	17,5	;volatile
  2938                           
  2939                           ;configI2C.c: 81:     }else{
  2940     02AC  2AB0               	goto	l51
  2941     02AD                     l50:
  2942                           
  2943                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
  2944     02AD  1683               	bsf	3,5	;RP0=1, select bank1
  2945     02AE  1303               	bcf	3,6	;RP1=0, select bank1
  2946     02AF  1691               	bsf	17,5	;volatile
  2947     02B0                     l51:	
  2948                           ;configI2C.c: 83:     }
  2949                           
  2950                           
  2951                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
  2952     02B0  1611               	bsf	17,4	;volatile
  2953     02B1                     l1330:
  2954                           
  2955                           ;configI2C.c: 85:     return temp;
  2956     02B1  0875               	movf	I2C_Master_Read@temp+1,w
  2957     02B2  00F1               	movwf	?_I2C_Master_Read+1
  2958     02B3  0874               	movf	I2C_Master_Read@temp,w
  2959     02B4  00F0               	movwf	?_I2C_Master_Read
  2960     02B5                     l52:
  2961     02B5  0008               	return
  2962     02B6                     __end_of_I2C_Master_Read:
  2963                           
  2964                           	psect	text16
  2965     01F8                     __ptext16:	
  2966 ;; *************** function _I2C_Master_Wait *****************
  2967 ;; Defined at:
  2968 ;;		line 29 in file "configI2C.c"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;		None
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, status,2
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2982 ;;      Params:         0       0       0       0       0
  2983 ;;      Locals:         0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0
  2985 ;;      Totals:         0       0       0       0       0
  2986 ;;Total ram usage:        0 bytes
  2987 ;; Hardware stack levels used: 1
  2988 ;; This function calls:
  2989 ;;		Nothing
  2990 ;; This function is called by:
  2991 ;;		_I2C_Master_Start
  2992 ;;		_I2C_Master_RepeatedStart
  2993 ;;		_I2C_Master_Stop
  2994 ;;		_I2C_Master_Write
  2995 ;;		_I2C_Master_Read
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           
  2999     01F8                     _I2C_Master_Wait:	
  3000                           ;psect for function _I2C_Master_Wait
  3001                           
  3002     01F8                     l1252:	
  3003                           ;incstack = 0
  3004                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3005                           
  3006     01F8                     l32:	
  3007                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3008                           
  3009     01F8  1683               	bsf	3,5	;RP0=1, select bank1
  3010     01F9  1303               	bcf	3,6	;RP1=0, select bank1
  3011     01FA  1914               	btfsc	20,2	;volatile
  3012     01FB  29FD               	goto	u681
  3013     01FC  29FE               	goto	u680
  3014     01FD                     u681:
  3015     01FD  29F8               	goto	l32
  3016     01FE                     u680:
  3017     01FE                     l1254:
  3018     01FE  0811               	movf	17,w	;volatile
  3019     01FF  391F               	andlw	31
  3020     0200  1D03               	btfss	3,2
  3021     0201  2A03               	goto	u691
  3022     0202  2A04               	goto	u690
  3023     0203                     u691:
  3024     0203  29F8               	goto	l32
  3025     0204                     u690:
  3026     0204                     l35:
  3027     0204  0008               	return
  3028     0205                     __end_of_I2C_Master_Wait:
  3029                           
  3030                           	psect	text17
  3031     047F                     __ptext17:	
  3032 ;; *************** function ___awmod *****************
  3033 ;; Defined at:
  3034 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3035 ;; Parameters:    Size  Location     Type
  3036 ;;  divisor         2    9[COMMON] int 
  3037 ;;  dividend        2   11[COMMON] int 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  sign            1    1[BANK0 ] unsigned char 
  3040 ;;  counter         1    0[BANK0 ] unsigned char 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  2    9[COMMON] int 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3050 ;;      Params:         4       0       0       0       0
  3051 ;;      Locals:         0       2       0       0       0
  3052 ;;      Temps:          1       0       0       0       0
  3053 ;;      Totals:         5       2       0       0       0
  3054 ;;Total ram usage:        7 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063     047F                     ___awmod:	
  3064                           ;psect for function ___awmod
  3065                           
  3066     047F                     l1572:	
  3067                           ;incstack = 0
  3068                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3069                           
  3070     047F  1283               	bcf	3,5	;RP0=0, select bank0
  3071     0480  1303               	bcf	3,6	;RP1=0, select bank0
  3072     0481  01A1               	clrf	___awmod@sign
  3073     0482                     l1574:
  3074     0482  1FFC               	btfss	___awmod@dividend+1,7
  3075     0483  2C85               	goto	u1181
  3076     0484  2C86               	goto	u1180
  3077     0485                     u1181:
  3078     0485  2C8D               	goto	l1580
  3079     0486                     u1180:
  3080     0486                     l1576:
  3081     0486  09FB               	comf	___awmod@dividend,f
  3082     0487  09FC               	comf	___awmod@dividend+1,f
  3083     0488  0AFB               	incf	___awmod@dividend,f
  3084     0489  1903               	skipnz
  3085     048A  0AFC               	incf	___awmod@dividend+1,f
  3086     048B                     l1578:
  3087     048B  01A1               	clrf	___awmod@sign
  3088     048C  0AA1               	incf	___awmod@sign,f
  3089     048D                     l1580:
  3090     048D  1FFA               	btfss	___awmod@divisor+1,7
  3091     048E  2C90               	goto	u1191
  3092     048F  2C91               	goto	u1190
  3093     0490                     u1191:
  3094     0490  2C96               	goto	l1584
  3095     0491                     u1190:
  3096     0491                     l1582:
  3097     0491  09F9               	comf	___awmod@divisor,f
  3098     0492  09FA               	comf	___awmod@divisor+1,f
  3099     0493  0AF9               	incf	___awmod@divisor,f
  3100     0494  1903               	skipnz
  3101     0495  0AFA               	incf	___awmod@divisor+1,f
  3102     0496                     l1584:
  3103     0496  0879               	movf	___awmod@divisor,w
  3104     0497  047A               	iorwf	___awmod@divisor+1,w
  3105     0498  1903               	btfsc	3,2
  3106     0499  2C9B               	goto	u1201
  3107     049A  2C9C               	goto	u1200
  3108     049B                     u1201:
  3109     049B  2CCB               	goto	l1602
  3110     049C                     u1200:
  3111     049C                     l1586:
  3112     049C  01A0               	clrf	___awmod@counter
  3113     049D  0AA0               	incf	___awmod@counter,f
  3114     049E  2CAA               	goto	l1592
  3115     049F                     l1588:
  3116     049F  3001               	movlw	1
  3117     04A0                     u1215:
  3118     04A0  1003               	clrc
  3119     04A1  0DF9               	rlf	___awmod@divisor,f
  3120     04A2  0DFA               	rlf	___awmod@divisor+1,f
  3121     04A3  3EFF               	addlw	-1
  3122     04A4  1D03               	skipz
  3123     04A5  2CA0               	goto	u1215
  3124     04A6                     l1590:
  3125     04A6  3001               	movlw	1
  3126     04A7  00FD               	movwf	??___awmod
  3127     04A8  087D               	movf	??___awmod,w
  3128     04A9  07A0               	addwf	___awmod@counter,f
  3129     04AA                     l1592:
  3130     04AA  1FFA               	btfss	___awmod@divisor+1,7
  3131     04AB  2CAD               	goto	u1221
  3132     04AC  2CAE               	goto	u1220
  3133     04AD                     u1221:
  3134     04AD  2C9F               	goto	l1588
  3135     04AE                     u1220:
  3136     04AE                     l1594:
  3137     04AE  087A               	movf	___awmod@divisor+1,w
  3138     04AF  027C               	subwf	___awmod@dividend+1,w
  3139     04B0  1D03               	skipz
  3140     04B1  2CB4               	goto	u1235
  3141     04B2  0879               	movf	___awmod@divisor,w
  3142     04B3  027B               	subwf	___awmod@dividend,w
  3143     04B4                     u1235:
  3144     04B4  1C03               	skipc
  3145     04B5  2CB7               	goto	u1231
  3146     04B6  2CB8               	goto	u1230
  3147     04B7                     u1231:
  3148     04B7  2CBE               	goto	l1598
  3149     04B8                     u1230:
  3150     04B8                     l1596:
  3151     04B8  0879               	movf	___awmod@divisor,w
  3152     04B9  02FB               	subwf	___awmod@dividend,f
  3153     04BA  087A               	movf	___awmod@divisor+1,w
  3154     04BB  1C03               	skipc
  3155     04BC  03FC               	decf	___awmod@dividend+1,f
  3156     04BD  02FC               	subwf	___awmod@dividend+1,f
  3157     04BE                     l1598:
  3158     04BE  3001               	movlw	1
  3159     04BF                     u1245:
  3160     04BF  1003               	clrc
  3161     04C0  0CFA               	rrf	___awmod@divisor+1,f
  3162     04C1  0CF9               	rrf	___awmod@divisor,f
  3163     04C2  3EFF               	addlw	-1
  3164     04C3  1D03               	skipz
  3165     04C4  2CBF               	goto	u1245
  3166     04C5                     l1600:
  3167     04C5  3001               	movlw	1
  3168     04C6  02A0               	subwf	___awmod@counter,f
  3169     04C7  1D03               	btfss	3,2
  3170     04C8  2CCA               	goto	u1251
  3171     04C9  2CCB               	goto	u1250
  3172     04CA                     u1251:
  3173     04CA  2CAE               	goto	l1594
  3174     04CB                     u1250:
  3175     04CB                     l1602:
  3176     04CB  0821               	movf	___awmod@sign,w
  3177     04CC  1903               	btfsc	3,2
  3178     04CD  2CCF               	goto	u1261
  3179     04CE  2CD0               	goto	u1260
  3180     04CF                     u1261:
  3181     04CF  2CD5               	goto	l1606
  3182     04D0                     u1260:
  3183     04D0                     l1604:
  3184     04D0  09FB               	comf	___awmod@dividend,f
  3185     04D1  09FC               	comf	___awmod@dividend+1,f
  3186     04D2  0AFB               	incf	___awmod@dividend,f
  3187     04D3  1903               	skipnz
  3188     04D4  0AFC               	incf	___awmod@dividend+1,f
  3189     04D5                     l1606:
  3190     04D5  087C               	movf	___awmod@dividend+1,w
  3191     04D6  00FA               	movwf	?___awmod+1
  3192     04D7  087B               	movf	___awmod@dividend,w
  3193     04D8  00F9               	movwf	?___awmod
  3194     04D9                     l448:
  3195     04D9  0008               	return
  3196     04DA                     __end_of___awmod:
  3197                           
  3198                           	psect	text18
  3199     059D                     __ptext18:	
  3200 ;; *************** function ___awdiv *****************
  3201 ;; Defined at:
  3202 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;  divisor         2    0[COMMON] int 
  3205 ;;  dividend        2    2[COMMON] int 
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;  quotient        2    7[COMMON] int 
  3208 ;;  sign            1    6[COMMON] unsigned char 
  3209 ;;  counter         1    5[COMMON] unsigned char 
  3210 ;; Return value:  Size  Location     Type
  3211 ;;                  2    0[COMMON] int 
  3212 ;; Registers used:
  3213 ;;		wreg, status,2, status,0
  3214 ;; Tracked objects:
  3215 ;;		On entry : 0/0
  3216 ;;		On exit  : 0/0
  3217 ;;		Unchanged: 0/0
  3218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3219 ;;      Params:         4       0       0       0       0
  3220 ;;      Locals:         4       0       0       0       0
  3221 ;;      Temps:          1       0       0       0       0
  3222 ;;      Totals:         9       0       0       0       0
  3223 ;;Total ram usage:        9 bytes
  3224 ;; Hardware stack levels used: 1
  3225 ;; This function calls:
  3226 ;;		Nothing
  3227 ;; This function is called by:
  3228 ;;		_main
  3229 ;; This function uses a non-reentrant model
  3230 ;;
  3231                           
  3232     059D                     ___awdiv:	
  3233                           ;psect for function ___awdiv
  3234                           
  3235     059D                     l1528:	
  3236                           ;incstack = 0
  3237                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3238                           
  3239     059D  01F6               	clrf	___awdiv@sign
  3240     059E                     l1530:
  3241     059E  1FF1               	btfss	___awdiv@divisor+1,7
  3242     059F  2DA1               	goto	u1081
  3243     05A0  2DA2               	goto	u1080
  3244     05A1                     u1081:
  3245     05A1  2DA9               	goto	l1536
  3246     05A2                     u1080:
  3247     05A2                     l1532:
  3248     05A2  09F0               	comf	___awdiv@divisor,f
  3249     05A3  09F1               	comf	___awdiv@divisor+1,f
  3250     05A4  0AF0               	incf	___awdiv@divisor,f
  3251     05A5  1903               	skipnz
  3252     05A6  0AF1               	incf	___awdiv@divisor+1,f
  3253     05A7                     l1534:
  3254     05A7  01F6               	clrf	___awdiv@sign
  3255     05A8  0AF6               	incf	___awdiv@sign,f
  3256     05A9                     l1536:
  3257     05A9  1FF3               	btfss	___awdiv@dividend+1,7
  3258     05AA  2DAC               	goto	u1091
  3259     05AB  2DAD               	goto	u1090
  3260     05AC                     u1091:
  3261     05AC  2DB6               	goto	l1542
  3262     05AD                     u1090:
  3263     05AD                     l1538:
  3264     05AD  09F2               	comf	___awdiv@dividend,f
  3265     05AE  09F3               	comf	___awdiv@dividend+1,f
  3266     05AF  0AF2               	incf	___awdiv@dividend,f
  3267     05B0  1903               	skipnz
  3268     05B1  0AF3               	incf	___awdiv@dividend+1,f
  3269     05B2                     l1540:
  3270     05B2  3001               	movlw	1
  3271     05B3  00F4               	movwf	??___awdiv
  3272     05B4  0874               	movf	??___awdiv,w
  3273     05B5  06F6               	xorwf	___awdiv@sign,f
  3274     05B6                     l1542:
  3275     05B6  01F7               	clrf	___awdiv@quotient
  3276     05B7  01F8               	clrf	___awdiv@quotient+1
  3277     05B8                     l1544:
  3278     05B8  0870               	movf	___awdiv@divisor,w
  3279     05B9  0471               	iorwf	___awdiv@divisor+1,w
  3280     05BA  1903               	btfsc	3,2
  3281     05BB  2DBD               	goto	u1101
  3282     05BC  2DBE               	goto	u1100
  3283     05BD                     u1101:
  3284     05BD  2DF5               	goto	l1564
  3285     05BE                     u1100:
  3286     05BE                     l1546:
  3287     05BE  01F5               	clrf	___awdiv@counter
  3288     05BF  0AF5               	incf	___awdiv@counter,f
  3289     05C0  2DCC               	goto	l1552
  3290     05C1                     l1548:
  3291     05C1  3001               	movlw	1
  3292     05C2                     u1115:
  3293     05C2  1003               	clrc
  3294     05C3  0DF0               	rlf	___awdiv@divisor,f
  3295     05C4  0DF1               	rlf	___awdiv@divisor+1,f
  3296     05C5  3EFF               	addlw	-1
  3297     05C6  1D03               	skipz
  3298     05C7  2DC2               	goto	u1115
  3299     05C8                     l1550:
  3300     05C8  3001               	movlw	1
  3301     05C9  00F4               	movwf	??___awdiv
  3302     05CA  0874               	movf	??___awdiv,w
  3303     05CB  07F5               	addwf	___awdiv@counter,f
  3304     05CC                     l1552:
  3305     05CC  1FF1               	btfss	___awdiv@divisor+1,7
  3306     05CD  2DCF               	goto	u1121
  3307     05CE  2DD0               	goto	u1120
  3308     05CF                     u1121:
  3309     05CF  2DC1               	goto	l1548
  3310     05D0                     u1120:
  3311     05D0                     l1554:
  3312     05D0  3001               	movlw	1
  3313     05D1                     u1135:
  3314     05D1  1003               	clrc
  3315     05D2  0DF7               	rlf	___awdiv@quotient,f
  3316     05D3  0DF8               	rlf	___awdiv@quotient+1,f
  3317     05D4  3EFF               	addlw	-1
  3318     05D5  1D03               	skipz
  3319     05D6  2DD1               	goto	u1135
  3320     05D7  0871               	movf	___awdiv@divisor+1,w
  3321     05D8  0273               	subwf	___awdiv@dividend+1,w
  3322     05D9  1D03               	skipz
  3323     05DA  2DDD               	goto	u1145
  3324     05DB  0870               	movf	___awdiv@divisor,w
  3325     05DC  0272               	subwf	___awdiv@dividend,w
  3326     05DD                     u1145:
  3327     05DD  1C03               	skipc
  3328     05DE  2DE0               	goto	u1141
  3329     05DF  2DE1               	goto	u1140
  3330     05E0                     u1141:
  3331     05E0  2DE8               	goto	l1560
  3332     05E1                     u1140:
  3333     05E1                     l1556:
  3334     05E1  0870               	movf	___awdiv@divisor,w
  3335     05E2  02F2               	subwf	___awdiv@dividend,f
  3336     05E3  0871               	movf	___awdiv@divisor+1,w
  3337     05E4  1C03               	skipc
  3338     05E5  03F3               	decf	___awdiv@dividend+1,f
  3339     05E6  02F3               	subwf	___awdiv@dividend+1,f
  3340     05E7                     l1558:
  3341     05E7  1477               	bsf	___awdiv@quotient,0
  3342     05E8                     l1560:
  3343     05E8  3001               	movlw	1
  3344     05E9                     u1155:
  3345     05E9  1003               	clrc
  3346     05EA  0CF1               	rrf	___awdiv@divisor+1,f
  3347     05EB  0CF0               	rrf	___awdiv@divisor,f
  3348     05EC  3EFF               	addlw	-1
  3349     05ED  1D03               	skipz
  3350     05EE  2DE9               	goto	u1155
  3351     05EF                     l1562:
  3352     05EF  3001               	movlw	1
  3353     05F0  02F5               	subwf	___awdiv@counter,f
  3354     05F1  1D03               	btfss	3,2
  3355     05F2  2DF4               	goto	u1161
  3356     05F3  2DF5               	goto	u1160
  3357     05F4                     u1161:
  3358     05F4  2DD0               	goto	l1554
  3359     05F5                     u1160:
  3360     05F5                     l1564:
  3361     05F5  0876               	movf	___awdiv@sign,w
  3362     05F6  1903               	btfsc	3,2
  3363     05F7  2DF9               	goto	u1171
  3364     05F8  2DFA               	goto	u1170
  3365     05F9                     u1171:
  3366     05F9  2DFF               	goto	l1568
  3367     05FA                     u1170:
  3368     05FA                     l1566:
  3369     05FA  09F7               	comf	___awdiv@quotient,f
  3370     05FB  09F8               	comf	___awdiv@quotient+1,f
  3371     05FC  0AF7               	incf	___awdiv@quotient,f
  3372     05FD  1903               	skipnz
  3373     05FE  0AF8               	incf	___awdiv@quotient+1,f
  3374     05FF                     l1568:
  3375     05FF  0878               	movf	___awdiv@quotient+1,w
  3376     0600  00F1               	movwf	?___awdiv+1
  3377     0601  0877               	movf	___awdiv@quotient,w
  3378     0602  00F0               	movwf	?___awdiv
  3379     0603                     l435:
  3380     0603  0008               	return
  3381     0604                     __end_of___awdiv:
  3382                           
  3383                           	psect	text19
  3384     035D                     __ptext19:	
  3385 ;; *************** function _Lcd_Write_String_4bits *****************
  3386 ;; Defined at:
  3387 ;;		line 99 in file "configLCD_4bits.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;  a               2    5[COMMON] PTR unsigned char 
  3390 ;;		 -> main@stringSEG(9), main@ADC1(9), STR_2(10), STR_1(4), 
  3391 ;; Auto vars:     Size  Location     Type
  3392 ;;  i               2   10[COMMON] int 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1    wreg      void 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3397 ;; Tracked objects:
  3398 ;;		On entry : 0/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3402 ;;      Params:         2       0       0       0       0
  3403 ;;      Locals:         2       0       0       0       0
  3404 ;;      Temps:          3       0       0       0       0
  3405 ;;      Totals:         7       0       0       0       0
  3406 ;;Total ram usage:        7 bytes
  3407 ;; Hardware stack levels used: 1
  3408 ;; Hardware stack levels required when called: 2
  3409 ;; This function calls:
  3410 ;;		_Lcd_Write_Char_4bits
  3411 ;; This function is called by:
  3412 ;;		_main
  3413 ;; This function uses a non-reentrant model
  3414 ;;
  3415                           
  3416     035D                     _Lcd_Write_String_4bits:	
  3417                           ;psect for function _Lcd_Write_String_4bits
  3418                           
  3419     035D                     l1452:	
  3420                           ;incstack = 0
  3421                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  3422                           
  3423                           
  3424                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  3425     035D  01FA               	clrf	Lcd_Write_String_4bits@i
  3426     035E  01FB               	clrf	Lcd_Write_String_4bits@i+1
  3427     035F  2B82               	goto	l1458
  3428     0360                     l1454:
  3429                           
  3430                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  3431     0360  087A               	movf	Lcd_Write_String_4bits@i,w
  3432     0361  0775               	addwf	Lcd_Write_String_4bits@a,w
  3433     0362  00F8               	movwf	??_Lcd_Write_String_4bits+1
  3434     0363  0876               	movf	Lcd_Write_String_4bits@a+1,w
  3435     0364  00F7               	movwf	??_Lcd_Write_String_4bits
  3436     0365  1803               	skipnc
  3437     0366  0AF7               	incf	??_Lcd_Write_String_4bits,f
  3438     0367  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  3439     0368  2B6A               	goto	u990
  3440     0369  03F7               	decf	??_Lcd_Write_String_4bits,f
  3441     036A                     u990:
  3442     036A  0877               	movf	??_Lcd_Write_String_4bits,w
  3443     036B  00F9               	movwf	??_Lcd_Write_String_4bits+2
  3444     036C  0879               	movf	??_Lcd_Write_String_4bits+2,w
  3445     036D  1283               	bcf	3,5	;RP0=0, select bank0
  3446     036E  1303               	bcf	3,6	;RP1=0, select bank0
  3447     036F  00FF               	movwf	btemp+1
  3448     0370  0878               	movf	??_Lcd_Write_String_4bits+1,w
  3449     0371  0084               	movwf	4
  3450     0372  120A  118A  2003  120A  118A  	fcall	stringtab
  3451     0377  120A  118A  22B6  120A  118A  	fcall	_Lcd_Write_Char_4bits
  3452     037C                     l1456:
  3453     037C  3001               	movlw	1
  3454     037D  07FA               	addwf	Lcd_Write_String_4bits@i,f
  3455     037E  1803               	skipnc
  3456     037F  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
  3457     0380  3000               	movlw	0
  3458     0381  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
  3459     0382                     l1458:
  3460     0382  087A               	movf	Lcd_Write_String_4bits@i,w
  3461     0383  0775               	addwf	Lcd_Write_String_4bits@a,w
  3462     0384  00F8               	movwf	??_Lcd_Write_String_4bits+1
  3463     0385  0876               	movf	Lcd_Write_String_4bits@a+1,w
  3464     0386  00F7               	movwf	??_Lcd_Write_String_4bits
  3465     0387  1803               	skipnc
  3466     0388  0AF7               	incf	??_Lcd_Write_String_4bits,f
  3467     0389  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  3468     038A  2B8C               	goto	u1000
  3469     038B  03F7               	decf	??_Lcd_Write_String_4bits,f
  3470     038C                     u1000:
  3471     038C  0877               	movf	??_Lcd_Write_String_4bits,w
  3472     038D  00F9               	movwf	??_Lcd_Write_String_4bits+2
  3473     038E  0879               	movf	??_Lcd_Write_String_4bits+2,w
  3474     038F  1283               	bcf	3,5	;RP0=0, select bank0
  3475     0390  1303               	bcf	3,6	;RP1=0, select bank0
  3476     0391  00FF               	movwf	btemp+1
  3477     0392  0878               	movf	??_Lcd_Write_String_4bits+1,w
  3478     0393  0084               	movwf	4
  3479     0394  120A  118A  2003  120A  118A  	fcall	stringtab
  3480     0399  3A00               	xorlw	0
  3481     039A  1D03               	skipz
  3482     039B  2B9D               	goto	u1011
  3483     039C  2B9E               	goto	u1010
  3484     039D                     u1011:
  3485     039D  2B60               	goto	l1454
  3486     039E                     u1010:
  3487     039E                     l99:
  3488     039E  0008               	return
  3489     039F                     __end_of_Lcd_Write_String_4bits:
  3490                           
  3491                           	psect	text20
  3492     02B6                     __ptext20:	
  3493 ;; *************** function _Lcd_Write_Char_4bits *****************
  3494 ;; Defined at:
  3495 ;;		line 84 in file "configLCD_4bits.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  a               1    wreg     unsigned char 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;  a               1    4[COMMON] unsigned char 
  3500 ;;  y               1    3[COMMON] unsigned char 
  3501 ;;  temp            1    2[COMMON] unsigned char 
  3502 ;; Return value:  Size  Location     Type
  3503 ;;                  1    wreg      void 
  3504 ;; Registers used:
  3505 ;;		wreg, status,2, status,0, pclath, cstack
  3506 ;; Tracked objects:
  3507 ;;		On entry : 0/0
  3508 ;;		On exit  : 0/0
  3509 ;;		Unchanged: 0/0
  3510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3511 ;;      Params:         0       0       0       0       0
  3512 ;;      Locals:         3       0       0       0       0
  3513 ;;      Temps:          1       0       0       0       0
  3514 ;;      Totals:         4       0       0       0       0
  3515 ;;Total ram usage:        4 bytes
  3516 ;; Hardware stack levels used: 1
  3517 ;; Hardware stack levels required when called: 1
  3518 ;; This function calls:
  3519 ;;		_Lcd_Port_4bits
  3520 ;; This function is called by:
  3521 ;;		_Lcd_Write_String_4bits
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525     02B6                     _Lcd_Write_Char_4bits:	
  3526                           ;psect for function _Lcd_Write_Char_4bits
  3527                           
  3528                           
  3529                           ;incstack = 0
  3530                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  3531                           ;Lcd_Write_Char_4bits@a stored from wreg
  3532     02B6  00F4               	movwf	Lcd_Write_Char_4bits@a
  3533     02B7                     l1348:
  3534                           
  3535                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  3536     02B7  0874               	movf	Lcd_Write_Char_4bits@a,w
  3537     02B8  390F               	andlw	15
  3538     02B9  00F2               	movwf	Lcd_Write_Char_4bits@temp
  3539                           
  3540                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  3541     02BA  0874               	movf	Lcd_Write_Char_4bits@a,w
  3542     02BB  39F0               	andlw	240
  3543     02BC  00F3               	movwf	Lcd_Write_Char_4bits@y
  3544     02BD                     l1350:
  3545                           
  3546                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  3547     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  3548     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  3549     02BF  1508               	bsf	8,2	;volatile
  3550     02C0                     l1352:
  3551                           
  3552                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  3553     02C0  0873               	movf	Lcd_Write_Char_4bits@y,w
  3554     02C1  00F1               	movwf	??_Lcd_Write_Char_4bits
  3555     02C2  3004               	movlw	4
  3556     02C3                     u795:
  3557     02C3  1003               	clrc
  3558     02C4  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
  3559     02C5  3EFF               	addlw	-1
  3560     02C6  1D03               	skipz
  3561     02C7  2AC3               	goto	u795
  3562     02C8  0871               	movf	??_Lcd_Write_Char_4bits,w
  3563     02C9  120A  118A  2241  120A  118A  	fcall	_Lcd_Port_4bits
  3564     02CE                     l1354:
  3565                           
  3566                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  3567     02CE  1283               	bcf	3,5	;RP0=0, select bank0
  3568     02CF  1303               	bcf	3,6	;RP1=0, select bank0
  3569     02D0  1588               	bsf	8,3	;volatile
  3570     02D1                     l1356:
  3571                           
  3572                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3573     02D1  301A               	movlw	26
  3574     02D2  00F1               	movwf	??_Lcd_Write_Char_4bits
  3575     02D3                     u1327:
  3576     02D3  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  3577     02D4  2AD3               	goto	u1327
  3578     02D5  0000               	nop
  3579     02D6                     l1358:
  3580                           
  3581                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  3582     02D6  1283               	bcf	3,5	;RP0=0, select bank0
  3583     02D7  1303               	bcf	3,6	;RP1=0, select bank0
  3584     02D8  1188               	bcf	8,3	;volatile
  3585     02D9                     l1360:
  3586                           
  3587                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  3588     02D9  0872               	movf	Lcd_Write_Char_4bits@temp,w
  3589     02DA  120A  118A  2241  120A  118A  	fcall	_Lcd_Port_4bits
  3590     02DF                     l1362:
  3591                           
  3592                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  3593     02DF  1283               	bcf	3,5	;RP0=0, select bank0
  3594     02E0  1303               	bcf	3,6	;RP1=0, select bank0
  3595     02E1  1588               	bsf	8,3	;volatile
  3596     02E2                     l1364:
  3597                           
  3598                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3599     02E2  301A               	movlw	26
  3600     02E3  00F1               	movwf	??_Lcd_Write_Char_4bits
  3601     02E4                     u1337:
  3602     02E4  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  3603     02E5  2AE4               	goto	u1337
  3604     02E6  0000               	nop
  3605     02E7                     l1366:
  3606                           
  3607                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  3608     02E7  1283               	bcf	3,5	;RP0=0, select bank0
  3609     02E8  1303               	bcf	3,6	;RP1=0, select bank0
  3610     02E9  1188               	bcf	8,3	;volatile
  3611     02EA                     l93:
  3612     02EA  0008               	return
  3613     02EB                     __end_of_Lcd_Write_Char_4bits:
  3614                           
  3615                           	psect	text21
  3616     03E3                     __ptext21:	
  3617 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  3618 ;; Defined at:
  3619 ;;		line 49 in file "configLCD_4bits.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;  a               1    wreg     unsigned char 
  3622 ;;  b               1    4[COMMON] unsigned char 
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;  a               1    6[COMMON] unsigned char 
  3625 ;;  temp            1    9[COMMON] unsigned char 
  3626 ;;  y               1    8[COMMON] unsigned char 
  3627 ;;  z               1    7[COMMON] unsigned char 
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		wreg, status,2, status,0, pclath, cstack
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3637 ;;      Params:         1       0       0       0       0
  3638 ;;      Locals:         4       0       0       0       0
  3639 ;;      Temps:          1       0       0       0       0
  3640 ;;      Totals:         6       0       0       0       0
  3641 ;;Total ram usage:        6 bytes
  3642 ;; Hardware stack levels used: 1
  3643 ;; Hardware stack levels required when called: 2
  3644 ;; This function calls:
  3645 ;;		_Lcd_Cmd_4bits
  3646 ;; This function is called by:
  3647 ;;		_main
  3648 ;; This function uses a non-reentrant model
  3649 ;;
  3650                           
  3651     03E3                     _Lcd_Set_Cursor_4bits:	
  3652                           ;psect for function _Lcd_Set_Cursor_4bits
  3653                           
  3654                           
  3655                           ;incstack = 0
  3656                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  3657                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  3658     03E3  00F6               	movwf	Lcd_Set_Cursor_4bits@a
  3659     03E4                     l1432:
  3660                           
  3661                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  3662     03E4  0376               	decf	Lcd_Set_Cursor_4bits@a,w
  3663     03E5  1D03               	btfss	3,2
  3664     03E6  2BE8               	goto	u951
  3665     03E7  2BE9               	goto	u950
  3666     03E8                     u951:
  3667     03E8  2C06               	goto	l1442
  3668     03E9                     u950:
  3669     03E9                     l1434:
  3670                           
  3671                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  3672     03E9  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  3673     03EA  3E7F               	addlw	127
  3674     03EB  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  3675                           
  3676                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  3677     03EC  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3678     03ED  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  3679     03EE  3004               	movlw	4
  3680     03EF                     u965:
  3681     03EF  1003               	clrc
  3682     03F0  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  3683     03F1  3EFF               	addlw	-1
  3684     03F2  1D03               	skipz
  3685     03F3  2BEF               	goto	u965
  3686     03F4  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  3687     03F5  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  3688     03F6                     l1436:
  3689                           
  3690                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  3691     03F6  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3692     03F7  390F               	andlw	15
  3693     03F8  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  3694     03F9                     l1438:
  3695                           
  3696                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  3697     03F9  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  3698     03FA  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  3699     03FF                     l1440:
  3700                           
  3701                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  3702     03FF  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  3703     0400  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  3704                           
  3705                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  3706     0405  2C28               	goto	l87
  3707     0406                     l1442:
  3708     0406  3002               	movlw	2
  3709     0407  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
  3710     0408  1D03               	btfss	3,2
  3711     0409  2C0B               	goto	u971
  3712     040A  2C0C               	goto	u970
  3713     040B                     u971:
  3714     040B  2C28               	goto	l87
  3715     040C                     u970:
  3716     040C                     l1444:
  3717                           
  3718                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  3719     040C  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  3720     040D  3EBF               	addlw	191
  3721     040E  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  3722                           
  3723                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  3724     040F  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3725     0410  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  3726     0411  3004               	movlw	4
  3727     0412                     u985:
  3728     0412  1003               	clrc
  3729     0413  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  3730     0414  3EFF               	addlw	-1
  3731     0415  1D03               	skipz
  3732     0416  2C12               	goto	u985
  3733     0417  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  3734     0418  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  3735     0419                     l1446:
  3736                           
  3737                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  3738     0419  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3739     041A  390F               	andlw	15
  3740     041B  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  3741     041C                     l1448:
  3742                           
  3743                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  3744     041C  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  3745     041D  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  3746     0422                     l1450:
  3747                           
  3748                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  3749     0422  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  3750     0423  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  3751     0428                     l87:
  3752     0428  0008               	return
  3753     0429                     __end_of_Lcd_Set_Cursor_4bits:
  3754                           
  3755                           	psect	text22
  3756     01EB                     __ptext22:	
  3757 ;; *************** function _Lcd_Clear_4bits *****************
  3758 ;; Defined at:
  3759 ;;		line 44 in file "configLCD_4bits.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;		None
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;                  1    wreg      void 
  3766 ;; Registers used:
  3767 ;;		wreg, status,2, status,0, pclath, cstack
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3773 ;;      Params:         0       0       0       0       0
  3774 ;;      Locals:         0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0
  3776 ;;      Totals:         0       0       0       0       0
  3777 ;;Total ram usage:        0 bytes
  3778 ;; Hardware stack levels used: 1
  3779 ;; Hardware stack levels required when called: 2
  3780 ;; This function calls:
  3781 ;;		_Lcd_Cmd_4bits
  3782 ;; This function is called by:
  3783 ;;		_main
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787     01EB                     _Lcd_Clear_4bits:	
  3788                           ;psect for function _Lcd_Clear_4bits
  3789                           
  3790     01EB                     l1430:	
  3791                           ;incstack = 0
  3792                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  3793                           
  3794                           
  3795                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  3796     01EB  3000               	movlw	0
  3797     01EC  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  3798                           
  3799                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  3800     01F1  3001               	movlw	1
  3801     01F2  120A  118A  2227  120A  118A  	fcall	_Lcd_Cmd_4bits
  3802     01F7                     l81:
  3803     01F7  0008               	return
  3804     01F8                     __end_of_Lcd_Clear_4bits:
  3805                           
  3806                           	psect	text23
  3807     0227                     __ptext23:	
  3808 ;; *************** function _Lcd_Cmd_4bits *****************
  3809 ;; Defined at:
  3810 ;;		line 36 in file "configLCD_4bits.c"
  3811 ;; Parameters:    Size  Location     Type
  3812 ;;  a               1    wreg     unsigned char 
  3813 ;; Auto vars:     Size  Location     Type
  3814 ;;  a               1    3[COMMON] unsigned char 
  3815 ;; Return value:  Size  Location     Type
  3816 ;;                  1    wreg      void 
  3817 ;; Registers used:
  3818 ;;		wreg, status,2, status,0, pclath, cstack
  3819 ;; Tracked objects:
  3820 ;;		On entry : 0/0
  3821 ;;		On exit  : 0/0
  3822 ;;		Unchanged: 0/0
  3823 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3824 ;;      Params:         0       0       0       0       0
  3825 ;;      Locals:         1       0       0       0       0
  3826 ;;      Temps:          2       0       0       0       0
  3827 ;;      Totals:         3       0       0       0       0
  3828 ;;Total ram usage:        3 bytes
  3829 ;; Hardware stack levels used: 1
  3830 ;; Hardware stack levels required when called: 1
  3831 ;; This function calls:
  3832 ;;		_Lcd_Port_4bits
  3833 ;; This function is called by:
  3834 ;;		_Lcd_Clear_4bits
  3835 ;;		_Lcd_Set_Cursor_4bits
  3836 ;;		_Lcd_Init_4bits
  3837 ;;		_Lcd_Shift_Right_4bits
  3838 ;;		_Lcd_Shift_Left_4bits
  3839 ;; This function uses a non-reentrant model
  3840 ;;
  3841                           
  3842     0227                     _Lcd_Cmd_4bits:	
  3843                           ;psect for function _Lcd_Cmd_4bits
  3844                           
  3845                           
  3846                           ;incstack = 0
  3847                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  3848                           ;Lcd_Cmd_4bits@a stored from wreg
  3849     0227  00F3               	movwf	Lcd_Cmd_4bits@a
  3850     0228                     l1256:
  3851                           
  3852                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  3853     0228  1283               	bcf	3,5	;RP0=0, select bank0
  3854     0229  1303               	bcf	3,6	;RP1=0, select bank0
  3855     022A  1108               	bcf	8,2	;volatile
  3856     022B                     l1258:
  3857                           
  3858                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  3859     022B  0873               	movf	Lcd_Cmd_4bits@a,w
  3860     022C  120A  118A  2241  120A  118A  	fcall	_Lcd_Port_4bits
  3861     0231                     l1260:
  3862                           
  3863                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  3864     0231  1283               	bcf	3,5	;RP0=0, select bank0
  3865     0232  1303               	bcf	3,6	;RP1=0, select bank0
  3866     0233  1588               	bsf	8,3	;volatile
  3867     0234                     l1262:
  3868                           
  3869                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3870     0234  300B               	movlw	11
  3871     0235  00F2               	movwf	??_Lcd_Cmd_4bits+1
  3872     0236  3062               	movlw	98
  3873     0237  00F1               	movwf	??_Lcd_Cmd_4bits
  3874     0238                     u1347:
  3875     0238  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
  3876     0239  2A38               	goto	u1347
  3877     023A  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
  3878     023B  2A38               	goto	u1347
  3879     023C  0000               	nop
  3880     023D                     l1264:
  3881                           
  3882                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  3883     023D  1283               	bcf	3,5	;RP0=0, select bank0
  3884     023E  1303               	bcf	3,6	;RP1=0, select bank0
  3885     023F  1188               	bcf	8,3	;volatile
  3886     0240                     l78:
  3887     0240  0008               	return
  3888     0241                     __end_of_Lcd_Cmd_4bits:
  3889                           
  3890                           	psect	text24
  3891     0241                     __ptext24:	
  3892 ;; *************** function _Lcd_Port_4bits *****************
  3893 ;; Defined at:
  3894 ;;		line 14 in file "configLCD_4bits.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;  a               1    wreg     unsigned char 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  a               1    0[COMMON] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3908 ;;      Params:         0       0       0       0       0
  3909 ;;      Locals:         1       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0
  3911 ;;      Totals:         1       0       0       0       0
  3912 ;;Total ram usage:        1 bytes
  3913 ;; Hardware stack levels used: 1
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_Lcd_Cmd_4bits
  3918 ;;		_Lcd_Init_4bits
  3919 ;;		_Lcd_Write_Char_4bits
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923     0241                     _Lcd_Port_4bits:	
  3924                           ;psect for function _Lcd_Port_4bits
  3925                           
  3926                           
  3927                           ;incstack = 0
  3928                           ; Regs used in _Lcd_Port_4bits: [wreg]
  3929                           ;Lcd_Port_4bits@a stored from wreg
  3930     0241  00F0               	movwf	Lcd_Port_4bits@a
  3931     0242                     l1242:
  3932                           
  3933                           ;configLCD_4bits.c: 15:     if (a & 1)
  3934     0242  1C70               	btfss	Lcd_Port_4bits@a,0
  3935     0243  2A45               	goto	u641
  3936     0244  2A46               	goto	u640
  3937     0245                     u641:
  3938     0245  2A4A               	goto	l67
  3939     0246                     u640:
  3940     0246                     l1244:
  3941                           
  3942                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  3943     0246  1283               	bcf	3,5	;RP0=0, select bank0
  3944     0247  1303               	bcf	3,6	;RP1=0, select bank0
  3945     0248  1608               	bsf	8,4	;volatile
  3946     0249  2A4D               	goto	l68
  3947     024A                     l67:	
  3948                           ;configLCD_4bits.c: 17:     else
  3949                           
  3950                           
  3951                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  3952     024A  1283               	bcf	3,5	;RP0=0, select bank0
  3953     024B  1303               	bcf	3,6	;RP1=0, select bank0
  3954     024C  1208               	bcf	8,4	;volatile
  3955     024D                     l68:
  3956                           
  3957                           ;configLCD_4bits.c: 20:     if (a & 2)
  3958     024D  1CF0               	btfss	Lcd_Port_4bits@a,1
  3959     024E  2A50               	goto	u651
  3960     024F  2A51               	goto	u650
  3961     0250                     u651:
  3962     0250  2A53               	goto	l69
  3963     0251                     u650:
  3964     0251                     l1246:
  3965                           
  3966                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  3967     0251  1688               	bsf	8,5	;volatile
  3968     0252  2A54               	goto	l70
  3969     0253                     l69:	
  3970                           ;configLCD_4bits.c: 22:     else
  3971                           
  3972                           
  3973                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  3974     0253  1288               	bcf	8,5	;volatile
  3975     0254                     l70:
  3976                           
  3977                           ;configLCD_4bits.c: 25:     if (a & 4)
  3978     0254  1D70               	btfss	Lcd_Port_4bits@a,2
  3979     0255  2A57               	goto	u661
  3980     0256  2A58               	goto	u660
  3981     0257                     u661:
  3982     0257  2A5A               	goto	l71
  3983     0258                     u660:
  3984     0258                     l1248:
  3985                           
  3986                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  3987     0258  1708               	bsf	8,6	;volatile
  3988     0259  2A5B               	goto	l72
  3989     025A                     l71:	
  3990                           ;configLCD_4bits.c: 27:     else
  3991                           
  3992                           
  3993                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  3994     025A  1308               	bcf	8,6	;volatile
  3995     025B                     l72:
  3996                           
  3997                           ;configLCD_4bits.c: 30:     if (a & 8)
  3998     025B  1DF0               	btfss	Lcd_Port_4bits@a,3
  3999     025C  2A5E               	goto	u671
  4000     025D  2A5F               	goto	u670
  4001     025E                     u671:
  4002     025E  2A61               	goto	l73
  4003     025F                     u670:
  4004     025F                     l1250:
  4005                           
  4006                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  4007     025F  1788               	bsf	8,7	;volatile
  4008     0260  2A62               	goto	l75
  4009     0261                     l73:	
  4010                           ;configLCD_4bits.c: 32:     else
  4011                           
  4012                           
  4013                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  4014     0261  1388               	bcf	8,7	;volatile
  4015     0262                     l75:
  4016     0262  0008               	return
  4017     0263                     __end_of_Lcd_Port_4bits:
  4018     007E                     btemp	set	126	;btemp
  4019     007E                     wtemp0	set	126
  4020                           
  4021                           	psect	idloc
  4022                           
  4023                           ;Config register IDLOC0 @ 0x2000
  4024                           ;	unspecified, using default values
  4025     2000                     	org	8192
  4026     2000  3FFF               	dw	16383
  4027                           
  4028                           ;Config register IDLOC1 @ 0x2001
  4029                           ;	unspecified, using default values
  4030     2001                     	org	8193
  4031     2001  3FFF               	dw	16383
  4032                           
  4033                           ;Config register IDLOC2 @ 0x2002
  4034                           ;	unspecified, using default values
  4035     2002                     	org	8194
  4036     2002  3FFF               	dw	16383
  4037                           
  4038                           ;Config register IDLOC3 @ 0x2003
  4039                           ;	unspecified, using default values
  4040     2003                     	org	8195
  4041     2003  3FFF               	dw	16383
  4042                           
  4043                           	psect	config
  4044                           
  4045                           ;Config register CONFIG1 @ 0x2007
  4046                           ;	Oscillator Selection bits
  4047                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  4048                           ;	Watchdog Timer Enable bit
  4049                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  4050                           ;	Power-up Timer Enable bit
  4051                           ;	PWRTE = OFF, PWRT disabled
  4052                           ;	RE3/MCLR pin function select bit
  4053                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  4054                           ;	Code Protection bit
  4055                           ;	CP = OFF, Program memory code protection is disabled
  4056                           ;	Data Code Protection bit
  4057                           ;	CPD = OFF, Data memory code protection is disabled
  4058                           ;	Brown Out Reset Selection bits
  4059                           ;	BOREN = OFF, BOR disabled
  4060                           ;	Internal External Switchover bit
  4061                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  4062                           ;	Fail-Safe Clock Monitor Enabled bit
  4063                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  4064                           ;	Low Voltage Programming Enable bit
  4065                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  4066                           ;	In-Circuit Debugger Mode bit
  4067                           ;	DEBUG = 0x1, unprogramme  4068     2007                     	org	8199
  4069     2007  20D4               	dw	8404
  4070                           
  4071                           ;Config register CONFIG2 @ 0x2008
  4072                           ;	Brown-out Reset Selection bit
  4073                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  4074                           ;	Flash Program Memory Self Write Enable bits
  4075                           ;	WRT = OFF, Write protection off
  4076     2008                     	org	8200
  4077     2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     39      39
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@stringSEG(BANK0[9]), main@ADC1(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 10
		 -> main@stringSEG(BANK0[9]), main@ADC1(BANK0[9]), STR_2(CODE[10]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    _leerSEG->_I2C_Master_Read
    ___awmod->___awdiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                26    26      0    6609
                                             13 BANK0     26    26      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                            _leerSEG
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1448
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     632
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leerSEG                                              4     4      0     759
                                              6 COMMON     4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     326
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2     724
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1     836
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _leerSEG
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___bmul
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      27       5       48.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 10 13:20:37 2023

                               pc 0002                    ___bmul@product 0072                                l32 01F8  
                              l41 01CE                                l50 02AD                                l35 0204  
                              l51 02B0                                l52 02B5                                l44 01E0  
                              l60 0211                                l29 0322                                l70 0254  
                              l38 01D7                                l71 025A                                l47 01EA  
                              l72 025B                                l73 0261                                l81 01F7  
                              l90 0536                                l75 0262                                l67 024A  
                              l68 024D                                l69 0253                                l93 02EA  
                              l78 0240                                l87 0428                                l99 039E  
                    ___awdiv@sign 0076                                fsr 0004                               l171 047E  
                             l308 0226                               l156 0287                               l318 059C  
                             l435 0603                               l278 06C4                               l448 04D9  
                             l554 03E2                               l564 035C                               _GIE 005F  
                             u700 0547                               u701 0546                               u640 0246  
                             u800 0218                               u720 055B                               u641 0245  
                             u801 0217                               u721 055A                               u650 0251  
                             u810 0225                               u651 0250                               u811 0224  
                             u715 054C                               u660 0258                               u740 0576  
                             u820 03A7                               u661 0257                               u741 0575  
                             u821 03A6                               u670 025F                               u910 033B  
                             u671 025E                               u735 055D                               u911 033A  
                             u680 01FE                               u760 0594                               u840 03B9  
                             u920 0345                               u681 01FD                               u761 0593  
                             u745 0572                               u841 03B8                               u921 0344  
                             u905 032D                               u690 0204                               u770 0302  
                             u691 0203                               u755 0586                               u835 03AB  
                             u780 02A9                               u860 03CA                               u940 0358  
                             u781 02A8                               u861 03C9                               u941 0357  
                             u925 0341                               u950 03E9                               u951 03E8  
                             u775 02FD                               u855 03BA                               u935 034C  
                             u880 03DE                               u881 03DD                               u865 03C6  
                             u970 040C                               u890 0329                               u971 040B  
                             u795 02C3                               u875 03D2                               u891 0328  
                             u965 03EF                               u990 036A                               u985 0412  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0021  
                            l1300 0321                              l1302 01CF                              l1310 01D8  
                            l1320 028D                              l1304 01D4                              l1312 01DD  
                            l1400 03D1                              l1250 025F                              l1242 0242  
                            l1330 02B1                              l1322 0295                              l1306 01C6  
                            l1314 01E1                              l1402 03D8                              l1410 0329  
                            l1244 0246                              l1260 0231                              l1252 01F8  
                            l1324 029E                              l1308 01CB                              l1316 01E6  
                            l1340 04E0                              l1404 03DE                              l1420 0345  
                            l1412 032C                              l1500 066F                              l1246 0251  
                            l1262 0234                              l1430 01EB                              l1350 02BD  
                            l1254 01FE                              l1326 02A3                              l1318 0288  
                            l1270 054A                              l1342 04E9                              l1334 0206  
                            l1422 034B                              l1414 0333                              l1502 0672  
                            l1510 06B0                              l1248 0258                              l1264 023D  
                            l1256 0228                              l1440 03FF                              l1432 03E4  
                            l1360 02D9                              l1352 02C0                              l1600 04C5  
                            l1328 02A9                              l1520 0429                              l1280 0584  
                            l1272 0557                              l1344 04F8                              l1336 0210  
                            l1424 0352                              l1416 0337                              l1408 0323  
                            l1504 069E                              l1512 06C0                              l1258 022B  
                            l1450 0422                              l1434 03E9                              l1442 0406  
                            l1362 02DF                              l1354 02CE                              l1530 059E  
                            l1602 04CB                              l1370 0214                              l1522 045C  
                            l1282 0585                              l1274 055B                              l1266 0537  
                            l1290 02EB                              l1346 04FE                              l1338 04DA  
                            l1418 033B                              l1426 0358                              l1506 06A3  
                            l1444 040C                              l1436 03F6                              l1364 02E2  
                            l1356 02D1                              l1348 02B7                              l1452 035D  
                            l1540 05B2                              l1532 05A2                              l1604 04D0  
                            l1372 0218                              l1524 0468                              l1284 058E  
                            l1276 0564                              l1268 0547                              l1292 02EF  
                            l1460 0263                              l1508 06A7                              l1620 06F1  
                            l1446 0419                              l1438 03F9                              l1366 02E7  
                            l1358 02D6                              l1454 0360                              l1550 05C8  
                            l1542 05B6                              l1534 05A7                              l1606 04D5  
                            l1374 021C                              l1278 0576                              l1286 0594  
                            l1294 02F2                              l1462 026F                              l1390 03B1  
                            l1382 039F                              l1470 060A                              l1630 071F  
                            l1622 06F6                              l1614 06C5                              l1448 041C  
                            l1456 037C                              l1560 05E8                              l1552 05CC  
                            l1544 05B8                              l1536 05A9                              l1528 059D  
                            l1376 021E                              l1368 0213                              l1296 031F  
                            l1464 027C                              l1392 03B5                              l1384 03A1  
                            l1472 0610                              l1640 0781                              l1632 0735  
                            l1624 06FF                              l1616 06D7                              l1458 0382  
                            l1562 05EF                              l1554 05D0                              l1546 05BE  
                            l1538 05AD                              l1378 0225                              l1298 0320  
                            l1466 0282                              l1394 03B9                              l1386 03A7  
                            l1482 0621                              l1474 0615                              l1650 07BD  
                            l1642 078A                              l1634 0756                              l1626 070B  
                            l1618 06E0                              l1556 05E1                              l1548 05C1  
                            l1564 05F5                              l1580 048D                              l1572 047F  
                            l1396 03CA                              l1388 03AA                              l1484 063B  
                            l1476 061A                              l1468 0607                              l1660 07EF  
                            l1652 07C5                              l1644 079B                              l1636 076A  
                            l1628 0710                              l1566 05FA                              l1558 05E7  
                            l1590 04A6                              l1582 0491                              l1574 0482  
                            l1398 03D0                              l1494 0649                              l1486 0643  
                            l1478 061C                              l1654 07CE                              l1646 07A3  
                            l1638 0779                              l1568 05FF                              l1592 04AA  
                            l1584 0496                              l1576 0486                              l1488 0647  
                            l1656 07D6                              l1648 07AC                              l1594 04AE  
                            l1586 049C                              l1578 048B                              l1498 0665  
                            l1682 0633                              l1658 07D8                              l1596 04B8  
                            l1588 049F                              l1598 04BE                              STR_1 0027  
                            STR_2 001D                              STR_3 002B                              STR_4 002B  
                            STR_5 002B                              STR_6 002B                              u1000 038C  
                            u1010 039E                              u1011 039D                              u1100 05BE  
                            u1020 0610                              u1101 05BD                              u1021 060F  
                            u1030 0664                              u1031 0663                              u1120 05D0  
                            u1200 049C                              u1040 066F                              u1121 05CF  
                            u1201 049B                              u1041 066E                              u1050 06B0  
                            u1115 05C2                              u1051 06AF                              u1035 0660  
                            u1140 05E1                              u1220 04AE                              u1060 06C0  
                            u1141 05E0                              u1221 04AD                              u1061 06BF  
                            u1230 04B8                              u1135 05D1                              u1231 04B7  
                            u1215 04A0                              u1160 05F5                              u1080 05A2  
                            u1161 05F4                              u1145 05DD                              u1081 05A1  
                            u1170 05FA                              u1090 05AD                              u1250 04CB  
                            u1171 05F9                              u1155 05E9                              u1091 05AC  
                            u1251 04CA                              u1235 04B4                              u1075 0470  
                            u1307 0502                              u1260 04D0                              u1180 0486  
                            u1261 04CF                              u1245 04BF                              u1181 0485  
                            u1317 0462                              u1190 0491                              u1327 02D3  
                            u1191 0490                              u1337 02E4                              u1347 0238  
                            u1277 0718                              u1287 04E4                              u1297 04F3  
                            _PEIE 005E  __end_of_I2C_Master_RepeatedStart 01CF                              _main 06C5  
          _Lcd_Write_String_4bits 035D                              btemp 007E                              start 0000  
               ___bmul@multiplier 0073                  ?_I2C_Master_Init 0020                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
               ??_Lcd_Clear_4bits 0074                   __end_of___awdiv 0604                   __end_of___awmod 04DA  
                           _ANSEL 0188                   __end_of___lldiv 059D                   ___awdiv@divisor 0070  
                 __end_of___lwdiv 03E3                   __end_of___lwmod 035D                   ___awdiv@counter 0075  
                           _PORTB 0006                             _PORTD 0008                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
           __end_of_Lcd_Cmd_4bits 0241                   __end_of_leerSEG 047F                   __end_of_dpowers 001D  
                           _setup 0263                             pclath 000A                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 06C5                   __initialization 07FC  
                    __end_of_main 07FC                            ??_main 002D                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0070                ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072  
                ___awdiv@dividend 0072                            ?_setup 0070                            _ANSELH 0189  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013          Lcd_Write_Char_4bits@temp 0072  
        _I2C_Master_RepeatedStart 01C6                            ___bmul 0212                         ??___awdiv 0074  
                       ??___awmod 007D                         ??___lldiv 0078                         ??___lwdiv 0074  
                       ??___lwmod 007C                  ___awdiv@quotient 0077                   ___awmod@divisor 0079  
                 ___awmod@counter 0020                         ??_leerSEG 0076                      ?_setupINTOSC 0070  
                  _Lcd_Init_4bits 04DA                         ??_sprintf 0023                     main@stringSEG 0030  
         __end_of__initialization 07FC               ___bmul@multiplicand 0070                    __pcstackCOMMON 0070  
           Lcd_Write_Char_4bits@a 0074             Lcd_Write_Char_4bits@y 0073                     __end_of_setup 0288  
          __end_of_Lcd_Init_4bits 0537           ?_Lcd_Write_String_4bits 0075                           ??_setup 007E  
                  _Lcd_Port_4bits 0241                   _Lcd_Clear_4bits 01EB                        __pmaintext 06C5  
                         ?___bmul 0070      __end_of_Lcd_Write_Char_4bits 02EB                   Lcd_Port_4bits@a 0070  
                 ?_Lcd_Init_4bits 0070    __end_of_Lcd_Write_String_4bits 039F                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0003            __end_of_Lcd_Port_4bits 0263  
                         ___awdiv 059D                           ___awmod 047F                           ___lldiv 0537  
                         ___lwdiv 039F                           ___lwmod 0323                           __ptext1 0604  
                         __ptext2 0323                           __ptext3 039F                           __ptext4 0263  
                         __ptext5 0205                           __ptext6 04DA                           __ptext7 02EB  
                         __ptext8 0537                           __ptext9 0429                           _leerSEG 0429  
                         _dpowers 0013                  ___awmod@dividend 007B                           main@SEG 0045  
    __end_of_Lcd_Set_Cursor_4bits 0429                           _sprintf 0604              end_of_initialization 07FC  
      ??_I2C_Master_RepeatedStart 0070                   ?_Lcd_Port_4bits 0070           __end_of_Lcd_Clear_4bits 01F8  
                 ___lldiv@divisor 0070                   ___lldiv@counter 007D                  I2C_Master_Init@c 0020  
                I2C_Master_Read@a 0070                         _PORTDbits 0008                        main@VAL1_C 0044  
                      main@VAL1_D 0043                        main@VAL1_U 0042                         _TRISCbits 0087  
                      leerSEG@SEG 0079              _Lcd_Write_Char_4bits 02B6                    __end_of___bmul 0227  
             start_initialization 07FC                     _Lcd_Cmd_4bits 0227             Lcd_Set_Cursor_4bits@a 0076  
           Lcd_Set_Cursor_4bits@b 0074             Lcd_Set_Cursor_4bits@y 0078             Lcd_Set_Cursor_4bits@z 0077  
                ?_Lcd_Clear_4bits 0070                 ??_I2C_Master_Init 0024                 ??_I2C_Master_Read 0072  
               ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070             ?_Lcd_Write_Char_4bits 0070  
                        ??___bmul 0071          Lcd_Set_Cursor_4bits@temp 0079              _Lcd_Set_Cursor_4bits 03E3  
                ??_Lcd_Init_4bits 0074                         ___latbits 0002                     __pcstackBANK0 0020  
                  ?_Lcd_Cmd_4bits 0070                       sprintf@flag 0026                       sprintf@prec 002A  
                _I2C_Master_Start 01CF                  _I2C_Master_Write 01E1                  ___lwdiv@dividend 0072  
           ?_Lcd_Set_Cursor_4bits 0074                          ?___awdiv 0070                          ?___awmod 0079  
                        ?___lldiv 0070                          ?___lwdiv 0070                          ?___lwmod 0078  
                       __pstrings 0003                          ?_leerSEG 0070                  ??_Lcd_Port_4bits 0070  
                ___lwdiv@quotient 0075                          ?_sprintf 0020            ??_Lcd_Write_Char_4bits 0071  
                     __stringbase 0012                     ??_setupINTOSC 0070                   ??_Lcd_Cmd_4bits 0071  
             I2C_Master_Read@temp 0074           Lcd_Write_String_4bits@a 0075           Lcd_Write_String_4bits@i 007A  
          ??_Lcd_Set_Cursor_4bits 0075         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0013  
        ??_Lcd_Write_String_4bits 0077                    Lcd_Cmd_4bits@a 0073                        sprintf@val 0028  
                 _I2C_Master_Init 02EB                   _I2C_Master_Read 0288                   _I2C_Master_Wait 01F8  
                 _I2C_Master_Stop 01D8                   ___lwdiv@divisor 0070                   ___lwdiv@counter 0077  
                        __ptext10 0212                          __ptext11 01E1                          __ptext20 02B6  
                        __ptext12 01D8                          __ptext21 03E3                          __ptext13 01CF  
                        __ptext22 01EB                          __ptext14 01C6                          __ptext23 0227  
                        __ptext15 0288                          __ptext24 0241                          __ptext16 01F8  
                        __ptext17 047F                          __ptext18 059D                          __ptext19 035D  
             __end_of_setupINTOSC 0212                          main@ADC1 0039                          main@VAL1 0046  
        __end_of_I2C_Master_Start 01D8          __end_of_I2C_Master_Write 01EB                         sprintf@ap 0027  
                       sprintf@sp 002B                  ___lwmod@dividend 007A                  ___lldiv@dividend 0074  
                       stringcode 000D                        _OSCCONbits 008F           __end_of_I2C_Master_Init 0323  
         __end_of_I2C_Master_Read 02B6           __end_of_I2C_Master_Wait 0205           __end_of_I2C_Master_Stop 01E1  
                     _setupINTOSC 0205                          sprintf@c 002C                          sprintf@f 0020  
                    setupINTOSC@F 0071                  ___lldiv@quotient 0079                 I2C_Master_Write@d 0070  
                 ___lwmod@divisor 0078                   ___lwmod@counter 007D                          stringdir 000D  
                        stringtab 0003                       _SSPCON2bits 0091  
