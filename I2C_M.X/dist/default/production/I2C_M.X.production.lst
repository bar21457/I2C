

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Feb 15 23:51:07 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	text23,local,class=CODE,merge=1,delta=2
    33                           	psect	text24,local,class=CODE,merge=1,delta=2
    34                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37     0000                     
    38                           ; Version 2.40
    39                           ; Generated 17/11/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F887 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73     0000                     	;# 
    74     0001                     	;# 
    75     0002                     	;# 
    76     0003                     	;# 
    77     0004                     	;# 
    78     0005                     	;# 
    79     0006                     	;# 
    80     0007                     	;# 
    81     0008                     	;# 
    82     0009                     	;# 
    83     000A                     	;# 
    84     000B                     	;# 
    85     000C                     	;# 
    86     000D                     	;# 
    87     000E                     	;# 
    88     000E                     	;# 
    89     000F                     	;# 
    90     0010                     	;# 
    91     0011                     	;# 
    92     0012                     	;# 
    93     0013                     	;# 
    94     0014                     	;# 
    95     0015                     	;# 
    96     0015                     	;# 
    97     0016                     	;# 
    98     0017                     	;# 
    99     0018                     	;# 
   100     0019                     	;# 
   101     001A                     	;# 
   102     001B                     	;# 
   103     001B                     	;# 
   104     001C                     	;# 
   105     001D                     	;# 
   106     001E                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     0087                     	;# 
   112     0088                     	;# 
   113     0089                     	;# 
   114     008C                     	;# 
   115     008D                     	;# 
   116     008E                     	;# 
   117     008F                     	;# 
   118     0090                     	;# 
   119     0091                     	;# 
   120     0092                     	;# 
   121     0093                     	;# 
   122     0093                     	;# 
   123     0093                     	;# 
   124     0094                     	;# 
   125     0095                     	;# 
   126     0096                     	;# 
   127     0097                     	;# 
   128     0098                     	;# 
   129     0099                     	;# 
   130     009A                     	;# 
   131     009B                     	;# 
   132     009C                     	;# 
   133     009D                     	;# 
   134     009E                     	;# 
   135     009F                     	;# 
   136     0105                     	;# 
   137     0107                     	;# 
   138     0108                     	;# 
   139     0109                     	;# 
   140     010C                     	;# 
   141     010C                     	;# 
   142     010D                     	;# 
   143     010E                     	;# 
   144     010F                     	;# 
   145     0185                     	;# 
   146     0187                     	;# 
   147     0188                     	;# 
   148     0189                     	;# 
   149     018C                     	;# 
   150     018D                     	;# 
   151     0000                     	;# 
   152     0001                     	;# 
   153     0002                     	;# 
   154     0003                     	;# 
   155     0004                     	;# 
   156     0005                     	;# 
   157     0006                     	;# 
   158     0007                     	;# 
   159     0008                     	;# 
   160     0009                     	;# 
   161     000A                     	;# 
   162     000B                     	;# 
   163     000C                     	;# 
   164     000D                     	;# 
   165     000E                     	;# 
   166     000E                     	;# 
   167     000F                     	;# 
   168     0010                     	;# 
   169     0011                     	;# 
   170     0012                     	;# 
   171     0013                     	;# 
   172     0014                     	;# 
   173     0015                     	;# 
   174     0015                     	;# 
   175     0016                     	;# 
   176     0017                     	;# 
   177     0018                     	;# 
   178     0019                     	;# 
   179     001A                     	;# 
   180     001B                     	;# 
   181     001B                     	;# 
   182     001C                     	;# 
   183     001D                     	;# 
   184     001E                     	;# 
   185     001F                     	;# 
   186     0081                     	;# 
   187     0085                     	;# 
   188     0086                     	;# 
   189     0087                     	;# 
   190     0088                     	;# 
   191     0089                     	;# 
   192     008C                     	;# 
   193     008D                     	;# 
   194     008E                     	;# 
   195     008F                     	;# 
   196     0090                     	;# 
   197     0091                     	;# 
   198     0092                     	;# 
   199     0093                     	;# 
   200     0093                     	;# 
   201     0093                     	;# 
   202     0094                     	;# 
   203     0095                     	;# 
   204     0096                     	;# 
   205     0097                     	;# 
   206     0098                     	;# 
   207     0099                     	;# 
   208     009A                     	;# 
   209     009B                     	;# 
   210     009C                     	;# 
   211     009D                     	;# 
   212     009E                     	;# 
   213     009F                     	;# 
   214     0105                     	;# 
   215     0107                     	;# 
   216     0108                     	;# 
   217     0109                     	;# 
   218     010C                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     0185                     	;# 
   224     0187                     	;# 
   225     0188                     	;# 
   226     0189                     	;# 
   227     018C                     	;# 
   228     018D                     	;# 
   229     0000                     	;# 
   230     0001                     	;# 
   231     0002                     	;# 
   232     0003                     	;# 
   233     0004                     	;# 
   234     0005                     	;# 
   235     0006                     	;# 
   236     0007                     	;# 
   237     0008                     	;# 
   238     0009                     	;# 
   239     000A                     	;# 
   240     000B                     	;# 
   241     000C                     	;# 
   242     000D                     	;# 
   243     000E                     	;# 
   244     000E                     	;# 
   245     000F                     	;# 
   246     0010                     	;# 
   247     0011                     	;# 
   248     0012                     	;# 
   249     0013                     	;# 
   250     0014                     	;# 
   251     0015                     	;# 
   252     0015                     	;# 
   253     0016                     	;# 
   254     0017                     	;# 
   255     0018                     	;# 
   256     0019                     	;# 
   257     001A                     	;# 
   258     001B                     	;# 
   259     001B                     	;# 
   260     001C                     	;# 
   261     001D                     	;# 
   262     001E                     	;# 
   263     001F                     	;# 
   264     0081                     	;# 
   265     0085                     	;# 
   266     0086                     	;# 
   267     0087                     	;# 
   268     0088                     	;# 
   269     0089                     	;# 
   270     008C                     	;# 
   271     008D                     	;# 
   272     008E                     	;# 
   273     008F                     	;# 
   274     0090                     	;# 
   275     0091                     	;# 
   276     0092                     	;# 
   277     0093                     	;# 
   278     0093                     	;# 
   279     0093                     	;# 
   280     0094                     	;# 
   281     0095                     	;# 
   282     0096                     	;# 
   283     0097                     	;# 
   284     0098                     	;# 
   285     0099                     	;# 
   286     009A                     	;# 
   287     009B                     	;# 
   288     009C                     	;# 
   289     009D                     	;# 
   290     009E                     	;# 
   291     009F                     	;# 
   292     0105                     	;# 
   293     0107                     	;# 
   294     0108                     	;# 
   295     0109                     	;# 
   296     010C                     	;# 
   297     010C                     	;# 
   298     010D                     	;# 
   299     010E                     	;# 
   300     010F                     	;# 
   301     0185                     	;# 
   302     0187                     	;# 
   303     0188                     	;# 
   304     0189                     	;# 
   305     018C                     	;# 
   306     018D                     	;# 
   307     0000                     	;# 
   308     0001                     	;# 
   309     0002                     	;# 
   310     0003                     	;# 
   311     0004                     	;# 
   312     0005                     	;# 
   313     0006                     	;# 
   314     0007                     	;# 
   315     0008                     	;# 
   316     0009                     	;# 
   317     000A                     	;# 
   318     000B                     	;# 
   319     000C                     	;# 
   320     000D                     	;# 
   321     000E                     	;# 
   322     000E                     	;# 
   323     000F                     	;# 
   324     0010                     	;# 
   325     0011                     	;# 
   326     0012                     	;# 
   327     0013                     	;# 
   328     0014                     	;# 
   329     0015                     	;# 
   330     0015                     	;# 
   331     0016                     	;# 
   332     0017                     	;# 
   333     0018                     	;# 
   334     0019                     	;# 
   335     001A                     	;# 
   336     001B                     	;# 
   337     001B                     	;# 
   338     001C                     	;# 
   339     001D                     	;# 
   340     001E                     	;# 
   341     001F                     	;# 
   342     0081                     	;# 
   343     0085                     	;# 
   344     0086                     	;# 
   345     0087                     	;# 
   346     0088                     	;# 
   347     0089                     	;# 
   348     008C                     	;# 
   349     008D                     	;# 
   350     008E                     	;# 
   351     008F                     	;# 
   352     0090                     	;# 
   353     0091                     	;# 
   354     0092                     	;# 
   355     0093                     	;# 
   356     0093                     	;# 
   357     0093                     	;# 
   358     0094                     	;# 
   359     0095                     	;# 
   360     0096                     	;# 
   361     0097                     	;# 
   362     0098                     	;# 
   363     0099                     	;# 
   364     009A                     	;# 
   365     009B                     	;# 
   366     009C                     	;# 
   367     009D                     	;# 
   368     009E                     	;# 
   369     009F                     	;# 
   370     0105                     	;# 
   371     0107                     	;# 
   372     0108                     	;# 
   373     0109                     	;# 
   374     010C                     	;# 
   375     010C                     	;# 
   376     010D                     	;# 
   377     010E                     	;# 
   378     010F                     	;# 
   379     0185                     	;# 
   380     0187                     	;# 
   381     0188                     	;# 
   382     0189                     	;# 
   383     018C                     	;# 
   384     018D                     	;# 
   385     0000                     	;# 
   386     0001                     	;# 
   387     0002                     	;# 
   388     0003                     	;# 
   389     0004                     	;# 
   390     0005                     	;# 
   391     0006                     	;# 
   392     0007                     	;# 
   393     0008                     	;# 
   394     0009                     	;# 
   395     000A                     	;# 
   396     000B                     	;# 
   397     000C                     	;# 
   398     000D                     	;# 
   399     000E                     	;# 
   400     000E                     	;# 
   401     000F                     	;# 
   402     0010                     	;# 
   403     0011                     	;# 
   404     0012                     	;# 
   405     0013                     	;# 
   406     0014                     	;# 
   407     0015                     	;# 
   408     0015                     	;# 
   409     0016                     	;# 
   410     0017                     	;# 
   411     0018                     	;# 
   412     0019                     	;# 
   413     001A                     	;# 
   414     001B                     	;# 
   415     001B                     	;# 
   416     001C                     	;# 
   417     001D                     	;# 
   418     001E                     	;# 
   419     001F                     	;# 
   420     0081                     	;# 
   421     0085                     	;# 
   422     0086                     	;# 
   423     0087                     	;# 
   424     0088                     	;# 
   425     0089                     	;# 
   426     008C                     	;# 
   427     008D                     	;# 
   428     008E                     	;# 
   429     008F                     	;# 
   430     0090                     	;# 
   431     0091                     	;# 
   432     0092                     	;# 
   433     0093                     	;# 
   434     0093                     	;# 
   435     0093                     	;# 
   436     0094                     	;# 
   437     0095                     	;# 
   438     0096                     	;# 
   439     0097                     	;# 
   440     0098                     	;# 
   441     0099                     	;# 
   442     009A                     	;# 
   443     009B                     	;# 
   444     009C                     	;# 
   445     009D                     	;# 
   446     009E                     	;# 
   447     009F                     	;# 
   448     0105                     	;# 
   449     0107                     	;# 
   450     0108                     	;# 
   451     0109                     	;# 
   452     010C                     	;# 
   453     010C                     	;# 
   454     010D                     	;# 
   455     010E                     	;# 
   456     010F                     	;# 
   457     0185                     	;# 
   458     0187                     	;# 
   459     0188                     	;# 
   460     0189                     	;# 
   461     018C                     	;# 
   462     018D                     	;# 
   463     0000                     	;# 
   464     0001                     	;# 
   465     0002                     	;# 
   466     0003                     	;# 
   467     0004                     	;# 
   468     0005                     	;# 
   469     0006                     	;# 
   470     0007                     	;# 
   471     0008                     	;# 
   472     0009                     	;# 
   473     000A                     	;# 
   474     000B                     	;# 
   475     000C                     	;# 
   476     000D                     	;# 
   477     000E                     	;# 
   478     000E                     	;# 
   479     000F                     	;# 
   480     0010                     	;# 
   481     0011                     	;# 
   482     0012                     	;# 
   483     0013                     	;# 
   484     0014                     	;# 
   485     0015                     	;# 
   486     0015                     	;# 
   487     0016                     	;# 
   488     0017                     	;# 
   489     0018                     	;# 
   490     0019                     	;# 
   491     001A                     	;# 
   492     001B                     	;# 
   493     001B                     	;# 
   494     001C                     	;# 
   495     001D                     	;# 
   496     001E                     	;# 
   497     001F                     	;# 
   498     0081                     	;# 
   499     0085                     	;# 
   500     0086                     	;# 
   501     0087                     	;# 
   502     0088                     	;# 
   503     0089                     	;# 
   504     008C                     	;# 
   505     008D                     	;# 
   506     008E                     	;# 
   507     008F                     	;# 
   508     0090                     	;# 
   509     0091                     	;# 
   510     0092                     	;# 
   511     0093                     	;# 
   512     0093                     	;# 
   513     0093                     	;# 
   514     0094                     	;# 
   515     0095                     	;# 
   516     0096                     	;# 
   517     0097                     	;# 
   518     0098                     	;# 
   519     0099                     	;# 
   520     009A                     	;# 
   521     009B                     	;# 
   522     009C                     	;# 
   523     009D                     	;# 
   524     009E                     	;# 
   525     009F                     	;# 
   526     0105                     	;# 
   527     0107                     	;# 
   528     0108                     	;# 
   529     0109                     	;# 
   530     010C                     	;# 
   531     010C                     	;# 
   532     010D                     	;# 
   533     010E                     	;# 
   534     010F                     	;# 
   535     0185                     	;# 
   536     0187                     	;# 
   537     0188                     	;# 
   538     0189                     	;# 
   539     018C                     	;# 
   540     018D                     	;# 
   541                           
   542                           	psect	strings
   543     0800                     __pstrings:
   544     0800                     stringtab:
   545     0800                     __stringtab:
   546                           
   547                           ;	String table - string pointers are 1 byte each
   548     0800  1BFF               	btfsc	btemp+1,7
   549     0801  280A               	ljmp	stringcode
   550     0802  1383               	bcf	3,7
   551     0803  187F               	btfsc	btemp+1,0
   552     0804  1783               	bsf	3,7
   553     0805  0800               	movf	0,w
   554     0806  0A84               	incf	4,f
   555     0807  1903               	skipnz
   556     0808  0AFF               	incf	btemp+1,f
   557     0809  0008               	return
   558     080A                     stringcode:
   559     080A                     stringdir:
   560     080A  3008               	movlw	high stringdir
   561     080B  008A               	movwf	10
   562     080C  0804               	movf	4,w
   563     080D  0A84               	incf	4,f
   564     080E  0782               	addwf	2,f
   565     080F                     __stringbase:
   566     080F  3400               	retlw	0
   567     0810                     __end_of__stringtab:
   568     0810                     _dpowers:
   569     0810  3401               	retlw	1
   570     0811  3400               	retlw	0
   571     0812  340A               	retlw	10
   572     0813  3400               	retlw	0
   573     0814  3464               	retlw	100
   574     0815  3400               	retlw	0
   575     0816  34E8               	retlw	232
   576     0817  3403               	retlw	3
   577     0818  3410               	retlw	16
   578     0819  3427               	retlw	39
   579     081A                     __end_of_dpowers:
   580     0008                     _PORTD	set	8
   581     0006                     _PORTB	set	6
   582     0008                     _PORTDbits	set	8
   583     0013                     _SSPBUF	set	19
   584     0014                     _SSPCON	set	20
   585     0063                     _SSPIF	set	99
   586     005E                     _PEIE	set	94
   587     005F                     _GIE	set	95
   588     0088                     _TRISD	set	136
   589     0086                     _TRISB	set	134
   590     008F                     _OSCCONbits	set	143
   591     0091                     _SSPCON2bits	set	145
   592     0087                     _TRISCbits	set	135
   593     0094                     _SSPSTAT	set	148
   594     0093                     _SSPADD	set	147
   595     0091                     _SSPCON2	set	145
   596     0463                     _SSPIE	set	1123
   597     043C                     _TRISC4	set	1084
   598     043B                     _TRISC3	set	1083
   599     0189                     _ANSELH	set	393
   600     0188                     _ANSEL	set	392
   601     081A                     STR_1:
   602     081A  3453               	retlw	83	;'S'
   603     081B  3431               	retlw	49	;'1'
   604     081C  343A               	retlw	58	;':'
   605     081D  3400               	retlw	0
   606     081E                     STR_6:
   607     081E  3425               	retlw	37	;'%'
   608     081F  3475               	retlw	117	;'u'
   609     0820  3400               	retlw	0
   610     0821                     STR_4:
   611     0821  342F               	retlw	47	;'/'
   612     0822  3400               	retlw	0
   613     0821                     
   614                           	psect	cinit
   615     07FC                     start_initialization:	
   616                           ; #config settings
   617                           
   618     07FC                     __initialization:
   619     07FC                     end_of_initialization:	
   620                           ;End of C runtime variable initialization code
   621                           
   622     07FC                     __end_of__initialization:
   623     07FC  0183               	clrf	3
   624     07FD  120A  118A  2AD0   	ljmp	_main	;jump to C main() function
   625                           
   626                           	psect	cstackBANK3
   627     0190                     __pcstackBANK3:
   628     0190                     main@stringSEG:
   629                           
   630                           ; 9 bytes @ 0x0
   631     0190                     	ds	9
   632     0199                     main@stringMIN:
   633                           
   634                           ; 9 bytes @ 0x9
   635     0199                     	ds	9
   636     01A2                     main@stringHOR:
   637                           
   638                           ; 9 bytes @ 0x12
   639     01A2                     	ds	9
   640     01AB                     main@stringDIA:
   641                           
   642                           ; 9 bytes @ 0x1B
   643     01AB                     	ds	9
   644     01B4                     main@stringMES:
   645                           
   646                           ; 9 bytes @ 0x24
   647     01B4                     	ds	9
   648     01BD                     main@ADC1:
   649                           
   650                           ; 9 bytes @ 0x2D
   651     01BD                     	ds	9
   652     01C6                     main@stringAO:
   653                           
   654                           ; 9 bytes @ 0x36
   655     01C6                     	ds	9
   656     01CF                     _main$1005:
   657                           
   658                           ; 2 bytes @ 0x3F
   659     01CF                     	ds	2
   660     01D1                     main@VAL1_U:
   661                           
   662                           ; 1 bytes @ 0x41
   663     01D1                     	ds	1
   664     01D2                     main@VAL1_D:
   665                           
   666                           ; 1 bytes @ 0x42
   667     01D2                     	ds	1
   668     01D3                     main@VAL1_C:
   669                           
   670                           ; 1 bytes @ 0x43
   671     01D3                     	ds	1
   672     01D4                     main@SEG_U:
   673                           
   674                           ; 1 bytes @ 0x44
   675     01D4                     	ds	1
   676     01D5                     main@SEG_D:
   677                           
   678                           ; 1 bytes @ 0x45
   679     01D5                     	ds	1
   680     01D6                     main@MIN_U:
   681                           
   682                           ; 1 bytes @ 0x46
   683     01D6                     	ds	1
   684     01D7                     main@MIN_D:
   685                           
   686                           ; 1 bytes @ 0x47
   687     01D7                     	ds	1
   688     01D8                     main@HOR_U:
   689                           
   690                           ; 1 bytes @ 0x48
   691     01D8                     	ds	1
   692     01D9                     main@HOR_D:
   693                           
   694                           ; 1 bytes @ 0x49
   695     01D9                     	ds	1
   696     01DA                     main@DIA_U:
   697                           
   698                           ; 1 bytes @ 0x4A
   699     01DA                     	ds	1
   700     01DB                     main@DIA_D:
   701                           
   702                           ; 1 bytes @ 0x4B
   703     01DB                     	ds	1
   704     01DC                     main@MES_U:
   705                           
   706                           ; 1 bytes @ 0x4C
   707     01DC                     	ds	1
   708     01DD                     main@MES_D:
   709                           
   710                           ; 1 bytes @ 0x4D
   711     01DD                     	ds	1
   712     01DE                     main@AO_U:
   713                           
   714                           ; 1 bytes @ 0x4E
   715     01DE                     	ds	1
   716     01DF                     main@AO_D:
   717                           
   718                           ; 1 bytes @ 0x4F
   719     01DF                     	ds	1
   720     01E0                     main@AO_C:
   721                           
   722                           ; 1 bytes @ 0x50
   723     01E0                     	ds	1
   724     01E1                     main@AO_UM:
   725                           
   726                           ; 1 bytes @ 0x51
   727     01E1                     	ds	1
   728     01E2                     main@SEG:
   729                           
   730                           ; 1 bytes @ 0x52
   731     01E2                     	ds	1
   732     01E3                     main@MIN:
   733                           
   734                           ; 1 bytes @ 0x53
   735     01E3                     	ds	1
   736     01E4                     main@HOR:
   737                           
   738                           ; 1 bytes @ 0x54
   739     01E4                     	ds	1
   740     01E5                     main@DIA:
   741                           
   742                           ; 1 bytes @ 0x55
   743     01E5                     	ds	1
   744     01E6                     main@MES:
   745                           
   746                           ; 1 bytes @ 0x56
   747     01E6                     	ds	1
   748     01E7                     main@VAL1:
   749                           
   750                           ; 1 bytes @ 0x57
   751     01E7                     	ds	1
   752     01E8                     main@AO:
   753                           
   754                           ; 1 bytes @ 0x58
   755     01E8                     	ds	1
   756                           
   757                           	psect	cstackCOMMON
   758     0070                     __pcstackCOMMON:
   759     0070                     ?_setup:
   760     0070                     ?_leerRTC:	
   761                           ; 1 bytes @ 0x0
   762                           
   763     0070                     ?_I2C_Master_Wait:	
   764                           ; 1 bytes @ 0x0
   765                           
   766     0070                     ??_I2C_Master_Wait:	
   767                           ; 1 bytes @ 0x0
   768                           
   769     0070                     ?_I2C_Master_Start:	
   770                           ; 1 bytes @ 0x0
   771                           
   772     0070                     ??_I2C_Master_Start:	
   773                           ; 1 bytes @ 0x0
   774                           
   775     0070                     ?_I2C_Master_RepeatedStart:	
   776                           ; 1 bytes @ 0x0
   777                           
   778     0070                     ??_I2C_Master_RepeatedStart:	
   779                           ; 1 bytes @ 0x0
   780                           
   781     0070                     ?_I2C_Master_Stop:	
   782                           ; 1 bytes @ 0x0
   783                           
   784     0070                     ??_I2C_Master_Stop:	
   785                           ; 1 bytes @ 0x0
   786                           
   787     0070                     ?_I2C_Master_Write:	
   788                           ; 1 bytes @ 0x0
   789                           
   790     0070                     ?_setupINTOSC:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0070                     ??_setupINTOSC:	
   794                           ; 1 bytes @ 0x0
   795                           
   796     0070                     ?_Lcd_Port_4bits:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0070                     ??_Lcd_Port_4bits:	
   800                           ; 1 bytes @ 0x0
   801                           
   802     0070                     ?_Lcd_Cmd_4bits:	
   803                           ; 1 bytes @ 0x0
   804                           
   805     0070                     ?_Lcd_Clear_4bits:	
   806                           ; 1 bytes @ 0x0
   807                           
   808     0070                     ?_Lcd_Init_4bits:	
   809                           ; 1 bytes @ 0x0
   810                           
   811     0070                     ?_Lcd_Write_Char_4bits:	
   812                           ; 1 bytes @ 0x0
   813                           
   814     0070                     ?_main:	
   815                           ; 1 bytes @ 0x0
   816                           
   817     0070                     ?___bmul:	
   818                           ; 1 bytes @ 0x0
   819                           
   820     0070                     ?_I2C_Master_Read:	
   821                           ; 1 bytes @ 0x0
   822                           
   823     0070                     ?___awdiv:	
   824                           ; 2 bytes @ 0x0
   825                           
   826     0070                     ?___lwdiv:	
   827                           ; 2 bytes @ 0x0
   828                           
   829     0070                     ?___lldiv:	
   830                           ; 2 bytes @ 0x0
   831                           
   832     0070                     Lcd_Port_4bits@a:	
   833                           ; 4 bytes @ 0x0
   834                           
   835     0070                     ___bmul@multiplicand:	
   836                           ; 1 bytes @ 0x0
   837                           
   838     0070                     I2C_Master_Write@d:	
   839                           ; 1 bytes @ 0x0
   840                           
   841     0070                     I2C_Master_Read@a:	
   842                           ; 2 bytes @ 0x0
   843                           
   844     0070                     ___awdiv@divisor:	
   845                           ; 2 bytes @ 0x0
   846                           
   847     0070                     ___lwdiv@divisor:	
   848                           ; 2 bytes @ 0x0
   849                           
   850     0070                     ___lldiv@divisor:	
   851                           ; 2 bytes @ 0x0
   852                           
   853                           
   854                           ; 4 bytes @ 0x0
   855     0070                     	ds	1
   856     0071                     ??_Lcd_Cmd_4bits:
   857     0071                     ??_Lcd_Write_Char_4bits:	
   858                           ; 1 bytes @ 0x1
   859                           
   860     0071                     ??___bmul:	
   861                           ; 1 bytes @ 0x1
   862                           
   863     0071                     setupINTOSC@F:	
   864                           ; 1 bytes @ 0x1
   865                           
   866                           
   867                           ; 1 bytes @ 0x1
   868     0071                     	ds	1
   869     0072                     ??_I2C_Master_Write:
   870     0072                     ??_I2C_Master_Read:	
   871                           ; 1 bytes @ 0x2
   872                           
   873     0072                     Lcd_Write_Char_4bits@temp:	
   874                           ; 1 bytes @ 0x2
   875                           
   876     0072                     ___bmul@product:	
   877                           ; 1 bytes @ 0x2
   878                           
   879     0072                     ___awdiv@dividend:	
   880                           ; 1 bytes @ 0x2
   881                           
   882     0072                     ___lwdiv@dividend:	
   883                           ; 2 bytes @ 0x2
   884                           
   885                           
   886                           ; 2 bytes @ 0x2
   887     0072                     	ds	1
   888     0073                     Lcd_Cmd_4bits@a:
   889     0073                     Lcd_Write_Char_4bits@y:	
   890                           ; 1 bytes @ 0x3
   891                           
   892     0073                     ___bmul@multiplier:	
   893                           ; 1 bytes @ 0x3
   894                           
   895                           
   896                           ; 1 bytes @ 0x3
   897     0073                     	ds	1
   898     0074                     ??_Lcd_Clear_4bits:
   899     0074                     ?_Lcd_Set_Cursor_4bits:	
   900                           ; 1 bytes @ 0x4
   901                           
   902     0074                     ??_Lcd_Init_4bits:	
   903                           ; 1 bytes @ 0x4
   904                           
   905     0074                     ??___awdiv:	
   906                           ; 1 bytes @ 0x4
   907                           
   908     0074                     ??___lwdiv:	
   909                           ; 1 bytes @ 0x4
   910                           
   911     0074                     Lcd_Set_Cursor_4bits@b:	
   912                           ; 1 bytes @ 0x4
   913                           
   914     0074                     Lcd_Write_Char_4bits@a:	
   915                           ; 1 bytes @ 0x4
   916                           
   917     0074                     I2C_Master_Read@temp:	
   918                           ; 1 bytes @ 0x4
   919                           
   920     0074                     ___lldiv@dividend:	
   921                           ; 2 bytes @ 0x4
   922                           
   923                           
   924                           ; 4 bytes @ 0x4
   925     0074                     	ds	1
   926     0075                     ??_Lcd_Set_Cursor_4bits:
   927     0075                     ?_Lcd_Write_String_4bits:	
   928                           ; 1 bytes @ 0x5
   929                           
   930     0075                     ___awdiv@counter:	
   931                           ; 1 bytes @ 0x5
   932                           
   933     0075                     Lcd_Write_String_4bits@a:	
   934                           ; 1 bytes @ 0x5
   935                           
   936     0075                     ___lwdiv@quotient:	
   937                           ; 2 bytes @ 0x5
   938                           
   939                           
   940                           ; 2 bytes @ 0x5
   941     0075                     	ds	1
   942     0076                     ??_leerRTC:
   943     0076                     Lcd_Set_Cursor_4bits@a:	
   944                           ; 1 bytes @ 0x6
   945                           
   946     0076                     ___awdiv@sign:	
   947                           ; 1 bytes @ 0x6
   948                           
   949                           
   950                           ; 1 bytes @ 0x6
   951     0076                     	ds	1
   952     0077                     ??_Lcd_Write_String_4bits:
   953     0077                     Lcd_Set_Cursor_4bits@z:	
   954                           ; 1 bytes @ 0x7
   955                           
   956     0077                     ___lwdiv@counter:	
   957                           ; 1 bytes @ 0x7
   958                           
   959     0077                     ___awdiv@quotient:	
   960                           ; 1 bytes @ 0x7
   961                           
   962                           
   963                           ; 2 bytes @ 0x7
   964     0077                     	ds	1
   965     0078                     ??___lldiv:
   966     0078                     ?___lwmod:	
   967                           ; 1 bytes @ 0x8
   968                           
   969     0078                     Lcd_Set_Cursor_4bits@y:	
   970                           ; 2 bytes @ 0x8
   971                           
   972     0078                     ___lwmod@divisor:	
   973                           ; 1 bytes @ 0x8
   974                           
   975                           
   976                           ; 2 bytes @ 0x8
   977     0078                     	ds	1
   978     0079                     ?___awmod:
   979     0079                     Lcd_Set_Cursor_4bits@temp:	
   980                           ; 2 bytes @ 0x9
   981                           
   982     0079                     leerRTC@R:	
   983                           ; 1 bytes @ 0x9
   984                           
   985     0079                     ___awmod@divisor:	
   986                           ; 1 bytes @ 0x9
   987                           
   988     0079                     ___lldiv@quotient:	
   989                           ; 2 bytes @ 0x9
   990                           
   991                           
   992                           ; 4 bytes @ 0x9
   993     0079                     	ds	1
   994     007A                     leerRTC@DATO:
   995     007A                     Lcd_Write_String_4bits@i:	
   996                           ; 1 bytes @ 0xA
   997                           
   998     007A                     ___lwmod@dividend:	
   999                           ; 2 bytes @ 0xA
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0xA
  1003     007A                     	ds	1
  1004     007B                     ___awmod@dividend:
  1005                           
  1006                           ; 2 bytes @ 0xB
  1007     007B                     	ds	1
  1008     007C                     ??___lwmod:
  1009                           
  1010                           ; 1 bytes @ 0xC
  1011     007C                     	ds	1
  1012     007D                     ??___awmod:
  1013     007D                     ___lldiv@counter:	
  1014                           ; 1 bytes @ 0xD
  1015                           
  1016     007D                     ___lwmod@counter:	
  1017                           ; 1 bytes @ 0xD
  1018                           
  1019                           
  1020                           ; 1 bytes @ 0xD
  1021     007D                     	ds	1
  1022     007E                     ??_setup:
  1023                           
  1024                           	psect	cstackBANK0
  1025     0020                     __pcstackBANK0:	
  1026                           ; 1 bytes @ 0xE
  1027                           
  1028     0020                     ?_I2C_Master_Init:
  1029     0020                     ?_sprintf:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032     0020                     sprintf@f:	
  1033                           ; 2 bytes @ 0x0
  1034                           
  1035     0020                     ___awmod@counter:	
  1036                           ; 1 bytes @ 0x0
  1037                           
  1038     0020                     I2C_Master_Init@c:	
  1039                           ; 1 bytes @ 0x0
  1040                           
  1041                           
  1042                           ; 4 bytes @ 0x0
  1043     0020                     	ds	1
  1044     0021                     ___awmod@sign:
  1045                           
  1046                           ; 1 bytes @ 0x1
  1047     0021                     	ds	2
  1048     0023                     ??_sprintf:
  1049                           
  1050                           ; 1 bytes @ 0x3
  1051     0023                     	ds	1
  1052     0024                     ??_I2C_Master_Init:
  1053                           
  1054                           ; 1 bytes @ 0x4
  1055     0024                     	ds	2
  1056     0026                     sprintf@flag:
  1057                           
  1058                           ; 1 bytes @ 0x6
  1059     0026                     	ds	1
  1060     0027                     sprintf@ap:
  1061                           
  1062                           ; 1 bytes @ 0x7
  1063     0027                     	ds	1
  1064     0028                     sprintf@val:
  1065                           
  1066                           ; 2 bytes @ 0x8
  1067     0028                     	ds	2
  1068     002A                     sprintf@prec:
  1069                           
  1070                           ; 1 bytes @ 0xA
  1071     002A                     	ds	1
  1072     002B                     sprintf@c:
  1073                           
  1074                           ; 1 bytes @ 0xB
  1075     002B                     	ds	1
  1076     002C                     sprintf@sp:
  1077                           
  1078                           ; 1 bytes @ 0xC
  1079     002C                     	ds	1
  1080     002D                     ??_main:
  1081                           
  1082                           ; 1 bytes @ 0xD
  1083     002D                     	ds	3
  1084                           
  1085                           	psect	maintext
  1086     02D0                     __pmaintext:	
  1087 ;;
  1088 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1089 ;;
  1090 ;; *************** function _main *****************
  1091 ;; Defined at:
  1092 ;;		line 61 in file "main_M.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;		None
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  stringAO        9   54[BANK3 ] unsigned char [9]
  1097 ;;  ADC1            9   45[BANK3 ] unsigned char [9]
  1098 ;;  stringMES       9   36[BANK3 ] unsigned char [9]
  1099 ;;  stringDIA       9   27[BANK3 ] unsigned char [9]
  1100 ;;  stringHOR       9   18[BANK3 ] unsigned char [9]
  1101 ;;  stringMIN       9    9[BANK3 ] unsigned char [9]
  1102 ;;  stringSEG       9    0[BANK3 ] unsigned char [9]
  1103 ;;  AO              1   88[BANK3 ] unsigned char 
  1104 ;;  VAL1            1   87[BANK3 ] unsigned char 
  1105 ;;  MES             1   86[BANK3 ] unsigned char 
  1106 ;;  DIA             1   85[BANK3 ] unsigned char 
  1107 ;;  HOR             1   84[BANK3 ] unsigned char 
  1108 ;;  MIN             1   83[BANK3 ] unsigned char 
  1109 ;;  SEG             1   82[BANK3 ] unsigned char 
  1110 ;;  AO_UM           1   81[BANK3 ] unsigned char 
  1111 ;;  AO_C            1   80[BANK3 ] unsigned char 
  1112 ;;  AO_D            1   79[BANK3 ] unsigned char 
  1113 ;;  AO_U            1   78[BANK3 ] unsigned char 
  1114 ;;  MES_D           1   77[BANK3 ] unsigned char 
  1115 ;;  MES_U           1   76[BANK3 ] unsigned char 
  1116 ;;  DIA_D           1   75[BANK3 ] unsigned char 
  1117 ;;  DIA_U           1   74[BANK3 ] unsigned char 
  1118 ;;  HOR_D           1   73[BANK3 ] unsigned char 
  1119 ;;  HOR_U           1   72[BANK3 ] unsigned char 
  1120 ;;  MIN_D           1   71[BANK3 ] unsigned char 
  1121 ;;  MIN_U           1   70[BANK3 ] unsigned char 
  1122 ;;  SEG_D           1   69[BANK3 ] unsigned char 
  1123 ;;  SEG_U           1   68[BANK3 ] unsigned char 
  1124 ;;  VAL1_C          1   67[BANK3 ] unsigned char 
  1125 ;;  VAL1_D          1   66[BANK3 ] unsigned char 
  1126 ;;  VAL1_U          1   65[BANK3 ] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : B00/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         0       0       0      89       0
  1138 ;;      Temps:          0       3       0       0       0
  1139 ;;      Totals:         0       3       0      89       0
  1140 ;;Total ram usage:       92 bytes
  1141 ;; Hardware stack levels required when called: 4
  1142 ;; This function calls:
  1143 ;;		_I2C_Master_Read
  1144 ;;		_I2C_Master_Start
  1145 ;;		_I2C_Master_Stop
  1146 ;;		_I2C_Master_Write
  1147 ;;		_Lcd_Clear_4bits
  1148 ;;		_Lcd_Set_Cursor_4bits
  1149 ;;		_Lcd_Write_String_4bits
  1150 ;;		___awdiv
  1151 ;;		___awmod
  1152 ;;		_leerRTC
  1153 ;;		_setup
  1154 ;;		_sprintf
  1155 ;; This function is called by:
  1156 ;;		Startup code after reset
  1157 ;; This function uses a non-reentrant model
  1158 ;;
  1159                           
  1160     02D0                     _main:	
  1161                           ;psect for function _main
  1162                           
  1163     02D0                     l1732:	
  1164                           ;incstack = 0
  1165                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1166                           
  1167                           
  1168                           ;main_M.c: 63:     setup();
  1169     02D0  120A  118A  200A  120A  118A  	fcall	_setup
  1170                           
  1171                           ;main_M.c: 65:     uint8_t VAL1, VAL1_U, VAL1_D, VAL1_C;;main_M.c: 66:     uint8_t SEG, 
      +                          SEG_U, SEG_D;;main_M.c: 67:     uint8_t MIN, MIN_U, MIN_D;;main_M.c: 68:     uint8_t HOR
      +                          , HOR_U, HOR_D;;main_M.c: 69:     uint8_t DIA, DIA_U, DIA_D;;main_M.c: 70:     uint8_t M
      +                          ES, MES_U, MES_D;;main_M.c: 71:     uint8_t AO, AO_U, AO_D, AO_C, AO_UM;;main_M.c: 73:  
      +                             char ADC1[9];;main_M.c: 74:     char stringSEG[9];;main_M.c: 75:     char stringMIN[9
      +                          ];;main_M.c: 76:     char stringHOR[9];;main_M.c: 77:     char stringDIA[9];
  1172     02D5  120A  158A  25E7  120A  118A  	fcall	_Lcd_Clear_4bits
  1173                           
  1174                           ;main_M.c: 82:     Lcd_Set_Cursor_4bits(1,1);
  1175     02DA  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1176     02DB  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1177     02DC  3001               	movlw	1
  1178     02DD  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1179     02E2                     l1734:
  1180                           
  1181                           ;main_M.c: 83:     Lcd_Write_String_4bits("S1:");
  1182     02E2  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1183     02E3  00F5               	movwf	Lcd_Write_String_4bits@a
  1184     02E4  3080               	movlw	128
  1185     02E5  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1186     02E6  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1187     02EB                     l1736:
  1188                           
  1189                           ;main_M.c: 84:     Lcd_Set_Cursor_4bits(1,9);
  1190     02EB  3009               	movlw	9
  1191     02EC  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1192     02ED  3001               	movlw	1
  1193     02EE  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1194                           
  1195                           ;main_M.c: 85:     Lcd_Write_String_4bits(":");
  1196     02F3  300D               	movlw	(low (((STR_1+2)-__stringbase)| (0+32768)))& (0+255)
  1197     02F4  00F5               	movwf	Lcd_Write_String_4bits@a
  1198     02F5  3080               	movlw	128
  1199     02F6  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1200     02F7  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1201     02FC                     l1738:
  1202                           
  1203                           ;main_M.c: 86:     Lcd_Set_Cursor_4bits(1,12);
  1204     02FC  300C               	movlw	12
  1205     02FD  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1206     02FE  3001               	movlw	1
  1207     02FF  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1208     0304                     l1740:
  1209                           
  1210                           ;main_M.c: 87:     Lcd_Write_String_4bits(":");
  1211     0304  300D               	movlw	(low (((STR_1+2)-__stringbase)| (0+32768)))& (0+255)
  1212     0305  00F5               	movwf	Lcd_Write_String_4bits@a
  1213     0306  3080               	movlw	128
  1214     0307  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1215     0308  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1216                           
  1217                           ;main_M.c: 88:     Lcd_Set_Cursor_4bits(2,9);
  1218     030D  3009               	movlw	9
  1219     030E  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1220     030F  3002               	movlw	2
  1221     0310  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1222     0315                     l1742:
  1223                           
  1224                           ;main_M.c: 89:     Lcd_Write_String_4bits("/");
  1225     0315  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1226     0316  00F5               	movwf	Lcd_Write_String_4bits@a
  1227     0317  3080               	movlw	128
  1228     0318  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1229     0319  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1230     031E                     l1744:
  1231                           
  1232                           ;main_M.c: 90:     Lcd_Set_Cursor_4bits(2,12);
  1233     031E  300C               	movlw	12
  1234     031F  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1235     0320  3002               	movlw	2
  1236     0321  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1237                           
  1238                           ;main_M.c: 91:     Lcd_Write_String_4bits("/");
  1239     0326  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1240     0327  00F5               	movwf	Lcd_Write_String_4bits@a
  1241     0328  3080               	movlw	128
  1242     0329  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1243     032A  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1244     032F                     l1746:
  1245                           
  1246                           ;main_M.c: 94:     {;main_M.c: 96:         I2C_Master_Start();
  1247     032F  120A  158A  25CB  120A  118A  	fcall	_I2C_Master_Start
  1248     0334                     l1748:
  1249                           
  1250                           ;main_M.c: 97:         I2C_Master_Write(0x11);
  1251     0334  3011               	movlw	17
  1252     0335  00F0               	movwf	I2C_Master_Write@d
  1253     0336  3000               	movlw	0
  1254     0337  00F1               	movwf	I2C_Master_Write@d+1
  1255     0338  120A  158A  25DD  120A  118A  	fcall	_I2C_Master_Write
  1256     033D                     l1750:
  1257                           
  1258                           ;main_M.c: 98:         VAL1 = I2C_Master_Read(0);
  1259     033D  3000               	movlw	0
  1260     033E  00F0               	movwf	I2C_Master_Read@a
  1261     033F  00F1               	movwf	I2C_Master_Read@a+1
  1262     0340  120A  158A  265F  120A  118A  	fcall	_I2C_Master_Read
  1263     0345  0870               	movf	?_I2C_Master_Read,w
  1264     0346  1683               	bsf	3,5	;RP0=1, select bank3
  1265     0347  1703               	bsf	3,6	;RP1=1, select bank3
  1266     0348  00E7               	movwf	main@VAL1^(0+384)
  1267     0349                     l1752:
  1268                           
  1269                           ;main_M.c: 99:         I2C_Master_Stop();
  1270     0349  120A  158A  25D4  120A  118A  	fcall	_I2C_Master_Stop
  1271     034E                     l1754:
  1272                           
  1273                           ;main_M.c: 100:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1274     034E  3003               	movlw	3
  1275     034F  1283               	bcf	3,5	;RP0=0, select bank0
  1276     0350  1303               	bcf	3,6	;RP1=0, select bank0
  1277     0351  00AF               	movwf	??_main+2
  1278     0352  3008               	movlw	8
  1279     0353  00AE               	movwf	??_main+1
  1280     0354  3076               	movlw	118
  1281     0355  00AD               	movwf	??_main
  1282     0356                     u1277:
  1283     0356  0BAD               	decfsz	??_main,f
  1284     0357  2B56               	goto	u1277
  1285     0358  0BAE               	decfsz	??_main+1,f
  1286     0359  2B56               	goto	u1277
  1287     035A  0BAF               	decfsz	??_main+2,f
  1288     035B  2B56               	goto	u1277
  1289     035C  0000               	nop
  1290     035D                     l1756:
  1291                           
  1292                           ;main_M.c: 102:         VAL1_C = (VAL1/100);
  1293     035D  3064               	movlw	100
  1294     035E  00F0               	movwf	___awdiv@divisor
  1295     035F  3000               	movlw	0
  1296     0360  00F1               	movwf	___awdiv@divisor+1
  1297     0361  1683               	bsf	3,5	;RP0=1, select bank3
  1298     0362  1703               	bsf	3,6	;RP1=1, select bank3
  1299     0363  0867               	movf	main@VAL1^(0+384),w
  1300     0364  1283               	bcf	3,5	;RP0=0, select bank0
  1301     0365  1303               	bcf	3,6	;RP1=0, select bank0
  1302     0366  00AD               	movwf	??_main
  1303     0367  01AE               	clrf	??_main+1
  1304     0368  082D               	movf	??_main,w
  1305     0369  00F2               	movwf	___awdiv@dividend
  1306     036A  082E               	movf	??_main+1,w
  1307     036B  00F3               	movwf	___awdiv@dividend+1
  1308     036C  120A  118A  21A8  120A  118A  	fcall	___awdiv
  1309     0371  0870               	movf	?___awdiv,w
  1310     0372  1683               	bsf	3,5	;RP0=1, select bank3
  1311     0373  1703               	bsf	3,6	;RP1=1, select bank3
  1312     0374  00D3               	movwf	main@VAL1_C^(0+384)
  1313     0375                     l1758:
  1314                           
  1315                           ;main_M.c: 103:         VAL1_D = (VAL1/10)%10;
  1316     0375  300A               	movlw	10
  1317     0376  00F9               	movwf	___awmod@divisor
  1318     0377  3000               	movlw	0
  1319     0378  00FA               	movwf	___awmod@divisor+1
  1320     0379  300A               	movlw	10
  1321     037A  00F0               	movwf	___awdiv@divisor
  1322     037B  3000               	movlw	0
  1323     037C  00F1               	movwf	___awdiv@divisor+1
  1324     037D  0867               	movf	main@VAL1^(0+384),w
  1325     037E  1283               	bcf	3,5	;RP0=0, select bank0
  1326     037F  1303               	bcf	3,6	;RP1=0, select bank0
  1327     0380  00AD               	movwf	??_main
  1328     0381  01AE               	clrf	??_main+1
  1329     0382  082D               	movf	??_main,w
  1330     0383  00F2               	movwf	___awdiv@dividend
  1331     0384  082E               	movf	??_main+1,w
  1332     0385  00F3               	movwf	___awdiv@dividend+1
  1333     0386  120A  118A  21A8  120A  118A  	fcall	___awdiv
  1334     038B  0871               	movf	?___awdiv+1,w
  1335     038C  00FC               	movwf	___awmod@dividend+1
  1336     038D  0870               	movf	?___awdiv,w
  1337     038E  00FB               	movwf	___awmod@dividend
  1338     038F  120A  118A  202F  120A  118A  	fcall	___awmod
  1339     0394  0879               	movf	?___awmod,w
  1340     0395  1683               	bsf	3,5	;RP0=1, select bank3
  1341     0396  1703               	bsf	3,6	;RP1=1, select bank3
  1342     0397  00D2               	movwf	main@VAL1_D^(0+384)
  1343     0398                     l1760:
  1344                           
  1345                           ;main_M.c: 104:         VAL1_U = VAL1%10;
  1346     0398  300A               	movlw	10
  1347     0399  00F9               	movwf	___awmod@divisor
  1348     039A  3000               	movlw	0
  1349     039B  00FA               	movwf	___awmod@divisor+1
  1350     039C  0867               	movf	main@VAL1^(0+384),w
  1351     039D  1283               	bcf	3,5	;RP0=0, select bank0
  1352     039E  1303               	bcf	3,6	;RP1=0, select bank0
  1353     039F  00AD               	movwf	??_main
  1354     03A0  01AE               	clrf	??_main+1
  1355     03A1  082D               	movf	??_main,w
  1356     03A2  00FB               	movwf	___awmod@dividend
  1357     03A3  082E               	movf	??_main+1,w
  1358     03A4  00FC               	movwf	___awmod@dividend+1
  1359     03A5  120A  118A  202F  120A  118A  	fcall	___awmod
  1360     03AA  0879               	movf	?___awmod,w
  1361     03AB  1683               	bsf	3,5	;RP0=1, select bank3
  1362     03AC  1703               	bsf	3,6	;RP1=1, select bank3
  1363     03AD  00D1               	movwf	main@VAL1_U^(0+384)
  1364     03AE                     l1762:
  1365                           
  1366                           ;main_M.c: 106:         sprintf(ADC1, "%u", VAL1_C);
  1367     03AE  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1368     03AF  1283               	bcf	3,5	;RP0=0, select bank0
  1369     03B0  1303               	bcf	3,6	;RP1=0, select bank0
  1370     03B1  00A0               	movwf	sprintf@f
  1371     03B2  1683               	bsf	3,5	;RP0=1, select bank3
  1372     03B3  1703               	bsf	3,6	;RP1=1, select bank3
  1373     03B4  0853               	movf	main@VAL1_C^(0+384),w
  1374     03B5  1283               	bcf	3,5	;RP0=0, select bank0
  1375     03B6  1303               	bcf	3,6	;RP1=0, select bank0
  1376     03B7  00AD               	movwf	??_main
  1377     03B8  01AE               	clrf	??_main+1
  1378     03B9  082D               	movf	??_main,w
  1379     03BA  00A1               	movwf	?_sprintf+1
  1380     03BB  082E               	movf	??_main+1,w
  1381     03BC  00A2               	movwf	?_sprintf+2
  1382     03BD  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1383     03BE  120A  118A  220F  120A  118A  	fcall	_sprintf
  1384     03C3                     l1764:
  1385                           
  1386                           ;main_M.c: 107:         Lcd_Set_Cursor_4bits(2,1);
  1387     03C3  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1388     03C4  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1389     03C5  3002               	movlw	2
  1390     03C6  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1391     03CB                     l1766:
  1392                           
  1393                           ;main_M.c: 108:         Lcd_Write_String_4bits(ADC1);
  1394     03CB  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1395     03CC  00F5               	movwf	Lcd_Write_String_4bits@a
  1396     03CD  3001               	movlw	1
  1397     03CE  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1398     03CF  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1399     03D4                     l1768:
  1400                           
  1401                           ;main_M.c: 110:         sprintf(ADC1, "%u", VAL1_D);
  1402     03D4  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1403     03D5  1283               	bcf	3,5	;RP0=0, select bank0
  1404     03D6  1303               	bcf	3,6	;RP1=0, select bank0
  1405     03D7  00A0               	movwf	sprintf@f
  1406     03D8  1683               	bsf	3,5	;RP0=1, select bank3
  1407     03D9  1703               	bsf	3,6	;RP1=1, select bank3
  1408     03DA  0852               	movf	main@VAL1_D^(0+384),w
  1409     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1410     03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1411     03DD  00AD               	movwf	??_main
  1412     03DE  01AE               	clrf	??_main+1
  1413     03DF  082D               	movf	??_main,w
  1414     03E0  00A1               	movwf	?_sprintf+1
  1415     03E1  082E               	movf	??_main+1,w
  1416     03E2  00A2               	movwf	?_sprintf+2
  1417     03E3  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1418     03E4  120A  118A  220F  120A  118A  	fcall	_sprintf
  1419     03E9                     l1770:
  1420                           
  1421                           ;main_M.c: 111:         Lcd_Set_Cursor_4bits(2,2);
  1422     03E9  3002               	movlw	2
  1423     03EA  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1424     03EB  3002               	movlw	2
  1425     03EC  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1426     03F1                     l1772:
  1427                           
  1428                           ;main_M.c: 112:         Lcd_Write_String_4bits(ADC1);
  1429     03F1  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1430     03F2  00F5               	movwf	Lcd_Write_String_4bits@a
  1431     03F3  3001               	movlw	1
  1432     03F4  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1433     03F5  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1434     03FA                     l1774:
  1435                           
  1436                           ;main_M.c: 114:         sprintf(ADC1, "%u", VAL1_U);
  1437     03FA  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1438     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  1439     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  1440     03FD  00A0               	movwf	sprintf@f
  1441     03FE  1683               	bsf	3,5	;RP0=1, select bank3
  1442     03FF  1703               	bsf	3,6	;RP1=1, select bank3
  1443     0400  0851               	movf	main@VAL1_U^(0+384),w
  1444     0401  1283               	bcf	3,5	;RP0=0, select bank0
  1445     0402  1303               	bcf	3,6	;RP1=0, select bank0
  1446     0403  00AD               	movwf	??_main
  1447     0404  01AE               	clrf	??_main+1
  1448     0405  082D               	movf	??_main,w
  1449     0406  00A1               	movwf	?_sprintf+1
  1450     0407  082E               	movf	??_main+1,w
  1451     0408  00A2               	movwf	?_sprintf+2
  1452     0409  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1453     040A  120A  118A  220F  120A  118A  	fcall	_sprintf
  1454     040F                     l1776:
  1455                           
  1456                           ;main_M.c: 115:         Lcd_Set_Cursor_4bits(2,3);
  1457     040F  3003               	movlw	3
  1458     0410  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1459     0411  3002               	movlw	2
  1460     0412  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1461     0417                     l1778:
  1462                           
  1463                           ;main_M.c: 116:         Lcd_Write_String_4bits(ADC1);
  1464     0417  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1465     0418  00F5               	movwf	Lcd_Write_String_4bits@a
  1466     0419  3001               	movlw	1
  1467     041A  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1468     041B  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1469     0420                     l1780:
  1470                           
  1471                           ;main_M.c: 118:         SEG = leerRTC(REG_SEG);
  1472     0420  3000               	movlw	0
  1473     0421  120A  118A  208A  120A  118A  	fcall	_leerRTC
  1474     0426  1683               	bsf	3,5	;RP0=1, select bank3
  1475     0427  1703               	bsf	3,6	;RP1=1, select bank3
  1476     0428  00E2               	movwf	main@SEG^(0+384)
  1477     0429                     l1782:
  1478                           
  1479                           ;main_M.c: 120:         SEG_D = (SEG/10)%10;
  1480     0429  300A               	movlw	10
  1481     042A  00F9               	movwf	___awmod@divisor
  1482     042B  3000               	movlw	0
  1483     042C  00FA               	movwf	___awmod@divisor+1
  1484     042D  300A               	movlw	10
  1485     042E  00F0               	movwf	___awdiv@divisor
  1486     042F  3000               	movlw	0
  1487     0430  00F1               	movwf	___awdiv@divisor+1
  1488     0431  0862               	movf	main@SEG^(0+384),w
  1489     0432  1283               	bcf	3,5	;RP0=0, select bank0
  1490     0433  1303               	bcf	3,6	;RP1=0, select bank0
  1491     0434  00AD               	movwf	??_main
  1492     0435  01AE               	clrf	??_main+1
  1493     0436  082D               	movf	??_main,w
  1494     0437  00F2               	movwf	___awdiv@dividend
  1495     0438  082E               	movf	??_main+1,w
  1496     0439  00F3               	movwf	___awdiv@dividend+1
  1497     043A  120A  118A  21A8  120A  118A  	fcall	___awdiv
  1498     043F  0871               	movf	?___awdiv+1,w
  1499     0440  00FC               	movwf	___awmod@dividend+1
  1500     0441  0870               	movf	?___awdiv,w
  1501     0442  00FB               	movwf	___awmod@dividend
  1502     0443  120A  118A  202F  120A  118A  	fcall	___awmod
  1503     0448  0879               	movf	?___awmod,w
  1504     0449  1683               	bsf	3,5	;RP0=1, select bank3
  1505     044A  1703               	bsf	3,6	;RP1=1, select bank3
  1506     044B  00D5               	movwf	main@SEG_D^(0+384)
  1507     044C                     l1784:
  1508                           
  1509                           ;main_M.c: 121:         SEG_U = SEG%10;
  1510     044C  300A               	movlw	10
  1511     044D  00F9               	movwf	___awmod@divisor
  1512     044E  3000               	movlw	0
  1513     044F  00FA               	movwf	___awmod@divisor+1
  1514     0450  0862               	movf	main@SEG^(0+384),w
  1515     0451  1283               	bcf	3,5	;RP0=0, select bank0
  1516     0452  1303               	bcf	3,6	;RP1=0, select bank0
  1517     0453  00AD               	movwf	??_main
  1518     0454  01AE               	clrf	??_main+1
  1519     0455  082D               	movf	??_main,w
  1520     0456  00FB               	movwf	___awmod@dividend
  1521     0457  082E               	movf	??_main+1,w
  1522     0458  00FC               	movwf	___awmod@dividend+1
  1523     0459  120A  118A  202F  120A  118A  	fcall	___awmod
  1524     045E  0879               	movf	?___awmod,w
  1525     045F  1683               	bsf	3,5	;RP0=1, select bank3
  1526     0460  1703               	bsf	3,6	;RP1=1, select bank3
  1527     0461  00D4               	movwf	main@SEG_U^(0+384)
  1528     0462                     l1786:
  1529                           
  1530                           ;main_M.c: 123:         sprintf(stringSEG, "%u", SEG_D);
  1531     0462  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1532     0463  1283               	bcf	3,5	;RP0=0, select bank0
  1533     0464  1303               	bcf	3,6	;RP1=0, select bank0
  1534     0465  00A0               	movwf	sprintf@f
  1535     0466  1683               	bsf	3,5	;RP0=1, select bank3
  1536     0467  1703               	bsf	3,6	;RP1=1, select bank3
  1537     0468  0855               	movf	main@SEG_D^(0+384),w
  1538     0469  1283               	bcf	3,5	;RP0=0, select bank0
  1539     046A  1303               	bcf	3,6	;RP1=0, select bank0
  1540     046B  00AD               	movwf	??_main
  1541     046C  01AE               	clrf	??_main+1
  1542     046D  082D               	movf	??_main,w
  1543     046E  00A1               	movwf	?_sprintf+1
  1544     046F  082E               	movf	??_main+1,w
  1545     0470  00A2               	movwf	?_sprintf+2
  1546     0471  3090               	movlw	(low (main@stringSEG| (0+256)))& (0+255)
  1547     0472  120A  118A  220F  120A  118A  	fcall	_sprintf
  1548     0477                     l1788:
  1549                           
  1550                           ;main_M.c: 124:         Lcd_Set_Cursor_4bits(1,13);
  1551     0477  300D               	movlw	13
  1552     0478  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1553     0479  3001               	movlw	1
  1554     047A  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1555     047F                     l1790:
  1556                           
  1557                           ;main_M.c: 125:         Lcd_Write_String_4bits(stringSEG);
  1558     047F  3090               	movlw	(low (main@stringSEG| (0+256)))& (0+255)
  1559     0480  00F5               	movwf	Lcd_Write_String_4bits@a
  1560     0481  3001               	movlw	1
  1561     0482  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1562     0483  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1563     0488                     l1792:
  1564                           
  1565                           ;main_M.c: 127:         sprintf(stringSEG, "%u", SEG_U);
  1566     0488  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1567     0489  1283               	bcf	3,5	;RP0=0, select bank0
  1568     048A  1303               	bcf	3,6	;RP1=0, select bank0
  1569     048B  00A0               	movwf	sprintf@f
  1570     048C  1683               	bsf	3,5	;RP0=1, select bank3
  1571     048D  1703               	bsf	3,6	;RP1=1, select bank3
  1572     048E  0854               	movf	main@SEG_U^(0+384),w
  1573     048F  1283               	bcf	3,5	;RP0=0, select bank0
  1574     0490  1303               	bcf	3,6	;RP1=0, select bank0
  1575     0491  00AD               	movwf	??_main
  1576     0492  01AE               	clrf	??_main+1
  1577     0493  082D               	movf	??_main,w
  1578     0494  00A1               	movwf	?_sprintf+1
  1579     0495  082E               	movf	??_main+1,w
  1580     0496  00A2               	movwf	?_sprintf+2
  1581     0497  3090               	movlw	(low (main@stringSEG| (0+256)))& (0+255)
  1582     0498  120A  118A  220F  120A  118A  	fcall	_sprintf
  1583     049D                     l1794:
  1584                           
  1585                           ;main_M.c: 128:         Lcd_Set_Cursor_4bits(1,14);
  1586     049D  300E               	movlw	14
  1587     049E  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1588     049F  3001               	movlw	1
  1589     04A0  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1590     04A5                     l1796:
  1591                           
  1592                           ;main_M.c: 129:         Lcd_Write_String_4bits(stringSEG);
  1593     04A5  3090               	movlw	(low (main@stringSEG| (0+256)))& (0+255)
  1594     04A6  00F5               	movwf	Lcd_Write_String_4bits@a
  1595     04A7  3001               	movlw	1
  1596     04A8  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1597     04A9  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1598     04AE                     l1798:
  1599                           
  1600                           ;main_M.c: 131:         MIN = leerRTC(REG_MIN);
  1601     04AE  3001               	movlw	1
  1602     04AF  120A  118A  208A  120A  118A  	fcall	_leerRTC
  1603     04B4  1683               	bsf	3,5	;RP0=1, select bank3
  1604     04B5  1703               	bsf	3,6	;RP1=1, select bank3
  1605     04B6  00E3               	movwf	main@MIN^(0+384)
  1606     04B7                     l1800:
  1607                           
  1608                           ;main_M.c: 133:         MIN_D = (MIN/10)%10;
  1609     04B7  300A               	movlw	10
  1610     04B8  00F9               	movwf	___awmod@divisor
  1611     04B9  3000               	movlw	0
  1612     04BA  00FA               	movwf	___awmod@divisor+1
  1613     04BB  300A               	movlw	10
  1614     04BC  00F0               	movwf	___awdiv@divisor
  1615     04BD  3000               	movlw	0
  1616     04BE  00F1               	movwf	___awdiv@divisor+1
  1617     04BF  0863               	movf	main@MIN^(0+384),w
  1618     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  1619     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  1620     04C2  00AD               	movwf	??_main
  1621     04C3  01AE               	clrf	??_main+1
  1622     04C4  082D               	movf	??_main,w
  1623     04C5  00F2               	movwf	___awdiv@dividend
  1624     04C6  082E               	movf	??_main+1,w
  1625     04C7  00F3               	movwf	___awdiv@dividend+1
  1626     04C8  120A  118A  21A8  120A  118A  	fcall	___awdiv
  1627     04CD  0871               	movf	?___awdiv+1,w
  1628     04CE  00FC               	movwf	___awmod@dividend+1
  1629     04CF  0870               	movf	?___awdiv,w
  1630     04D0  00FB               	movwf	___awmod@dividend
  1631     04D1  120A  118A  202F  120A  118A  	fcall	___awmod
  1632     04D6  0879               	movf	?___awmod,w
  1633     04D7  1683               	bsf	3,5	;RP0=1, select bank3
  1634     04D8  1703               	bsf	3,6	;RP1=1, select bank3
  1635     04D9  00D7               	movwf	main@MIN_D^(0+384)
  1636     04DA                     l1802:
  1637                           
  1638                           ;main_M.c: 134:         MIN_U = MIN%10;
  1639     04DA  300A               	movlw	10
  1640     04DB  00F9               	movwf	___awmod@divisor
  1641     04DC  3000               	movlw	0
  1642     04DD  00FA               	movwf	___awmod@divisor+1
  1643     04DE  0863               	movf	main@MIN^(0+384),w
  1644     04DF  1283               	bcf	3,5	;RP0=0, select bank0
  1645     04E0  1303               	bcf	3,6	;RP1=0, select bank0
  1646     04E1  00AD               	movwf	??_main
  1647     04E2  01AE               	clrf	??_main+1
  1648     04E3  082D               	movf	??_main,w
  1649     04E4  00FB               	movwf	___awmod@dividend
  1650     04E5  082E               	movf	??_main+1,w
  1651     04E6  00FC               	movwf	___awmod@dividend+1
  1652     04E7  120A  118A  202F  120A  118A  	fcall	___awmod
  1653     04EC  0879               	movf	?___awmod,w
  1654     04ED  1683               	bsf	3,5	;RP0=1, select bank3
  1655     04EE  1703               	bsf	3,6	;RP1=1, select bank3
  1656     04EF  00D6               	movwf	main@MIN_U^(0+384)
  1657     04F0                     l1804:
  1658                           
  1659                           ;main_M.c: 136:         sprintf(stringMIN, "%u", MIN_D);
  1660     04F0  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1661     04F1  1283               	bcf	3,5	;RP0=0, select bank0
  1662     04F2  1303               	bcf	3,6	;RP1=0, select bank0
  1663     04F3  00A0               	movwf	sprintf@f
  1664     04F4  1683               	bsf	3,5	;RP0=1, select bank3
  1665     04F5  1703               	bsf	3,6	;RP1=1, select bank3
  1666     04F6  0857               	movf	main@MIN_D^(0+384),w
  1667     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1668     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1669     04F9  00AD               	movwf	??_main
  1670     04FA  01AE               	clrf	??_main+1
  1671     04FB  082D               	movf	??_main,w
  1672     04FC  00A1               	movwf	?_sprintf+1
  1673     04FD  082E               	movf	??_main+1,w
  1674     04FE  00A2               	movwf	?_sprintf+2
  1675     04FF  3099               	movlw	(low (main@stringMIN| (0+256)))& (0+255)
  1676     0500  120A  118A  220F  120A  118A  	fcall	_sprintf
  1677     0505                     l1806:
  1678                           
  1679                           ;main_M.c: 137:         Lcd_Set_Cursor_4bits(1,10);
  1680     0505  300A               	movlw	10
  1681     0506  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1682     0507  3001               	movlw	1
  1683     0508  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1684     050D                     l1808:
  1685                           
  1686                           ;main_M.c: 138:         Lcd_Write_String_4bits(stringMIN);
  1687     050D  3099               	movlw	(low (main@stringMIN| (0+256)))& (0+255)
  1688     050E  00F5               	movwf	Lcd_Write_String_4bits@a
  1689     050F  3001               	movlw	1
  1690     0510  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1691     0511  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1692     0516                     l1810:
  1693                           
  1694                           ;main_M.c: 140:         sprintf(stringMIN, "%u", MIN_U);
  1695     0516  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1696     0517  1283               	bcf	3,5	;RP0=0, select bank0
  1697     0518  1303               	bcf	3,6	;RP1=0, select bank0
  1698     0519  00A0               	movwf	sprintf@f
  1699     051A  1683               	bsf	3,5	;RP0=1, select bank3
  1700     051B  1703               	bsf	3,6	;RP1=1, select bank3
  1701     051C  0856               	movf	main@MIN_U^(0+384),w
  1702     051D  1283               	bcf	3,5	;RP0=0, select bank0
  1703     051E  1303               	bcf	3,6	;RP1=0, select bank0
  1704     051F  00AD               	movwf	??_main
  1705     0520  01AE               	clrf	??_main+1
  1706     0521  082D               	movf	??_main,w
  1707     0522  00A1               	movwf	?_sprintf+1
  1708     0523  082E               	movf	??_main+1,w
  1709     0524  00A2               	movwf	?_sprintf+2
  1710     0525  3099               	movlw	(low (main@stringMIN| (0+256)))& (0+255)
  1711     0526  120A  118A  220F  120A  118A  	fcall	_sprintf
  1712     052B                     l1812:
  1713                           
  1714                           ;main_M.c: 141:         Lcd_Set_Cursor_4bits(1,11);
  1715     052B  300B               	movlw	11
  1716     052C  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1717     052D  3001               	movlw	1
  1718     052E  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1719     0533                     l1814:
  1720                           
  1721                           ;main_M.c: 142:         Lcd_Write_String_4bits(stringMIN);
  1722     0533  3099               	movlw	(low (main@stringMIN| (0+256)))& (0+255)
  1723     0534  00F5               	movwf	Lcd_Write_String_4bits@a
  1724     0535  3001               	movlw	1
  1725     0536  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1726     0537  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1727     053C                     l1816:
  1728                           
  1729                           ;main_M.c: 144:         HOR = leerRTC(REG_HOR);
  1730     053C  3002               	movlw	2
  1731     053D  120A  118A  208A  120A  118A  	fcall	_leerRTC
  1732     0542  1683               	bsf	3,5	;RP0=1, select bank3
  1733     0543  1703               	bsf	3,6	;RP1=1, select bank3
  1734     0544  00E4               	movwf	main@HOR^(0+384)
  1735     0545                     l1818:
  1736                           
  1737                           ;main_M.c: 146:         HOR_D = (HOR/10)%10;
  1738     0545  300A               	movlw	10
  1739     0546  00F9               	movwf	___awmod@divisor
  1740     0547  3000               	movlw	0
  1741     0548  00FA               	movwf	___awmod@divisor+1
  1742     0549  300A               	movlw	10
  1743     054A  00F0               	movwf	___awdiv@divisor
  1744     054B  3000               	movlw	0
  1745     054C  00F1               	movwf	___awdiv@divisor+1
  1746     054D  0864               	movf	main@HOR^(0+384),w
  1747     054E  1283               	bcf	3,5	;RP0=0, select bank0
  1748     054F  1303               	bcf	3,6	;RP1=0, select bank0
  1749     0550  00AD               	movwf	??_main
  1750     0551  01AE               	clrf	??_main+1
  1751     0552  082D               	movf	??_main,w
  1752     0553  00F2               	movwf	___awdiv@dividend
  1753     0554  082E               	movf	??_main+1,w
  1754     0555  00F3               	movwf	___awdiv@dividend+1
  1755     0556  120A  118A  21A8  120A  118A  	fcall	___awdiv
  1756     055B  0871               	movf	?___awdiv+1,w
  1757     055C  00FC               	movwf	___awmod@dividend+1
  1758     055D  0870               	movf	?___awdiv,w
  1759     055E  00FB               	movwf	___awmod@dividend
  1760     055F  120A  118A  202F  120A  118A  	fcall	___awmod
  1761     0564  0879               	movf	?___awmod,w
  1762     0565  1683               	bsf	3,5	;RP0=1, select bank3
  1763     0566  1703               	bsf	3,6	;RP1=1, select bank3
  1764     0567  00D9               	movwf	main@HOR_D^(0+384)
  1765     0568                     l1820:
  1766                           
  1767                           ;main_M.c: 147:         HOR_U = HOR%10;
  1768     0568  300A               	movlw	10
  1769     0569  00F9               	movwf	___awmod@divisor
  1770     056A  3000               	movlw	0
  1771     056B  00FA               	movwf	___awmod@divisor+1
  1772     056C  0864               	movf	main@HOR^(0+384),w
  1773     056D  1283               	bcf	3,5	;RP0=0, select bank0
  1774     056E  1303               	bcf	3,6	;RP1=0, select bank0
  1775     056F  00AD               	movwf	??_main
  1776     0570  01AE               	clrf	??_main+1
  1777     0571  082D               	movf	??_main,w
  1778     0572  00FB               	movwf	___awmod@dividend
  1779     0573  082E               	movf	??_main+1,w
  1780     0574  00FC               	movwf	___awmod@dividend+1
  1781     0575  120A  118A  202F  120A  118A  	fcall	___awmod
  1782     057A  0879               	movf	?___awmod,w
  1783     057B  1683               	bsf	3,5	;RP0=1, select bank3
  1784     057C  1703               	bsf	3,6	;RP1=1, select bank3
  1785     057D  00D8               	movwf	main@HOR_U^(0+384)
  1786     057E                     l1822:
  1787                           
  1788                           ;main_M.c: 149:         sprintf(stringHOR, "%u", HOR_D);
  1789     057E  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1790     057F  1283               	bcf	3,5	;RP0=0, select bank0
  1791     0580  1303               	bcf	3,6	;RP1=0, select bank0
  1792     0581  00A0               	movwf	sprintf@f
  1793     0582  1683               	bsf	3,5	;RP0=1, select bank3
  1794     0583  1703               	bsf	3,6	;RP1=1, select bank3
  1795     0584  0859               	movf	main@HOR_D^(0+384),w
  1796     0585  1283               	bcf	3,5	;RP0=0, select bank0
  1797     0586  1303               	bcf	3,6	;RP1=0, select bank0
  1798     0587  00AD               	movwf	??_main
  1799     0588  01AE               	clrf	??_main+1
  1800     0589  082D               	movf	??_main,w
  1801     058A  00A1               	movwf	?_sprintf+1
  1802     058B  082E               	movf	??_main+1,w
  1803     058C  00A2               	movwf	?_sprintf+2
  1804     058D  30A2               	movlw	(low (main@stringHOR| (0+256)))& (0+255)
  1805     058E  120A  118A  220F  120A  118A  	fcall	_sprintf
  1806     0593                     l1824:
  1807                           
  1808                           ;main_M.c: 150:         Lcd_Set_Cursor_4bits(1,7);
  1809     0593  3007               	movlw	7
  1810     0594  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1811     0595  3001               	movlw	1
  1812     0596  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1813     059B                     l1826:
  1814                           
  1815                           ;main_M.c: 151:         Lcd_Write_String_4bits(stringHOR);
  1816     059B  30A2               	movlw	(low (main@stringHOR| (0+256)))& (0+255)
  1817     059C  00F5               	movwf	Lcd_Write_String_4bits@a
  1818     059D  3001               	movlw	1
  1819     059E  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1820     059F  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1821     05A4                     l1828:
  1822                           
  1823                           ;main_M.c: 153:         sprintf(stringHOR, "%u", HOR_U);
  1824     05A4  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1825     05A5  1283               	bcf	3,5	;RP0=0, select bank0
  1826     05A6  1303               	bcf	3,6	;RP1=0, select bank0
  1827     05A7  00A0               	movwf	sprintf@f
  1828     05A8  1683               	bsf	3,5	;RP0=1, select bank3
  1829     05A9  1703               	bsf	3,6	;RP1=1, select bank3
  1830     05AA  0858               	movf	main@HOR_U^(0+384),w
  1831     05AB  1283               	bcf	3,5	;RP0=0, select bank0
  1832     05AC  1303               	bcf	3,6	;RP1=0, select bank0
  1833     05AD  00AD               	movwf	??_main
  1834     05AE  01AE               	clrf	??_main+1
  1835     05AF  082D               	movf	??_main,w
  1836     05B0  00A1               	movwf	?_sprintf+1
  1837     05B1  082E               	movf	??_main+1,w
  1838     05B2  00A2               	movwf	?_sprintf+2
  1839     05B3  30A2               	movlw	(low (main@stringHOR| (0+256)))& (0+255)
  1840     05B4  120A  118A  220F  120A  118A  	fcall	_sprintf
  1841     05B9                     l1830:
  1842                           
  1843                           ;main_M.c: 154:         Lcd_Set_Cursor_4bits(1,8);
  1844     05B9  3008               	movlw	8
  1845     05BA  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1846     05BB  3001               	movlw	1
  1847     05BC  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1848     05C1                     l1832:
  1849                           
  1850                           ;main_M.c: 155:         Lcd_Write_String_4bits(stringHOR);
  1851     05C1  30A2               	movlw	(low (main@stringHOR| (0+256)))& (0+255)
  1852     05C2  00F5               	movwf	Lcd_Write_String_4bits@a
  1853     05C3  3001               	movlw	1
  1854     05C4  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1855     05C5  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1856     05CA                     l1834:
  1857                           
  1858                           ;main_M.c: 157:         DIA = leerRTC(REG_DIA);
  1859     05CA  3003               	movlw	3
  1860     05CB  120A  118A  208A  120A  118A  	fcall	_leerRTC
  1861     05D0  1683               	bsf	3,5	;RP0=1, select bank3
  1862     05D1  1703               	bsf	3,6	;RP1=1, select bank3
  1863     05D2  00E5               	movwf	main@DIA^(0+384)
  1864     05D3                     l1836:
  1865                           
  1866                           ;main_M.c: 159:         DIA_D = (DIA/10)%10;
  1867     05D3  300A               	movlw	10
  1868     05D4  00F9               	movwf	___awmod@divisor
  1869     05D5  3000               	movlw	0
  1870     05D6  00FA               	movwf	___awmod@divisor+1
  1871     05D7  300A               	movlw	10
  1872     05D8  00F0               	movwf	___awdiv@divisor
  1873     05D9  3000               	movlw	0
  1874     05DA  00F1               	movwf	___awdiv@divisor+1
  1875     05DB  0865               	movf	main@DIA^(0+384),w
  1876     05DC  1283               	bcf	3,5	;RP0=0, select bank0
  1877     05DD  1303               	bcf	3,6	;RP1=0, select bank0
  1878     05DE  00AD               	movwf	??_main
  1879     05DF  01AE               	clrf	??_main+1
  1880     05E0  082D               	movf	??_main,w
  1881     05E1  00F2               	movwf	___awdiv@dividend
  1882     05E2  082E               	movf	??_main+1,w
  1883     05E3  00F3               	movwf	___awdiv@dividend+1
  1884     05E4  120A  118A  21A8  120A  118A  	fcall	___awdiv
  1885     05E9  0871               	movf	?___awdiv+1,w
  1886     05EA  00FC               	movwf	___awmod@dividend+1
  1887     05EB  0870               	movf	?___awdiv,w
  1888     05EC  00FB               	movwf	___awmod@dividend
  1889     05ED  120A  118A  202F  120A  118A  	fcall	___awmod
  1890     05F2  0879               	movf	?___awmod,w
  1891     05F3  1683               	bsf	3,5	;RP0=1, select bank3
  1892     05F4  1703               	bsf	3,6	;RP1=1, select bank3
  1893     05F5  00DB               	movwf	main@DIA_D^(0+384)
  1894     05F6                     l1838:
  1895                           
  1896                           ;main_M.c: 160:         DIA_U = DIA%10;
  1897     05F6  300A               	movlw	10
  1898     05F7  00F9               	movwf	___awmod@divisor
  1899     05F8  3000               	movlw	0
  1900     05F9  00FA               	movwf	___awmod@divisor+1
  1901     05FA  0865               	movf	main@DIA^(0+384),w
  1902     05FB  1283               	bcf	3,5	;RP0=0, select bank0
  1903     05FC  1303               	bcf	3,6	;RP1=0, select bank0
  1904     05FD  00AD               	movwf	??_main
  1905     05FE  01AE               	clrf	??_main+1
  1906     05FF  082D               	movf	??_main,w
  1907     0600  00FB               	movwf	___awmod@dividend
  1908     0601  082E               	movf	??_main+1,w
  1909     0602  00FC               	movwf	___awmod@dividend+1
  1910     0603  120A  118A  202F  120A  118A  	fcall	___awmod
  1911     0608  0879               	movf	?___awmod,w
  1912     0609  1683               	bsf	3,5	;RP0=1, select bank3
  1913     060A  1703               	bsf	3,6	;RP1=1, select bank3
  1914     060B  00DA               	movwf	main@DIA_U^(0+384)
  1915     060C                     l1840:
  1916                           
  1917                           ;main_M.c: 162:         sprintf(stringDIA, "%u", DIA_D);
  1918     060C  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1919     060D  1283               	bcf	3,5	;RP0=0, select bank0
  1920     060E  1303               	bcf	3,6	;RP1=0, select bank0
  1921     060F  00A0               	movwf	sprintf@f
  1922     0610  1683               	bsf	3,5	;RP0=1, select bank3
  1923     0611  1703               	bsf	3,6	;RP1=1, select bank3
  1924     0612  085B               	movf	main@DIA_D^(0+384),w
  1925     0613  1283               	bcf	3,5	;RP0=0, select bank0
  1926     0614  1303               	bcf	3,6	;RP1=0, select bank0
  1927     0615  00AD               	movwf	??_main
  1928     0616  01AE               	clrf	??_main+1
  1929     0617  082D               	movf	??_main,w
  1930     0618  00A1               	movwf	?_sprintf+1
  1931     0619  082E               	movf	??_main+1,w
  1932     061A  00A2               	movwf	?_sprintf+2
  1933     061B  30AB               	movlw	(low (main@stringDIA| (0+256)))& (0+255)
  1934     061C  120A  118A  220F  120A  118A  	fcall	_sprintf
  1935     0621                     l1842:
  1936                           
  1937                           ;main_M.c: 163:         Lcd_Set_Cursor_4bits(2,7);
  1938     0621  3007               	movlw	7
  1939     0622  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1940     0623  3002               	movlw	2
  1941     0624  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1942     0629                     l1844:
  1943                           
  1944                           ;main_M.c: 164:         Lcd_Write_String_4bits(stringDIA);
  1945     0629  30AB               	movlw	(low (main@stringDIA| (0+256)))& (0+255)
  1946     062A  00F5               	movwf	Lcd_Write_String_4bits@a
  1947     062B  3001               	movlw	1
  1948     062C  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1949     062D  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1950     0632                     l1846:
  1951                           
  1952                           ;main_M.c: 166:         sprintf(stringDIA, "%u", DIA_U);
  1953     0632  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1954     0633  1283               	bcf	3,5	;RP0=0, select bank0
  1955     0634  1303               	bcf	3,6	;RP1=0, select bank0
  1956     0635  00A0               	movwf	sprintf@f
  1957     0636  1683               	bsf	3,5	;RP0=1, select bank3
  1958     0637  1703               	bsf	3,6	;RP1=1, select bank3
  1959     0638  085A               	movf	main@DIA_U^(0+384),w
  1960     0639  1283               	bcf	3,5	;RP0=0, select bank0
  1961     063A  1303               	bcf	3,6	;RP1=0, select bank0
  1962     063B  00AD               	movwf	??_main
  1963     063C  01AE               	clrf	??_main+1
  1964     063D  082D               	movf	??_main,w
  1965     063E  00A1               	movwf	?_sprintf+1
  1966     063F  082E               	movf	??_main+1,w
  1967     0640  00A2               	movwf	?_sprintf+2
  1968     0641  30AB               	movlw	(low (main@stringDIA| (0+256)))& (0+255)
  1969     0642  120A  118A  220F  120A  118A  	fcall	_sprintf
  1970     0647                     l1848:
  1971                           
  1972                           ;main_M.c: 167:         Lcd_Set_Cursor_4bits(2,8);
  1973     0647  3008               	movlw	8
  1974     0648  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1975     0649  3002               	movlw	2
  1976     064A  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1977     064F                     l1850:
  1978                           
  1979                           ;main_M.c: 168:         Lcd_Write_String_4bits(stringDIA);
  1980     064F  30AB               	movlw	(low (main@stringDIA| (0+256)))& (0+255)
  1981     0650  00F5               	movwf	Lcd_Write_String_4bits@a
  1982     0651  3001               	movlw	1
  1983     0652  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1984     0653  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  1985     0658                     l1852:
  1986                           
  1987                           ;main_M.c: 170:         MES = leerRTC(REG_MES);
  1988     0658  3004               	movlw	4
  1989     0659  120A  118A  208A  120A  118A  	fcall	_leerRTC
  1990     065E  1683               	bsf	3,5	;RP0=1, select bank3
  1991     065F  1703               	bsf	3,6	;RP1=1, select bank3
  1992     0660  00E6               	movwf	main@MES^(0+384)
  1993     0661                     l1854:
  1994                           
  1995                           ;main_M.c: 172:         MES_D = (MES/10)%10;
  1996     0661  300A               	movlw	10
  1997     0662  00F9               	movwf	___awmod@divisor
  1998     0663  3000               	movlw	0
  1999     0664  00FA               	movwf	___awmod@divisor+1
  2000     0665  300A               	movlw	10
  2001     0666  00F0               	movwf	___awdiv@divisor
  2002     0667  3000               	movlw	0
  2003     0668  00F1               	movwf	___awdiv@divisor+1
  2004     0669  0866               	movf	main@MES^(0+384),w
  2005     066A  1283               	bcf	3,5	;RP0=0, select bank0
  2006     066B  1303               	bcf	3,6	;RP1=0, select bank0
  2007     066C  00AD               	movwf	??_main
  2008     066D  01AE               	clrf	??_main+1
  2009     066E  082D               	movf	??_main,w
  2010     066F  00F2               	movwf	___awdiv@dividend
  2011     0670  082E               	movf	??_main+1,w
  2012     0671  00F3               	movwf	___awdiv@dividend+1
  2013     0672  120A  118A  21A8  120A  118A  	fcall	___awdiv
  2014     0677  0871               	movf	?___awdiv+1,w
  2015     0678  00FC               	movwf	___awmod@dividend+1
  2016     0679  0870               	movf	?___awdiv,w
  2017     067A  00FB               	movwf	___awmod@dividend
  2018     067B  120A  118A  202F  120A  118A  	fcall	___awmod
  2019     0680  0879               	movf	?___awmod,w
  2020     0681  1683               	bsf	3,5	;RP0=1, select bank3
  2021     0682  1703               	bsf	3,6	;RP1=1, select bank3
  2022     0683  00DD               	movwf	main@MES_D^(0+384)
  2023     0684                     l1856:
  2024                           
  2025                           ;main_M.c: 173:         MES_U = MES%10;
  2026     0684  300A               	movlw	10
  2027     0685  00F9               	movwf	___awmod@divisor
  2028     0686  3000               	movlw	0
  2029     0687  00FA               	movwf	___awmod@divisor+1
  2030     0688  0866               	movf	main@MES^(0+384),w
  2031     0689  1283               	bcf	3,5	;RP0=0, select bank0
  2032     068A  1303               	bcf	3,6	;RP1=0, select bank0
  2033     068B  00AD               	movwf	??_main
  2034     068C  01AE               	clrf	??_main+1
  2035     068D  082D               	movf	??_main,w
  2036     068E  00FB               	movwf	___awmod@dividend
  2037     068F  082E               	movf	??_main+1,w
  2038     0690  00FC               	movwf	___awmod@dividend+1
  2039     0691  120A  118A  202F  120A  118A  	fcall	___awmod
  2040     0696  0879               	movf	?___awmod,w
  2041     0697  1683               	bsf	3,5	;RP0=1, select bank3
  2042     0698  1703               	bsf	3,6	;RP1=1, select bank3
  2043     0699  00DC               	movwf	main@MES_U^(0+384)
  2044     069A                     l1858:
  2045                           
  2046                           ;main_M.c: 175:         sprintf(stringMES, "%u", MES_D);
  2047     069A  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2048     069B  1283               	bcf	3,5	;RP0=0, select bank0
  2049     069C  1303               	bcf	3,6	;RP1=0, select bank0
  2050     069D  00A0               	movwf	sprintf@f
  2051     069E  1683               	bsf	3,5	;RP0=1, select bank3
  2052     069F  1703               	bsf	3,6	;RP1=1, select bank3
  2053     06A0  085D               	movf	main@MES_D^(0+384),w
  2054     06A1  1283               	bcf	3,5	;RP0=0, select bank0
  2055     06A2  1303               	bcf	3,6	;RP1=0, select bank0
  2056     06A3  00AD               	movwf	??_main
  2057     06A4  01AE               	clrf	??_main+1
  2058     06A5  082D               	movf	??_main,w
  2059     06A6  00A1               	movwf	?_sprintf+1
  2060     06A7  082E               	movf	??_main+1,w
  2061     06A8  00A2               	movwf	?_sprintf+2
  2062     06A9  30B4               	movlw	(low (main@stringMES| (0+256)))& (0+255)
  2063     06AA  120A  118A  220F  120A  118A  	fcall	_sprintf
  2064     06AF                     l1860:
  2065                           
  2066                           ;main_M.c: 176:         Lcd_Set_Cursor_4bits(2,10);
  2067     06AF  300A               	movlw	10
  2068     06B0  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2069     06B1  3002               	movlw	2
  2070     06B2  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2071     06B7                     l1862:
  2072                           
  2073                           ;main_M.c: 177:         Lcd_Write_String_4bits(stringMES);
  2074     06B7  30B4               	movlw	(low (main@stringMES| (0+256)))& (0+255)
  2075     06B8  00F5               	movwf	Lcd_Write_String_4bits@a
  2076     06B9  3001               	movlw	1
  2077     06BA  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2078     06BB  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  2079     06C0                     l1864:
  2080                           
  2081                           ;main_M.c: 179:         sprintf(stringMES, "%u", MES_U);
  2082     06C0  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2083     06C1  1283               	bcf	3,5	;RP0=0, select bank0
  2084     06C2  1303               	bcf	3,6	;RP1=0, select bank0
  2085     06C3  00A0               	movwf	sprintf@f
  2086     06C4  1683               	bsf	3,5	;RP0=1, select bank3
  2087     06C5  1703               	bsf	3,6	;RP1=1, select bank3
  2088     06C6  085C               	movf	main@MES_U^(0+384),w
  2089     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  2090     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  2091     06C9  00AD               	movwf	??_main
  2092     06CA  01AE               	clrf	??_main+1
  2093     06CB  082D               	movf	??_main,w
  2094     06CC  00A1               	movwf	?_sprintf+1
  2095     06CD  082E               	movf	??_main+1,w
  2096     06CE  00A2               	movwf	?_sprintf+2
  2097     06CF  30B4               	movlw	(low (main@stringMES| (0+256)))& (0+255)
  2098     06D0  120A  118A  220F  120A  118A  	fcall	_sprintf
  2099     06D5                     l1866:
  2100                           
  2101                           ;main_M.c: 180:         Lcd_Set_Cursor_4bits(2,11);
  2102     06D5  300B               	movlw	11
  2103     06D6  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2104     06D7  3002               	movlw	2
  2105     06D8  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2106     06DD                     l1868:
  2107                           
  2108                           ;main_M.c: 181:         Lcd_Write_String_4bits(stringMES);
  2109     06DD  30B4               	movlw	(low (main@stringMES| (0+256)))& (0+255)
  2110     06DE  00F5               	movwf	Lcd_Write_String_4bits@a
  2111     06DF  3001               	movlw	1
  2112     06E0  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2113     06E1  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  2114     06E6                     l1870:
  2115                           
  2116                           ;main_M.c: 183:         AO = leerRTC(REG_A);
  2117     06E6  3005               	movlw	5
  2118     06E7  120A  118A  208A  120A  118A  	fcall	_leerRTC
  2119     06EC  1683               	bsf	3,5	;RP0=1, select bank3
  2120     06ED  1703               	bsf	3,6	;RP1=1, select bank3
  2121     06EE  00E8               	movwf	main@AO^(0+384)
  2122     06EF                     l1872:
  2123                           
  2124                           ;main_M.c: 185:         AO_UM = 2;
  2125     06EF  3002               	movlw	2
  2126     06F0  00E1               	movwf	main@AO_UM^(0+384)
  2127     06F1                     l1874:
  2128                           
  2129                           ;main_M.c: 186:         AO_C = ((AO/10)/10)%10;
  2130     06F1  300A               	movlw	10
  2131     06F2  00F0               	movwf	___awdiv@divisor
  2132     06F3  3000               	movlw	0
  2133     06F4  00F1               	movwf	___awdiv@divisor+1
  2134     06F5  0868               	movf	main@AO^(0+384),w
  2135     06F6  1283               	bcf	3,5	;RP0=0, select bank0
  2136     06F7  1303               	bcf	3,6	;RP1=0, select bank0
  2137     06F8  00AD               	movwf	??_main
  2138     06F9  01AE               	clrf	??_main+1
  2139     06FA  082D               	movf	??_main,w
  2140     06FB  00F2               	movwf	___awdiv@dividend
  2141     06FC  082E               	movf	??_main+1,w
  2142     06FD  00F3               	movwf	___awdiv@dividend+1
  2143     06FE  120A  118A  21A8  120A  118A  	fcall	___awdiv
  2144     0703  0871               	movf	?___awdiv+1,w
  2145     0704  1683               	bsf	3,5	;RP0=1, select bank3
  2146     0705  1703               	bsf	3,6	;RP1=1, select bank3
  2147     0706  00D0               	movwf	(_main$1005+1)^(0+384)
  2148     0707  0870               	movf	?___awdiv,w
  2149     0708  00CF               	movwf	_main$1005^(0+384)
  2150     0709                     l1876:
  2151                           
  2152                           ;main_M.c: 186:         AO_C = ((AO/10)/10)%10;
  2153     0709  300A               	movlw	10
  2154     070A  00F9               	movwf	___awmod@divisor
  2155     070B  3000               	movlw	0
  2156     070C  00FA               	movwf	___awmod@divisor+1
  2157     070D  300A               	movlw	10
  2158     070E  00F0               	movwf	___awdiv@divisor
  2159     070F  3000               	movlw	0
  2160     0710  00F1               	movwf	___awdiv@divisor+1
  2161     0711  0850               	movf	(_main$1005+1)^(0+384),w
  2162     0712  00F3               	movwf	___awdiv@dividend+1
  2163     0713  084F               	movf	_main$1005^(0+384),w
  2164     0714  00F2               	movwf	___awdiv@dividend
  2165     0715  120A  118A  21A8  120A  118A  	fcall	___awdiv
  2166     071A  0871               	movf	?___awdiv+1,w
  2167     071B  00FC               	movwf	___awmod@dividend+1
  2168     071C  0870               	movf	?___awdiv,w
  2169     071D  00FB               	movwf	___awmod@dividend
  2170     071E  120A  118A  202F  120A  118A  	fcall	___awmod
  2171     0723  0879               	movf	?___awmod,w
  2172     0724  1683               	bsf	3,5	;RP0=1, select bank3
  2173     0725  1703               	bsf	3,6	;RP1=1, select bank3
  2174     0726  00E0               	movwf	main@AO_C^(0+384)
  2175     0727                     l1878:
  2176                           
  2177                           ;main_M.c: 187:         AO_D = (AO/10)%10;
  2178     0727  300A               	movlw	10
  2179     0728  00F9               	movwf	___awmod@divisor
  2180     0729  3000               	movlw	0
  2181     072A  00FA               	movwf	___awmod@divisor+1
  2182     072B  300A               	movlw	10
  2183     072C  00F0               	movwf	___awdiv@divisor
  2184     072D  3000               	movlw	0
  2185     072E  00F1               	movwf	___awdiv@divisor+1
  2186     072F  0868               	movf	main@AO^(0+384),w
  2187     0730  1283               	bcf	3,5	;RP0=0, select bank0
  2188     0731  1303               	bcf	3,6	;RP1=0, select bank0
  2189     0732  00AD               	movwf	??_main
  2190     0733  01AE               	clrf	??_main+1
  2191     0734  082D               	movf	??_main,w
  2192     0735  00F2               	movwf	___awdiv@dividend
  2193     0736  082E               	movf	??_main+1,w
  2194     0737  00F3               	movwf	___awdiv@dividend+1
  2195     0738  120A  118A  21A8  120A  118A  	fcall	___awdiv
  2196     073D  0871               	movf	?___awdiv+1,w
  2197     073E  00FC               	movwf	___awmod@dividend+1
  2198     073F  0870               	movf	?___awdiv,w
  2199     0740  00FB               	movwf	___awmod@dividend
  2200     0741  120A  118A  202F  120A  118A  	fcall	___awmod
  2201     0746  0879               	movf	?___awmod,w
  2202     0747  1683               	bsf	3,5	;RP0=1, select bank3
  2203     0748  1703               	bsf	3,6	;RP1=1, select bank3
  2204     0749  00DF               	movwf	main@AO_D^(0+384)
  2205     074A                     l1880:
  2206                           
  2207                           ;main_M.c: 188:         AO_U = AO%10;
  2208     074A  300A               	movlw	10
  2209     074B  00F9               	movwf	___awmod@divisor
  2210     074C  3000               	movlw	0
  2211     074D  00FA               	movwf	___awmod@divisor+1
  2212     074E  0868               	movf	main@AO^(0+384),w
  2213     074F  1283               	bcf	3,5	;RP0=0, select bank0
  2214     0750  1303               	bcf	3,6	;RP1=0, select bank0
  2215     0751  00AD               	movwf	??_main
  2216     0752  01AE               	clrf	??_main+1
  2217     0753  082D               	movf	??_main,w
  2218     0754  00FB               	movwf	___awmod@dividend
  2219     0755  082E               	movf	??_main+1,w
  2220     0756  00FC               	movwf	___awmod@dividend+1
  2221     0757  120A  118A  202F  120A  118A  	fcall	___awmod
  2222     075C  0879               	movf	?___awmod,w
  2223     075D  1683               	bsf	3,5	;RP0=1, select bank3
  2224     075E  1703               	bsf	3,6	;RP1=1, select bank3
  2225     075F  00DE               	movwf	main@AO_U^(0+384)
  2226                           
  2227                           ;main_M.c: 190:         sprintf(stringAO, "%u", AO_UM);
  2228     0760  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2229     0761  1283               	bcf	3,5	;RP0=0, select bank0
  2230     0762  1303               	bcf	3,6	;RP1=0, select bank0
  2231     0763  00A0               	movwf	sprintf@f
  2232     0764  1683               	bsf	3,5	;RP0=1, select bank3
  2233     0765  1703               	bsf	3,6	;RP1=1, select bank3
  2234     0766  0861               	movf	main@AO_UM^(0+384),w
  2235     0767  1283               	bcf	3,5	;RP0=0, select bank0
  2236     0768  1303               	bcf	3,6	;RP1=0, select bank0
  2237     0769  00AD               	movwf	??_main
  2238     076A  01AE               	clrf	??_main+1
  2239     076B  082D               	movf	??_main,w
  2240     076C  00A1               	movwf	?_sprintf+1
  2241     076D  082E               	movf	??_main+1,w
  2242     076E  00A2               	movwf	?_sprintf+2
  2243     076F  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2244     0770  120A  118A  220F  120A  118A  	fcall	_sprintf
  2245     0775                     l1882:
  2246                           
  2247                           ;main_M.c: 191:         Lcd_Set_Cursor_4bits(2,13);
  2248     0775  300D               	movlw	13
  2249     0776  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2250     0777  3002               	movlw	2
  2251     0778  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2252     077D                     l1884:
  2253                           
  2254                           ;main_M.c: 192:         Lcd_Write_String_4bits(stringAO);
  2255     077D  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2256     077E  00F5               	movwf	Lcd_Write_String_4bits@a
  2257     077F  3001               	movlw	1
  2258     0780  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2259     0781  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  2260     0786                     l1886:
  2261                           
  2262                           ;main_M.c: 194:         sprintf(stringAO, "%u", AO_C);
  2263     0786  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2264     0787  1283               	bcf	3,5	;RP0=0, select bank0
  2265     0788  1303               	bcf	3,6	;RP1=0, select bank0
  2266     0789  00A0               	movwf	sprintf@f
  2267     078A  1683               	bsf	3,5	;RP0=1, select bank3
  2268     078B  1703               	bsf	3,6	;RP1=1, select bank3
  2269     078C  0860               	movf	main@AO_C^(0+384),w
  2270     078D  1283               	bcf	3,5	;RP0=0, select bank0
  2271     078E  1303               	bcf	3,6	;RP1=0, select bank0
  2272     078F  00AD               	movwf	??_main
  2273     0790  01AE               	clrf	??_main+1
  2274     0791  082D               	movf	??_main,w
  2275     0792  00A1               	movwf	?_sprintf+1
  2276     0793  082E               	movf	??_main+1,w
  2277     0794  00A2               	movwf	?_sprintf+2
  2278     0795  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2279     0796  120A  118A  220F  120A  118A  	fcall	_sprintf
  2280     079B                     l1888:
  2281                           
  2282                           ;main_M.c: 195:         Lcd_Set_Cursor_4bits(2,14);
  2283     079B  300E               	movlw	14
  2284     079C  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2285     079D  3002               	movlw	2
  2286     079E  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2287                           
  2288                           ;main_M.c: 196:         Lcd_Write_String_4bits(stringAO);
  2289     07A3  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2290     07A4  00F5               	movwf	Lcd_Write_String_4bits@a
  2291     07A5  3001               	movlw	1
  2292     07A6  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2293     07A7  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  2294                           
  2295                           ;main_M.c: 198:         sprintf(stringAO, "%u", AO_D);
  2296     07AC  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2297     07AD  1283               	bcf	3,5	;RP0=0, select bank0
  2298     07AE  1303               	bcf	3,6	;RP1=0, select bank0
  2299     07AF  00A0               	movwf	sprintf@f
  2300     07B0  1683               	bsf	3,5	;RP0=1, select bank3
  2301     07B1  1703               	bsf	3,6	;RP1=1, select bank3
  2302     07B2  085F               	movf	main@AO_D^(0+384),w
  2303     07B3  1283               	bcf	3,5	;RP0=0, select bank0
  2304     07B4  1303               	bcf	3,6	;RP1=0, select bank0
  2305     07B5  00AD               	movwf	??_main
  2306     07B6  01AE               	clrf	??_main+1
  2307     07B7  082D               	movf	??_main,w
  2308     07B8  00A1               	movwf	?_sprintf+1
  2309     07B9  082E               	movf	??_main+1,w
  2310     07BA  00A2               	movwf	?_sprintf+2
  2311     07BB  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2312     07BC  120A  118A  220F  120A  118A  	fcall	_sprintf
  2313     07C1                     l1890:
  2314                           
  2315                           ;main_M.c: 199:         Lcd_Set_Cursor_4bits(2,15);
  2316     07C1  300F               	movlw	15
  2317     07C2  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2318     07C3  3002               	movlw	2
  2319     07C4  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2320     07C9                     l1892:
  2321                           
  2322                           ;main_M.c: 200:         Lcd_Write_String_4bits(stringAO);
  2323     07C9  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2324     07CA  00F5               	movwf	Lcd_Write_String_4bits@a
  2325     07CB  3001               	movlw	1
  2326     07CC  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2327     07CD  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  2328     07D2                     l1894:
  2329                           
  2330                           ;main_M.c: 202:         sprintf(stringAO, "%u", AO_U);
  2331     07D2  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2332     07D3  1283               	bcf	3,5	;RP0=0, select bank0
  2333     07D4  1303               	bcf	3,6	;RP1=0, select bank0
  2334     07D5  00A0               	movwf	sprintf@f
  2335     07D6  1683               	bsf	3,5	;RP0=1, select bank3
  2336     07D7  1703               	bsf	3,6	;RP1=1, select bank3
  2337     07D8  085E               	movf	main@AO_U^(0+384),w
  2338     07D9  1283               	bcf	3,5	;RP0=0, select bank0
  2339     07DA  1303               	bcf	3,6	;RP1=0, select bank0
  2340     07DB  00AD               	movwf	??_main
  2341     07DC  01AE               	clrf	??_main+1
  2342     07DD  082D               	movf	??_main,w
  2343     07DE  00A1               	movwf	?_sprintf+1
  2344     07DF  082E               	movf	??_main+1,w
  2345     07E0  00A2               	movwf	?_sprintf+2
  2346     07E1  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2347     07E2  120A  118A  220F  120A  118A  	fcall	_sprintf
  2348     07E7                     l1896:
  2349                           
  2350                           ;main_M.c: 203:         Lcd_Set_Cursor_4bits(2,16);
  2351     07E7  3010               	movlw	16
  2352     07E8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  2353     07E9  3002               	movlw	2
  2354     07EA  120A  158A  27BA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2355                           
  2356                           ;main_M.c: 204:         Lcd_Write_String_4bits(stringAO);
  2357     07EF  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2358     07F0  00F5               	movwf	Lcd_Write_String_4bits@a
  2359     07F1  3001               	movlw	1
  2360     07F2  00F6               	movwf	Lcd_Write_String_4bits@a+1
  2361     07F3  120A  158A  2734  120A  118A  	fcall	_Lcd_Write_String_4bits
  2362     07F8  2B2F               	goto	l1746
  2363     07F9  120A  118A  2800   	ljmp	start
  2364     07FC                     __end_of_main:
  2365                           
  2366                           	psect	text1
  2367     020F                     __ptext1:	
  2368 ;; *************** function _sprintf *****************
  2369 ;; Defined at:
  2370 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;  sp              1    wreg     PTR unsigned char 
  2373 ;;		 -> main@stringAO(9), main@stringMES(9), main@stringDIA(9), main@stringHOR(9), 
  2374 ;;		 -> main@stringMIN(9), main@stringSEG(9), main@ADC1(9), 
  2375 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2376 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(3), 
  2377 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(3), 
  2378 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(3), 
  2379 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  2380 ;;		 -> STR_6(3), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  sp              1   12[BANK0 ] PTR unsigned char 
  2383 ;;		 -> main@stringAO(9), main@stringMES(9), main@stringDIA(9), main@stringHOR(9), 
  2384 ;;		 -> main@stringMIN(9), main@stringSEG(9), main@ADC1(9), 
  2385 ;;  tmpval          4    0        struct .
  2386 ;;  val             2    8[BANK0 ] unsigned int 
  2387 ;;  cp              2    0        PTR const unsigned char 
  2388 ;;  len             2    0        unsigned int 
  2389 ;;  c               1   11[BANK0 ] unsigned char 
  2390 ;;  prec            1   10[BANK0 ] char 
  2391 ;;  ap              1    7[BANK0 ] PTR void [1]
  2392 ;;		 -> ?_sprintf(2), 
  2393 ;;  flag            1    6[BANK0 ] unsigned char 
  2394 ;; Return value:  Size  Location     Type
  2395 ;;                  2    0[BANK0 ] int 
  2396 ;; Registers used:
  2397 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2398 ;; Tracked objects:
  2399 ;;		On entry : 0/0
  2400 ;;		On exit  : 0/0
  2401 ;;		Unchanged: 0/0
  2402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2403 ;;      Params:         0       3       0       0       0
  2404 ;;      Locals:         0       7       0       0       0
  2405 ;;      Temps:          0       3       0       0       0
  2406 ;;      Totals:         0      13       0       0       0
  2407 ;;Total ram usage:       13 bytes
  2408 ;; Hardware stack levels used: 1
  2409 ;; Hardware stack levels required when called: 1
  2410 ;; This function calls:
  2411 ;;		___lwdiv
  2412 ;;		___lwmod
  2413 ;; This function is called by:
  2414 ;;		_main
  2415 ;; This function uses a non-reentrant model
  2416 ;;
  2417                           
  2418     020F                     _sprintf:	
  2419                           ;psect for function _sprintf
  2420                           
  2421                           
  2422                           ;incstack = 0
  2423                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2424                           ;sprintf@sp stored from wreg
  2425     020F  1283               	bcf	3,5	;RP0=0, select bank0
  2426     0210  1303               	bcf	3,6	;RP1=0, select bank0
  2427     0211  00AC               	movwf	sprintf@sp
  2428     0212                     l1586:
  2429                           
  2430                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2431     0212  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2432     0213  00A7               	movwf	sprintf@ap
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2435     0214  2ABB               	goto	l1628
  2436     0215                     l1588:
  2437                           
  2438                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2439     0215  3025               	movlw	37
  2440     0216  062B               	xorwf	sprintf@c,w
  2441     0217  1903               	btfsc	3,2
  2442     0218  2A1A               	goto	u1021
  2443     0219  2A1B               	goto	u1020
  2444     021A                     u1021:
  2445     021A  2A25               	goto	l1594
  2446     021B                     u1020:
  2447     021B                     l1590:
  2448                           
  2449                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2450     021B  082C               	movf	sprintf@sp,w
  2451     021C  0084               	movwf	4
  2452     021D  082B               	movf	sprintf@c,w
  2453     021E  1783               	bsf	3,7	;select IRP bank2
  2454     021F  0080               	movwf	0
  2455     0220                     l1592:
  2456     0220  3001               	movlw	1
  2457     0221  00A3               	movwf	??_sprintf
  2458     0222  0823               	movf	??_sprintf,w
  2459     0223  07AC               	addwf	sprintf@sp,f
  2460                           
  2461                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2462     0224  2ABB               	goto	l1628
  2463     0225                     l1594:
  2464                           
  2465                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2466     0225  01A6               	clrf	sprintf@flag
  2467                           
  2468                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2469     0226  2A2C               	goto	l1600
  2470     0227                     l1596:
  2471                           
  2472                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2473     0227  30C0               	movlw	192
  2474     0228  00A3               	movwf	??_sprintf
  2475     0229  0823               	movf	??_sprintf,w
  2476     022A  04A6               	iorwf	sprintf@flag,f
  2477                           
  2478                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2479     022B  2A46               	goto	l1602
  2480     022C                     l1600:
  2481     022C  3001               	movlw	1
  2482     022D  07A0               	addwf	sprintf@f,f
  2483     022E  30FF               	movlw	-1
  2484     022F  0720               	addwf	sprintf@f,w
  2485     0230  0084               	movwf	4
  2486     0231  120A  158A  200A  120A  118A  	fcall	stringdir
  2487     0236  00AB               	movwf	sprintf@c
  2488     0237  00A3               	movwf	??_sprintf
  2489     0238  01A4               	clrf	??_sprintf+1
  2490                           
  2491                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2492                           ; Switch size 1, requested type "simple"
  2493                           ; Number of cases is 1, Range of values is 0 to 0
  2494                           ; switch strategies available:
  2495                           ; Name         Instructions Cycles
  2496                           ; simple_byte            4     3 (average)
  2497                           ; direct_byte           11     8 (fixed)
  2498                           ; jumptable            260     6 (fixed)
  2499                           ;	Chosen strategy is simple_byte
  2500     0239  0824               	movf	??_sprintf+1,w
  2501     023A  3A00               	xorlw	0	; case 0
  2502     023B  1903               	skipnz
  2503     023C  2A3E               	goto	l1918
  2504     023D  2ABB               	goto	l1628
  2505     023E                     l1918:
  2506                           
  2507                           ; Switch size 1, requested type "simple"
  2508                           ; Number of cases is 2, Range of values is 0 to 117
  2509                           ; switch strategies available:
  2510                           ; Name         Instructions Cycles
  2511                           ; simple_byte            7     4 (average)
  2512                           ; jumptable            260     6 (fixed)
  2513                           ;	Chosen strategy is simple_byte
  2514     023E  0823               	movf	??_sprintf,w
  2515     023F  3A00               	xorlw	0	; case 0
  2516     0240  1903               	skipnz
  2517     0241  2ACB               	goto	l1630
  2518     0242  3A75               	xorlw	117	; case 117
  2519     0243  1903               	skipnz
  2520     0244  2A27               	goto	l1596
  2521     0245  2ABB               	goto	l1628
  2522     0246                     l1602:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2525     0246  0827               	movf	sprintf@ap,w
  2526     0247  0084               	movwf	4
  2527     0248  1383               	bcf	3,7	;select IRP bank0
  2528     0249  0800               	movf	0,w
  2529     024A  00A8               	movwf	sprintf@val
  2530     024B  0A84               	incf	4,f
  2531     024C  0800               	movf	0,w
  2532     024D  00A9               	movwf	sprintf@val+1
  2533     024E                     l1604:
  2534     024E  3002               	movlw	2
  2535     024F  00A3               	movwf	??_sprintf
  2536     0250  0823               	movf	??_sprintf,w
  2537     0251  07A7               	addwf	sprintf@ap,f
  2538     0252                     l1606:
  2539                           
  2540                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2541     0252  01AB               	clrf	sprintf@c
  2542     0253  0AAB               	incf	sprintf@c,f
  2543     0254                     l1612:
  2544                           
  2545                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2546     0254  082B               	movf	sprintf@c,w
  2547     0255  00A3               	movwf	??_sprintf
  2548     0256  0723               	addwf	??_sprintf,w
  2549     0257  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2550     0258  0084               	movwf	4
  2551     0259  120A  158A  200A  120A  118A  	fcall	stringdir
  2552     025E  00A4               	movwf	??_sprintf+1
  2553     025F  120A  158A  200A  120A  118A  	fcall	stringdir
  2554     0264  00A5               	movwf	??_sprintf+2
  2555     0265  0825               	movf	??_sprintf+2,w
  2556     0266  0229               	subwf	sprintf@val+1,w
  2557     0267  1D03               	skipz
  2558     0268  2A6B               	goto	u1035
  2559     0269  0824               	movf	??_sprintf+1,w
  2560     026A  0228               	subwf	sprintf@val,w
  2561     026B                     u1035:
  2562     026B  1803               	skipnc
  2563     026C  2A6E               	goto	u1031
  2564     026D  2A6F               	goto	u1030
  2565     026E                     u1031:
  2566     026E  2A70               	goto	l1616
  2567     026F                     u1030:
  2568     026F  2A7A               	goto	l1618
  2569     0270                     l1616:
  2570     0270  3001               	movlw	1
  2571     0271  00A3               	movwf	??_sprintf
  2572     0272  0823               	movf	??_sprintf,w
  2573     0273  07AB               	addwf	sprintf@c,f
  2574     0274  3005               	movlw	5
  2575     0275  062B               	xorwf	sprintf@c,w
  2576     0276  1D03               	btfss	3,2
  2577     0277  2A79               	goto	u1041
  2578     0278  2A7A               	goto	u1040
  2579     0279                     u1041:
  2580     0279  2A54               	goto	l1612
  2581     027A                     u1040:
  2582     027A                     l1618:
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2585     027A  082B               	movf	sprintf@c,w
  2586     027B  00AA               	movwf	sprintf@prec
  2587                           
  2588                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2589     027C  2AB2               	goto	l1626
  2590     027D                     l1620:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2593     027D  300A               	movlw	10
  2594     027E  00F8               	movwf	___lwmod@divisor
  2595     027F  3000               	movlw	0
  2596     0280  00F9               	movwf	___lwmod@divisor+1
  2597     0281  082A               	movf	sprintf@prec,w
  2598     0282  00A3               	movwf	??_sprintf
  2599     0283  0723               	addwf	??_sprintf,w
  2600     0284  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2601     0285  0084               	movwf	4
  2602     0286  120A  158A  200A  120A  118A  	fcall	stringdir
  2603     028B  00F0               	movwf	___lwdiv@divisor
  2604     028C  120A  158A  200A  120A  118A  	fcall	stringdir
  2605     0291  00F1               	movwf	___lwdiv@divisor+1
  2606     0292  0829               	movf	sprintf@val+1,w
  2607     0293  00F3               	movwf	___lwdiv@dividend+1
  2608     0294  0828               	movf	sprintf@val,w
  2609     0295  00F2               	movwf	___lwdiv@dividend
  2610     0296  120A  158A  2776  120A  118A  	fcall	___lwdiv
  2611     029B  0871               	movf	?___lwdiv+1,w
  2612     029C  00FB               	movwf	___lwmod@dividend+1
  2613     029D  0870               	movf	?___lwdiv,w
  2614     029E  00FA               	movwf	___lwmod@dividend
  2615     029F  120A  158A  26FA  120A  118A  	fcall	___lwmod
  2616     02A4  0878               	movf	?___lwmod,w
  2617     02A5  3E30               	addlw	48
  2618     02A6  1283               	bcf	3,5	;RP0=0, select bank0
  2619     02A7  1303               	bcf	3,6	;RP1=0, select bank0
  2620     02A8  00AB               	movwf	sprintf@c
  2621     02A9                     l1622:
  2622                           
  2623                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2624     02A9  082C               	movf	sprintf@sp,w
  2625     02AA  0084               	movwf	4
  2626     02AB  082B               	movf	sprintf@c,w
  2627     02AC  1783               	bsf	3,7	;select IRP bank2
  2628     02AD  0080               	movwf	0
  2629     02AE                     l1624:
  2630     02AE  3001               	movlw	1
  2631     02AF  00A3               	movwf	??_sprintf
  2632     02B0  0823               	movf	??_sprintf,w
  2633     02B1  07AC               	addwf	sprintf@sp,f
  2634     02B2                     l1626:
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2637     02B2  30FF               	movlw	255
  2638     02B3  00A3               	movwf	??_sprintf
  2639     02B4  0823               	movf	??_sprintf,w
  2640     02B5  07AA               	addwf	sprintf@prec,f
  2641     02B6  0A2A               	incf	sprintf@prec,w
  2642     02B7  1D03               	btfss	3,2
  2643     02B8  2ABA               	goto	u1051
  2644     02B9  2ABB               	goto	u1050
  2645     02BA                     u1051:
  2646     02BA  2A7D               	goto	l1620
  2647     02BB                     u1050:
  2648     02BB                     l1628:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2651     02BB  3001               	movlw	1
  2652     02BC  07A0               	addwf	sprintf@f,f
  2653     02BD  30FF               	movlw	-1
  2654     02BE  0720               	addwf	sprintf@f,w
  2655     02BF  0084               	movwf	4
  2656     02C0  120A  158A  200A  120A  118A  	fcall	stringdir
  2657     02C5  00AB               	movwf	sprintf@c
  2658     02C6  082B               	movf	sprintf@c,w
  2659     02C7  1D03               	btfss	3,2
  2660     02C8  2ACA               	goto	u1061
  2661     02C9  2ACB               	goto	u1060
  2662     02CA                     u1061:
  2663     02CA  2A15               	goto	l1588
  2664     02CB                     u1060:
  2665     02CB                     l1630:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2668     02CB  082C               	movf	sprintf@sp,w
  2669     02CC  0084               	movwf	4
  2670     02CD  1783               	bsf	3,7	;select IRP bank2
  2671     02CE  0180               	clrf	0
  2672     02CF                     l278:
  2673     02CF  0008               	return
  2674     02D0                     __end_of_sprintf:
  2675                           
  2676                           	psect	text2
  2677     0EFA                     __ptext2:	
  2678 ;; *************** function ___lwmod *****************
  2679 ;; Defined at:
  2680 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2681 ;; Parameters:    Size  Location     Type
  2682 ;;  divisor         2    8[COMMON] unsigned int 
  2683 ;;  dividend        2   10[COMMON] unsigned int 
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;  counter         1   13[COMMON] unsigned char 
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  2    8[COMMON] unsigned int 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2, status,0
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2695 ;;      Params:         4       0       0       0       0
  2696 ;;      Locals:         1       0       0       0       0
  2697 ;;      Temps:          1       0       0       0       0
  2698 ;;      Totals:         6       0       0       0       0
  2699 ;;Total ram usage:        6 bytes
  2700 ;; Hardware stack levels used: 1
  2701 ;; This function calls:
  2702 ;;		Nothing
  2703 ;; This function is called by:
  2704 ;;		_sprintf
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708     0EFA                     ___lwmod:	
  2709                           ;psect for function ___lwmod
  2710                           
  2711     0EFA                     l1526:	
  2712                           ;incstack = 0
  2713                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2714                           
  2715     0EFA  0878               	movf	___lwmod@divisor,w
  2716     0EFB  0479               	iorwf	___lwmod@divisor+1,w
  2717     0EFC  1903               	btfsc	3,2
  2718     0EFD  2EFF               	goto	u891
  2719     0EFE  2F00               	goto	u890
  2720     0EFF                     u891:
  2721     0EFF  2F2F               	goto	l1544
  2722     0F00                     u890:
  2723     0F00                     l1528:
  2724     0F00  01FD               	clrf	___lwmod@counter
  2725     0F01  0AFD               	incf	___lwmod@counter,f
  2726     0F02  2F0E               	goto	l1534
  2727     0F03                     l1530:
  2728     0F03  3001               	movlw	1
  2729     0F04                     u905:
  2730     0F04  1003               	clrc
  2731     0F05  0DF8               	rlf	___lwmod@divisor,f
  2732     0F06  0DF9               	rlf	___lwmod@divisor+1,f
  2733     0F07  3EFF               	addlw	-1
  2734     0F08  1D03               	skipz
  2735     0F09  2F04               	goto	u905
  2736     0F0A                     l1532:
  2737     0F0A  3001               	movlw	1
  2738     0F0B  00FC               	movwf	??___lwmod
  2739     0F0C  087C               	movf	??___lwmod,w
  2740     0F0D  07FD               	addwf	___lwmod@counter,f
  2741     0F0E                     l1534:
  2742     0F0E  1FF9               	btfss	___lwmod@divisor+1,7
  2743     0F0F  2F11               	goto	u911
  2744     0F10  2F12               	goto	u910
  2745     0F11                     u911:
  2746     0F11  2F03               	goto	l1530
  2747     0F12                     u910:
  2748     0F12                     l1536:
  2749     0F12  0879               	movf	___lwmod@divisor+1,w
  2750     0F13  027B               	subwf	___lwmod@dividend+1,w
  2751     0F14  1D03               	skipz
  2752     0F15  2F18               	goto	u925
  2753     0F16  0878               	movf	___lwmod@divisor,w
  2754     0F17  027A               	subwf	___lwmod@dividend,w
  2755     0F18                     u925:
  2756     0F18  1C03               	skipc
  2757     0F19  2F1B               	goto	u921
  2758     0F1A  2F1C               	goto	u920
  2759     0F1B                     u921:
  2760     0F1B  2F22               	goto	l1540
  2761     0F1C                     u920:
  2762     0F1C                     l1538:
  2763     0F1C  0878               	movf	___lwmod@divisor,w
  2764     0F1D  02FA               	subwf	___lwmod@dividend,f
  2765     0F1E  0879               	movf	___lwmod@divisor+1,w
  2766     0F1F  1C03               	skipc
  2767     0F20  03FB               	decf	___lwmod@dividend+1,f
  2768     0F21  02FB               	subwf	___lwmod@dividend+1,f
  2769     0F22                     l1540:
  2770     0F22  3001               	movlw	1
  2771     0F23                     u935:
  2772     0F23  1003               	clrc
  2773     0F24  0CF9               	rrf	___lwmod@divisor+1,f
  2774     0F25  0CF8               	rrf	___lwmod@divisor,f
  2775     0F26  3EFF               	addlw	-1
  2776     0F27  1D03               	skipz
  2777     0F28  2F23               	goto	u935
  2778     0F29                     l1542:
  2779     0F29  3001               	movlw	1
  2780     0F2A  02FD               	subwf	___lwmod@counter,f
  2781     0F2B  1D03               	btfss	3,2
  2782     0F2C  2F2E               	goto	u941
  2783     0F2D  2F2F               	goto	u940
  2784     0F2E                     u941:
  2785     0F2E  2F12               	goto	l1536
  2786     0F2F                     u940:
  2787     0F2F                     l1544:
  2788     0F2F  087B               	movf	___lwmod@dividend+1,w
  2789     0F30  00F9               	movwf	?___lwmod+1
  2790     0F31  087A               	movf	___lwmod@dividend,w
  2791     0F32  00F8               	movwf	?___lwmod
  2792     0F33                     l564:
  2793     0F33  0008               	return
  2794     0F34                     __end_of___lwmod:
  2795                           
  2796                           	psect	text3
  2797     0F76                     __ptext3:	
  2798 ;; *************** function ___lwdiv *****************
  2799 ;; Defined at:
  2800 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  divisor         2    0[COMMON] unsigned int 
  2803 ;;  dividend        2    2[COMMON] unsigned int 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  quotient        2    5[COMMON] unsigned int 
  2806 ;;  counter         1    7[COMMON] unsigned char 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  2    0[COMMON] unsigned int 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2816 ;;      Params:         4       0       0       0       0
  2817 ;;      Locals:         3       0       0       0       0
  2818 ;;      Temps:          1       0       0       0       0
  2819 ;;      Totals:         8       0       0       0       0
  2820 ;;Total ram usage:        8 bytes
  2821 ;; Hardware stack levels used: 1
  2822 ;; This function calls:
  2823 ;;		Nothing
  2824 ;; This function is called by:
  2825 ;;		_sprintf
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829     0F76                     ___lwdiv:	
  2830                           ;psect for function ___lwdiv
  2831                           
  2832     0F76                     l1500:	
  2833                           ;incstack = 0
  2834                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2835                           
  2836     0F76  01F5               	clrf	___lwdiv@quotient
  2837     0F77  01F6               	clrf	___lwdiv@quotient+1
  2838     0F78                     l1502:
  2839     0F78  0870               	movf	___lwdiv@divisor,w
  2840     0F79  0471               	iorwf	___lwdiv@divisor+1,w
  2841     0F7A  1903               	btfsc	3,2
  2842     0F7B  2F7D               	goto	u821
  2843     0F7C  2F7E               	goto	u820
  2844     0F7D                     u821:
  2845     0F7D  2FB5               	goto	l1522
  2846     0F7E                     u820:
  2847     0F7E                     l1504:
  2848     0F7E  01F7               	clrf	___lwdiv@counter
  2849     0F7F  0AF7               	incf	___lwdiv@counter,f
  2850     0F80  2F8C               	goto	l1510
  2851     0F81                     l1506:
  2852     0F81  3001               	movlw	1
  2853     0F82                     u835:
  2854     0F82  1003               	clrc
  2855     0F83  0DF0               	rlf	___lwdiv@divisor,f
  2856     0F84  0DF1               	rlf	___lwdiv@divisor+1,f
  2857     0F85  3EFF               	addlw	-1
  2858     0F86  1D03               	skipz
  2859     0F87  2F82               	goto	u835
  2860     0F88                     l1508:
  2861     0F88  3001               	movlw	1
  2862     0F89  00F4               	movwf	??___lwdiv
  2863     0F8A  0874               	movf	??___lwdiv,w
  2864     0F8B  07F7               	addwf	___lwdiv@counter,f
  2865     0F8C                     l1510:
  2866     0F8C  1FF1               	btfss	___lwdiv@divisor+1,7
  2867     0F8D  2F8F               	goto	u841
  2868     0F8E  2F90               	goto	u840
  2869     0F8F                     u841:
  2870     0F8F  2F81               	goto	l1506
  2871     0F90                     u840:
  2872     0F90                     l1512:
  2873     0F90  3001               	movlw	1
  2874     0F91                     u855:
  2875     0F91  1003               	clrc
  2876     0F92  0DF5               	rlf	___lwdiv@quotient,f
  2877     0F93  0DF6               	rlf	___lwdiv@quotient+1,f
  2878     0F94  3EFF               	addlw	-1
  2879     0F95  1D03               	skipz
  2880     0F96  2F91               	goto	u855
  2881     0F97  0871               	movf	___lwdiv@divisor+1,w
  2882     0F98  0273               	subwf	___lwdiv@dividend+1,w
  2883     0F99  1D03               	skipz
  2884     0F9A  2F9D               	goto	u865
  2885     0F9B  0870               	movf	___lwdiv@divisor,w
  2886     0F9C  0272               	subwf	___lwdiv@dividend,w
  2887     0F9D                     u865:
  2888     0F9D  1C03               	skipc
  2889     0F9E  2FA0               	goto	u861
  2890     0F9F  2FA1               	goto	u860
  2891     0FA0                     u861:
  2892     0FA0  2FA8               	goto	l1518
  2893     0FA1                     u860:
  2894     0FA1                     l1514:
  2895     0FA1  0870               	movf	___lwdiv@divisor,w
  2896     0FA2  02F2               	subwf	___lwdiv@dividend,f
  2897     0FA3  0871               	movf	___lwdiv@divisor+1,w
  2898     0FA4  1C03               	skipc
  2899     0FA5  03F3               	decf	___lwdiv@dividend+1,f
  2900     0FA6  02F3               	subwf	___lwdiv@dividend+1,f
  2901     0FA7                     l1516:
  2902     0FA7  1475               	bsf	___lwdiv@quotient,0
  2903     0FA8                     l1518:
  2904     0FA8  3001               	movlw	1
  2905     0FA9                     u875:
  2906     0FA9  1003               	clrc
  2907     0FAA  0CF1               	rrf	___lwdiv@divisor+1,f
  2908     0FAB  0CF0               	rrf	___lwdiv@divisor,f
  2909     0FAC  3EFF               	addlw	-1
  2910     0FAD  1D03               	skipz
  2911     0FAE  2FA9               	goto	u875
  2912     0FAF                     l1520:
  2913     0FAF  3001               	movlw	1
  2914     0FB0  02F7               	subwf	___lwdiv@counter,f
  2915     0FB1  1D03               	btfss	3,2
  2916     0FB2  2FB4               	goto	u881
  2917     0FB3  2FB5               	goto	u880
  2918     0FB4                     u881:
  2919     0FB4  2F90               	goto	l1512
  2920     0FB5                     u880:
  2921     0FB5                     l1522:
  2922     0FB5  0876               	movf	___lwdiv@quotient+1,w
  2923     0FB6  00F1               	movwf	?___lwdiv+1
  2924     0FB7  0875               	movf	___lwdiv@quotient,w
  2925     0FB8  00F0               	movwf	?___lwdiv
  2926     0FB9                     l554:
  2927     0FB9  0008               	return
  2928     0FBA                     __end_of___lwdiv:
  2929                           
  2930                           	psect	text4
  2931     000A                     __ptext4:	
  2932 ;; *************** function _setup *****************
  2933 ;; Defined at:
  2934 ;;		line 213 in file "main_M.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;		None
  2937 ;; Auto vars:     Size  Location     Type
  2938 ;;		None
  2939 ;; Return value:  Size  Location     Type
  2940 ;;                  1    wreg      void 
  2941 ;; Registers used:
  2942 ;;		wreg, status,2, status,0, pclath, cstack
  2943 ;; Tracked objects:
  2944 ;;		On entry : 0/0
  2945 ;;		On exit  : 0/0
  2946 ;;		Unchanged: 0/0
  2947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2948 ;;      Params:         0       0       0       0       0
  2949 ;;      Locals:         0       0       0       0       0
  2950 ;;      Temps:          0       0       0       0       0
  2951 ;;      Totals:         0       0       0       0       0
  2952 ;;Total ram usage:        0 bytes
  2953 ;; Hardware stack levels used: 1
  2954 ;; Hardware stack levels required when called: 3
  2955 ;; This function calls:
  2956 ;;		_I2C_Master_Init
  2957 ;;		_Lcd_Init_4bits
  2958 ;;		_setupINTOSC
  2959 ;; This function is called by:
  2960 ;;		_main
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964     000A                     _setup:	
  2965                           ;psect for function _setup
  2966                           
  2967     000A                     l1578:	
  2968                           ;incstack = 0
  2969                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2970                           
  2971                           
  2972                           ;main_M.c: 215:     ANSEL = 0;
  2973     000A  1683               	bsf	3,5	;RP0=1, select bank3
  2974     000B  1703               	bsf	3,6	;RP1=1, select bank3
  2975     000C  0188               	clrf	8	;volatile
  2976                           
  2977                           ;main_M.c: 216:     ANSELH = 0;
  2978     000D  0189               	clrf	9	;volatile
  2979                           
  2980                           ;main_M.c: 218:     TRISB = 0;
  2981     000E  1683               	bsf	3,5	;RP0=1, select bank1
  2982     000F  1303               	bcf	3,6	;RP1=0, select bank1
  2983     0010  0186               	clrf	6	;volatile
  2984                           
  2985                           ;main_M.c: 219:     TRISD = 0;
  2986     0011  0188               	clrf	8	;volatile
  2987                           
  2988                           ;main_M.c: 221:     PORTB = 0;
  2989     0012  1283               	bcf	3,5	;RP0=0, select bank0
  2990     0013  1303               	bcf	3,6	;RP1=0, select bank0
  2991     0014  0186               	clrf	6	;volatile
  2992                           
  2993                           ;main_M.c: 222:     PORTD = 0;
  2994     0015  0188               	clrf	8	;volatile
  2995     0016                     l1580:
  2996                           
  2997                           ;main_M.c: 224:     I2C_Master_Init(100000);
  2998     0016  3000               	movlw	0
  2999     0017  00A3               	movwf	I2C_Master_Init@c+3
  3000     0018  3001               	movlw	1
  3001     0019  00A2               	movwf	I2C_Master_Init@c+2
  3002     001A  3086               	movlw	134
  3003     001B  00A1               	movwf	I2C_Master_Init@c+1
  3004     001C  30A0               	movlw	160
  3005     001D  00A0               	movwf	I2C_Master_Init@c
  3006     001E  120A  158A  26C2  120A  118A  	fcall	_I2C_Master_Init
  3007     0023                     l1582:
  3008                           
  3009                           ;main_M.c: 225:     setupINTOSC(FOSC_8MHZ);
  3010     0023  3007               	movlw	7
  3011     0024  120A  158A  2601  120A  118A  	fcall	_setupINTOSC
  3012     0029                     l1584:
  3013                           
  3014                           ;main_M.c: 226:     Lcd_Init_4bits();
  3015     0029  120A  118A  20E5  120A  118A  	fcall	_Lcd_Init_4bits
  3016     002E                     l156:
  3017     002E  0008               	return
  3018     002F                     __end_of_setup:
  3019                           
  3020                           	psect	text5
  3021     0E01                     __ptext5:	
  3022 ;; *************** function _setupINTOSC *****************
  3023 ;; Defined at:
  3024 ;;		line 11 in file "configINTOSC.c"
  3025 ;; Parameters:    Size  Location     Type
  3026 ;;  F               1    wreg     enum E1292
  3027 ;; Auto vars:     Size  Location     Type
  3028 ;;  F               1    1[COMMON] enum E1292
  3029 ;; Return value:  Size  Location     Type
  3030 ;;                  1    wreg      void 
  3031 ;; Registers used:
  3032 ;;		wreg, status,2, status,0
  3033 ;; Tracked objects:
  3034 ;;		On entry : 0/0
  3035 ;;		On exit  : 0/0
  3036 ;;		Unchanged: 0/0
  3037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3038 ;;      Params:         0       0       0       0       0
  3039 ;;      Locals:         1       0       0       0       0
  3040 ;;      Temps:          1       0       0       0       0
  3041 ;;      Totals:         2       0       0       0       0
  3042 ;;Total ram usage:        2 bytes
  3043 ;; Hardware stack levels used: 1
  3044 ;; This function calls:
  3045 ;;		Nothing
  3046 ;; This function is called by:
  3047 ;;		_setup
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051     0E01                     _setupINTOSC:	
  3052                           ;psect for function _setupINTOSC
  3053                           
  3054                           
  3055                           ;incstack = 0
  3056                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  3057                           ;setupINTOSC@F stored from wreg
  3058     0E01  00F1               	movwf	setupINTOSC@F
  3059     0E02                     l1452:
  3060                           
  3061                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  3062     0E02  0871               	movf	setupINTOSC@F,w
  3063     0E03  00F0               	movwf	??_setupINTOSC
  3064     0E04  0EF0               	swapf	??_setupINTOSC,f
  3065     0E05  1683               	bsf	3,5	;RP0=1, select bank1
  3066     0E06  1303               	bcf	3,6	;RP1=0, select bank1
  3067     0E07  080F               	movf	15,w	;volatile
  3068     0E08  0670               	xorwf	??_setupINTOSC,w
  3069     0E09  398F               	andlw	-113
  3070     0E0A  0670               	xorwf	??_setupINTOSC,w
  3071     0E0B  008F               	movwf	15	;volatile
  3072     0E0C                     l1454:
  3073                           
  3074                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  3075     0E0C  140F               	bsf	15,0	;volatile
  3076     0E0D                     l60:
  3077     0E0D  0008               	return
  3078     0E0E                     __end_of_setupINTOSC:
  3079                           
  3080                           	psect	text6
  3081     00E5                     __ptext6:	
  3082 ;; *************** function _Lcd_Init_4bits *****************
  3083 ;; Defined at:
  3084 ;;		line 66 in file "configLCD_4bits.c"
  3085 ;; Parameters:    Size  Location     Type
  3086 ;;		None
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         0       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0
  3100 ;;      Temps:          2       0       0       0       0
  3101 ;;      Totals:         2       0       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 2
  3105 ;; This function calls:
  3106 ;;		_Lcd_Cmd_4bits
  3107 ;;		_Lcd_Port_4bits
  3108 ;; This function is called by:
  3109 ;;		_setup
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113     00E5                     _Lcd_Init_4bits:	
  3114                           ;psect for function _Lcd_Init_4bits
  3115                           
  3116     00E5                     l1456:	
  3117                           ;incstack = 0
  3118                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  3119                           
  3120                           
  3121                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  3122     00E5  3000               	movlw	0
  3123     00E6  120A  158A  263D  120A  118A  	fcall	_Lcd_Port_4bits
  3124     00EB                     l1458:
  3125                           
  3126                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3127     00EB  3034               	movlw	52
  3128     00EC  00F5               	movwf	??_Lcd_Init_4bits+1
  3129     00ED  30F1               	movlw	241
  3130     00EE  00F4               	movwf	??_Lcd_Init_4bits
  3131     00EF                     u1287:
  3132     00EF  0BF4               	decfsz	??_Lcd_Init_4bits,f
  3133     00F0  28EF               	goto	u1287
  3134     00F1  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  3135     00F2  28EF               	goto	u1287
  3136     00F3  28F4               	nop2
  3137     00F4                     l1460:
  3138                           
  3139                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  3140     00F4  3003               	movlw	3
  3141     00F5  120A  158A  2623  120A  118A  	fcall	_Lcd_Cmd_4bits
  3142                           
  3143                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3144     00FA  300D               	movlw	13
  3145     00FB  00F5               	movwf	??_Lcd_Init_4bits+1
  3146     00FC  30FB               	movlw	251
  3147     00FD  00F4               	movwf	??_Lcd_Init_4bits
  3148     00FE                     u1297:
  3149     00FE  0BF4               	decfsz	??_Lcd_Init_4bits,f
  3150     00FF  28FE               	goto	u1297
  3151     0100  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  3152     0101  28FE               	goto	u1297
  3153     0102  2903               	nop2
  3154     0103                     l1462:
  3155                           
  3156                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  3157     0103  3003               	movlw	3
  3158     0104  120A  158A  2623  120A  118A  	fcall	_Lcd_Cmd_4bits
  3159     0109                     l1464:
  3160                           
  3161                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3162     0109  301D               	movlw	29
  3163     010A  00F5               	movwf	??_Lcd_Init_4bits+1
  3164     010B  3091               	movlw	145
  3165     010C  00F4               	movwf	??_Lcd_Init_4bits
  3166     010D                     u1307:
  3167     010D  0BF4               	decfsz	??_Lcd_Init_4bits,f
  3168     010E  290D               	goto	u1307
  3169     010F  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  3170     0110  290D               	goto	u1307
  3171                           
  3172                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  3173     0111  3003               	movlw	3
  3174     0112  120A  158A  2623  120A  118A  	fcall	_Lcd_Cmd_4bits
  3175                           
  3176                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  3177     0117  3002               	movlw	2
  3178     0118  120A  158A  2623  120A  118A  	fcall	_Lcd_Cmd_4bits
  3179                           
  3180                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  3181     011D  3002               	movlw	2
  3182     011E  120A  158A  2623  120A  118A  	fcall	_Lcd_Cmd_4bits
  3183                           
  3184                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  3185     0123  3008               	movlw	8
  3186     0124  120A  158A  2623  120A  118A  	fcall	_Lcd_Cmd_4bits
  3187                           
  3188                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  3189     0129  3000               	movlw	0
  3190     012A  120A  158A  2623  120A  118A  	fcall	_Lcd_Cmd_4bits
  3191                           
  3192                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  3193     012F  300C               	movlw	12
  3194     0130  120A  158A  2623  120A  118A  	fcall	_Lcd_Cmd_4bits
  3195                           
  3196                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  3197     0135  3000               	movlw	0
  3198     0136  120A  158A  2623  120A  118A  	fcall	_Lcd_Cmd_4bits
  3199                           
  3200                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  3201     013B  3006               	movlw	6
  3202     013C  120A  158A  2623  120A  118A  	fcall	_Lcd_Cmd_4bits
  3203     0141                     l90:
  3204     0141  0008               	return
  3205     0142                     __end_of_Lcd_Init_4bits:
  3206                           
  3207                           	psect	text7
  3208     0EC2                     __ptext7:	
  3209 ;; *************** function _I2C_Master_Init *****************
  3210 ;; Defined at:
  3211 ;;		line 13 in file "configI2C.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;  c               4    0[BANK0 ] const unsigned long 
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, pclath, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3225 ;;      Params:         0       4       0       0       0
  3226 ;;      Locals:         0       0       0       0       0
  3227 ;;      Temps:          0       4       0       0       0
  3228 ;;      Totals:         0       8       0       0       0
  3229 ;;Total ram usage:        8 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 1
  3232 ;; This function calls:
  3233 ;;		___lldiv
  3234 ;; This function is called by:
  3235 ;;		_setup
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239     0EC2                     _I2C_Master_Init:	
  3240                           ;psect for function _I2C_Master_Init
  3241                           
  3242     0EC2                     l1408:	
  3243                           ;incstack = 0
  3244                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3245                           
  3246                           
  3247                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
  3248     0EC2  3028               	movlw	40
  3249     0EC3  1283               	bcf	3,5	;RP0=0, select bank0
  3250     0EC4  1303               	bcf	3,6	;RP1=0, select bank0
  3251     0EC5  0094               	movwf	20	;volatile
  3252     0EC6                     l1410:
  3253                           
  3254                           ;configI2C.c: 16:     SSPCON2 = 0;
  3255     0EC6  1683               	bsf	3,5	;RP0=1, select bank1
  3256     0EC7  1303               	bcf	3,6	;RP1=0, select bank1
  3257     0EC8  0191               	clrf	17	;volatile
  3258     0EC9                     l1412:
  3259                           
  3260                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
  3261     0EC9  1283               	bcf	3,5	;RP0=0, select bank0
  3262     0ECA  1303               	bcf	3,6	;RP1=0, select bank0
  3263     0ECB  0820               	movf	I2C_Master_Init@c,w
  3264     0ECC  00A4               	movwf	??_I2C_Master_Init
  3265     0ECD  0821               	movf	I2C_Master_Init@c+1,w
  3266     0ECE  00A5               	movwf	??_I2C_Master_Init+1
  3267     0ECF  0822               	movf	I2C_Master_Init@c+2,w
  3268     0ED0  00A6               	movwf	??_I2C_Master_Init+2
  3269     0ED1  0823               	movf	I2C_Master_Init@c+3,w
  3270     0ED2  00A7               	movwf	??_I2C_Master_Init+3
  3271     0ED3  3002               	movlw	2
  3272     0ED4                     u775:
  3273     0ED4  1003               	clrc
  3274     0ED5  0DA4               	rlf	??_I2C_Master_Init,f
  3275     0ED6  0DA5               	rlf	??_I2C_Master_Init+1,f
  3276     0ED7  0DA6               	rlf	??_I2C_Master_Init+2,f
  3277     0ED8  0DA7               	rlf	??_I2C_Master_Init+3,f
  3278     0ED9                     u770:
  3279     0ED9  3EFF               	addlw	-1
  3280     0EDA  1D03               	skipz
  3281     0EDB  2ED4               	goto	u775
  3282     0EDC  0827               	movf	??_I2C_Master_Init+3,w
  3283     0EDD  00F3               	movwf	___lldiv@divisor+3
  3284     0EDE  0826               	movf	??_I2C_Master_Init+2,w
  3285     0EDF  00F2               	movwf	___lldiv@divisor+2
  3286     0EE0  0825               	movf	??_I2C_Master_Init+1,w
  3287     0EE1  00F1               	movwf	___lldiv@divisor+1
  3288     0EE2  0824               	movf	??_I2C_Master_Init,w
  3289     0EE3  00F0               	movwf	___lldiv@divisor
  3290     0EE4  3000               	movlw	0
  3291     0EE5  00F7               	movwf	___lldiv@dividend+3
  3292     0EE6  307A               	movlw	122
  3293     0EE7  00F6               	movwf	___lldiv@dividend+2
  3294     0EE8  3012               	movlw	18
  3295     0EE9  00F5               	movwf	___lldiv@dividend+1
  3296     0EEA  3000               	movlw	0
  3297     0EEB  00F4               	movwf	___lldiv@dividend
  3298     0EEC  120A  118A  2142  120A  158A  	fcall	___lldiv
  3299     0EF1  0870               	movf	?___lldiv,w
  3300     0EF2  3EFF               	addlw	255
  3301     0EF3  1683               	bsf	3,5	;RP0=1, select bank1
  3302     0EF4  1303               	bcf	3,6	;RP1=0, select bank1
  3303     0EF5  0093               	movwf	19	;volatile
  3304     0EF6                     l1414:
  3305                           
  3306                           ;configI2C.c: 18:     SSPSTAT = 0;
  3307     0EF6  0194               	clrf	20	;volatile
  3308     0EF7                     l1416:
  3309                           
  3310                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
  3311     0EF7  1587               	bsf	7,3	;volatile
  3312     0EF8                     l1418:
  3313                           
  3314                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
  3315     0EF8  1607               	bsf	7,4	;volatile
  3316     0EF9                     l29:
  3317     0EF9  0008               	return
  3318     0EFA                     __end_of_I2C_Master_Init:
  3319                           
  3320                           	psect	text8
  3321     0142                     __ptext8:	
  3322 ;; *************** function ___lldiv *****************
  3323 ;; Defined at:
  3324 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;  divisor         4    0[COMMON] unsigned long 
  3327 ;;  dividend        4    4[COMMON] unsigned long 
  3328 ;; Auto vars:     Size  Location     Type
  3329 ;;  quotient        4    9[COMMON] unsigned long 
  3330 ;;  counter         1   13[COMMON] unsigned char 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  4    0[COMMON] unsigned long 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3340 ;;      Params:         8       0       0       0       0
  3341 ;;      Locals:         5       0       0       0       0
  3342 ;;      Temps:          1       0       0       0       0
  3343 ;;      Totals:        14       0       0       0       0
  3344 ;;Total ram usage:       14 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; This function calls:
  3347 ;;		Nothing
  3348 ;; This function is called by:
  3349 ;;		_I2C_Master_Init
  3350 ;; This function uses a non-reentrant model
  3351 ;;
  3352                           
  3353     0142                     ___lldiv:	
  3354                           ;psect for function ___lldiv
  3355                           
  3356     0142                     l1384:	
  3357                           ;incstack = 0
  3358                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3359                           
  3360     0142  3000               	movlw	0
  3361     0143  00FC               	movwf	___lldiv@quotient+3
  3362     0144  3000               	movlw	0
  3363     0145  00FB               	movwf	___lldiv@quotient+2
  3364     0146  3000               	movlw	0
  3365     0147  00FA               	movwf	___lldiv@quotient+1
  3366     0148  3000               	movlw	0
  3367     0149  00F9               	movwf	___lldiv@quotient
  3368     014A  0873               	movf	___lldiv@divisor+3,w
  3369     014B  0472               	iorwf	___lldiv@divisor+2,w
  3370     014C  0471               	iorwf	___lldiv@divisor+1,w
  3371     014D  0470               	iorwf	___lldiv@divisor,w
  3372     014E  1903               	skipnz
  3373     014F  2951               	goto	u701
  3374     0150  2952               	goto	u700
  3375     0151                     u701:
  3376     0151  299F               	goto	l1404
  3377     0152                     u700:
  3378     0152                     l1386:
  3379     0152  01FD               	clrf	___lldiv@counter
  3380     0153  0AFD               	incf	___lldiv@counter,f
  3381     0154  2962               	goto	l1390
  3382     0155                     l1388:
  3383     0155  3001               	movlw	1
  3384     0156  00F8               	movwf	??___lldiv
  3385     0157                     u715:
  3386     0157  1003               	clrc
  3387     0158  0DF0               	rlf	___lldiv@divisor,f
  3388     0159  0DF1               	rlf	___lldiv@divisor+1,f
  3389     015A  0DF2               	rlf	___lldiv@divisor+2,f
  3390     015B  0DF3               	rlf	___lldiv@divisor+3,f
  3391     015C  0BF8               	decfsz	??___lldiv,f
  3392     015D  2957               	goto	u715
  3393     015E  3001               	movlw	1
  3394     015F  00F8               	movwf	??___lldiv
  3395     0160  0878               	movf	??___lldiv,w
  3396     0161  07FD               	addwf	___lldiv@counter,f
  3397     0162                     l1390:
  3398     0162  1FF3               	btfss	___lldiv@divisor+3,7
  3399     0163  2965               	goto	u721
  3400     0164  2966               	goto	u720
  3401     0165                     u721:
  3402     0165  2955               	goto	l1388
  3403     0166                     u720:
  3404     0166                     l1392:
  3405     0166  3001               	movlw	1
  3406     0167  00F8               	movwf	??___lldiv
  3407     0168                     u735:
  3408     0168  1003               	clrc
  3409     0169  0DF9               	rlf	___lldiv@quotient,f
  3410     016A  0DFA               	rlf	___lldiv@quotient+1,f
  3411     016B  0DFB               	rlf	___lldiv@quotient+2,f
  3412     016C  0DFC               	rlf	___lldiv@quotient+3,f
  3413     016D  0BF8               	decfsz	??___lldiv,f
  3414     016E  2968               	goto	u735
  3415     016F                     l1394:
  3416     016F  0873               	movf	___lldiv@divisor+3,w
  3417     0170  0277               	subwf	___lldiv@dividend+3,w
  3418     0171  1D03               	skipz
  3419     0172  297D               	goto	u745
  3420     0173  0872               	movf	___lldiv@divisor+2,w
  3421     0174  0276               	subwf	___lldiv@dividend+2,w
  3422     0175  1D03               	skipz
  3423     0176  297D               	goto	u745
  3424     0177  0871               	movf	___lldiv@divisor+1,w
  3425     0178  0275               	subwf	___lldiv@dividend+1,w
  3426     0179  1D03               	skipz
  3427     017A  297D               	goto	u745
  3428     017B  0870               	movf	___lldiv@divisor,w
  3429     017C  0274               	subwf	___lldiv@dividend,w
  3430     017D                     u745:
  3431     017D  1C03               	skipc
  3432     017E  2980               	goto	u741
  3433     017F  2981               	goto	u740
  3434     0180                     u741:
  3435     0180  2990               	goto	l1400
  3436     0181                     u740:
  3437     0181                     l1396:
  3438     0181  0870               	movf	___lldiv@divisor,w
  3439     0182  02F4               	subwf	___lldiv@dividend,f
  3440     0183  0871               	movf	___lldiv@divisor+1,w
  3441     0184  1C03               	skipc
  3442     0185  0F71               	incfsz	___lldiv@divisor+1,w
  3443     0186  02F5               	subwf	___lldiv@dividend+1,f
  3444     0187  0872               	movf	___lldiv@divisor+2,w
  3445     0188  1C03               	skipc
  3446     0189  0F72               	incfsz	___lldiv@divisor+2,w
  3447     018A  02F6               	subwf	___lldiv@dividend+2,f
  3448     018B  0873               	movf	___lldiv@divisor+3,w
  3449     018C  1C03               	skipc
  3450     018D  0F73               	incfsz	___lldiv@divisor+3,w
  3451     018E  02F7               	subwf	___lldiv@dividend+3,f
  3452     018F                     l1398:
  3453     018F  1479               	bsf	___lldiv@quotient,0
  3454     0190                     l1400:
  3455     0190  3001               	movlw	1
  3456     0191                     u755:
  3457     0191  1003               	clrc
  3458     0192  0CF3               	rrf	___lldiv@divisor+3,f
  3459     0193  0CF2               	rrf	___lldiv@divisor+2,f
  3460     0194  0CF1               	rrf	___lldiv@divisor+1,f
  3461     0195  0CF0               	rrf	___lldiv@divisor,f
  3462     0196  3EFF               	addlw	-1
  3463     0197  1D03               	skipz
  3464     0198  2991               	goto	u755
  3465     0199                     l1402:
  3466     0199  3001               	movlw	1
  3467     019A  02FD               	subwf	___lldiv@counter,f
  3468     019B  1D03               	btfss	3,2
  3469     019C  299E               	goto	u761
  3470     019D  299F               	goto	u760
  3471     019E                     u761:
  3472     019E  2966               	goto	l1392
  3473     019F                     u760:
  3474     019F                     l1404:
  3475     019F  087C               	movf	___lldiv@quotient+3,w
  3476     01A0  00F3               	movwf	?___lldiv+3
  3477     01A1  087B               	movf	___lldiv@quotient+2,w
  3478     01A2  00F2               	movwf	?___lldiv+2
  3479     01A3  087A               	movf	___lldiv@quotient+1,w
  3480     01A4  00F1               	movwf	?___lldiv+1
  3481     01A5  0879               	movf	___lldiv@quotient,w
  3482     01A6  00F0               	movwf	?___lldiv
  3483     01A7                     l318:
  3484     01A7  0008               	return
  3485     01A8                     __end_of___lldiv:
  3486                           
  3487                           	psect	text9
  3488     008A                     __ptext9:	
  3489 ;; *************** function _leerRTC *****************
  3490 ;; Defined at:
  3491 ;;		line 13 in file "DS3231.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  R               1    wreg     enum E1292
  3494 ;; Auto vars:     Size  Location     Type
  3495 ;;  R               1    9[COMMON] enum E1292
  3496 ;;  DATO            1   10[COMMON] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      unsigned char 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       0       0       0       0
  3507 ;;      Locals:         2       0       0       0       0
  3508 ;;      Temps:          3       0       0       0       0
  3509 ;;      Totals:         5       0       0       0       0
  3510 ;;Total ram usage:        5 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 2
  3513 ;; This function calls:
  3514 ;;		_I2C_Master_Read
  3515 ;;		_I2C_Master_RepeatedStart
  3516 ;;		_I2C_Master_Start
  3517 ;;		_I2C_Master_Stop
  3518 ;;		_I2C_Master_Write
  3519 ;;		___bmul
  3520 ;; This function is called by:
  3521 ;;		_main
  3522 ;; This function uses a non-reentrant model
  3523 ;;
  3524                           
  3525     008A                     _leerRTC:	
  3526                           ;psect for function _leerRTC
  3527                           
  3528                           
  3529                           ;incstack = 0
  3530                           ; Regs used in _leerRTC: [wreg+status,2+status,0+pclath+cstack]
  3531                           ;leerRTC@R stored from wreg
  3532     008A  00F9               	movwf	leerRTC@R
  3533     008B                     l1638:
  3534                           
  3535                           ;DS3231.c: 15:     uint8_t DATO;;DS3231.c: 17:     I2C_Master_Start();
  3536     008B  120A  158A  25CB  120A  118A  	fcall	_I2C_Master_Start
  3537                           
  3538                           ;DS3231.c: 18:     I2C_Master_Write(0xD0);
  3539     0090  30D0               	movlw	208
  3540     0091  00F0               	movwf	I2C_Master_Write@d
  3541     0092  3000               	movlw	0
  3542     0093  00F1               	movwf	I2C_Master_Write@d+1
  3543     0094  120A  158A  25DD  120A  118A  	fcall	_I2C_Master_Write
  3544                           
  3545                           ;DS3231.c: 19:     I2C_Master_Write(R);
  3546     0099  0879               	movf	leerRTC@R,w
  3547     009A  00F6               	movwf	??_leerRTC
  3548     009B  01F7               	clrf	??_leerRTC+1
  3549     009C  0876               	movf	??_leerRTC,w
  3550     009D  00F0               	movwf	I2C_Master_Write@d
  3551     009E  0877               	movf	??_leerRTC+1,w
  3552     009F  00F1               	movwf	I2C_Master_Write@d+1
  3553     00A0  120A  158A  25DD  120A  118A  	fcall	_I2C_Master_Write
  3554                           
  3555                           ;DS3231.c: 20:     I2C_Master_RepeatedStart();
  3556     00A5  120A  158A  25C2  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3557                           
  3558                           ;DS3231.c: 21:     I2C_Master_Write(0xD1);
  3559     00AA  30D1               	movlw	209
  3560     00AB  00F0               	movwf	I2C_Master_Write@d
  3561     00AC  3000               	movlw	0
  3562     00AD  00F1               	movwf	I2C_Master_Write@d+1
  3563     00AE  120A  158A  25DD  120A  118A  	fcall	_I2C_Master_Write
  3564                           
  3565                           ;DS3231.c: 22:     DATO = I2C_Master_Read(0);
  3566     00B3  3000               	movlw	0
  3567     00B4  00F0               	movwf	I2C_Master_Read@a
  3568     00B5  00F1               	movwf	I2C_Master_Read@a+1
  3569     00B6  120A  158A  265F  120A  118A  	fcall	_I2C_Master_Read
  3570     00BB  0870               	movf	?_I2C_Master_Read,w
  3571     00BC  00FA               	movwf	leerRTC@DATO
  3572                           
  3573                           ;DS3231.c: 23:     I2C_Master_Stop();
  3574     00BD  120A  158A  25D4  120A  118A  	fcall	_I2C_Master_Stop
  3575     00C2                     l1640:
  3576                           
  3577                           ;DS3231.c: 24:     _delay((unsigned long)((200)*(8000000/4000.0)));
  3578     00C2  3003               	movlw	3
  3579     00C3  00F8               	movwf	??_leerRTC+2
  3580     00C4  3008               	movlw	8
  3581     00C5  00F7               	movwf	??_leerRTC+1
  3582     00C6  3077               	movlw	119
  3583     00C7  00F6               	movwf	??_leerRTC
  3584     00C8                     u1317:
  3585     00C8  0BF6               	decfsz	??_leerRTC,f
  3586     00C9  28C8               	goto	u1317
  3587     00CA  0BF7               	decfsz	??_leerRTC+1,f
  3588     00CB  28C8               	goto	u1317
  3589     00CC  0BF8               	decfsz	??_leerRTC+2,f
  3590     00CD  28C8               	goto	u1317
  3591     00CE                     l1642:
  3592                           
  3593                           ;DS3231.c: 26:     DATO = (DATO >> 4) * 10 + (DATO & 0x0F);
  3594     00CE  300F               	movlw	15
  3595     00CF  057A               	andwf	leerRTC@DATO,w
  3596     00D0  00F6               	movwf	??_leerRTC
  3597     00D1  300A               	movlw	10
  3598     00D2  00F0               	movwf	___bmul@multiplicand
  3599     00D3  087A               	movf	leerRTC@DATO,w
  3600     00D4  00F7               	movwf	??_leerRTC+1
  3601     00D5  3004               	movlw	4
  3602     00D6                     u1075:
  3603     00D6  1003               	clrc
  3604     00D7  0CF7               	rrf	??_leerRTC+1,f
  3605     00D8  3EFF               	addlw	-1
  3606     00D9  1D03               	skipz
  3607     00DA  28D6               	goto	u1075
  3608     00DB  0877               	movf	??_leerRTC+1,w
  3609     00DC  120A  158A  260E  120A  118A  	fcall	___bmul
  3610     00E1  0776               	addwf	??_leerRTC,w
  3611     00E2  00FA               	movwf	leerRTC@DATO
  3612                           
  3613                           ;DS3231.c: 28:     return DATO;
  3614     00E3  087A               	movf	leerRTC@DATO,w
  3615     00E4                     l171:
  3616     00E4  0008               	return
  3617     00E5                     __end_of_leerRTC:
  3618                           
  3619                           	psect	text10
  3620     0E0E                     __ptext10:	
  3621 ;; *************** function ___bmul *****************
  3622 ;; Defined at:
  3623 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  multiplier      1    wreg     unsigned char 
  3626 ;;  multiplicand    1    0[COMMON] unsigned char 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  multiplier      1    3[COMMON] unsigned char 
  3629 ;;  product         1    2[COMMON] unsigned char 
  3630 ;; Return value:  Size  Location     Type
  3631 ;;                  1    wreg      unsigned char 
  3632 ;; Registers used:
  3633 ;;		wreg, status,2, status,0
  3634 ;; Tracked objects:
  3635 ;;		On entry : 0/0
  3636 ;;		On exit  : 0/0
  3637 ;;		Unchanged: 0/0
  3638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3639 ;;      Params:         1       0       0       0       0
  3640 ;;      Locals:         2       0       0       0       0
  3641 ;;      Temps:          1       0       0       0       0
  3642 ;;      Totals:         4       0       0       0       0
  3643 ;;Total ram usage:        4 bytes
  3644 ;; Hardware stack levels used: 1
  3645 ;; This function calls:
  3646 ;;		Nothing
  3647 ;; This function is called by:
  3648 ;;		_leerRTC
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652     0E0E                     ___bmul:	
  3653                           ;psect for function ___bmul
  3654                           
  3655                           
  3656                           ;incstack = 0
  3657                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3658                           ;___bmul@multiplier stored from wreg
  3659     0E0E  00F3               	movwf	___bmul@multiplier
  3660     0E0F                     l1486:
  3661     0E0F  01F2               	clrf	___bmul@product
  3662     0E10                     l1488:
  3663     0E10  1C73               	btfss	___bmul@multiplier,0
  3664     0E11  2E13               	goto	u801
  3665     0E12  2E14               	goto	u800
  3666     0E13                     u801:
  3667     0E13  2E18               	goto	l1492
  3668     0E14                     u800:
  3669     0E14                     l1490:
  3670     0E14  0870               	movf	___bmul@multiplicand,w
  3671     0E15  00F1               	movwf	??___bmul
  3672     0E16  0871               	movf	??___bmul,w
  3673     0E17  07F2               	addwf	___bmul@product,f
  3674     0E18                     l1492:
  3675     0E18  1003               	clrc
  3676     0E19  0DF0               	rlf	___bmul@multiplicand,f
  3677     0E1A                     l1494:
  3678     0E1A  1003               	clrc
  3679     0E1B  0CF3               	rrf	___bmul@multiplier,f
  3680     0E1C  0873               	movf	___bmul@multiplier,w
  3681     0E1D  1D03               	btfss	3,2
  3682     0E1E  2E20               	goto	u811
  3683     0E1F  2E21               	goto	u810
  3684     0E20                     u811:
  3685     0E20  2E10               	goto	l1488
  3686     0E21                     u810:
  3687     0E21                     l1496:
  3688     0E21  0872               	movf	___bmul@product,w
  3689     0E22                     l308:
  3690     0E22  0008               	return
  3691     0E23                     __end_of___bmul:
  3692                           
  3693                           	psect	text11
  3694     0DDD                     __ptext11:	
  3695 ;; *************** function _I2C_Master_Write *****************
  3696 ;; Defined at:
  3697 ;;		line 62 in file "configI2C.c"
  3698 ;; Parameters:    Size  Location     Type
  3699 ;;  d               2    0[COMMON] unsigned int 
  3700 ;; Auto vars:     Size  Location     Type
  3701 ;;		None
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      void 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3711 ;;      Params:         2       0       0       0       0
  3712 ;;      Locals:         0       0       0       0       0
  3713 ;;      Temps:          0       0       0       0       0
  3714 ;;      Totals:         2       0       0       0       0
  3715 ;;Total ram usage:        2 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 1
  3718 ;; This function calls:
  3719 ;;		_I2C_Master_Wait
  3720 ;; This function is called by:
  3721 ;;		_main
  3722 ;;		_leerRTC
  3723 ;; This function uses a non-reentrant model
  3724 ;;
  3725                           
  3726     0DDD                     _I2C_Master_Write:	
  3727                           ;psect for function _I2C_Master_Write
  3728                           
  3729     0DDD                     l1432:	
  3730                           ;incstack = 0
  3731                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3732                           
  3733                           
  3734                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
  3735     0DDD  120A  158A  25F4  120A  158A  	fcall	_I2C_Master_Wait
  3736     0DE2                     l1434:
  3737                           
  3738                           ;configI2C.c: 65:     SSPBUF = d;
  3739     0DE2  0870               	movf	I2C_Master_Write@d,w
  3740     0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  3741     0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  3742     0DE5  0093               	movwf	19	;volatile
  3743     0DE6                     l47:
  3744     0DE6  0008               	return
  3745     0DE7                     __end_of_I2C_Master_Write:
  3746                           
  3747                           	psect	text12
  3748     0DD4                     __ptext12:	
  3749 ;; *************** function _I2C_Master_Stop *****************
  3750 ;; Defined at:
  3751 ;;		line 52 in file "configI2C.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;                  1    wreg      void 
  3758 ;; Registers used:
  3759 ;;		wreg, status,2, status,0, pclath, cstack
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3765 ;;      Params:         0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used: 1
  3771 ;; Hardware stack levels required when called: 1
  3772 ;; This function calls:
  3773 ;;		_I2C_Master_Wait
  3774 ;; This function is called by:
  3775 ;;		_main
  3776 ;;		_leerRTC
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780     0DD4                     _I2C_Master_Stop:	
  3781                           ;psect for function _I2C_Master_Stop
  3782                           
  3783     0DD4                     l1428:	
  3784                           ;incstack = 0
  3785                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3786                           
  3787                           
  3788                           ;configI2C.c: 54:     I2C_Master_Wait();
  3789     0DD4  120A  158A  25F4  120A  158A  	fcall	_I2C_Master_Wait
  3790     0DD9                     l1430:
  3791                           
  3792                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
  3793     0DD9  1683               	bsf	3,5	;RP0=1, select bank1
  3794     0DDA  1303               	bcf	3,6	;RP1=0, select bank1
  3795     0DDB  1511               	bsf	17,2	;volatile
  3796     0DDC                     l44:
  3797     0DDC  0008               	return
  3798     0DDD                     __end_of_I2C_Master_Stop:
  3799                           
  3800                           	psect	text13
  3801     0DCB                     __ptext13:	
  3802 ;; *************** function _I2C_Master_Start *****************
  3803 ;; Defined at:
  3804 ;;		line 36 in file "configI2C.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;		None
  3807 ;; Auto vars:     Size  Location     Type
  3808 ;;		None
  3809 ;; Return value:  Size  Location     Type
  3810 ;;                  1    wreg      void 
  3811 ;; Registers used:
  3812 ;;		wreg, status,2, status,0, pclath, cstack
  3813 ;; Tracked objects:
  3814 ;;		On entry : 0/0
  3815 ;;		On exit  : 0/0
  3816 ;;		Unchanged: 0/0
  3817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3818 ;;      Params:         0       0       0       0       0
  3819 ;;      Locals:         0       0       0       0       0
  3820 ;;      Temps:          0       0       0       0       0
  3821 ;;      Totals:         0       0       0       0       0
  3822 ;;Total ram usage:        0 bytes
  3823 ;; Hardware stack levels used: 1
  3824 ;; Hardware stack levels required when called: 1
  3825 ;; This function calls:
  3826 ;;		_I2C_Master_Wait
  3827 ;; This function is called by:
  3828 ;;		_main
  3829 ;;		_leerRTC
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833     0DCB                     _I2C_Master_Start:	
  3834                           ;psect for function _I2C_Master_Start
  3835                           
  3836     0DCB                     l1420:	
  3837                           ;incstack = 0
  3838                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3839                           
  3840                           
  3841                           ;configI2C.c: 38:     I2C_Master_Wait();
  3842     0DCB  120A  158A  25F4  120A  158A  	fcall	_I2C_Master_Wait
  3843     0DD0                     l1422:
  3844                           
  3845                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
  3846     0DD0  1683               	bsf	3,5	;RP0=1, select bank1
  3847     0DD1  1303               	bcf	3,6	;RP1=0, select bank1
  3848     0DD2  1411               	bsf	17,0	;volatile
  3849     0DD3                     l38:
  3850     0DD3  0008               	return
  3851     0DD4                     __end_of_I2C_Master_Start:
  3852                           
  3853                           	psect	text14
  3854     0DC2                     __ptext14:	
  3855 ;; *************** function _I2C_Master_RepeatedStart *****************
  3856 ;; Defined at:
  3857 ;;		line 44 in file "configI2C.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;		None
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;		None
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  1    wreg      void 
  3864 ;; Registers used:
  3865 ;;		wreg, status,2, status,0, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3871 ;;      Params:         0       0       0       0       0
  3872 ;;      Locals:         0       0       0       0       0
  3873 ;;      Temps:          0       0       0       0       0
  3874 ;;      Totals:         0       0       0       0       0
  3875 ;;Total ram usage:        0 bytes
  3876 ;; Hardware stack levels used: 1
  3877 ;; Hardware stack levels required when called: 1
  3878 ;; This function calls:
  3879 ;;		_I2C_Master_Wait
  3880 ;; This function is called by:
  3881 ;;		_leerRTC
  3882 ;; This function uses a non-reentrant model
  3883 ;;
  3884                           
  3885     0DC2                     _I2C_Master_RepeatedStart:	
  3886                           ;psect for function _I2C_Master_RepeatedStart
  3887                           
  3888     0DC2                     l1424:	
  3889                           ;incstack = 0
  3890                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  3891                           
  3892                           
  3893                           ;configI2C.c: 46:     I2C_Master_Wait();
  3894     0DC2  120A  158A  25F4  120A  158A  	fcall	_I2C_Master_Wait
  3895     0DC7                     l1426:
  3896                           
  3897                           ;configI2C.c: 47:     SSPCON2bits.RSEN = 1;
  3898     0DC7  1683               	bsf	3,5	;RP0=1, select bank1
  3899     0DC8  1303               	bcf	3,6	;RP1=0, select bank1
  3900     0DC9  1491               	bsf	17,1	;volatile
  3901     0DCA                     l41:
  3902     0DCA  0008               	return
  3903     0DCB                     __end_of_I2C_Master_RepeatedStart:
  3904                           
  3905                           	psect	text15
  3906     0E5F                     __ptext15:	
  3907 ;; *************** function _I2C_Master_Read *****************
  3908 ;; Defined at:
  3909 ;;		line 71 in file "configI2C.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;  a               2    0[COMMON] unsigned short 
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;  temp            2    4[COMMON] unsigned short 
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  2    0[COMMON] unsigned short 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2, status,0, pclath, cstack
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3923 ;;      Params:         2       0       0       0       0
  3924 ;;      Locals:         2       0       0       0       0
  3925 ;;      Temps:          2       0       0       0       0
  3926 ;;      Totals:         6       0       0       0       0
  3927 ;;Total ram usage:        6 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 1
  3930 ;; This function calls:
  3931 ;;		_I2C_Master_Wait
  3932 ;; This function is called by:
  3933 ;;		_main
  3934 ;;		_leerRTC
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938     0E5F                     _I2C_Master_Read:	
  3939                           ;psect for function _I2C_Master_Read
  3940                           
  3941     0E5F                     l1436:	
  3942                           ;incstack = 0
  3943                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3944                           
  3945                           
  3946                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
  3947     0E5F  120A  158A  25F4  120A  158A  	fcall	_I2C_Master_Wait
  3948     0E64                     l1438:
  3949                           
  3950                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
  3951     0E64  1683               	bsf	3,5	;RP0=1, select bank1
  3952     0E65  1303               	bcf	3,6	;RP1=0, select bank1
  3953     0E66  1591               	bsf	17,3	;volatile
  3954                           
  3955                           ;configI2C.c: 76:     I2C_Master_Wait();
  3956     0E67  120A  158A  25F4  120A  158A  	fcall	_I2C_Master_Wait
  3957     0E6C                     l1440:
  3958                           
  3959                           ;configI2C.c: 77:     temp = SSPBUF;
  3960     0E6C  1283               	bcf	3,5	;RP0=0, select bank0
  3961     0E6D  1303               	bcf	3,6	;RP1=0, select bank0
  3962     0E6E  0813               	movf	19,w	;volatile
  3963     0E6F  00F2               	movwf	??_I2C_Master_Read
  3964     0E70  01F3               	clrf	??_I2C_Master_Read+1
  3965     0E71  0872               	movf	??_I2C_Master_Read,w
  3966     0E72  00F4               	movwf	I2C_Master_Read@temp
  3967     0E73  0873               	movf	??_I2C_Master_Read+1,w
  3968     0E74  00F5               	movwf	I2C_Master_Read@temp+1
  3969     0E75                     l1442:
  3970                           
  3971                           ;configI2C.c: 78:     I2C_Master_Wait();
  3972     0E75  120A  158A  25F4  120A  158A  	fcall	_I2C_Master_Wait
  3973     0E7A                     l1444:
  3974                           
  3975                           ;configI2C.c: 79:     if(a == 1){
  3976     0E7A  0370               	decf	I2C_Master_Read@a,w
  3977     0E7B  0471               	iorwf	I2C_Master_Read@a+1,w
  3978     0E7C  1D03               	btfss	3,2
  3979     0E7D  2E7F               	goto	u781
  3980     0E7E  2E80               	goto	u780
  3981     0E7F                     u781:
  3982     0E7F  2E84               	goto	l50
  3983     0E80                     u780:
  3984     0E80                     l1446:
  3985                           
  3986                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
  3987     0E80  1683               	bsf	3,5	;RP0=1, select bank1
  3988     0E81  1303               	bcf	3,6	;RP1=0, select bank1
  3989     0E82  1291               	bcf	17,5	;volatile
  3990                           
  3991                           ;configI2C.c: 81:     }else{
  3992     0E83  2E87               	goto	l51
  3993     0E84                     l50:
  3994                           
  3995                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
  3996     0E84  1683               	bsf	3,5	;RP0=1, select bank1
  3997     0E85  1303               	bcf	3,6	;RP1=0, select bank1
  3998     0E86  1691               	bsf	17,5	;volatile
  3999     0E87                     l51:	
  4000                           ;configI2C.c: 83:     }
  4001                           
  4002                           
  4003                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
  4004     0E87  1611               	bsf	17,4	;volatile
  4005     0E88                     l1448:
  4006                           
  4007                           ;configI2C.c: 85:     return temp;
  4008     0E88  0875               	movf	I2C_Master_Read@temp+1,w
  4009     0E89  00F1               	movwf	?_I2C_Master_Read+1
  4010     0E8A  0874               	movf	I2C_Master_Read@temp,w
  4011     0E8B  00F0               	movwf	?_I2C_Master_Read
  4012     0E8C                     l52:
  4013     0E8C  0008               	return
  4014     0E8D                     __end_of_I2C_Master_Read:
  4015                           
  4016                           	psect	text16
  4017     0DF4                     __ptext16:	
  4018 ;; *************** function _I2C_Master_Wait *****************
  4019 ;; Defined at:
  4020 ;;		line 29 in file "configI2C.c"
  4021 ;; Parameters:    Size  Location     Type
  4022 ;;		None
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;		None
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, status,2
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4034 ;;      Params:         0       0       0       0       0
  4035 ;;      Locals:         0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0
  4037 ;;      Totals:         0       0       0       0       0
  4038 ;;Total ram usage:        0 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; This function calls:
  4041 ;;		Nothing
  4042 ;; This function is called by:
  4043 ;;		_I2C_Master_Start
  4044 ;;		_I2C_Master_RepeatedStart
  4045 ;;		_I2C_Master_Stop
  4046 ;;		_I2C_Master_Write
  4047 ;;		_I2C_Master_Read
  4048 ;; This function uses a non-reentrant model
  4049 ;;
  4050                           
  4051     0DF4                     _I2C_Master_Wait:	
  4052                           ;psect for function _I2C_Master_Wait
  4053                           
  4054     0DF4                     l1370:	
  4055                           ;incstack = 0
  4056                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4057                           
  4058     0DF4                     l32:	
  4059                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4060                           
  4061     0DF4  1683               	bsf	3,5	;RP0=1, select bank1
  4062     0DF5  1303               	bcf	3,6	;RP1=0, select bank1
  4063     0DF6  1914               	btfsc	20,2	;volatile
  4064     0DF7  2DF9               	goto	u681
  4065     0DF8  2DFA               	goto	u680
  4066     0DF9                     u681:
  4067     0DF9  2DF4               	goto	l32
  4068     0DFA                     u680:
  4069     0DFA                     l1372:
  4070     0DFA  0811               	movf	17,w	;volatile
  4071     0DFB  391F               	andlw	31
  4072     0DFC  1D03               	btfss	3,2
  4073     0DFD  2DFF               	goto	u691
  4074     0DFE  2E00               	goto	u690
  4075     0DFF                     u691:
  4076     0DFF  2DF4               	goto	l32
  4077     0E00                     u690:
  4078     0E00                     l35:
  4079     0E00  0008               	return
  4080     0E01                     __end_of_I2C_Master_Wait:
  4081                           
  4082                           	psect	text17
  4083     002F                     __ptext17:	
  4084 ;; *************** function ___awmod *****************
  4085 ;; Defined at:
  4086 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4087 ;; Parameters:    Size  Location     Type
  4088 ;;  divisor         2    9[COMMON] int 
  4089 ;;  dividend        2   11[COMMON] int 
  4090 ;; Auto vars:     Size  Location     Type
  4091 ;;  sign            1    1[BANK0 ] unsigned char 
  4092 ;;  counter         1    0[BANK0 ] unsigned char 
  4093 ;; Return value:  Size  Location     Type
  4094 ;;                  2    9[COMMON] int 
  4095 ;; Registers used:
  4096 ;;		wreg, status,2, status,0
  4097 ;; Tracked objects:
  4098 ;;		On entry : 0/0
  4099 ;;		On exit  : 0/0
  4100 ;;		Unchanged: 0/0
  4101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4102 ;;      Params:         4       0       0       0       0
  4103 ;;      Locals:         0       2       0       0       0
  4104 ;;      Temps:          1       0       0       0       0
  4105 ;;      Totals:         5       2       0       0       0
  4106 ;;Total ram usage:        7 bytes
  4107 ;; Hardware stack levels used: 1
  4108 ;; This function calls:
  4109 ;;		Nothing
  4110 ;; This function is called by:
  4111 ;;		_main
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115     002F                     ___awmod:	
  4116                           ;psect for function ___awmod
  4117                           
  4118     002F                     l1690:	
  4119                           ;incstack = 0
  4120                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4121                           
  4122     002F  1283               	bcf	3,5	;RP0=0, select bank0
  4123     0030  1303               	bcf	3,6	;RP1=0, select bank0
  4124     0031  01A1               	clrf	___awmod@sign
  4125     0032                     l1692:
  4126     0032  1FFC               	btfss	___awmod@dividend+1,7
  4127     0033  2835               	goto	u1181
  4128     0034  2836               	goto	u1180
  4129     0035                     u1181:
  4130     0035  283D               	goto	l1698
  4131     0036                     u1180:
  4132     0036                     l1694:
  4133     0036  09FB               	comf	___awmod@dividend,f
  4134     0037  09FC               	comf	___awmod@dividend+1,f
  4135     0038  0AFB               	incf	___awmod@dividend,f
  4136     0039  1903               	skipnz
  4137     003A  0AFC               	incf	___awmod@dividend+1,f
  4138     003B                     l1696:
  4139     003B  01A1               	clrf	___awmod@sign
  4140     003C  0AA1               	incf	___awmod@sign,f
  4141     003D                     l1698:
  4142     003D  1FFA               	btfss	___awmod@divisor+1,7
  4143     003E  2840               	goto	u1191
  4144     003F  2841               	goto	u1190
  4145     0040                     u1191:
  4146     0040  2846               	goto	l1702
  4147     0041                     u1190:
  4148     0041                     l1700:
  4149     0041  09F9               	comf	___awmod@divisor,f
  4150     0042  09FA               	comf	___awmod@divisor+1,f
  4151     0043  0AF9               	incf	___awmod@divisor,f
  4152     0044  1903               	skipnz
  4153     0045  0AFA               	incf	___awmod@divisor+1,f
  4154     0046                     l1702:
  4155     0046  0879               	movf	___awmod@divisor,w
  4156     0047  047A               	iorwf	___awmod@divisor+1,w
  4157     0048  1903               	btfsc	3,2
  4158     0049  284B               	goto	u1201
  4159     004A  284C               	goto	u1200
  4160     004B                     u1201:
  4161     004B  287B               	goto	l1720
  4162     004C                     u1200:
  4163     004C                     l1704:
  4164     004C  01A0               	clrf	___awmod@counter
  4165     004D  0AA0               	incf	___awmod@counter,f
  4166     004E  285A               	goto	l1710
  4167     004F                     l1706:
  4168     004F  3001               	movlw	1
  4169     0050                     u1215:
  4170     0050  1003               	clrc
  4171     0051  0DF9               	rlf	___awmod@divisor,f
  4172     0052  0DFA               	rlf	___awmod@divisor+1,f
  4173     0053  3EFF               	addlw	-1
  4174     0054  1D03               	skipz
  4175     0055  2850               	goto	u1215
  4176     0056                     l1708:
  4177     0056  3001               	movlw	1
  4178     0057  00FD               	movwf	??___awmod
  4179     0058  087D               	movf	??___awmod,w
  4180     0059  07A0               	addwf	___awmod@counter,f
  4181     005A                     l1710:
  4182     005A  1FFA               	btfss	___awmod@divisor+1,7
  4183     005B  285D               	goto	u1221
  4184     005C  285E               	goto	u1220
  4185     005D                     u1221:
  4186     005D  284F               	goto	l1706
  4187     005E                     u1220:
  4188     005E                     l1712:
  4189     005E  087A               	movf	___awmod@divisor+1,w
  4190     005F  027C               	subwf	___awmod@dividend+1,w
  4191     0060  1D03               	skipz
  4192     0061  2864               	goto	u1235
  4193     0062  0879               	movf	___awmod@divisor,w
  4194     0063  027B               	subwf	___awmod@dividend,w
  4195     0064                     u1235:
  4196     0064  1C03               	skipc
  4197     0065  2867               	goto	u1231
  4198     0066  2868               	goto	u1230
  4199     0067                     u1231:
  4200     0067  286E               	goto	l1716
  4201     0068                     u1230:
  4202     0068                     l1714:
  4203     0068  0879               	movf	___awmod@divisor,w
  4204     0069  02FB               	subwf	___awmod@dividend,f
  4205     006A  087A               	movf	___awmod@divisor+1,w
  4206     006B  1C03               	skipc
  4207     006C  03FC               	decf	___awmod@dividend+1,f
  4208     006D  02FC               	subwf	___awmod@dividend+1,f
  4209     006E                     l1716:
  4210     006E  3001               	movlw	1
  4211     006F                     u1245:
  4212     006F  1003               	clrc
  4213     0070  0CFA               	rrf	___awmod@divisor+1,f
  4214     0071  0CF9               	rrf	___awmod@divisor,f
  4215     0072  3EFF               	addlw	-1
  4216     0073  1D03               	skipz
  4217     0074  286F               	goto	u1245
  4218     0075                     l1718:
  4219     0075  3001               	movlw	1
  4220     0076  02A0               	subwf	___awmod@counter,f
  4221     0077  1D03               	btfss	3,2
  4222     0078  287A               	goto	u1251
  4223     0079  287B               	goto	u1250
  4224     007A                     u1251:
  4225     007A  285E               	goto	l1712
  4226     007B                     u1250:
  4227     007B                     l1720:
  4228     007B  0821               	movf	___awmod@sign,w
  4229     007C  1903               	btfsc	3,2
  4230     007D  287F               	goto	u1261
  4231     007E  2880               	goto	u1260
  4232     007F                     u1261:
  4233     007F  2885               	goto	l1724
  4234     0080                     u1260:
  4235     0080                     l1722:
  4236     0080  09FB               	comf	___awmod@dividend,f
  4237     0081  09FC               	comf	___awmod@dividend+1,f
  4238     0082  0AFB               	incf	___awmod@dividend,f
  4239     0083  1903               	skipnz
  4240     0084  0AFC               	incf	___awmod@dividend+1,f
  4241     0085                     l1724:
  4242     0085  087C               	movf	___awmod@dividend+1,w
  4243     0086  00FA               	movwf	?___awmod+1
  4244     0087  087B               	movf	___awmod@dividend,w
  4245     0088  00F9               	movwf	?___awmod
  4246     0089                     l448:
  4247     0089  0008               	return
  4248     008A                     __end_of___awmod:
  4249                           
  4250                           	psect	text18
  4251     01A8                     __ptext18:	
  4252 ;; *************** function ___awdiv *****************
  4253 ;; Defined at:
  4254 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  divisor         2    0[COMMON] int 
  4257 ;;  dividend        2    2[COMMON] int 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  quotient        2    7[COMMON] int 
  4260 ;;  sign            1    6[COMMON] unsigned char 
  4261 ;;  counter         1    5[COMMON] unsigned char 
  4262 ;; Return value:  Size  Location     Type
  4263 ;;                  2    0[COMMON] int 
  4264 ;; Registers used:
  4265 ;;		wreg, status,2, status,0
  4266 ;; Tracked objects:
  4267 ;;		On entry : 0/0
  4268 ;;		On exit  : 0/0
  4269 ;;		Unchanged: 0/0
  4270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4271 ;;      Params:         4       0       0       0       0
  4272 ;;      Locals:         4       0       0       0       0
  4273 ;;      Temps:          1       0       0       0       0
  4274 ;;      Totals:         9       0       0       0       0
  4275 ;;Total ram usage:        9 bytes
  4276 ;; Hardware stack levels used: 1
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_main
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284     01A8                     ___awdiv:	
  4285                           ;psect for function ___awdiv
  4286                           
  4287     01A8                     l1646:	
  4288                           ;incstack = 0
  4289                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4290                           
  4291     01A8  01F6               	clrf	___awdiv@sign
  4292     01A9                     l1648:
  4293     01A9  1FF1               	btfss	___awdiv@divisor+1,7
  4294     01AA  29AC               	goto	u1081
  4295     01AB  29AD               	goto	u1080
  4296     01AC                     u1081:
  4297     01AC  29B4               	goto	l1654
  4298     01AD                     u1080:
  4299     01AD                     l1650:
  4300     01AD  09F0               	comf	___awdiv@divisor,f
  4301     01AE  09F1               	comf	___awdiv@divisor+1,f
  4302     01AF  0AF0               	incf	___awdiv@divisor,f
  4303     01B0  1903               	skipnz
  4304     01B1  0AF1               	incf	___awdiv@divisor+1,f
  4305     01B2                     l1652:
  4306     01B2  01F6               	clrf	___awdiv@sign
  4307     01B3  0AF6               	incf	___awdiv@sign,f
  4308     01B4                     l1654:
  4309     01B4  1FF3               	btfss	___awdiv@dividend+1,7
  4310     01B5  29B7               	goto	u1091
  4311     01B6  29B8               	goto	u1090
  4312     01B7                     u1091:
  4313     01B7  29C1               	goto	l1660
  4314     01B8                     u1090:
  4315     01B8                     l1656:
  4316     01B8  09F2               	comf	___awdiv@dividend,f
  4317     01B9  09F3               	comf	___awdiv@dividend+1,f
  4318     01BA  0AF2               	incf	___awdiv@dividend,f
  4319     01BB  1903               	skipnz
  4320     01BC  0AF3               	incf	___awdiv@dividend+1,f
  4321     01BD                     l1658:
  4322     01BD  3001               	movlw	1
  4323     01BE  00F4               	movwf	??___awdiv
  4324     01BF  0874               	movf	??___awdiv,w
  4325     01C0  06F6               	xorwf	___awdiv@sign,f
  4326     01C1                     l1660:
  4327     01C1  01F7               	clrf	___awdiv@quotient
  4328     01C2  01F8               	clrf	___awdiv@quotient+1
  4329     01C3                     l1662:
  4330     01C3  0870               	movf	___awdiv@divisor,w
  4331     01C4  0471               	iorwf	___awdiv@divisor+1,w
  4332     01C5  1903               	btfsc	3,2
  4333     01C6  29C8               	goto	u1101
  4334     01C7  29C9               	goto	u1100
  4335     01C8                     u1101:
  4336     01C8  2A00               	goto	l1682
  4337     01C9                     u1100:
  4338     01C9                     l1664:
  4339     01C9  01F5               	clrf	___awdiv@counter
  4340     01CA  0AF5               	incf	___awdiv@counter,f
  4341     01CB  29D7               	goto	l1670
  4342     01CC                     l1666:
  4343     01CC  3001               	movlw	1
  4344     01CD                     u1115:
  4345     01CD  1003               	clrc
  4346     01CE  0DF0               	rlf	___awdiv@divisor,f
  4347     01CF  0DF1               	rlf	___awdiv@divisor+1,f
  4348     01D0  3EFF               	addlw	-1
  4349     01D1  1D03               	skipz
  4350     01D2  29CD               	goto	u1115
  4351     01D3                     l1668:
  4352     01D3  3001               	movlw	1
  4353     01D4  00F4               	movwf	??___awdiv
  4354     01D5  0874               	movf	??___awdiv,w
  4355     01D6  07F5               	addwf	___awdiv@counter,f
  4356     01D7                     l1670:
  4357     01D7  1FF1               	btfss	___awdiv@divisor+1,7
  4358     01D8  29DA               	goto	u1121
  4359     01D9  29DB               	goto	u1120
  4360     01DA                     u1121:
  4361     01DA  29CC               	goto	l1666
  4362     01DB                     u1120:
  4363     01DB                     l1672:
  4364     01DB  3001               	movlw	1
  4365     01DC                     u1135:
  4366     01DC  1003               	clrc
  4367     01DD  0DF7               	rlf	___awdiv@quotient,f
  4368     01DE  0DF8               	rlf	___awdiv@quotient+1,f
  4369     01DF  3EFF               	addlw	-1
  4370     01E0  1D03               	skipz
  4371     01E1  29DC               	goto	u1135
  4372     01E2  0871               	movf	___awdiv@divisor+1,w
  4373     01E3  0273               	subwf	___awdiv@dividend+1,w
  4374     01E4  1D03               	skipz
  4375     01E5  29E8               	goto	u1145
  4376     01E6  0870               	movf	___awdiv@divisor,w
  4377     01E7  0272               	subwf	___awdiv@dividend,w
  4378     01E8                     u1145:
  4379     01E8  1C03               	skipc
  4380     01E9  29EB               	goto	u1141
  4381     01EA  29EC               	goto	u1140
  4382     01EB                     u1141:
  4383     01EB  29F3               	goto	l1678
  4384     01EC                     u1140:
  4385     01EC                     l1674:
  4386     01EC  0870               	movf	___awdiv@divisor,w
  4387     01ED  02F2               	subwf	___awdiv@dividend,f
  4388     01EE  0871               	movf	___awdiv@divisor+1,w
  4389     01EF  1C03               	skipc
  4390     01F0  03F3               	decf	___awdiv@dividend+1,f
  4391     01F1  02F3               	subwf	___awdiv@dividend+1,f
  4392     01F2                     l1676:
  4393     01F2  1477               	bsf	___awdiv@quotient,0
  4394     01F3                     l1678:
  4395     01F3  3001               	movlw	1
  4396     01F4                     u1155:
  4397     01F4  1003               	clrc
  4398     01F5  0CF1               	rrf	___awdiv@divisor+1,f
  4399     01F6  0CF0               	rrf	___awdiv@divisor,f
  4400     01F7  3EFF               	addlw	-1
  4401     01F8  1D03               	skipz
  4402     01F9  29F4               	goto	u1155
  4403     01FA                     l1680:
  4404     01FA  3001               	movlw	1
  4405     01FB  02F5               	subwf	___awdiv@counter,f
  4406     01FC  1D03               	btfss	3,2
  4407     01FD  29FF               	goto	u1161
  4408     01FE  2A00               	goto	u1160
  4409     01FF                     u1161:
  4410     01FF  29DB               	goto	l1672
  4411     0200                     u1160:
  4412     0200                     l1682:
  4413     0200  0876               	movf	___awdiv@sign,w
  4414     0201  1903               	btfsc	3,2
  4415     0202  2A04               	goto	u1171
  4416     0203  2A05               	goto	u1170
  4417     0204                     u1171:
  4418     0204  2A0A               	goto	l1686
  4419     0205                     u1170:
  4420     0205                     l1684:
  4421     0205  09F7               	comf	___awdiv@quotient,f
  4422     0206  09F8               	comf	___awdiv@quotient+1,f
  4423     0207  0AF7               	incf	___awdiv@quotient,f
  4424     0208  1903               	skipnz
  4425     0209  0AF8               	incf	___awdiv@quotient+1,f
  4426     020A                     l1686:
  4427     020A  0878               	movf	___awdiv@quotient+1,w
  4428     020B  00F1               	movwf	?___awdiv+1
  4429     020C  0877               	movf	___awdiv@quotient,w
  4430     020D  00F0               	movwf	?___awdiv
  4431     020E                     l435:
  4432     020E  0008               	return
  4433     020F                     __end_of___awdiv:
  4434                           
  4435                           	psect	text19
  4436     0F34                     __ptext19:	
  4437 ;; *************** function _Lcd_Write_String_4bits *****************
  4438 ;; Defined at:
  4439 ;;		line 99 in file "configLCD_4bits.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;  a               2    5[COMMON] PTR unsigned char 
  4442 ;;		 -> main@stringAO(9), main@stringMES(9), main@stringDIA(9), main@stringHOR(9), 
  4443 ;;		 -> main@stringMIN(9), main@stringSEG(9), main@ADC1(9), STR_5(2), 
  4444 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(4), 
  4445 ;; Auto vars:     Size  Location     Type
  4446 ;;  i               2   10[COMMON] int 
  4447 ;; Return value:  Size  Location     Type
  4448 ;;                  1    wreg      void 
  4449 ;; Registers used:
  4450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4451 ;; Tracked objects:
  4452 ;;		On entry : 0/0
  4453 ;;		On exit  : 0/0
  4454 ;;		Unchanged: 0/0
  4455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4456 ;;      Params:         2       0       0       0       0
  4457 ;;      Locals:         2       0       0       0       0
  4458 ;;      Temps:          3       0       0       0       0
  4459 ;;      Totals:         7       0       0       0       0
  4460 ;;Total ram usage:        7 bytes
  4461 ;; Hardware stack levels used: 1
  4462 ;; Hardware stack levels required when called: 2
  4463 ;; This function calls:
  4464 ;;		_Lcd_Write_Char_4bits
  4465 ;; This function is called by:
  4466 ;;		_main
  4467 ;; This function uses a non-reentrant model
  4468 ;;
  4469                           
  4470     0F34                     _Lcd_Write_String_4bits:	
  4471                           ;psect for function _Lcd_Write_String_4bits
  4472                           
  4473     0F34                     l1570:	
  4474                           ;incstack = 0
  4475                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4476                           
  4477                           
  4478                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  4479     0F34  01FA               	clrf	Lcd_Write_String_4bits@i
  4480     0F35  01FB               	clrf	Lcd_Write_String_4bits@i+1
  4481     0F36  2F59               	goto	l1576
  4482     0F37                     l1572:
  4483                           
  4484                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  4485     0F37  087A               	movf	Lcd_Write_String_4bits@i,w
  4486     0F38  0775               	addwf	Lcd_Write_String_4bits@a,w
  4487     0F39  00F8               	movwf	??_Lcd_Write_String_4bits+1
  4488     0F3A  0876               	movf	Lcd_Write_String_4bits@a+1,w
  4489     0F3B  00F7               	movwf	??_Lcd_Write_String_4bits
  4490     0F3C  1803               	skipnc
  4491     0F3D  0AF7               	incf	??_Lcd_Write_String_4bits,f
  4492     0F3E  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  4493     0F3F  2F41               	goto	u990
  4494     0F40  03F7               	decf	??_Lcd_Write_String_4bits,f
  4495     0F41                     u990:
  4496     0F41  0877               	movf	??_Lcd_Write_String_4bits,w
  4497     0F42  00F9               	movwf	??_Lcd_Write_String_4bits+2
  4498     0F43  0879               	movf	??_Lcd_Write_String_4bits+2,w
  4499     0F44  1283               	bcf	3,5	;RP0=0, select bank0
  4500     0F45  1303               	bcf	3,6	;RP1=0, select bank0
  4501     0F46  00FF               	movwf	btemp+1
  4502     0F47  0878               	movf	??_Lcd_Write_String_4bits+1,w
  4503     0F48  0084               	movwf	4
  4504     0F49  120A  158A  2000  120A  158A  	fcall	stringtab
  4505     0F4E  120A  158A  268D  120A  158A  	fcall	_Lcd_Write_Char_4bits
  4506     0F53                     l1574:
  4507     0F53  3001               	movlw	1
  4508     0F54  07FA               	addwf	Lcd_Write_String_4bits@i,f
  4509     0F55  1803               	skipnc
  4510     0F56  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
  4511     0F57  3000               	movlw	0
  4512     0F58  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
  4513     0F59                     l1576:
  4514     0F59  087A               	movf	Lcd_Write_String_4bits@i,w
  4515     0F5A  0775               	addwf	Lcd_Write_String_4bits@a,w
  4516     0F5B  00F8               	movwf	??_Lcd_Write_String_4bits+1
  4517     0F5C  0876               	movf	Lcd_Write_String_4bits@a+1,w
  4518     0F5D  00F7               	movwf	??_Lcd_Write_String_4bits
  4519     0F5E  1803               	skipnc
  4520     0F5F  0AF7               	incf	??_Lcd_Write_String_4bits,f
  4521     0F60  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  4522     0F61  2F63               	goto	u1000
  4523     0F62  03F7               	decf	??_Lcd_Write_String_4bits,f
  4524     0F63                     u1000:
  4525     0F63  0877               	movf	??_Lcd_Write_String_4bits,w
  4526     0F64  00F9               	movwf	??_Lcd_Write_String_4bits+2
  4527     0F65  0879               	movf	??_Lcd_Write_String_4bits+2,w
  4528     0F66  1283               	bcf	3,5	;RP0=0, select bank0
  4529     0F67  1303               	bcf	3,6	;RP1=0, select bank0
  4530     0F68  00FF               	movwf	btemp+1
  4531     0F69  0878               	movf	??_Lcd_Write_String_4bits+1,w
  4532     0F6A  0084               	movwf	4
  4533     0F6B  120A  158A  2000  120A  158A  	fcall	stringtab
  4534     0F70  3A00               	xorlw	0
  4535     0F71  1D03               	skipz
  4536     0F72  2F74               	goto	u1011
  4537     0F73  2F75               	goto	u1010
  4538     0F74                     u1011:
  4539     0F74  2F37               	goto	l1572
  4540     0F75                     u1010:
  4541     0F75                     l99:
  4542     0F75  0008               	return
  4543     0F76                     __end_of_Lcd_Write_String_4bits:
  4544                           
  4545                           	psect	text20
  4546     0E8D                     __ptext20:	
  4547 ;; *************** function _Lcd_Write_Char_4bits *****************
  4548 ;; Defined at:
  4549 ;;		line 84 in file "configLCD_4bits.c"
  4550 ;; Parameters:    Size  Location     Type
  4551 ;;  a               1    wreg     unsigned char 
  4552 ;; Auto vars:     Size  Location     Type
  4553 ;;  a               1    4[COMMON] unsigned char 
  4554 ;;  y               1    3[COMMON] unsigned char 
  4555 ;;  temp            1    2[COMMON] unsigned char 
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, status,2, status,0, pclath, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         0       0       0       0       0
  4566 ;;      Locals:         3       0       0       0       0
  4567 ;;      Temps:          1       0       0       0       0
  4568 ;;      Totals:         4       0       0       0       0
  4569 ;;Total ram usage:        4 bytes
  4570 ;; Hardware stack levels used: 1
  4571 ;; Hardware stack levels required when called: 1
  4572 ;; This function calls:
  4573 ;;		_Lcd_Port_4bits
  4574 ;; This function is called by:
  4575 ;;		_Lcd_Write_String_4bits
  4576 ;; This function uses a non-reentrant model
  4577 ;;
  4578                           
  4579     0E8D                     _Lcd_Write_Char_4bits:	
  4580                           ;psect for function _Lcd_Write_Char_4bits
  4581                           
  4582                           
  4583                           ;incstack = 0
  4584                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  4585                           ;Lcd_Write_Char_4bits@a stored from wreg
  4586     0E8D  00F4               	movwf	Lcd_Write_Char_4bits@a
  4587     0E8E                     l1466:
  4588                           
  4589                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  4590     0E8E  0874               	movf	Lcd_Write_Char_4bits@a,w
  4591     0E8F  390F               	andlw	15
  4592     0E90  00F2               	movwf	Lcd_Write_Char_4bits@temp
  4593                           
  4594                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  4595     0E91  0874               	movf	Lcd_Write_Char_4bits@a,w
  4596     0E92  39F0               	andlw	240
  4597     0E93  00F3               	movwf	Lcd_Write_Char_4bits@y
  4598     0E94                     l1468:
  4599                           
  4600                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  4601     0E94  1283               	bcf	3,5	;RP0=0, select bank0
  4602     0E95  1303               	bcf	3,6	;RP1=0, select bank0
  4603     0E96  1508               	bsf	8,2	;volatile
  4604     0E97                     l1470:
  4605                           
  4606                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  4607     0E97  0873               	movf	Lcd_Write_Char_4bits@y,w
  4608     0E98  00F1               	movwf	??_Lcd_Write_Char_4bits
  4609     0E99  3004               	movlw	4
  4610     0E9A                     u795:
  4611     0E9A  1003               	clrc
  4612     0E9B  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
  4613     0E9C  3EFF               	addlw	-1
  4614     0E9D  1D03               	skipz
  4615     0E9E  2E9A               	goto	u795
  4616     0E9F  0871               	movf	??_Lcd_Write_Char_4bits,w
  4617     0EA0  120A  158A  263D  120A  158A  	fcall	_Lcd_Port_4bits
  4618     0EA5                     l1472:
  4619                           
  4620                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  4621     0EA5  1283               	bcf	3,5	;RP0=0, select bank0
  4622     0EA6  1303               	bcf	3,6	;RP1=0, select bank0
  4623     0EA7  1588               	bsf	8,3	;volatile
  4624     0EA8                     l1474:
  4625                           
  4626                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4627     0EA8  301A               	movlw	26
  4628     0EA9  00F1               	movwf	??_Lcd_Write_Char_4bits
  4629     0EAA                     u1327:
  4630     0EAA  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  4631     0EAB  2EAA               	goto	u1327
  4632     0EAC  0000               	nop
  4633     0EAD                     l1476:
  4634                           
  4635                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  4636     0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  4637     0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  4638     0EAF  1188               	bcf	8,3	;volatile
  4639     0EB0                     l1478:
  4640                           
  4641                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  4642     0EB0  0872               	movf	Lcd_Write_Char_4bits@temp,w
  4643     0EB1  120A  158A  263D  120A  158A  	fcall	_Lcd_Port_4bits
  4644     0EB6                     l1480:
  4645                           
  4646                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  4647     0EB6  1283               	bcf	3,5	;RP0=0, select bank0
  4648     0EB7  1303               	bcf	3,6	;RP1=0, select bank0
  4649     0EB8  1588               	bsf	8,3	;volatile
  4650     0EB9                     l1482:
  4651                           
  4652                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4653     0EB9  301A               	movlw	26
  4654     0EBA  00F1               	movwf	??_Lcd_Write_Char_4bits
  4655     0EBB                     u1337:
  4656     0EBB  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  4657     0EBC  2EBB               	goto	u1337
  4658     0EBD  0000               	nop
  4659     0EBE                     l1484:
  4660                           
  4661                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  4662     0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  4663     0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  4664     0EC0  1188               	bcf	8,3	;volatile
  4665     0EC1                     l93:
  4666     0EC1  0008               	return
  4667     0EC2                     __end_of_Lcd_Write_Char_4bits:
  4668                           
  4669                           	psect	text21
  4670     0FBA                     __ptext21:	
  4671 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  4672 ;; Defined at:
  4673 ;;		line 49 in file "configLCD_4bits.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  a               1    wreg     unsigned char 
  4676 ;;  b               1    4[COMMON] unsigned char 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  a               1    6[COMMON] unsigned char 
  4679 ;;  temp            1    9[COMMON] unsigned char 
  4680 ;;  y               1    8[COMMON] unsigned char 
  4681 ;;  z               1    7[COMMON] unsigned char 
  4682 ;; Return value:  Size  Location     Type
  4683 ;;                  1    wreg      void 
  4684 ;; Registers used:
  4685 ;;		wreg, status,2, status,0, pclath, cstack
  4686 ;; Tracked objects:
  4687 ;;		On entry : 0/0
  4688 ;;		On exit  : 0/0
  4689 ;;		Unchanged: 0/0
  4690 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4691 ;;      Params:         1       0       0       0       0
  4692 ;;      Locals:         4       0       0       0       0
  4693 ;;      Temps:          1       0       0       0       0
  4694 ;;      Totals:         6       0       0       0       0
  4695 ;;Total ram usage:        6 bytes
  4696 ;; Hardware stack levels used: 1
  4697 ;; Hardware stack levels required when called: 2
  4698 ;; This function calls:
  4699 ;;		_Lcd_Cmd_4bits
  4700 ;; This function is called by:
  4701 ;;		_main
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705     0FBA                     _Lcd_Set_Cursor_4bits:	
  4706                           ;psect for function _Lcd_Set_Cursor_4bits
  4707                           
  4708                           
  4709                           ;incstack = 0
  4710                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  4711                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  4712     0FBA  00F6               	movwf	Lcd_Set_Cursor_4bits@a
  4713     0FBB                     l1550:
  4714                           
  4715                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  4716     0FBB  0376               	decf	Lcd_Set_Cursor_4bits@a,w
  4717     0FBC  1D03               	btfss	3,2
  4718     0FBD  2FBF               	goto	u951
  4719     0FBE  2FC0               	goto	u950
  4720     0FBF                     u951:
  4721     0FBF  2FDD               	goto	l1560
  4722     0FC0                     u950:
  4723     0FC0                     l1552:
  4724                           
  4725                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  4726     0FC0  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  4727     0FC1  3E7F               	addlw	127
  4728     0FC2  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  4729                           
  4730                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  4731     0FC3  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  4732     0FC4  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  4733     0FC5  3004               	movlw	4
  4734     0FC6                     u965:
  4735     0FC6  1003               	clrc
  4736     0FC7  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  4737     0FC8  3EFF               	addlw	-1
  4738     0FC9  1D03               	skipz
  4739     0FCA  2FC6               	goto	u965
  4740     0FCB  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  4741     0FCC  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  4742     0FCD                     l1554:
  4743                           
  4744                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  4745     0FCD  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  4746     0FCE  390F               	andlw	15
  4747     0FCF  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  4748     0FD0                     l1556:
  4749                           
  4750                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  4751     0FD0  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  4752     0FD1  120A  158A  2623  120A  158A  	fcall	_Lcd_Cmd_4bits
  4753     0FD6                     l1558:
  4754                           
  4755                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  4756     0FD6  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  4757     0FD7  120A  158A  2623  120A  158A  	fcall	_Lcd_Cmd_4bits
  4758                           
  4759                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  4760     0FDC  2FFF               	goto	l87
  4761     0FDD                     l1560:
  4762     0FDD  3002               	movlw	2
  4763     0FDE  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
  4764     0FDF  1D03               	btfss	3,2
  4765     0FE0  2FE2               	goto	u971
  4766     0FE1  2FE3               	goto	u970
  4767     0FE2                     u971:
  4768     0FE2  2FFF               	goto	l87
  4769     0FE3                     u970:
  4770     0FE3                     l1562:
  4771                           
  4772                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  4773     0FE3  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  4774     0FE4  3EBF               	addlw	191
  4775     0FE5  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  4776                           
  4777                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  4778     0FE6  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  4779     0FE7  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  4780     0FE8  3004               	movlw	4
  4781     0FE9                     u985:
  4782     0FE9  1003               	clrc
  4783     0FEA  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  4784     0FEB  3EFF               	addlw	-1
  4785     0FEC  1D03               	skipz
  4786     0FED  2FE9               	goto	u985
  4787     0FEE  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  4788     0FEF  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  4789     0FF0                     l1564:
  4790                           
  4791                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  4792     0FF0  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  4793     0FF1  390F               	andlw	15
  4794     0FF2  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  4795     0FF3                     l1566:
  4796                           
  4797                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  4798     0FF3  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  4799     0FF4  120A  158A  2623  120A  158A  	fcall	_Lcd_Cmd_4bits
  4800     0FF9                     l1568:
  4801                           
  4802                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  4803     0FF9  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  4804     0FFA  120A  158A  2623  120A  158A  	fcall	_Lcd_Cmd_4bits
  4805     0FFF                     l87:
  4806     0FFF  0008               	return
  4807     1000                     __end_of_Lcd_Set_Cursor_4bits:
  4808                           
  4809                           	psect	text22
  4810     0DE7                     __ptext22:	
  4811 ;; *************** function _Lcd_Clear_4bits *****************
  4812 ;; Defined at:
  4813 ;;		line 44 in file "configLCD_4bits.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;		None
  4816 ;; Auto vars:     Size  Location     Type
  4817 ;;		None
  4818 ;; Return value:  Size  Location     Type
  4819 ;;                  1    wreg      void 
  4820 ;; Registers used:
  4821 ;;		wreg, status,2, status,0, pclath, cstack
  4822 ;; Tracked objects:
  4823 ;;		On entry : 0/0
  4824 ;;		On exit  : 0/0
  4825 ;;		Unchanged: 0/0
  4826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4827 ;;      Params:         0       0       0       0       0
  4828 ;;      Locals:         0       0       0       0       0
  4829 ;;      Temps:          0       0       0       0       0
  4830 ;;      Totals:         0       0       0       0       0
  4831 ;;Total ram usage:        0 bytes
  4832 ;; Hardware stack levels used: 1
  4833 ;; Hardware stack levels required when called: 2
  4834 ;; This function calls:
  4835 ;;		_Lcd_Cmd_4bits
  4836 ;; This function is called by:
  4837 ;;		_main
  4838 ;; This function uses a non-reentrant model
  4839 ;;
  4840                           
  4841     0DE7                     _Lcd_Clear_4bits:	
  4842                           ;psect for function _Lcd_Clear_4bits
  4843                           
  4844     0DE7                     l1548:	
  4845                           ;incstack = 0
  4846                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  4847                           
  4848                           
  4849                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  4850     0DE7  3000               	movlw	0
  4851     0DE8  120A  158A  2623  120A  158A  	fcall	_Lcd_Cmd_4bits
  4852                           
  4853                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  4854     0DED  3001               	movlw	1
  4855     0DEE  120A  158A  2623  120A  158A  	fcall	_Lcd_Cmd_4bits
  4856     0DF3                     l81:
  4857     0DF3  0008               	return
  4858     0DF4                     __end_of_Lcd_Clear_4bits:
  4859                           
  4860                           	psect	text23
  4861     0E23                     __ptext23:	
  4862 ;; *************** function _Lcd_Cmd_4bits *****************
  4863 ;; Defined at:
  4864 ;;		line 36 in file "configLCD_4bits.c"
  4865 ;; Parameters:    Size  Location     Type
  4866 ;;  a               1    wreg     unsigned char 
  4867 ;; Auto vars:     Size  Location     Type
  4868 ;;  a               1    3[COMMON] unsigned char 
  4869 ;; Return value:  Size  Location     Type
  4870 ;;                  1    wreg      void 
  4871 ;; Registers used:
  4872 ;;		wreg, status,2, status,0, pclath, cstack
  4873 ;; Tracked objects:
  4874 ;;		On entry : 0/0
  4875 ;;		On exit  : 0/0
  4876 ;;		Unchanged: 0/0
  4877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4878 ;;      Params:         0       0       0       0       0
  4879 ;;      Locals:         1       0       0       0       0
  4880 ;;      Temps:          2       0       0       0       0
  4881 ;;      Totals:         3       0       0       0       0
  4882 ;;Total ram usage:        3 bytes
  4883 ;; Hardware stack levels used: 1
  4884 ;; Hardware stack levels required when called: 1
  4885 ;; This function calls:
  4886 ;;		_Lcd_Port_4bits
  4887 ;; This function is called by:
  4888 ;;		_Lcd_Clear_4bits
  4889 ;;		_Lcd_Set_Cursor_4bits
  4890 ;;		_Lcd_Init_4bits
  4891 ;;		_Lcd_Shift_Right_4bits
  4892 ;;		_Lcd_Shift_Left_4bits
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896     0E23                     _Lcd_Cmd_4bits:	
  4897                           ;psect for function _Lcd_Cmd_4bits
  4898                           
  4899                           
  4900                           ;incstack = 0
  4901                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  4902                           ;Lcd_Cmd_4bits@a stored from wreg
  4903     0E23  00F3               	movwf	Lcd_Cmd_4bits@a
  4904     0E24                     l1374:
  4905                           
  4906                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  4907     0E24  1283               	bcf	3,5	;RP0=0, select bank0
  4908     0E25  1303               	bcf	3,6	;RP1=0, select bank0
  4909     0E26  1108               	bcf	8,2	;volatile
  4910     0E27                     l1376:
  4911                           
  4912                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  4913     0E27  0873               	movf	Lcd_Cmd_4bits@a,w
  4914     0E28  120A  158A  263D  120A  158A  	fcall	_Lcd_Port_4bits
  4915     0E2D                     l1378:
  4916                           
  4917                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  4918     0E2D  1283               	bcf	3,5	;RP0=0, select bank0
  4919     0E2E  1303               	bcf	3,6	;RP1=0, select bank0
  4920     0E2F  1588               	bsf	8,3	;volatile
  4921     0E30                     l1380:
  4922                           
  4923                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4924     0E30  300B               	movlw	11
  4925     0E31  00F2               	movwf	??_Lcd_Cmd_4bits+1
  4926     0E32  3062               	movlw	98
  4927     0E33  00F1               	movwf	??_Lcd_Cmd_4bits
  4928     0E34                     u1347:
  4929     0E34  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
  4930     0E35  2E34               	goto	u1347
  4931     0E36  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
  4932     0E37  2E34               	goto	u1347
  4933     0E38  0000               	nop
  4934     0E39                     l1382:
  4935                           
  4936                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  4937     0E39  1283               	bcf	3,5	;RP0=0, select bank0
  4938     0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  4939     0E3B  1188               	bcf	8,3	;volatile
  4940     0E3C                     l78:
  4941     0E3C  0008               	return
  4942     0E3D                     __end_of_Lcd_Cmd_4bits:
  4943                           
  4944                           	psect	text24
  4945     0E3D                     __ptext24:	
  4946 ;; *************** function _Lcd_Port_4bits *****************
  4947 ;; Defined at:
  4948 ;;		line 14 in file "configLCD_4bits.c"
  4949 ;; Parameters:    Size  Location     Type
  4950 ;;  a               1    wreg     unsigned char 
  4951 ;; Auto vars:     Size  Location     Type
  4952 ;;  a               1    0[COMMON] unsigned char 
  4953 ;; Return value:  Size  Location     Type
  4954 ;;                  1    wreg      void 
  4955 ;; Registers used:
  4956 ;;		wreg
  4957 ;; Tracked objects:
  4958 ;;		On entry : 0/0
  4959 ;;		On exit  : 0/0
  4960 ;;		Unchanged: 0/0
  4961 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4962 ;;      Params:         0       0       0       0       0
  4963 ;;      Locals:         1       0       0       0       0
  4964 ;;      Temps:          0       0       0       0       0
  4965 ;;      Totals:         1       0       0       0       0
  4966 ;;Total ram usage:        1 bytes
  4967 ;; Hardware stack levels used: 1
  4968 ;; This function calls:
  4969 ;;		Nothing
  4970 ;; This function is called by:
  4971 ;;		_Lcd_Cmd_4bits
  4972 ;;		_Lcd_Init_4bits
  4973 ;;		_Lcd_Write_Char_4bits
  4974 ;; This function uses a non-reentrant model
  4975 ;;
  4976                           
  4977     0E3D                     _Lcd_Port_4bits:	
  4978                           ;psect for function _Lcd_Port_4bits
  4979                           
  4980                           
  4981                           ;incstack = 0
  4982                           ; Regs used in _Lcd_Port_4bits: [wreg]
  4983                           ;Lcd_Port_4bits@a stored from wreg
  4984     0E3D  00F0               	movwf	Lcd_Port_4bits@a
  4985     0E3E                     l1360:
  4986                           
  4987                           ;configLCD_4bits.c: 15:     if (a & 1)
  4988     0E3E  1C70               	btfss	Lcd_Port_4bits@a,0
  4989     0E3F  2E41               	goto	u641
  4990     0E40  2E42               	goto	u640
  4991     0E41                     u641:
  4992     0E41  2E46               	goto	l67
  4993     0E42                     u640:
  4994     0E42                     l1362:
  4995                           
  4996                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  4997     0E42  1283               	bcf	3,5	;RP0=0, select bank0
  4998     0E43  1303               	bcf	3,6	;RP1=0, select bank0
  4999     0E44  1608               	bsf	8,4	;volatile
  5000     0E45  2E49               	goto	l68
  5001     0E46                     l67:	
  5002                           ;configLCD_4bits.c: 17:     else
  5003                           
  5004                           
  5005                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  5006     0E46  1283               	bcf	3,5	;RP0=0, select bank0
  5007     0E47  1303               	bcf	3,6	;RP1=0, select bank0
  5008     0E48  1208               	bcf	8,4	;volatile
  5009     0E49                     l68:
  5010                           
  5011                           ;configLCD_4bits.c: 20:     if (a & 2)
  5012     0E49  1CF0               	btfss	Lcd_Port_4bits@a,1
  5013     0E4A  2E4C               	goto	u651
  5014     0E4B  2E4D               	goto	u650
  5015     0E4C                     u651:
  5016     0E4C  2E4F               	goto	l69
  5017     0E4D                     u650:
  5018     0E4D                     l1364:
  5019                           
  5020                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  5021     0E4D  1688               	bsf	8,5	;volatile
  5022     0E4E  2E50               	goto	l70
  5023     0E4F                     l69:	
  5024                           ;configLCD_4bits.c: 22:     else
  5025                           
  5026                           
  5027                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  5028     0E4F  1288               	bcf	8,5	;volatile
  5029     0E50                     l70:
  5030                           
  5031                           ;configLCD_4bits.c: 25:     if (a & 4)
  5032     0E50  1D70               	btfss	Lcd_Port_4bits@a,2
  5033     0E51  2E53               	goto	u661
  5034     0E52  2E54               	goto	u660
  5035     0E53                     u661:
  5036     0E53  2E56               	goto	l71
  5037     0E54                     u660:
  5038     0E54                     l1366:
  5039                           
  5040                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  5041     0E54  1708               	bsf	8,6	;volatile
  5042     0E55  2E57               	goto	l72
  5043     0E56                     l71:	
  5044                           ;configLCD_4bits.c: 27:     else
  5045                           
  5046                           
  5047                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  5048     0E56  1308               	bcf	8,6	;volatile
  5049     0E57                     l72:
  5050                           
  5051                           ;configLCD_4bits.c: 30:     if (a & 8)
  5052     0E57  1DF0               	btfss	Lcd_Port_4bits@a,3
  5053     0E58  2E5A               	goto	u671
  5054     0E59  2E5B               	goto	u670
  5055     0E5A                     u671:
  5056     0E5A  2E5D               	goto	l73
  5057     0E5B                     u670:
  5058     0E5B                     l1368:
  5059                           
  5060                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  5061     0E5B  1788               	bsf	8,7	;volatile
  5062     0E5C  2E5E               	goto	l75
  5063     0E5D                     l73:	
  5064                           ;configLCD_4bits.c: 32:     else
  5065                           
  5066                           
  5067                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  5068     0E5D  1388               	bcf	8,7	;volatile
  5069     0E5E                     l75:
  5070     0E5E  0008               	return
  5071     0E5F                     __end_of_Lcd_Port_4bits:
  5072     007E                     btemp	set	126	;btemp
  5073     007E                     wtemp0	set	126
  5074                           
  5075                           	psect	idloc
  5076                           
  5077                           ;Config register IDLOC0 @ 0x2000
  5078                           ;	unspecified, using default values
  5079     2000                     	org	8192
  5080     2000  3FFF               	dw	16383
  5081                           
  5082                           ;Config register IDLOC1 @ 0x2001
  5083                           ;	unspecified, using default values
  5084     2001                     	org	8193
  5085     2001  3FFF               	dw	16383
  5086                           
  5087                           ;Config register IDLOC2 @ 0x2002
  5088                           ;	unspecified, using default values
  5089     2002                     	org	8194
  5090     2002  3FFF               	dw	16383
  5091                           
  5092                           ;Config register IDLOC3 @ 0x2003
  5093                           ;	unspecified, using default values
  5094     2003                     	org	8195
  5095     2003  3FFF               	dw	16383
  5096                           
  5097                           	psect	config
  5098                           
  5099                           ;Config register CONFIG1 @ 0x2007
  5100                           ;	Oscillator Selection bits
  5101                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5102                           ;	Watchdog Timer Enable bit
  5103                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5104                           ;	Power-up Timer Enable bit
  5105                           ;	PWRTE = OFF, PWRT disabled
  5106                           ;	RE3/MCLR pin function select bit
  5107                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5108                           ;	Code Protection bit
  5109                           ;	CP = OFF, Program memory code protection is disabled
  5110                           ;	Data Code Protection bit
  5111                           ;	CPD = OFF, Data memory code protection is disabled
  5112                           ;	Brown Out Reset Selection bits
  5113                           ;	BOREN = OFF, BOR disabled
  5114                           ;	Internal External Switchover bit
  5115                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5116                           ;	Fail-Safe Clock Monitor Enabled bit
  5117                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5118                           ;	Low Voltage Programming Enable bit
  5119                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5120                           ;	In-Circuit Debugger Mode bit
  5121                           ;	DEBUG = 0x1, unprogramme  5122     2007                     	org	8199
  5123     2007  20D4               	dw	8404
  5124                           
  5125                           ;Config register CONFIG2 @ 0x2008
  5126                           ;	Brown-out Reset Selection bit
  5127                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5128                           ;	Flash Program Memory Self Write Enable bits
  5129                           ;	WRT = OFF, Write protection off
  5130     2008                     	org	8200
  5131     2008  3FFF               	dw	16383

Data Sizes:
    Strings     9
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     16      16
    BANK1            80      0       0
    BANK3            96     89      89
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@stringAO(BANK3[9]), main@stringMES(BANK3[9]), main@stringDIA(BANK3[9]), main@stringHOR(BANK3[9]), 
		 -> main@stringMIN(BANK3[9]), main@stringSEG(BANK3[9]), main@ADC1(BANK3[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 9
		 -> main@stringAO(BANK3[9]), main@stringMES(BANK3[9]), main@stringDIA(BANK3[9]), main@stringHOR(BANK3[9]), 
		 -> main@stringMIN(BANK3[9]), main@stringSEG(BANK3[9]), main@ADC1(BANK3[9]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    _leerRTC->_I2C_Master_Read
    ___awmod->___awdiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                92    92      0   14876
                                             13 BANK0      3     3      0
                                              0 BANK3     89    89      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                            _leerRTC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    2865
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     632
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _leerRTC                                              5     5      0     781
                                              6 COMMON     5     5      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     326
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    2576
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1820
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2    1940
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1    2052
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _leerRTC
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___bmul
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      10       5       20.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     59      59       9       92.7%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Feb 15 23:51:07 2023

                               pc 0002                    ___bmul@product 0072                                l32 0DF4  
                              l41 0DCA                                l50 0E84                                l35 0E00  
                              l51 0E87                                l52 0E8C                                l44 0DDC  
                              l60 0E0D                                l29 0EF9                                l70 0E50  
                              l38 0DD3                                l71 0E56                                l47 0DE6  
                              l72 0E57                                l73 0E5D                                l81 0DF3  
                              l90 0141                                l75 0E5E                                l67 0E46  
                              l68 0E49                                l69 0E4F                                l93 0EC1  
                              l78 0E3C                                l87 0FFF                                l99 0F75  
                    ___awdiv@sign 0076                                fsr 0004                               l171 00E4  
                             l308 0E22                               l156 002E                               l318 01A7  
                             l435 020E                               l278 02CF                               l448 0089  
                             l554 0FB9                               l564 0F33                               _GIE 005F  
                             u700 0152                               u701 0151                               u640 0E42  
                             u800 0E14                               u720 0166                               u641 0E41  
                             u801 0E13                               u721 0165                               u650 0E4D  
                             u810 0E21                               u651 0E4C                               u811 0E20  
                             u715 0157                               u660 0E54                               u740 0181  
                             u820 0F7E                               u661 0E53                               u741 0180  
                             u821 0F7D                               u670 0E5B                               u910 0F12  
                             u671 0E5A                               u735 0168                               u911 0F11  
                             u680 0DFA                               u760 019F                               u840 0F90  
                             u920 0F1C                               u681 0DF9                               u761 019E  
                             u745 017D                               u841 0F8F                               u921 0F1B  
                             u905 0F04                               u690 0E00                               u770 0ED9  
                             u691 0DFF                               u755 0191                               u835 0F82  
                             u780 0E80                               u860 0FA1                               u940 0F2F  
                             u781 0E7F                               u861 0FA0                               u941 0F2E  
                             u925 0F18                               u950 0FC0                               u951 0FBF  
                             u775 0ED4                               u855 0F91                               u935 0F23  
                             u880 0FB5                               u881 0FB4                               u865 0F9D  
                             u970 0FE3                               u890 0F00                               u971 0FE2  
                             u795 0E9A                               u875 0FA9                               u891 0EFF  
                             u965 0FC6                               u990 0F41                               u985 0FE9  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0021  
                     leerRTC@DATO 007A                              l1400 0190                              l1402 0199  
                            l1410 0EC6                              l1420 0DCB                              l1404 019F  
                            l1412 0EC9                              l1500 0F76                              l1422 0DD0  
                            l1430 0DD9                              l1414 0EF6                              l1510 0F8C  
                            l1502 0F78                              l1360 0E3E                              l1440 0E6C  
                            l1424 0DC2                              l1432 0DDD                              l1416 0EF7  
                            l1408 0EC2                              l1520 0FAF                              l1512 0F90  
                            l1504 0F7E                              l1600 022C                              l1362 0E42  
                            l1370 0DF4                              l1442 0E75                              l1426 0DC7  
                            l1434 0DE2                              l1418 0EF8                              l1514 0FA1  
                            l1506 0F81                              l1522 0FB5                              l1530 0F03  
                            l1602 0246                              l1364 0E4D                              l1380 0E30  
                            l1700 0041                              l1372 0DFA                              l1444 0E7A  
                            l1436 0E5F                              l1428 0DD4                              l1460 00F4  
                            l1452 0E02                              l1516 0FA7                              l1508 0F88  
                            l1540 0F22                              l1532 0F0A                              l1620 027D  
                            l1612 0254                              l1604 024E                              l1366 0E54  
                            l1382 0E39                              l1374 0E24                              l1550 0FBB  
                            l1470 0E97                              l1710 005A                              l1702 0046  
                            l1446 0E80                              l1438 0E64                              l1390 0162  
                            l1462 0103                              l1454 0E0C                              l1518 0FA8  
                            l1542 0F29                              l1534 0F0E                              l1526 0EFA  
                            l1622 02A9                              l1606 0252                              l1630 02CB  
                            l1368 0E5B                              l1376 0E27                              l1552 0FC0  
                            l1560 0FDD                              l1480 0EB6                              l1472 0EA5  
                            l1712 005E                              l1704 004C                              l1720 007B  
                            l1448 0E88                              l1640 00C2                              l1392 0166  
                            l1384 0142                              l1464 0109                              l1456 00E5  
                            l1536 0F12                              l1528 0F00                              l1544 0F2F  
                            l1624 02AE                              l1616 0270                              l1800 04B7  
                            l1378 0E2D                              l1562 0FE3                              l1554 0FCD  
                            l1482 0EB9                              l1474 0EA8                              l1466 0E8E  
                            l1570 0F34                              l1650 01AD                              l1722 0080  
                            l1714 0068                              l1706 004F                              l1490 0E14  
                            l1642 00CE                              l1394 016F                              l1386 0152  
                            l1458 00EB                              l1538 0F1C                              l1626 02B2  
                            l1618 027A                              l1810 0516                              l1802 04DA  
                            l1548 0DE7                              l1564 0FF0                              l1556 0FD0  
                            l1484 0EBE                              l1476 0EAD                              l1468 0E94  
                            l1572 0F37                              l1660 01C1                              l1652 01B2  
                            l1724 0085                              l1716 006E                              l1708 0056  
                            l1492 0E18                              l1396 0181                              l1388 0155  
                            l1580 0016                              l1628 02BB                              l1820 0568  
                            l1812 052B                              l1804 04F0                              l1740 0304  
                            l1732 02D0                              l1566 0FF3                              l1558 0FD6  
                            l1478 0EB0                              l1574 0F53                              l1670 01D7  
                            l1662 01C3                              l1654 01B4                              l1646 01A8  
                            l1718 0075                              l1494 0E1A                              l1486 0E0F  
                            l1638 008B                              l1398 018F                              l1582 0023  
                            l1590 021B                              l1830 05B9                              l1822 057E  
                            l1814 0533                              l1806 0505                              l1750 033D  
                            l1742 0315                              l1734 02E2                              l1568 0FF9  
                            l1576 0F59                              l1680 01FA                              l1672 01DB  
                            l1664 01C9                              l1656 01B8                              l1648 01A9  
                            l1496 0E21                              l1488 0E10                              l1584 0029  
                            l1592 0220                              l1840 060C                              l1832 05C1  
                            l1824 0593                              l1816 053C                              l1808 050D  
                            l1760 0398                              l1752 0349                              l1744 031E  
                            l1736 02EB                              l1674 01EC                              l1666 01CC  
                            l1682 0200                              l1658 01BD                              l1690 002F  
                            l1578 000A                              l1594 0225                              l1586 0212  
                            l1850 064F                              l1842 0621                              l1834 05CA  
                            l1826 059B                              l1818 0545                              l1770 03E9  
                            l1762 03AE                              l1754 034E                              l1746 032F  
                            l1738 02FC                              l1684 0205                              l1676 01F2  
                            l1668 01D3                              l1692 0032                              l1596 0227  
                            l1588 0215                              l1860 06AF                              l1852 0658  
                            l1844 0629                              l1836 05D3                              l1828 05A4  
                            l1780 0420                              l1772 03F1                              l1764 03C3  
                            l1756 035D                              l1748 0334                              l1686 020A  
                            l1678 01F3                              l1694 0036                              l1918 023E  
                            l1870 06E6                              l1862 06B7                              l1854 0661  
                            l1846 0632                              l1838 05F6                              l1790 047F  
                            l1782 0429                              l1774 03FA                              l1766 03CB  
                            l1758 0375                              l1696 003B                              l1880 074A  
                            l1872 06EF                              l1864 06C0                              l1856 0684  
                            l1848 0647                              l1792 0488                              l1784 044C  
                            l1776 040F                              l1768 03D4                              l1698 003D  
                            l1890 07C1                              l1882 0775                              l1874 06F1  
                            l1866 06D5                              l1858 069A                              l1794 049D  
                            l1786 0462                              l1778 0417                              l1892 07C9  
                            l1884 077D                              l1876 0709                              l1868 06DD  
                            l1796 04A5                              l1788 0477                              l1894 07D2  
                            l1886 0786                              l1878 0727                              l1798 04AE  
                            l1896 07E7                              l1888 079B                              STR_1 081A  
                            STR_2 081C                              STR_3 081C                              STR_4 0821  
                            STR_5 0821                              STR_6 081E                              STR_7 081E  
                            STR_8 081E                              STR_9 081E                              u1000 0F63  
                            u1010 0F75                              u1011 0F74                              u1100 01C9  
                            u1020 021B                              u1101 01C8                              u1021 021A  
                            u1030 026F                              u1031 026E                              u1120 01DB  
                            u1200 004C                              u1040 027A                              u1121 01DA  
                            u1201 004B                              u1041 0279                              u1050 02BB  
                            u1115 01CD                              u1051 02BA                              u1035 026B  
                            u1140 01EC                              u1220 005E                              u1060 02CB  
                            u1141 01EB                              u1221 005D                              u1061 02CA  
                            u1230 0068                              u1135 01DC                              u1231 0067  
                            u1215 0050                              u1160 0200                              u1080 01AD  
                            u1161 01FF                              u1145 01E8                              u1081 01AC  
                            u1170 0205                              u1090 01B8                              u1250 007B  
                            u1171 0204                              u1155 01F4                              u1091 01B7  
                            u1251 007A                              u1235 0064                              u1075 00D6  
                            u1307 010D                              u1260 0080                              u1180 0036  
                            u1261 007F                              u1245 006F                              u1181 0035  
                            u1317 00C8                              u1190 0041                              u1327 0EAA  
                            u1191 0040                              u1337 0EBB                              u1347 0E34  
                            u1277 0356                              u1287 00EF                              u1297 00FE  
                            _PEIE 005E  __end_of_I2C_Master_RepeatedStart 0DCB                              _main 02D0  
          _Lcd_Write_String_4bits 0F34                              btemp 007E                              start 0000  
               ___bmul@multiplier 0073                  ?_I2C_Master_Init 0020                  ?_I2C_Master_Read 0070  
                ?_I2C_Master_Wait 0070                  ?_I2C_Master_Stop 0070                             ?_main 0070  
               ??_Lcd_Clear_4bits 0074                   __end_of___awdiv 020F                             STR_10 081E  
                           STR_11 081E                             STR_20 081E                             STR_12 081E  
                           STR_21 081E                             STR_13 081E                             STR_22 081E  
                           STR_14 081E                             STR_15 081E                             STR_16 081E  
                           STR_17 081E                             STR_18 081E                             STR_19 081E  
                 __end_of___awmod 008A                             _ANSEL 0188                   __end_of___lldiv 01A8  
                 ___awdiv@divisor 0070                   __end_of___lwdiv 0FBA                   __end_of___lwmod 0F34  
                 ___awdiv@counter 0075                             _PORTB 0006                             _PORTD 0008  
                           _TRISB 0086                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063             __end_of_Lcd_Cmd_4bits 0E3D                   __end_of_leerRTC 00E5  
                 __end_of_dpowers 081A                             _setup 000A                             pclath 000A  
                           status 0003                             wtemp0 007E                   __end_of_sprintf 02D0  
                    main@stringAO 01C6                   __initialization 07FC                      __end_of_main 07FC  
                          ??_main 002D                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0070  
              ??_I2C_Master_Start 0070                ??_I2C_Master_Write 0072                  ___awdiv@dividend 0072  
                          ?_setup 0070                            _ANSELH 0189                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013          Lcd_Write_Char_4bits@temp 0072          _I2C_Master_RepeatedStart 0DC2  
                          ___bmul 0E0E                         ??___awdiv 0074                         ??___awmod 007D  
                       ??___lldiv 0078                         ??___lwdiv 0074                         ??___lwmod 007C  
                ___awdiv@quotient 0077                   ___awmod@divisor 0079                   ___awmod@counter 0020  
                          main@AO 01E8                         ??_leerRTC 0076                      ?_setupINTOSC 0070  
                  _Lcd_Init_4bits 00E5                         ??_sprintf 0023                     main@stringDIA 01AB  
                   main@stringHOR 01A2                     main@stringMES 01B4                     main@stringMIN 0199  
                   main@stringSEG 0190           __end_of__initialization 07FC               ___bmul@multiplicand 0070  
                  __pcstackCOMMON 0070             Lcd_Write_Char_4bits@a 0074             Lcd_Write_Char_4bits@y 0073  
                   __end_of_setup 002F            __end_of_Lcd_Init_4bits 0142           ?_Lcd_Write_String_4bits 0075  
                         ??_setup 007E                    _Lcd_Port_4bits 0E3D                   _Lcd_Clear_4bits 0DE7  
                      __pmaintext 02D0                           ?___bmul 0070      __end_of_Lcd_Write_Char_4bits 0EC2  
                 Lcd_Port_4bits@a 0070                   ?_Lcd_Init_4bits 0070    __end_of_Lcd_Write_String_4bits 0F76  
                         _SSPCON2 0091                           _SSPSTAT 0094                        __stringtab 0800  
          __end_of_Lcd_Port_4bits 0E5F                           ___awdiv 01A8                           ___awmod 002F  
                         ___lldiv 0142                           ___lwdiv 0F76                           ___lwmod 0EFA  
                         __ptext1 020F                           __ptext2 0EFA                           __ptext3 0F76  
                         __ptext4 000A                           __ptext5 0E01                           __ptext6 00E5  
                         __ptext7 0EC2                           __ptext8 0142                           __ptext9 008A  
                         _leerRTC 008A                           _dpowers 0810                  ___awmod@dividend 007B  
                         main@DIA 01E5                           main@HOR 01E4                           main@MES 01E6  
                         main@MIN 01E3                           main@SEG 01E2      __end_of_Lcd_Set_Cursor_4bits 1000  
                         _sprintf 020F              end_of_initialization 07FC        ??_I2C_Master_RepeatedStart 0070  
                 ?_Lcd_Port_4bits 0070           __end_of_Lcd_Clear_4bits 0DF4                   ___lldiv@divisor 0070  
                 ___lldiv@counter 007D                  I2C_Master_Init@c 0020                  I2C_Master_Read@a 0070  
                       _PORTDbits 0008                        main@VAL1_C 01D3                        main@VAL1_D 01D2  
                      main@VAL1_U 01D1                         _TRISCbits 0087              _Lcd_Write_Char_4bits 0E8D  
                  __end_of___bmul 0E23               start_initialization 07FC                     _Lcd_Cmd_4bits 0E23  
           Lcd_Set_Cursor_4bits@a 0076             Lcd_Set_Cursor_4bits@b 0074             Lcd_Set_Cursor_4bits@y 0078  
           Lcd_Set_Cursor_4bits@z 0077                  ?_Lcd_Clear_4bits 0070                 ??_I2C_Master_Init 0024  
               ??_I2C_Master_Read 0072                 ??_I2C_Master_Wait 0070                 ??_I2C_Master_Stop 0070  
           ?_Lcd_Write_Char_4bits 0070                          ??___bmul 0071          Lcd_Set_Cursor_4bits@temp 0079  
            _Lcd_Set_Cursor_4bits 0FBA                  ??_Lcd_Init_4bits 0074                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK3 0190                    ?_Lcd_Cmd_4bits 0070  
                     sprintf@flag 0026                       sprintf@prec 002A                  _I2C_Master_Start 0DCB  
                _I2C_Master_Write 0DDD                         _main$1005 01CF                  ___lwdiv@dividend 0072  
           ?_Lcd_Set_Cursor_4bits 0074                          ?___awdiv 0070                          ?___awmod 0079  
                        ?___lldiv 0070                          ?___lwdiv 0070                          ?___lwmod 0078  
                       __pstrings 0800                          ?_leerRTC 0070                  ??_Lcd_Port_4bits 0070  
                ___lwdiv@quotient 0075                          ?_sprintf 0020            ??_Lcd_Write_Char_4bits 0071  
                       main@DIA_D 01DB                         main@DIA_U 01DA                         main@AO_UM 01E1  
                       main@HOR_D 01D9                         main@MES_D 01DD                         main@MIN_D 01D7  
                       main@HOR_U 01D8                         main@MES_U 01DC                         main@MIN_U 01D6  
                       main@SEG_D 01D5                         main@SEG_U 01D4                       __stringbase 080F  
                   ??_setupINTOSC 0070                   ??_Lcd_Cmd_4bits 0071               I2C_Master_Read@temp 0074  
         Lcd_Write_String_4bits@a 0075           Lcd_Write_String_4bits@i 007A            ??_Lcd_Set_Cursor_4bits 0075  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0810          ??_Lcd_Write_String_4bits 0077  
                  Lcd_Cmd_4bits@a 0073                        sprintf@val 0028                   _I2C_Master_Init 0EC2  
                 _I2C_Master_Read 0E5F                   _I2C_Master_Wait 0DF4                   _I2C_Master_Stop 0DD4  
                 ___lwdiv@divisor 0070                   ___lwdiv@counter 0077                          __ptext10 0E0E  
                        __ptext11 0DDD                          __ptext20 0E8D                          __ptext12 0DD4  
                        __ptext21 0FBA                          __ptext13 0DCB                          __ptext22 0DE7  
                        __ptext14 0DC2                          __ptext23 0E23                          __ptext15 0E5F  
                        __ptext24 0E3D                          __ptext16 0DF4                          __ptext17 002F  
                        __ptext18 01A8                          __ptext19 0F34               __end_of_setupINTOSC 0E0E  
                        main@ADC1 01BD                          main@AO_C 01E0                          main@AO_D 01DF  
                        main@AO_U 01DE                          main@VAL1 01E7                          leerRTC@R 0079  
        __end_of_I2C_Master_Start 0DD4          __end_of_I2C_Master_Write 0DE7                         sprintf@ap 0027  
                       sprintf@sp 002C                  ___lwmod@dividend 007A                  ___lldiv@dividend 0074  
                       stringcode 080A                        _OSCCONbits 008F           __end_of_I2C_Master_Init 0EFA  
         __end_of_I2C_Master_Read 0E8D           __end_of_I2C_Master_Wait 0E01           __end_of_I2C_Master_Stop 0DDD  
                     _setupINTOSC 0E01                          sprintf@c 002B                          sprintf@f 0020  
                    setupINTOSC@F 0071                  ___lldiv@quotient 0079                 I2C_Master_Write@d 0070  
                 ___lwmod@divisor 0078                   ___lwmod@counter 007D                          stringdir 080A  
                        stringtab 0800                       _SSPCON2bits 0091  
