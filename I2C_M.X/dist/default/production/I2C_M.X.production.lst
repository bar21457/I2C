

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Feb 10 11:00:40 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2
    29                           	psect	text21,local,class=CODE,merge=1,delta=2
    30                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.40
    35                           ; Generated 17/11/2021 GMT
    36                           ; 
    37                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution. Publication is not required when
    51                           ;        this file is used in an embedded application.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F887 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69     0000                     	;# 
    70     0001                     	;# 
    71     0002                     	;# 
    72     0003                     	;# 
    73     0004                     	;# 
    74     0005                     	;# 
    75     0006                     	;# 
    76     0007                     	;# 
    77     0008                     	;# 
    78     0009                     	;# 
    79     000A                     	;# 
    80     000B                     	;# 
    81     000C                     	;# 
    82     000D                     	;# 
    83     000E                     	;# 
    84     000E                     	;# 
    85     000F                     	;# 
    86     0010                     	;# 
    87     0011                     	;# 
    88     0012                     	;# 
    89     0013                     	;# 
    90     0014                     	;# 
    91     0015                     	;# 
    92     0015                     	;# 
    93     0016                     	;# 
    94     0017                     	;# 
    95     0018                     	;# 
    96     0019                     	;# 
    97     001A                     	;# 
    98     001B                     	;# 
    99     001B                     	;# 
   100     001C                     	;# 
   101     001D                     	;# 
   102     001E                     	;# 
   103     001F                     	;# 
   104     0081                     	;# 
   105     0085                     	;# 
   106     0086                     	;# 
   107     0087                     	;# 
   108     0088                     	;# 
   109     0089                     	;# 
   110     008C                     	;# 
   111     008D                     	;# 
   112     008E                     	;# 
   113     008F                     	;# 
   114     0090                     	;# 
   115     0091                     	;# 
   116     0092                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0093                     	;# 
   120     0094                     	;# 
   121     0095                     	;# 
   122     0096                     	;# 
   123     0097                     	;# 
   124     0098                     	;# 
   125     0099                     	;# 
   126     009A                     	;# 
   127     009B                     	;# 
   128     009C                     	;# 
   129     009D                     	;# 
   130     009E                     	;# 
   131     009F                     	;# 
   132     0105                     	;# 
   133     0107                     	;# 
   134     0108                     	;# 
   135     0109                     	;# 
   136     010C                     	;# 
   137     010C                     	;# 
   138     010D                     	;# 
   139     010E                     	;# 
   140     010F                     	;# 
   141     0185                     	;# 
   142     0187                     	;# 
   143     0188                     	;# 
   144     0189                     	;# 
   145     018C                     	;# 
   146     018D                     	;# 
   147     0000                     	;# 
   148     0001                     	;# 
   149     0002                     	;# 
   150     0003                     	;# 
   151     0004                     	;# 
   152     0005                     	;# 
   153     0006                     	;# 
   154     0007                     	;# 
   155     0008                     	;# 
   156     0009                     	;# 
   157     000A                     	;# 
   158     000B                     	;# 
   159     000C                     	;# 
   160     000D                     	;# 
   161     000E                     	;# 
   162     000E                     	;# 
   163     000F                     	;# 
   164     0010                     	;# 
   165     0011                     	;# 
   166     0012                     	;# 
   167     0013                     	;# 
   168     0014                     	;# 
   169     0015                     	;# 
   170     0015                     	;# 
   171     0016                     	;# 
   172     0017                     	;# 
   173     0018                     	;# 
   174     0019                     	;# 
   175     001A                     	;# 
   176     001B                     	;# 
   177     001B                     	;# 
   178     001C                     	;# 
   179     001D                     	;# 
   180     001E                     	;# 
   181     001F                     	;# 
   182     0081                     	;# 
   183     0085                     	;# 
   184     0086                     	;# 
   185     0087                     	;# 
   186     0088                     	;# 
   187     0089                     	;# 
   188     008C                     	;# 
   189     008D                     	;# 
   190     008E                     	;# 
   191     008F                     	;# 
   192     0090                     	;# 
   193     0091                     	;# 
   194     0092                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0093                     	;# 
   198     0094                     	;# 
   199     0095                     	;# 
   200     0096                     	;# 
   201     0097                     	;# 
   202     0098                     	;# 
   203     0099                     	;# 
   204     009A                     	;# 
   205     009B                     	;# 
   206     009C                     	;# 
   207     009D                     	;# 
   208     009E                     	;# 
   209     009F                     	;# 
   210     0105                     	;# 
   211     0107                     	;# 
   212     0108                     	;# 
   213     0109                     	;# 
   214     010C                     	;# 
   215     010C                     	;# 
   216     010D                     	;# 
   217     010E                     	;# 
   218     010F                     	;# 
   219     0185                     	;# 
   220     0187                     	;# 
   221     0188                     	;# 
   222     0189                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225     0000                     	;# 
   226     0001                     	;# 
   227     0002                     	;# 
   228     0003                     	;# 
   229     0004                     	;# 
   230     0005                     	;# 
   231     0006                     	;# 
   232     0007                     	;# 
   233     0008                     	;# 
   234     0009                     	;# 
   235     000A                     	;# 
   236     000B                     	;# 
   237     000C                     	;# 
   238     000D                     	;# 
   239     000E                     	;# 
   240     000E                     	;# 
   241     000F                     	;# 
   242     0010                     	;# 
   243     0011                     	;# 
   244     0012                     	;# 
   245     0013                     	;# 
   246     0014                     	;# 
   247     0015                     	;# 
   248     0015                     	;# 
   249     0016                     	;# 
   250     0017                     	;# 
   251     0018                     	;# 
   252     0019                     	;# 
   253     001A                     	;# 
   254     001B                     	;# 
   255     001B                     	;# 
   256     001C                     	;# 
   257     001D                     	;# 
   258     001E                     	;# 
   259     001F                     	;# 
   260     0081                     	;# 
   261     0085                     	;# 
   262     0086                     	;# 
   263     0087                     	;# 
   264     0088                     	;# 
   265     0089                     	;# 
   266     008C                     	;# 
   267     008D                     	;# 
   268     008E                     	;# 
   269     008F                     	;# 
   270     0090                     	;# 
   271     0091                     	;# 
   272     0092                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0093                     	;# 
   276     0094                     	;# 
   277     0095                     	;# 
   278     0096                     	;# 
   279     0097                     	;# 
   280     0098                     	;# 
   281     0099                     	;# 
   282     009A                     	;# 
   283     009B                     	;# 
   284     009C                     	;# 
   285     009D                     	;# 
   286     009E                     	;# 
   287     009F                     	;# 
   288     0105                     	;# 
   289     0107                     	;# 
   290     0108                     	;# 
   291     0109                     	;# 
   292     010C                     	;# 
   293     010C                     	;# 
   294     010D                     	;# 
   295     010E                     	;# 
   296     010F                     	;# 
   297     0185                     	;# 
   298     0187                     	;# 
   299     0188                     	;# 
   300     0189                     	;# 
   301     018C                     	;# 
   302     018D                     	;# 
   303     0000                     	;# 
   304     0001                     	;# 
   305     0002                     	;# 
   306     0003                     	;# 
   307     0004                     	;# 
   308     0005                     	;# 
   309     0006                     	;# 
   310     0007                     	;# 
   311     0008                     	;# 
   312     0009                     	;# 
   313     000A                     	;# 
   314     000B                     	;# 
   315     000C                     	;# 
   316     000D                     	;# 
   317     000E                     	;# 
   318     000E                     	;# 
   319     000F                     	;# 
   320     0010                     	;# 
   321     0011                     	;# 
   322     0012                     	;# 
   323     0013                     	;# 
   324     0014                     	;# 
   325     0015                     	;# 
   326     0015                     	;# 
   327     0016                     	;# 
   328     0017                     	;# 
   329     0018                     	;# 
   330     0019                     	;# 
   331     001A                     	;# 
   332     001B                     	;# 
   333     001B                     	;# 
   334     001C                     	;# 
   335     001D                     	;# 
   336     001E                     	;# 
   337     001F                     	;# 
   338     0081                     	;# 
   339     0085                     	;# 
   340     0086                     	;# 
   341     0087                     	;# 
   342     0088                     	;# 
   343     0089                     	;# 
   344     008C                     	;# 
   345     008D                     	;# 
   346     008E                     	;# 
   347     008F                     	;# 
   348     0090                     	;# 
   349     0091                     	;# 
   350     0092                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0093                     	;# 
   354     0094                     	;# 
   355     0095                     	;# 
   356     0096                     	;# 
   357     0097                     	;# 
   358     0098                     	;# 
   359     0099                     	;# 
   360     009A                     	;# 
   361     009B                     	;# 
   362     009C                     	;# 
   363     009D                     	;# 
   364     009E                     	;# 
   365     009F                     	;# 
   366     0105                     	;# 
   367     0107                     	;# 
   368     0108                     	;# 
   369     0109                     	;# 
   370     010C                     	;# 
   371     010C                     	;# 
   372     010D                     	;# 
   373     010E                     	;# 
   374     010F                     	;# 
   375     0185                     	;# 
   376     0187                     	;# 
   377     0188                     	;# 
   378     0189                     	;# 
   379     018C                     	;# 
   380     018D                     	;# 
   381     0000                     	;# 
   382     0001                     	;# 
   383     0002                     	;# 
   384     0003                     	;# 
   385     0004                     	;# 
   386     0005                     	;# 
   387     0006                     	;# 
   388     0007                     	;# 
   389     0008                     	;# 
   390     0009                     	;# 
   391     000A                     	;# 
   392     000B                     	;# 
   393     000C                     	;# 
   394     000D                     	;# 
   395     000E                     	;# 
   396     000E                     	;# 
   397     000F                     	;# 
   398     0010                     	;# 
   399     0011                     	;# 
   400     0012                     	;# 
   401     0013                     	;# 
   402     0014                     	;# 
   403     0015                     	;# 
   404     0015                     	;# 
   405     0016                     	;# 
   406     0017                     	;# 
   407     0018                     	;# 
   408     0019                     	;# 
   409     001A                     	;# 
   410     001B                     	;# 
   411     001B                     	;# 
   412     001C                     	;# 
   413     001D                     	;# 
   414     001E                     	;# 
   415     001F                     	;# 
   416     0081                     	;# 
   417     0085                     	;# 
   418     0086                     	;# 
   419     0087                     	;# 
   420     0088                     	;# 
   421     0089                     	;# 
   422     008C                     	;# 
   423     008D                     	;# 
   424     008E                     	;# 
   425     008F                     	;# 
   426     0090                     	;# 
   427     0091                     	;# 
   428     0092                     	;# 
   429     0093                     	;# 
   430     0093                     	;# 
   431     0093                     	;# 
   432     0094                     	;# 
   433     0095                     	;# 
   434     0096                     	;# 
   435     0097                     	;# 
   436     0098                     	;# 
   437     0099                     	;# 
   438     009A                     	;# 
   439     009B                     	;# 
   440     009C                     	;# 
   441     009D                     	;# 
   442     009E                     	;# 
   443     009F                     	;# 
   444     0105                     	;# 
   445     0107                     	;# 
   446     0108                     	;# 
   447     0109                     	;# 
   448     010C                     	;# 
   449     010C                     	;# 
   450     010D                     	;# 
   451     010E                     	;# 
   452     010F                     	;# 
   453     0185                     	;# 
   454     0187                     	;# 
   455     0188                     	;# 
   456     0189                     	;# 
   457     018C                     	;# 
   458     018D                     	;# 
   459                           
   460                           	psect	strings
   461     0003                     __pstrings:
   462     0003                     stringtab:
   463     0003                     __stringtab:
   464                           
   465                           ;	String table - string pointers are 1 byte each
   466     0003  1BFF               	btfsc	btemp+1,7
   467     0004  280D               	ljmp	stringcode
   468     0005  1383               	bcf	3,7
   469     0006  187F               	btfsc	btemp+1,0
   470     0007  1783               	bsf	3,7
   471     0008  0800               	movf	0,w
   472     0009  0A84               	incf	4,f
   473     000A  1903               	skipnz
   474     000B  0AFF               	incf	btemp+1,f
   475     000C  0008               	return
   476     000D                     stringcode:
   477     000D                     stringdir:
   478     000D  3000               	movlw	high stringdir
   479     000E  008A               	movwf	10
   480     000F  0804               	movf	4,w
   481     0010  0A84               	incf	4,f
   482     0011  0782               	addwf	2,f
   483     0012                     __stringbase:
   484     0012  3400               	retlw	0
   485     0013                     __end_of__stringtab:
   486     0013                     _dpowers:
   487     0013  3401               	retlw	1
   488     0014  3400               	retlw	0
   489     0015  340A               	retlw	10
   490     0016  3400               	retlw	0
   491     0017  3464               	retlw	100
   492     0018  3400               	retlw	0
   493     0019  34E8               	retlw	232
   494     001A  3403               	retlw	3
   495     001B  3410               	retlw	16
   496     001C  3427               	retlw	39
   497     001D                     __end_of_dpowers:
   498     0008                     _PORTD	set	8
   499     0006                     _PORTB	set	6
   500     0008                     _PORTDbits	set	8
   501     0013                     _SSPBUF	set	19
   502     0014                     _SSPCON	set	20
   503     0063                     _SSPIF	set	99
   504     005E                     _PEIE	set	94
   505     005F                     _GIE	set	95
   506     0088                     _TRISD	set	136
   507     0086                     _TRISB	set	134
   508     008F                     _OSCCONbits	set	143
   509     0091                     _SSPCON2bits	set	145
   510     0087                     _TRISCbits	set	135
   511     0094                     _SSPSTAT	set	148
   512     0093                     _SSPADD	set	147
   513     0091                     _SSPCON2	set	145
   514     0463                     _SSPIE	set	1123
   515     043C                     _TRISC4	set	1084
   516     043B                     _TRISC3	set	1083
   517     0189                     _ANSELH	set	393
   518     0188                     _ANSEL	set	392
   519     001D                     STR_1:
   520     001D  3453               	retlw	83	;'S'
   521     001E  3431               	retlw	49	;'1'
   522     001F  343A               	retlw	58	;':'
   523     0020  3400               	retlw	0
   524     0021                     STR_2:
   525     0021  3453               	retlw	83	;'S'
   526     0022  3432               	retlw	50	;'2'
   527     0023  343A               	retlw	58	;':'
   528     0024  3400               	retlw	0
   529     0025                     STR_3:
   530     0025  3453               	retlw	83	;'S'
   531     0026  3433               	retlw	51	;'3'
   532     0027  343A               	retlw	58	;':'
   533     0028  3400               	retlw	0
   534     0029                     STR_4:
   535     0029  3425               	retlw	37	;'%'
   536     002A  3475               	retlw	117	;'u'
   537     002B  3400               	retlw	0
   538     0029                     
   539                           	psect	cinit
   540     07FC                     start_initialization:	
   541                           ; #config settings
   542                           
   543     07FC                     __initialization:
   544     07FC                     end_of_initialization:	
   545                           ;End of C runtime variable initialization code
   546                           
   547     07FC                     __end_of__initialization:
   548     07FC  0183               	clrf	3
   549     07FD  120A  118A  2EDE   	ljmp	_main	;jump to C main() function
   550                           
   551                           	psect	cstackCOMMON
   552     0070                     __pcstackCOMMON:
   553     0070                     ?_setup:
   554     0070                     ?_I2C_Master_Wait:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ??_I2C_Master_Wait:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?_I2C_Master_Start:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ??_I2C_Master_Start:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?_I2C_Master_Stop:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ??_I2C_Master_Stop:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_I2C_Master_Write:	
   573                           ; 1 bytes @ 0x0
   574                           
   575     0070                     ?_setupINTOSC:	
   576                           ; 1 bytes @ 0x0
   577                           
   578     0070                     ??_setupINTOSC:	
   579                           ; 1 bytes @ 0x0
   580                           
   581     0070                     ?_Lcd_Port_4bits:	
   582                           ; 1 bytes @ 0x0
   583                           
   584     0070                     ??_Lcd_Port_4bits:	
   585                           ; 1 bytes @ 0x0
   586                           
   587     0070                     ?_Lcd_Cmd_4bits:	
   588                           ; 1 bytes @ 0x0
   589                           
   590     0070                     ?_Lcd_Clear_4bits:	
   591                           ; 1 bytes @ 0x0
   592                           
   593     0070                     ?_Lcd_Init_4bits:	
   594                           ; 1 bytes @ 0x0
   595                           
   596     0070                     ?_Lcd_Write_Char_4bits:	
   597                           ; 1 bytes @ 0x0
   598                           
   599     0070                     ?_main:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     ?_I2C_Master_Read:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     ?___awdiv:	
   606                           ; 2 bytes @ 0x0
   607                           
   608     0070                     ?___lwdiv:	
   609                           ; 2 bytes @ 0x0
   610                           
   611     0070                     ?___lldiv:	
   612                           ; 2 bytes @ 0x0
   613                           
   614     0070                     Lcd_Port_4bits@a:	
   615                           ; 4 bytes @ 0x0
   616                           
   617     0070                     I2C_Master_Write@d:	
   618                           ; 1 bytes @ 0x0
   619                           
   620     0070                     I2C_Master_Read@a:	
   621                           ; 2 bytes @ 0x0
   622                           
   623     0070                     ___awdiv@divisor:	
   624                           ; 2 bytes @ 0x0
   625                           
   626     0070                     ___lwdiv@divisor:	
   627                           ; 2 bytes @ 0x0
   628                           
   629     0070                     ___lldiv@divisor:	
   630                           ; 2 bytes @ 0x0
   631                           
   632                           
   633                           ; 4 bytes @ 0x0
   634     0070                     	ds	1
   635     0071                     ??_Lcd_Cmd_4bits:
   636     0071                     ??_Lcd_Write_Char_4bits:	
   637                           ; 1 bytes @ 0x1
   638                           
   639     0071                     setupINTOSC@F:	
   640                           ; 1 bytes @ 0x1
   641                           
   642                           
   643                           ; 1 bytes @ 0x1
   644     0071                     	ds	1
   645     0072                     ??_I2C_Master_Write:
   646     0072                     ??_I2C_Master_Read:	
   647                           ; 1 bytes @ 0x2
   648                           
   649     0072                     Lcd_Write_Char_4bits@temp:	
   650                           ; 1 bytes @ 0x2
   651                           
   652     0072                     ___awdiv@dividend:	
   653                           ; 1 bytes @ 0x2
   654                           
   655     0072                     ___lwdiv@dividend:	
   656                           ; 2 bytes @ 0x2
   657                           
   658                           
   659                           ; 2 bytes @ 0x2
   660     0072                     	ds	1
   661     0073                     Lcd_Cmd_4bits@a:
   662     0073                     Lcd_Write_Char_4bits@y:	
   663                           ; 1 bytes @ 0x3
   664                           
   665                           
   666                           ; 1 bytes @ 0x3
   667     0073                     	ds	1
   668     0074                     ??_Lcd_Clear_4bits:
   669     0074                     ?_Lcd_Set_Cursor_4bits:	
   670                           ; 1 bytes @ 0x4
   671                           
   672     0074                     ??_Lcd_Init_4bits:	
   673                           ; 1 bytes @ 0x4
   674                           
   675     0074                     ??___awdiv:	
   676                           ; 1 bytes @ 0x4
   677                           
   678     0074                     ??___lwdiv:	
   679                           ; 1 bytes @ 0x4
   680                           
   681     0074                     Lcd_Set_Cursor_4bits@b:	
   682                           ; 1 bytes @ 0x4
   683                           
   684     0074                     Lcd_Write_Char_4bits@a:	
   685                           ; 1 bytes @ 0x4
   686                           
   687     0074                     I2C_Master_Read@temp:	
   688                           ; 1 bytes @ 0x4
   689                           
   690     0074                     ___lldiv@dividend:	
   691                           ; 2 bytes @ 0x4
   692                           
   693                           
   694                           ; 4 bytes @ 0x4
   695     0074                     	ds	1
   696     0075                     ??_Lcd_Set_Cursor_4bits:
   697     0075                     ?_Lcd_Write_String_4bits:	
   698                           ; 1 bytes @ 0x5
   699                           
   700     0075                     ___awdiv@counter:	
   701                           ; 1 bytes @ 0x5
   702                           
   703     0075                     Lcd_Write_String_4bits@a:	
   704                           ; 1 bytes @ 0x5
   705                           
   706     0075                     ___lwdiv@quotient:	
   707                           ; 2 bytes @ 0x5
   708                           
   709                           
   710                           ; 2 bytes @ 0x5
   711     0075                     	ds	1
   712     0076                     Lcd_Set_Cursor_4bits@a:
   713     0076                     ___awdiv@sign:	
   714                           ; 1 bytes @ 0x6
   715                           
   716                           
   717                           ; 1 bytes @ 0x6
   718     0076                     	ds	1
   719     0077                     ??_Lcd_Write_String_4bits:
   720     0077                     Lcd_Set_Cursor_4bits@z:	
   721                           ; 1 bytes @ 0x7
   722                           
   723     0077                     ___lwdiv@counter:	
   724                           ; 1 bytes @ 0x7
   725                           
   726     0077                     ___awdiv@quotient:	
   727                           ; 1 bytes @ 0x7
   728                           
   729                           
   730                           ; 2 bytes @ 0x7
   731     0077                     	ds	1
   732     0078                     ??___lldiv:
   733     0078                     ?___lwmod:	
   734                           ; 1 bytes @ 0x8
   735                           
   736     0078                     Lcd_Set_Cursor_4bits@y:	
   737                           ; 2 bytes @ 0x8
   738                           
   739     0078                     ___lwmod@divisor:	
   740                           ; 1 bytes @ 0x8
   741                           
   742                           
   743                           ; 2 bytes @ 0x8
   744     0078                     	ds	1
   745     0079                     ?___awmod:
   746     0079                     Lcd_Set_Cursor_4bits@temp:	
   747                           ; 2 bytes @ 0x9
   748                           
   749     0079                     ___awmod@divisor:	
   750                           ; 1 bytes @ 0x9
   751                           
   752     0079                     ___lldiv@quotient:	
   753                           ; 2 bytes @ 0x9
   754                           
   755                           
   756                           ; 4 bytes @ 0x9
   757     0079                     	ds	1
   758     007A                     Lcd_Write_String_4bits@i:
   759     007A                     ___lwmod@dividend:	
   760                           ; 2 bytes @ 0xA
   761                           
   762                           
   763                           ; 2 bytes @ 0xA
   764     007A                     	ds	1
   765     007B                     ___awmod@dividend:
   766                           
   767                           ; 2 bytes @ 0xB
   768     007B                     	ds	1
   769     007C                     ??___lwmod:
   770                           
   771                           ; 1 bytes @ 0xC
   772     007C                     	ds	1
   773     007D                     ??___awmod:
   774     007D                     ___lldiv@counter:	
   775                           ; 1 bytes @ 0xD
   776                           
   777     007D                     ___lwmod@counter:	
   778                           ; 1 bytes @ 0xD
   779                           
   780                           
   781                           ; 1 bytes @ 0xD
   782     007D                     	ds	1
   783     007E                     ??_setup:
   784                           
   785                           	psect	cstackBANK0
   786     0020                     __pcstackBANK0:	
   787                           ; 1 bytes @ 0xE
   788                           
   789     0020                     ?_I2C_Master_Init:
   790     0020                     ?_sprintf:	
   791                           ; 1 bytes @ 0x0
   792                           
   793     0020                     sprintf@f:	
   794                           ; 2 bytes @ 0x0
   795                           
   796     0020                     ___awmod@counter:	
   797                           ; 1 bytes @ 0x0
   798                           
   799     0020                     I2C_Master_Init@c:	
   800                           ; 1 bytes @ 0x0
   801                           
   802                           
   803                           ; 4 bytes @ 0x0
   804     0020                     	ds	1
   805     0021                     ___awmod@sign:
   806                           
   807                           ; 1 bytes @ 0x1
   808     0021                     	ds	2
   809     0023                     ??_sprintf:
   810                           
   811                           ; 1 bytes @ 0x3
   812     0023                     	ds	1
   813     0024                     ??_I2C_Master_Init:
   814                           
   815                           ; 1 bytes @ 0x4
   816     0024                     	ds	2
   817     0026                     sprintf@flag:
   818                           
   819                           ; 1 bytes @ 0x6
   820     0026                     	ds	1
   821     0027                     sprintf@ap:
   822                           
   823                           ; 1 bytes @ 0x7
   824     0027                     	ds	1
   825     0028                     sprintf@val:
   826                           
   827                           ; 2 bytes @ 0x8
   828     0028                     	ds	2
   829     002A                     sprintf@prec:
   830                           
   831                           ; 1 bytes @ 0xA
   832     002A                     	ds	1
   833     002B                     sprintf@sp:
   834                           
   835                           ; 1 bytes @ 0xB
   836     002B                     	ds	1
   837     002C                     sprintf@c:
   838                           
   839                           ; 1 bytes @ 0xC
   840     002C                     	ds	1
   841     002D                     ??_main:
   842                           
   843                           ; 1 bytes @ 0xD
   844     002D                     	ds	3
   845     0030                     main@ADC1:
   846                           
   847                           ; 9 bytes @ 0x10
   848     0030                     	ds	9
   849     0039                     main@VAL1_U:
   850                           
   851                           ; 1 bytes @ 0x19
   852     0039                     	ds	1
   853     003A                     main@VAL1_D:
   854                           
   855                           ; 1 bytes @ 0x1A
   856     003A                     	ds	1
   857     003B                     main@VAL1_C:
   858                           
   859                           ; 1 bytes @ 0x1B
   860     003B                     	ds	1
   861     003C                     main@VAL1:
   862                           
   863                           ; 1 bytes @ 0x1C
   864     003C                     	ds	1
   865                           
   866                           	psect	maintext
   867     06DE                     __pmaintext:	
   868 ;;
   869 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   870 ;;
   871 ;; *************** function _main *****************
   872 ;; Defined at:
   873 ;;		line 60 in file "main_M.c"
   874 ;; Parameters:    Size  Location     Type
   875 ;;		None
   876 ;; Auto vars:     Size  Location     Type
   877 ;;  ADC1            9   16[BANK0 ] unsigned char [9]
   878 ;;  VAL1            1   28[BANK0 ] unsigned char 
   879 ;;  VAL1_C          1   27[BANK0 ] unsigned char 
   880 ;;  VAL1_D          1   26[BANK0 ] unsigned char 
   881 ;;  VAL1_U          1   25[BANK0 ] unsigned char 
   882 ;; Return value:  Size  Location     Type
   883 ;;                  1    wreg      void 
   884 ;; Registers used:
   885 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   886 ;; Tracked objects:
   887 ;;		On entry : B00/0
   888 ;;		On exit  : 0/0
   889 ;;		Unchanged: 0/0
   890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   891 ;;      Params:         0       0       0       0       0
   892 ;;      Locals:         0      13       0       0       0
   893 ;;      Temps:          0       3       0       0       0
   894 ;;      Totals:         0      16       0       0       0
   895 ;;Total ram usage:       16 bytes
   896 ;; Hardware stack levels required when called: 4
   897 ;; This function calls:
   898 ;;		_I2C_Master_Read
   899 ;;		_I2C_Master_Start
   900 ;;		_I2C_Master_Stop
   901 ;;		_I2C_Master_Write
   902 ;;		_Lcd_Clear_4bits
   903 ;;		_Lcd_Set_Cursor_4bits
   904 ;;		_Lcd_Write_String_4bits
   905 ;;		___awdiv
   906 ;;		___awmod
   907 ;;		_setup
   908 ;;		_sprintf
   909 ;; This function is called by:
   910 ;;		Startup code after reset
   911 ;; This function uses a non-reentrant model
   912 ;;
   913                           
   914     06DE                     _main:	
   915                           ;psect for function _main
   916                           
   917     06DE                     l1541:	
   918                           ;incstack = 0
   919                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   920                           
   921                           
   922                           ;main_M.c: 62:     setup();
   923     06DE  120A  118A  22D2  120A  118A  	fcall	_setup
   924                           
   925                           ;main_M.c: 64:     uint8_t VAL1;;main_M.c: 65:     uint8_t VAL1_U;;main_M.c: 66:     uin
      +                          t8_t VAL1_D;;main_M.c: 67:     uint8_t VAL1_C;;main_M.c: 69:     char ADC1[9];;main_M.c:
      +                           71:     Lcd_Clear_4bits();
   926     06E3  120A  118A  227C  120A  118A  	fcall	_Lcd_Clear_4bits
   927                           
   928                           ;main_M.c: 72:     Lcd_Set_Cursor_4bits(1,1);
   929     06E8  01F4               	clrf	Lcd_Set_Cursor_4bits@b
   930     06E9  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
   931     06EA  3001               	movlw	1
   932     06EB  120A  118A  2452  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   933     06F0                     l1543:
   934                           
   935                           ;main_M.c: 73:     Lcd_Write_String_4bits("S1:");
   936     06F0  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   937     06F1  00F5               	movwf	Lcd_Write_String_4bits@a
   938     06F2  3080               	movlw	128
   939     06F3  00F6               	movwf	Lcd_Write_String_4bits@a+1
   940     06F4  120A  118A  23CC  120A  118A  	fcall	_Lcd_Write_String_4bits
   941     06F9                     l1545:
   942                           
   943                           ;main_M.c: 74:     Lcd_Set_Cursor_4bits(1,7);
   944     06F9  3007               	movlw	7
   945     06FA  00F4               	movwf	Lcd_Set_Cursor_4bits@b
   946     06FB  3001               	movlw	1
   947     06FC  120A  118A  2452  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   948                           
   949                           ;main_M.c: 75:     Lcd_Write_String_4bits("S2:");
   950     0701  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   951     0702  00F5               	movwf	Lcd_Write_String_4bits@a
   952     0703  3080               	movlw	128
   953     0704  00F6               	movwf	Lcd_Write_String_4bits@a+1
   954     0705  120A  118A  23CC  120A  118A  	fcall	_Lcd_Write_String_4bits
   955     070A                     l1547:
   956                           
   957                           ;main_M.c: 76:     Lcd_Set_Cursor_4bits(1,13);
   958     070A  300D               	movlw	13
   959     070B  00F4               	movwf	Lcd_Set_Cursor_4bits@b
   960     070C  3001               	movlw	1
   961     070D  120A  118A  2452  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
   962     0712                     l1549:
   963                           
   964                           ;main_M.c: 77:     Lcd_Write_String_4bits("S3:");
   965     0712  3013               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   966     0713  00F5               	movwf	Lcd_Write_String_4bits@a
   967     0714  3080               	movlw	128
   968     0715  00F6               	movwf	Lcd_Write_String_4bits@a+1
   969     0716  120A  118A  23CC  120A  118A  	fcall	_Lcd_Write_String_4bits
   970     071B                     l148:	
   971                           ;main_M.c: 79:     while(1)
   972                           
   973                           
   974                           ;main_M.c: 80:     {;main_M.c: 88:         I2C_Master_Start();
   975     071B  120A  118A  2253  120A  118A  	fcall	_I2C_Master_Start
   976                           
   977                           ;main_M.c: 89:         I2C_Master_Write(0x51);
   978     0720  3051               	movlw	81
   979     0721  00F0               	movwf	I2C_Master_Write@d
   980     0722  3000               	movlw	0
   981     0723  00F1               	movwf	I2C_Master_Write@d+1
   982     0724  120A  118A  2265  120A  118A  	fcall	_I2C_Master_Write
   983                           
   984                           ;main_M.c: 90:         VAL1 = I2C_Master_Read(0);
   985     0729  3000               	movlw	0
   986     072A  00F0               	movwf	I2C_Master_Read@a
   987     072B  00F1               	movwf	I2C_Master_Read@a+1
   988     072C  120A  118A  22F7  120A  118A  	fcall	_I2C_Master_Read
   989     0731  0870               	movf	?_I2C_Master_Read,w
   990     0732  1283               	bcf	3,5	;RP0=0, select bank0
   991     0733  1303               	bcf	3,6	;RP1=0, select bank0
   992     0734  00BC               	movwf	main@VAL1
   993                           
   994                           ;main_M.c: 91:         I2C_Master_Stop();
   995     0735  120A  118A  225C  120A  118A  	fcall	_I2C_Master_Stop
   996     073A                     l1551:
   997                           
   998                           ;main_M.c: 92:         _delay((unsigned long)((200)*(8000000/4000.0)));
   999     073A  3003               	movlw	3
  1000     073B  1283               	bcf	3,5	;RP0=0, select bank0
  1001     073C  1303               	bcf	3,6	;RP1=0, select bank0
  1002     073D  00AF               	movwf	??_main+2
  1003     073E  3008               	movlw	8
  1004     073F  00AE               	movwf	??_main+1
  1005     0740  3076               	movlw	118
  1006     0741  00AD               	movwf	??_main
  1007     0742                     u1217:
  1008     0742  0BAD               	decfsz	??_main,f
  1009     0743  2F42               	goto	u1217
  1010     0744  0BAE               	decfsz	??_main+1,f
  1011     0745  2F42               	goto	u1217
  1012     0746  0BAF               	decfsz	??_main+2,f
  1013     0747  2F42               	goto	u1217
  1014     0748  0000               	nop
  1015     0749                     l1553:
  1016                           
  1017                           ;main_M.c: 96:         VAL1_C = (VAL1/100);
  1018     0749  3064               	movlw	100
  1019     074A  00F0               	movwf	___awdiv@divisor
  1020     074B  3000               	movlw	0
  1021     074C  00F1               	movwf	___awdiv@divisor+1
  1022     074D  1283               	bcf	3,5	;RP0=0, select bank0
  1023     074E  1303               	bcf	3,6	;RP1=0, select bank0
  1024     074F  083C               	movf	main@VAL1,w
  1025     0750  00AD               	movwf	??_main
  1026     0751  01AE               	clrf	??_main+1
  1027     0752  082D               	movf	??_main,w
  1028     0753  00F2               	movwf	___awdiv@dividend
  1029     0754  082E               	movf	??_main+1,w
  1030     0755  00F3               	movwf	___awdiv@dividend+1
  1031     0756  120A  118A  25B6  120A  118A  	fcall	___awdiv
  1032     075B  0870               	movf	?___awdiv,w
  1033     075C  1283               	bcf	3,5	;RP0=0, select bank0
  1034     075D  1303               	bcf	3,6	;RP1=0, select bank0
  1035     075E  00BB               	movwf	main@VAL1_C
  1036     075F                     l1555:
  1037                           
  1038                           ;main_M.c: 97:         VAL1_D = (VAL1/10)%10;
  1039     075F  300A               	movlw	10
  1040     0760  00F9               	movwf	___awmod@divisor
  1041     0761  3000               	movlw	0
  1042     0762  00FA               	movwf	___awmod@divisor+1
  1043     0763  300A               	movlw	10
  1044     0764  00F0               	movwf	___awdiv@divisor
  1045     0765  3000               	movlw	0
  1046     0766  00F1               	movwf	___awdiv@divisor+1
  1047     0767  083C               	movf	main@VAL1,w
  1048     0768  00AD               	movwf	??_main
  1049     0769  01AE               	clrf	??_main+1
  1050     076A  082D               	movf	??_main,w
  1051     076B  00F2               	movwf	___awdiv@dividend
  1052     076C  082E               	movf	??_main+1,w
  1053     076D  00F3               	movwf	___awdiv@dividend+1
  1054     076E  120A  118A  25B6  120A  118A  	fcall	___awdiv
  1055     0773  0871               	movf	?___awdiv+1,w
  1056     0774  00FC               	movwf	___awmod@dividend+1
  1057     0775  0870               	movf	?___awdiv,w
  1058     0776  00FB               	movwf	___awmod@dividend
  1059     0777  120A  118A  2498  120A  118A  	fcall	___awmod
  1060     077C  0879               	movf	?___awmod,w
  1061     077D  1283               	bcf	3,5	;RP0=0, select bank0
  1062     077E  1303               	bcf	3,6	;RP1=0, select bank0
  1063     077F  00BA               	movwf	main@VAL1_D
  1064     0780                     l1557:
  1065                           
  1066                           ;main_M.c: 98:         VAL1_U = VAL1%10;
  1067     0780  300A               	movlw	10
  1068     0781  00F9               	movwf	___awmod@divisor
  1069     0782  3000               	movlw	0
  1070     0783  00FA               	movwf	___awmod@divisor+1
  1071     0784  083C               	movf	main@VAL1,w
  1072     0785  00AD               	movwf	??_main
  1073     0786  01AE               	clrf	??_main+1
  1074     0787  082D               	movf	??_main,w
  1075     0788  00FB               	movwf	___awmod@dividend
  1076     0789  082E               	movf	??_main+1,w
  1077     078A  00FC               	movwf	___awmod@dividend+1
  1078     078B  120A  118A  2498  120A  118A  	fcall	___awmod
  1079     0790  0879               	movf	?___awmod,w
  1080     0791  1283               	bcf	3,5	;RP0=0, select bank0
  1081     0792  1303               	bcf	3,6	;RP1=0, select bank0
  1082     0793  00B9               	movwf	main@VAL1_U
  1083     0794                     l1559:
  1084                           
  1085                           ;main_M.c: 100:         sprintf(ADC1, "%u", VAL1_C);
  1086     0794  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1087     0795  00A0               	movwf	sprintf@f
  1088     0796  083B               	movf	main@VAL1_C,w
  1089     0797  00AD               	movwf	??_main
  1090     0798  01AE               	clrf	??_main+1
  1091     0799  082D               	movf	??_main,w
  1092     079A  00A1               	movwf	?_sprintf+1
  1093     079B  082E               	movf	??_main+1,w
  1094     079C  00A2               	movwf	?_sprintf+2
  1095     079D  3030               	movlw	(low (main@ADC1| 0))& (0+255)
  1096     079E  120A  118A  261D  120A  118A  	fcall	_sprintf
  1097     07A3                     l1561:
  1098                           
  1099                           ;main_M.c: 101:         Lcd_Set_Cursor_4bits(2,1);
  1100     07A3  01F4               	clrf	Lcd_Set_Cursor_4bits@b
  1101     07A4  0AF4               	incf	Lcd_Set_Cursor_4bits@b,f
  1102     07A5  3002               	movlw	2
  1103     07A6  120A  118A  2452  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1104     07AB                     l1563:
  1105                           
  1106                           ;main_M.c: 102:         Lcd_Write_String_4bits(ADC1);
  1107     07AB  3030               	movlw	(low (main@ADC1| 0))& (0+255)
  1108     07AC  00F5               	movwf	Lcd_Write_String_4bits@a
  1109     07AD  3000               	movlw	0
  1110     07AE  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1111     07AF  120A  118A  23CC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1112     07B4                     l1565:
  1113                           
  1114                           ;main_M.c: 104:         sprintf(ADC1, "%u", VAL1_D);
  1115     07B4  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1116     07B5  1283               	bcf	3,5	;RP0=0, select bank0
  1117     07B6  1303               	bcf	3,6	;RP1=0, select bank0
  1118     07B7  00A0               	movwf	sprintf@f
  1119     07B8  083A               	movf	main@VAL1_D,w
  1120     07B9  00AD               	movwf	??_main
  1121     07BA  01AE               	clrf	??_main+1
  1122     07BB  082D               	movf	??_main,w
  1123     07BC  00A1               	movwf	?_sprintf+1
  1124     07BD  082E               	movf	??_main+1,w
  1125     07BE  00A2               	movwf	?_sprintf+2
  1126     07BF  3030               	movlw	(low (main@ADC1| 0))& (0+255)
  1127     07C0  120A  118A  261D  120A  118A  	fcall	_sprintf
  1128     07C5                     l1567:
  1129                           
  1130                           ;main_M.c: 105:         Lcd_Set_Cursor_4bits(2,2);
  1131     07C5  3002               	movlw	2
  1132     07C6  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1133     07C7  3002               	movlw	2
  1134     07C8  120A  118A  2452  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1135     07CD                     l1569:
  1136                           
  1137                           ;main_M.c: 106:         Lcd_Write_String_4bits(ADC1);
  1138     07CD  3030               	movlw	(low (main@ADC1| 0))& (0+255)
  1139     07CE  00F5               	movwf	Lcd_Write_String_4bits@a
  1140     07CF  3000               	movlw	0
  1141     07D0  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1142     07D1  120A  118A  23CC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1143     07D6                     l1571:
  1144                           
  1145                           ;main_M.c: 108:         sprintf(ADC1, "%u", VAL1_U);
  1146     07D6  3017               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1147     07D7  1283               	bcf	3,5	;RP0=0, select bank0
  1148     07D8  1303               	bcf	3,6	;RP1=0, select bank0
  1149     07D9  00A0               	movwf	sprintf@f
  1150     07DA  0839               	movf	main@VAL1_U,w
  1151     07DB  00AD               	movwf	??_main
  1152     07DC  01AE               	clrf	??_main+1
  1153     07DD  082D               	movf	??_main,w
  1154     07DE  00A1               	movwf	?_sprintf+1
  1155     07DF  082E               	movf	??_main+1,w
  1156     07E0  00A2               	movwf	?_sprintf+2
  1157     07E1  3030               	movlw	(low (main@ADC1| 0))& (0+255)
  1158     07E2  120A  118A  261D  120A  118A  	fcall	_sprintf
  1159     07E7                     l1573:
  1160                           
  1161                           ;main_M.c: 109:         Lcd_Set_Cursor_4bits(2,3);
  1162     07E7  3003               	movlw	3
  1163     07E8  00F4               	movwf	Lcd_Set_Cursor_4bits@b
  1164     07E9  3002               	movlw	2
  1165     07EA  120A  118A  2452  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1166     07EF                     l1575:
  1167                           
  1168                           ;main_M.c: 110:         Lcd_Write_String_4bits(ADC1);
  1169     07EF  3030               	movlw	(low (main@ADC1| 0))& (0+255)
  1170     07F0  00F5               	movwf	Lcd_Write_String_4bits@a
  1171     07F1  3000               	movlw	0
  1172     07F2  00F6               	movwf	Lcd_Write_String_4bits@a+1
  1173     07F3  120A  118A  23CC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1174     07F8  2F1B               	goto	l148
  1175     07F9  120A  118A  2800   	ljmp	start
  1176     07FC                     __end_of_main:
  1177                           
  1178                           	psect	text1
  1179     061D                     __ptext1:	
  1180 ;; *************** function _sprintf *****************
  1181 ;; Defined at:
  1182 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;  sp              1    wreg     PTR unsigned char 
  1185 ;;		 -> main@ADC1(9), 
  1186 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  1187 ;;		 -> STR_6(3), STR_5(3), STR_4(3), 
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  1190 ;;		 -> main@ADC1(9), 
  1191 ;;  tmpval          4    0        struct .
  1192 ;;  val             2    8[BANK0 ] unsigned int 
  1193 ;;  cp              2    0        PTR const unsigned char 
  1194 ;;  len             2    0        unsigned int 
  1195 ;;  c               1   12[BANK0 ] unsigned char 
  1196 ;;  prec            1   10[BANK0 ] char 
  1197 ;;  ap              1    7[BANK0 ] PTR void [1]
  1198 ;;		 -> ?_sprintf(2), 
  1199 ;;  flag            1    6[BANK0 ] unsigned char 
  1200 ;; Return value:  Size  Location     Type
  1201 ;;                  2    0[BANK0 ] int 
  1202 ;; Registers used:
  1203 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1204 ;; Tracked objects:
  1205 ;;		On entry : 0/0
  1206 ;;		On exit  : 0/0
  1207 ;;		Unchanged: 0/0
  1208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1209 ;;      Params:         0       3       0       0       0
  1210 ;;      Locals:         0       7       0       0       0
  1211 ;;      Temps:          0       3       0       0       0
  1212 ;;      Totals:         0      13       0       0       0
  1213 ;;Total ram usage:       13 bytes
  1214 ;; Hardware stack levels used: 1
  1215 ;; Hardware stack levels required when called: 1
  1216 ;; This function calls:
  1217 ;;		___lwdiv
  1218 ;;		___lwmod
  1219 ;; This function is called by:
  1220 ;;		_main
  1221 ;; This function uses a non-reentrant model
  1222 ;;
  1223                           
  1224     061D                     _sprintf:	
  1225                           ;psect for function _sprintf
  1226                           
  1227                           
  1228                           ;incstack = 0
  1229                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1230                           ;sprintf@sp stored from wreg
  1231     061D  1283               	bcf	3,5	;RP0=0, select bank0
  1232     061E  1303               	bcf	3,6	;RP1=0, select bank0
  1233     061F  00AB               	movwf	sprintf@sp
  1234     0620                     l1399:
  1235                           
  1236                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  1237     0620  3021               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1238     0621  00A7               	movwf	sprintf@ap
  1239                           
  1240                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1241     0622  2EC9               	goto	l1441
  1242     0623                     l1401:
  1243                           
  1244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1245     0623  3025               	movlw	37
  1246     0624  062C               	xorwf	sprintf@c,w
  1247     0625  1903               	btfsc	3,2
  1248     0626  2E28               	goto	u971
  1249     0627  2E29               	goto	u970
  1250     0628                     u971:
  1251     0628  2E33               	goto	l1407
  1252     0629                     u970:
  1253     0629                     l1403:
  1254                           
  1255                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1256     0629  082B               	movf	sprintf@sp,w
  1257     062A  0084               	movwf	4
  1258     062B  082C               	movf	sprintf@c,w
  1259     062C  1383               	bcf	3,7	;select IRP bank0
  1260     062D  0080               	movwf	0
  1261     062E                     l1405:
  1262     062E  3001               	movlw	1
  1263     062F  00A3               	movwf	??_sprintf
  1264     0630  0823               	movf	??_sprintf,w
  1265     0631  07AB               	addwf	sprintf@sp,f
  1266                           
  1267                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  1268     0632  2EC9               	goto	l1441
  1269     0633                     l1407:
  1270                           
  1271                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1272     0633  01A6               	clrf	sprintf@flag
  1273                           
  1274                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  1275     0634  2E3A               	goto	l1413
  1276     0635                     l1409:
  1277                           
  1278                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  1279     0635  30C0               	movlw	192
  1280     0636  00A3               	movwf	??_sprintf
  1281     0637  0823               	movf	??_sprintf,w
  1282     0638  04A6               	iorwf	sprintf@flag,f
  1283                           
  1284                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  1285     0639  2E54               	goto	l1415
  1286     063A                     l1413:
  1287     063A  3001               	movlw	1
  1288     063B  07A0               	addwf	sprintf@f,f
  1289     063C  30FF               	movlw	-1
  1290     063D  0720               	addwf	sprintf@f,w
  1291     063E  0084               	movwf	4
  1292     063F  120A  118A  200D  120A  118A  	fcall	stringdir
  1293     0644  00AC               	movwf	sprintf@c
  1294     0645  00A3               	movwf	??_sprintf
  1295     0646  01A4               	clrf	??_sprintf+1
  1296                           
  1297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1298                           ; Switch size 1, requested type "simple"
  1299                           ; Number of cases is 1, Range of values is 0 to 0
  1300                           ; switch strategies available:
  1301                           ; Name         Instructions Cycles
  1302                           ; simple_byte            4     3 (average)
  1303                           ; direct_byte           11     8 (fixed)
  1304                           ; jumptable            260     6 (fixed)
  1305                           ;	Chosen strategy is simple_byte
  1306     0647  0824               	movf	??_sprintf+1,w
  1307     0648  3A00               	xorlw	0	; case 0
  1308     0649  1903               	skipnz
  1309     064A  2E4C               	goto	l1597
  1310     064B  2EC9               	goto	l1441
  1311     064C                     l1597:
  1312                           
  1313                           ; Switch size 1, requested type "simple"
  1314                           ; Number of cases is 2, Range of values is 0 to 117
  1315                           ; switch strategies available:
  1316                           ; Name         Instructions Cycles
  1317                           ; simple_byte            7     4 (average)
  1318                           ; jumptable            260     6 (fixed)
  1319                           ;	Chosen strategy is simple_byte
  1320     064C  0823               	movf	??_sprintf,w
  1321     064D  3A00               	xorlw	0	; case 0
  1322     064E  1903               	skipnz
  1323     064F  2ED9               	goto	l1443
  1324     0650  3A75               	xorlw	117	; case 117
  1325     0651  1903               	skipnz
  1326     0652  2E35               	goto	l1409
  1327     0653  2EC9               	goto	l1441
  1328     0654                     l1415:
  1329                           
  1330                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1331     0654  0827               	movf	sprintf@ap,w
  1332     0655  0084               	movwf	4
  1333     0656  1383               	bcf	3,7	;select IRP bank0
  1334     0657  0800               	movf	0,w
  1335     0658  00A8               	movwf	sprintf@val
  1336     0659  0A84               	incf	4,f
  1337     065A  0800               	movf	0,w
  1338     065B  00A9               	movwf	sprintf@val+1
  1339     065C                     l1417:
  1340     065C  3002               	movlw	2
  1341     065D  00A3               	movwf	??_sprintf
  1342     065E  0823               	movf	??_sprintf,w
  1343     065F  07A7               	addwf	sprintf@ap,f
  1344     0660                     l1419:
  1345                           
  1346                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  1347     0660  01AC               	clrf	sprintf@c
  1348     0661  0AAC               	incf	sprintf@c,f
  1349     0662                     l1425:
  1350                           
  1351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  1352     0662  082C               	movf	sprintf@c,w
  1353     0663  00A3               	movwf	??_sprintf
  1354     0664  0723               	addwf	??_sprintf,w
  1355     0665  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1356     0666  0084               	movwf	4
  1357     0667  120A  118A  200D  120A  118A  	fcall	stringdir
  1358     066C  00A4               	movwf	??_sprintf+1
  1359     066D  120A  118A  200D  120A  118A  	fcall	stringdir
  1360     0672  00A5               	movwf	??_sprintf+2
  1361     0673  0825               	movf	??_sprintf+2,w
  1362     0674  0229               	subwf	sprintf@val+1,w
  1363     0675  1D03               	skipz
  1364     0676  2E79               	goto	u985
  1365     0677  0824               	movf	??_sprintf+1,w
  1366     0678  0228               	subwf	sprintf@val,w
  1367     0679                     u985:
  1368     0679  1803               	skipnc
  1369     067A  2E7C               	goto	u981
  1370     067B  2E7D               	goto	u980
  1371     067C                     u981:
  1372     067C  2E7E               	goto	l1429
  1373     067D                     u980:
  1374     067D  2E88               	goto	l1431
  1375     067E                     l1429:
  1376     067E  3001               	movlw	1
  1377     067F  00A3               	movwf	??_sprintf
  1378     0680  0823               	movf	??_sprintf,w
  1379     0681  07AC               	addwf	sprintf@c,f
  1380     0682  3005               	movlw	5
  1381     0683  062C               	xorwf	sprintf@c,w
  1382     0684  1D03               	btfss	3,2
  1383     0685  2E87               	goto	u991
  1384     0686  2E88               	goto	u990
  1385     0687                     u991:
  1386     0687  2E62               	goto	l1425
  1387     0688                     u990:
  1388     0688                     l1431:
  1389                           
  1390                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  1391     0688  082C               	movf	sprintf@c,w
  1392     0689  00AA               	movwf	sprintf@prec
  1393                           
  1394                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1395     068A  2EC0               	goto	l1439
  1396     068B                     l1433:
  1397                           
  1398                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  1399     068B  300A               	movlw	10
  1400     068C  00F8               	movwf	___lwmod@divisor
  1401     068D  3000               	movlw	0
  1402     068E  00F9               	movwf	___lwmod@divisor+1
  1403     068F  082A               	movf	sprintf@prec,w
  1404     0690  00A3               	movwf	??_sprintf
  1405     0691  0723               	addwf	??_sprintf,w
  1406     0692  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  1407     0693  0084               	movwf	4
  1408     0694  120A  118A  200D  120A  118A  	fcall	stringdir
  1409     0699  00F0               	movwf	___lwdiv@divisor
  1410     069A  120A  118A  200D  120A  118A  	fcall	stringdir
  1411     069F  00F1               	movwf	___lwdiv@divisor+1
  1412     06A0  0829               	movf	sprintf@val+1,w
  1413     06A1  00F3               	movwf	___lwdiv@dividend+1
  1414     06A2  0828               	movf	sprintf@val,w
  1415     06A3  00F2               	movwf	___lwdiv@dividend
  1416     06A4  120A  118A  240E  120A  118A  	fcall	___lwdiv
  1417     06A9  0871               	movf	?___lwdiv+1,w
  1418     06AA  00FB               	movwf	___lwmod@dividend+1
  1419     06AB  0870               	movf	?___lwdiv,w
  1420     06AC  00FA               	movwf	___lwmod@dividend
  1421     06AD  120A  118A  2392  120A  118A  	fcall	___lwmod
  1422     06B2  0878               	movf	?___lwmod,w
  1423     06B3  3E30               	addlw	48
  1424     06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1425     06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1426     06B6  00AC               	movwf	sprintf@c
  1427     06B7                     l1435:
  1428                           
  1429                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  1430     06B7  082B               	movf	sprintf@sp,w
  1431     06B8  0084               	movwf	4
  1432     06B9  082C               	movf	sprintf@c,w
  1433     06BA  1383               	bcf	3,7	;select IRP bank0
  1434     06BB  0080               	movwf	0
  1435     06BC                     l1437:
  1436     06BC  3001               	movlw	1
  1437     06BD  00A3               	movwf	??_sprintf
  1438     06BE  0823               	movf	??_sprintf,w
  1439     06BF  07AB               	addwf	sprintf@sp,f
  1440     06C0                     l1439:
  1441                           
  1442                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  1443     06C0  30FF               	movlw	255
  1444     06C1  00A3               	movwf	??_sprintf
  1445     06C2  0823               	movf	??_sprintf,w
  1446     06C3  07AA               	addwf	sprintf@prec,f
  1447     06C4  0A2A               	incf	sprintf@prec,w
  1448     06C5  1D03               	btfss	3,2
  1449     06C6  2EC8               	goto	u1001
  1450     06C7  2EC9               	goto	u1000
  1451     06C8                     u1001:
  1452     06C8  2E8B               	goto	l1433
  1453     06C9                     u1000:
  1454     06C9                     l1441:
  1455                           
  1456                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1457     06C9  3001               	movlw	1
  1458     06CA  07A0               	addwf	sprintf@f,f
  1459     06CB  30FF               	movlw	-1
  1460     06CC  0720               	addwf	sprintf@f,w
  1461     06CD  0084               	movwf	4
  1462     06CE  120A  118A  200D  120A  118A  	fcall	stringdir
  1463     06D3  00AC               	movwf	sprintf@c
  1464     06D4  082C               	movf	sprintf@c,w
  1465     06D5  1D03               	btfss	3,2
  1466     06D6  2ED8               	goto	u1011
  1467     06D7  2ED9               	goto	u1010
  1468     06D8                     u1011:
  1469     06D8  2E23               	goto	l1401
  1470     06D9                     u1010:
  1471     06D9                     l1443:
  1472                           
  1473                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  1474     06D9  082B               	movf	sprintf@sp,w
  1475     06DA  0084               	movwf	4
  1476     06DB  1383               	bcf	3,7	;select IRP bank0
  1477     06DC  0180               	clrf	0
  1478     06DD                     l261:
  1479     06DD  0008               	return
  1480     06DE                     __end_of_sprintf:
  1481                           
  1482                           	psect	text2
  1483     0392                     __ptext2:	
  1484 ;; *************** function ___lwmod *****************
  1485 ;; Defined at:
  1486 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  1487 ;; Parameters:    Size  Location     Type
  1488 ;;  divisor         2    8[COMMON] unsigned int 
  1489 ;;  dividend        2   10[COMMON] unsigned int 
  1490 ;; Auto vars:     Size  Location     Type
  1491 ;;  counter         1   13[COMMON] unsigned char 
  1492 ;; Return value:  Size  Location     Type
  1493 ;;                  2    8[COMMON] unsigned int 
  1494 ;; Registers used:
  1495 ;;		wreg, status,2, status,0
  1496 ;; Tracked objects:
  1497 ;;		On entry : 0/0
  1498 ;;		On exit  : 0/0
  1499 ;;		Unchanged: 0/0
  1500 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1501 ;;      Params:         4       0       0       0       0
  1502 ;;      Locals:         1       0       0       0       0
  1503 ;;      Temps:          1       0       0       0       0
  1504 ;;      Totals:         6       0       0       0       0
  1505 ;;Total ram usage:        6 bytes
  1506 ;; Hardware stack levels used: 1
  1507 ;; This function calls:
  1508 ;;		Nothing
  1509 ;; This function is called by:
  1510 ;;		_sprintf
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514     0392                     ___lwmod:	
  1515                           ;psect for function ___lwmod
  1516                           
  1517     0392                     l1311:	
  1518                           ;incstack = 0
  1519                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1520                           
  1521     0392  0878               	movf	___lwmod@divisor,w
  1522     0393  0479               	iorwf	___lwmod@divisor+1,w
  1523     0394  1903               	btfsc	3,2
  1524     0395  2B97               	goto	u831
  1525     0396  2B98               	goto	u830
  1526     0397                     u831:
  1527     0397  2BC7               	goto	l1329
  1528     0398                     u830:
  1529     0398                     l1313:
  1530     0398  01FD               	clrf	___lwmod@counter
  1531     0399  0AFD               	incf	___lwmod@counter,f
  1532     039A  2BA6               	goto	l1319
  1533     039B                     l1315:
  1534     039B  3001               	movlw	1
  1535     039C                     u845:
  1536     039C  1003               	clrc
  1537     039D  0DF8               	rlf	___lwmod@divisor,f
  1538     039E  0DF9               	rlf	___lwmod@divisor+1,f
  1539     039F  3EFF               	addlw	-1
  1540     03A0  1D03               	skipz
  1541     03A1  2B9C               	goto	u845
  1542     03A2                     l1317:
  1543     03A2  3001               	movlw	1
  1544     03A3  00FC               	movwf	??___lwmod
  1545     03A4  087C               	movf	??___lwmod,w
  1546     03A5  07FD               	addwf	___lwmod@counter,f
  1547     03A6                     l1319:
  1548     03A6  1FF9               	btfss	___lwmod@divisor+1,7
  1549     03A7  2BA9               	goto	u851
  1550     03A8  2BAA               	goto	u850
  1551     03A9                     u851:
  1552     03A9  2B9B               	goto	l1315
  1553     03AA                     u850:
  1554     03AA                     l1321:
  1555     03AA  0879               	movf	___lwmod@divisor+1,w
  1556     03AB  027B               	subwf	___lwmod@dividend+1,w
  1557     03AC  1D03               	skipz
  1558     03AD  2BB0               	goto	u865
  1559     03AE  0878               	movf	___lwmod@divisor,w
  1560     03AF  027A               	subwf	___lwmod@dividend,w
  1561     03B0                     u865:
  1562     03B0  1C03               	skipc
  1563     03B1  2BB3               	goto	u861
  1564     03B2  2BB4               	goto	u860
  1565     03B3                     u861:
  1566     03B3  2BBA               	goto	l1325
  1567     03B4                     u860:
  1568     03B4                     l1323:
  1569     03B4  0878               	movf	___lwmod@divisor,w
  1570     03B5  02FA               	subwf	___lwmod@dividend,f
  1571     03B6  0879               	movf	___lwmod@divisor+1,w
  1572     03B7  1C03               	skipc
  1573     03B8  03FB               	decf	___lwmod@dividend+1,f
  1574     03B9  02FB               	subwf	___lwmod@dividend+1,f
  1575     03BA                     l1325:
  1576     03BA  3001               	movlw	1
  1577     03BB                     u875:
  1578     03BB  1003               	clrc
  1579     03BC  0CF9               	rrf	___lwmod@divisor+1,f
  1580     03BD  0CF8               	rrf	___lwmod@divisor,f
  1581     03BE  3EFF               	addlw	-1
  1582     03BF  1D03               	skipz
  1583     03C0  2BBB               	goto	u875
  1584     03C1                     l1327:
  1585     03C1  3001               	movlw	1
  1586     03C2  02FD               	subwf	___lwmod@counter,f
  1587     03C3  1D03               	btfss	3,2
  1588     03C4  2BC6               	goto	u881
  1589     03C5  2BC7               	goto	u880
  1590     03C6                     u881:
  1591     03C6  2BAA               	goto	l1321
  1592     03C7                     u880:
  1593     03C7                     l1329:
  1594     03C7  087B               	movf	___lwmod@dividend+1,w
  1595     03C8  00F9               	movwf	?___lwmod+1
  1596     03C9  087A               	movf	___lwmod@dividend,w
  1597     03CA  00F8               	movwf	?___lwmod
  1598     03CB                     l547:
  1599     03CB  0008               	return
  1600     03CC                     __end_of___lwmod:
  1601                           
  1602                           	psect	text3
  1603     040E                     __ptext3:	
  1604 ;; *************** function ___lwdiv *****************
  1605 ;; Defined at:
  1606 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;  divisor         2    0[COMMON] unsigned int 
  1609 ;;  dividend        2    2[COMMON] unsigned int 
  1610 ;; Auto vars:     Size  Location     Type
  1611 ;;  quotient        2    5[COMMON] unsigned int 
  1612 ;;  counter         1    7[COMMON] unsigned char 
  1613 ;; Return value:  Size  Location     Type
  1614 ;;                  2    0[COMMON] unsigned int 
  1615 ;; Registers used:
  1616 ;;		wreg, status,2, status,0
  1617 ;; Tracked objects:
  1618 ;;		On entry : 0/0
  1619 ;;		On exit  : 0/0
  1620 ;;		Unchanged: 0/0
  1621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1622 ;;      Params:         4       0       0       0       0
  1623 ;;      Locals:         3       0       0       0       0
  1624 ;;      Temps:          1       0       0       0       0
  1625 ;;      Totals:         8       0       0       0       0
  1626 ;;Total ram usage:        8 bytes
  1627 ;; Hardware stack levels used: 1
  1628 ;; This function calls:
  1629 ;;		Nothing
  1630 ;; This function is called by:
  1631 ;;		_sprintf
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635     040E                     ___lwdiv:	
  1636                           ;psect for function ___lwdiv
  1637                           
  1638     040E                     l1285:	
  1639                           ;incstack = 0
  1640                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1641                           
  1642     040E  01F5               	clrf	___lwdiv@quotient
  1643     040F  01F6               	clrf	___lwdiv@quotient+1
  1644     0410                     l1287:
  1645     0410  0870               	movf	___lwdiv@divisor,w
  1646     0411  0471               	iorwf	___lwdiv@divisor+1,w
  1647     0412  1903               	btfsc	3,2
  1648     0413  2C15               	goto	u761
  1649     0414  2C16               	goto	u760
  1650     0415                     u761:
  1651     0415  2C4D               	goto	l1307
  1652     0416                     u760:
  1653     0416                     l1289:
  1654     0416  01F7               	clrf	___lwdiv@counter
  1655     0417  0AF7               	incf	___lwdiv@counter,f
  1656     0418  2C24               	goto	l1295
  1657     0419                     l1291:
  1658     0419  3001               	movlw	1
  1659     041A                     u775:
  1660     041A  1003               	clrc
  1661     041B  0DF0               	rlf	___lwdiv@divisor,f
  1662     041C  0DF1               	rlf	___lwdiv@divisor+1,f
  1663     041D  3EFF               	addlw	-1
  1664     041E  1D03               	skipz
  1665     041F  2C1A               	goto	u775
  1666     0420                     l1293:
  1667     0420  3001               	movlw	1
  1668     0421  00F4               	movwf	??___lwdiv
  1669     0422  0874               	movf	??___lwdiv,w
  1670     0423  07F7               	addwf	___lwdiv@counter,f
  1671     0424                     l1295:
  1672     0424  1FF1               	btfss	___lwdiv@divisor+1,7
  1673     0425  2C27               	goto	u781
  1674     0426  2C28               	goto	u780
  1675     0427                     u781:
  1676     0427  2C19               	goto	l1291
  1677     0428                     u780:
  1678     0428                     l1297:
  1679     0428  3001               	movlw	1
  1680     0429                     u795:
  1681     0429  1003               	clrc
  1682     042A  0DF5               	rlf	___lwdiv@quotient,f
  1683     042B  0DF6               	rlf	___lwdiv@quotient+1,f
  1684     042C  3EFF               	addlw	-1
  1685     042D  1D03               	skipz
  1686     042E  2C29               	goto	u795
  1687     042F  0871               	movf	___lwdiv@divisor+1,w
  1688     0430  0273               	subwf	___lwdiv@dividend+1,w
  1689     0431  1D03               	skipz
  1690     0432  2C35               	goto	u805
  1691     0433  0870               	movf	___lwdiv@divisor,w
  1692     0434  0272               	subwf	___lwdiv@dividend,w
  1693     0435                     u805:
  1694     0435  1C03               	skipc
  1695     0436  2C38               	goto	u801
  1696     0437  2C39               	goto	u800
  1697     0438                     u801:
  1698     0438  2C40               	goto	l1303
  1699     0439                     u800:
  1700     0439                     l1299:
  1701     0439  0870               	movf	___lwdiv@divisor,w
  1702     043A  02F2               	subwf	___lwdiv@dividend,f
  1703     043B  0871               	movf	___lwdiv@divisor+1,w
  1704     043C  1C03               	skipc
  1705     043D  03F3               	decf	___lwdiv@dividend+1,f
  1706     043E  02F3               	subwf	___lwdiv@dividend+1,f
  1707     043F                     l1301:
  1708     043F  1475               	bsf	___lwdiv@quotient,0
  1709     0440                     l1303:
  1710     0440  3001               	movlw	1
  1711     0441                     u815:
  1712     0441  1003               	clrc
  1713     0442  0CF1               	rrf	___lwdiv@divisor+1,f
  1714     0443  0CF0               	rrf	___lwdiv@divisor,f
  1715     0444  3EFF               	addlw	-1
  1716     0445  1D03               	skipz
  1717     0446  2C41               	goto	u815
  1718     0447                     l1305:
  1719     0447  3001               	movlw	1
  1720     0448  02F7               	subwf	___lwdiv@counter,f
  1721     0449  1D03               	btfss	3,2
  1722     044A  2C4C               	goto	u821
  1723     044B  2C4D               	goto	u820
  1724     044C                     u821:
  1725     044C  2C28               	goto	l1297
  1726     044D                     u820:
  1727     044D                     l1307:
  1728     044D  0876               	movf	___lwdiv@quotient+1,w
  1729     044E  00F1               	movwf	?___lwdiv+1
  1730     044F  0875               	movf	___lwdiv@quotient,w
  1731     0450  00F0               	movwf	?___lwdiv
  1732     0451                     l537:
  1733     0451  0008               	return
  1734     0452                     __end_of___lwdiv:
  1735                           
  1736                           	psect	text4
  1737     02D2                     __ptext4:	
  1738 ;; *************** function _setup *****************
  1739 ;; Defined at:
  1740 ;;		line 119 in file "main_M.c"
  1741 ;; Parameters:    Size  Location     Type
  1742 ;;		None
  1743 ;; Auto vars:     Size  Location     Type
  1744 ;;		None
  1745 ;; Return value:  Size  Location     Type
  1746 ;;                  1    wreg      void 
  1747 ;; Registers used:
  1748 ;;		wreg, status,2, status,0, pclath, cstack
  1749 ;; Tracked objects:
  1750 ;;		On entry : 0/0
  1751 ;;		On exit  : 0/0
  1752 ;;		Unchanged: 0/0
  1753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1754 ;;      Params:         0       0       0       0       0
  1755 ;;      Locals:         0       0       0       0       0
  1756 ;;      Temps:          0       0       0       0       0
  1757 ;;      Totals:         0       0       0       0       0
  1758 ;;Total ram usage:        0 bytes
  1759 ;; Hardware stack levels used: 1
  1760 ;; Hardware stack levels required when called: 3
  1761 ;; This function calls:
  1762 ;;		_I2C_Master_Init
  1763 ;;		_Lcd_Init_4bits
  1764 ;;		_setupINTOSC
  1765 ;; This function is called by:
  1766 ;;		_main
  1767 ;; This function uses a non-reentrant model
  1768 ;;
  1769                           
  1770     02D2                     _setup:	
  1771                           ;psect for function _setup
  1772                           
  1773     02D2                     l1391:	
  1774                           ;incstack = 0
  1775                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1776                           
  1777                           
  1778                           ;main_M.c: 121:     ANSEL = 0;
  1779     02D2  1683               	bsf	3,5	;RP0=1, select bank3
  1780     02D3  1703               	bsf	3,6	;RP1=1, select bank3
  1781     02D4  0188               	clrf	8	;volatile
  1782                           
  1783                           ;main_M.c: 122:     ANSELH = 0;
  1784     02D5  0189               	clrf	9	;volatile
  1785                           
  1786                           ;main_M.c: 124:     TRISB = 0;
  1787     02D6  1683               	bsf	3,5	;RP0=1, select bank1
  1788     02D7  1303               	bcf	3,6	;RP1=0, select bank1
  1789     02D8  0186               	clrf	6	;volatile
  1790                           
  1791                           ;main_M.c: 125:     TRISD = 0;
  1792     02D9  0188               	clrf	8	;volatile
  1793                           
  1794                           ;main_M.c: 127:     PORTB = 0;
  1795     02DA  1283               	bcf	3,5	;RP0=0, select bank0
  1796     02DB  1303               	bcf	3,6	;RP1=0, select bank0
  1797     02DC  0186               	clrf	6	;volatile
  1798                           
  1799                           ;main_M.c: 128:     PORTD = 0;
  1800     02DD  0188               	clrf	8	;volatile
  1801     02DE                     l1393:
  1802                           
  1803                           ;main_M.c: 130:     I2C_Master_Init(100000);
  1804     02DE  3000               	movlw	0
  1805     02DF  00A3               	movwf	I2C_Master_Init@c+3
  1806     02E0  3001               	movlw	1
  1807     02E1  00A2               	movwf	I2C_Master_Init@c+2
  1808     02E2  3086               	movlw	134
  1809     02E3  00A1               	movwf	I2C_Master_Init@c+1
  1810     02E4  30A0               	movlw	160
  1811     02E5  00A0               	movwf	I2C_Master_Init@c
  1812     02E6  120A  118A  235A  120A  118A  	fcall	_I2C_Master_Init
  1813     02EB                     l1395:
  1814                           
  1815                           ;main_M.c: 131:     setupINTOSC(FOSC_8MHZ);
  1816     02EB  3007               	movlw	7
  1817     02EC  120A  118A  2289  120A  118A  	fcall	_setupINTOSC
  1818     02F1                     l1397:
  1819                           
  1820                           ;main_M.c: 132:     Lcd_Init_4bits();
  1821     02F1  120A  118A  24F3  120A  118A  	fcall	_Lcd_Init_4bits
  1822     02F6                     l154:
  1823     02F6  0008               	return
  1824     02F7                     __end_of_setup:
  1825                           
  1826                           	psect	text5
  1827     0289                     __ptext5:	
  1828 ;; *************** function _setupINTOSC *****************
  1829 ;; Defined at:
  1830 ;;		line 11 in file "configINTOSC.c"
  1831 ;; Parameters:    Size  Location     Type
  1832 ;;  F               1    wreg     enum E1292
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  F               1    1[COMMON] enum E1292
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, status,2, status,0
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       0       0       0
  1845 ;;      Locals:         1       0       0       0       0
  1846 ;;      Temps:          1       0       0       0       0
  1847 ;;      Totals:         2       0       0       0       0
  1848 ;;Total ram usage:        2 bytes
  1849 ;; Hardware stack levels used: 1
  1850 ;; This function calls:
  1851 ;;		Nothing
  1852 ;; This function is called by:
  1853 ;;		_setup
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857     0289                     _setupINTOSC:	
  1858                           ;psect for function _setupINTOSC
  1859                           
  1860                           
  1861                           ;incstack = 0
  1862                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  1863                           ;setupINTOSC@F stored from wreg
  1864     0289  00F1               	movwf	setupINTOSC@F
  1865     028A                     l1251:
  1866                           
  1867                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  1868     028A  0871               	movf	setupINTOSC@F,w
  1869     028B  00F0               	movwf	??_setupINTOSC
  1870     028C  0EF0               	swapf	??_setupINTOSC,f
  1871     028D  1683               	bsf	3,5	;RP0=1, select bank1
  1872     028E  1303               	bcf	3,6	;RP1=0, select bank1
  1873     028F  080F               	movf	15,w	;volatile
  1874     0290  0670               	xorwf	??_setupINTOSC,w
  1875     0291  398F               	andlw	-113
  1876     0292  0670               	xorwf	??_setupINTOSC,w
  1877     0293  008F               	movwf	15	;volatile
  1878     0294                     l1253:
  1879                           
  1880                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  1881     0294  140F               	bsf	15,0	;volatile
  1882     0295                     l60:
  1883     0295  0008               	return
  1884     0296                     __end_of_setupINTOSC:
  1885                           
  1886                           	psect	text6
  1887     04F3                     __ptext6:	
  1888 ;; *************** function _Lcd_Init_4bits *****************
  1889 ;; Defined at:
  1890 ;;		line 66 in file "configLCD_4bits.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;		None
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0, pclath, cstack
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1904 ;;      Params:         0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0
  1906 ;;      Temps:          2       0       0       0       0
  1907 ;;      Totals:         2       0       0       0       0
  1908 ;;Total ram usage:        2 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 2
  1911 ;; This function calls:
  1912 ;;		_Lcd_Cmd_4bits
  1913 ;;		_Lcd_Port_4bits
  1914 ;; This function is called by:
  1915 ;;		_setup
  1916 ;; This function uses a non-reentrant model
  1917 ;;
  1918                           
  1919     04F3                     _Lcd_Init_4bits:	
  1920                           ;psect for function _Lcd_Init_4bits
  1921                           
  1922     04F3                     l1255:	
  1923                           ;incstack = 0
  1924                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  1925                           
  1926                           
  1927                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  1928     04F3  3000               	movlw	0
  1929     04F4  120A  118A  22B0  120A  118A  	fcall	_Lcd_Port_4bits
  1930     04F9                     l1257:
  1931                           
  1932                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1933     04F9  3034               	movlw	52
  1934     04FA  00F5               	movwf	??_Lcd_Init_4bits+1
  1935     04FB  30F1               	movlw	241
  1936     04FC  00F4               	movwf	??_Lcd_Init_4bits
  1937     04FD                     u1227:
  1938     04FD  0BF4               	decfsz	??_Lcd_Init_4bits,f
  1939     04FE  2CFD               	goto	u1227
  1940     04FF  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  1941     0500  2CFD               	goto	u1227
  1942     0501  2D02               	nop2
  1943     0502                     l1259:
  1944                           
  1945                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  1946     0502  3003               	movlw	3
  1947     0503  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  1948                           
  1949                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1950     0508  300D               	movlw	13
  1951     0509  00F5               	movwf	??_Lcd_Init_4bits+1
  1952     050A  30FB               	movlw	251
  1953     050B  00F4               	movwf	??_Lcd_Init_4bits
  1954     050C                     u1237:
  1955     050C  0BF4               	decfsz	??_Lcd_Init_4bits,f
  1956     050D  2D0C               	goto	u1237
  1957     050E  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  1958     050F  2D0C               	goto	u1237
  1959     0510  2D11               	nop2
  1960     0511                     l1261:
  1961                           
  1962                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  1963     0511  3003               	movlw	3
  1964     0512  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  1965     0517                     l1263:
  1966                           
  1967                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1968     0517  301D               	movlw	29
  1969     0518  00F5               	movwf	??_Lcd_Init_4bits+1
  1970     0519  3091               	movlw	145
  1971     051A  00F4               	movwf	??_Lcd_Init_4bits
  1972     051B                     u1247:
  1973     051B  0BF4               	decfsz	??_Lcd_Init_4bits,f
  1974     051C  2D1B               	goto	u1247
  1975     051D  0BF5               	decfsz	??_Lcd_Init_4bits+1,f
  1976     051E  2D1B               	goto	u1247
  1977                           
  1978                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  1979     051F  3003               	movlw	3
  1980     0520  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  1981                           
  1982                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  1983     0525  3002               	movlw	2
  1984     0526  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  1985                           
  1986                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  1987     052B  3002               	movlw	2
  1988     052C  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  1989                           
  1990                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  1991     0531  3008               	movlw	8
  1992     0532  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  1993                           
  1994                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  1995     0537  3000               	movlw	0
  1996     0538  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  1997                           
  1998                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  1999     053D  300C               	movlw	12
  2000     053E  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  2001                           
  2002                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  2003     0543  3000               	movlw	0
  2004     0544  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  2005                           
  2006                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  2007     0549  3006               	movlw	6
  2008     054A  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  2009     054F                     l90:
  2010     054F  0008               	return
  2011     0550                     __end_of_Lcd_Init_4bits:
  2012                           
  2013                           	psect	text7
  2014     035A                     __ptext7:	
  2015 ;; *************** function _I2C_Master_Init *****************
  2016 ;; Defined at:
  2017 ;;		line 13 in file "configI2C.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;  c               4    0[BANK0 ] const unsigned long 
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;		None
  2022 ;; Return value:  Size  Location     Type
  2023 ;;                  1    wreg      void 
  2024 ;; Registers used:
  2025 ;;		wreg, status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2031 ;;      Params:         0       4       0       0       0
  2032 ;;      Locals:         0       0       0       0       0
  2033 ;;      Temps:          0       4       0       0       0
  2034 ;;      Totals:         0       8       0       0       0
  2035 ;;Total ram usage:        8 bytes
  2036 ;; Hardware stack levels used: 1
  2037 ;; Hardware stack levels required when called: 1
  2038 ;; This function calls:
  2039 ;;		___lldiv
  2040 ;; This function is called by:
  2041 ;;		_setup
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045     035A                     _I2C_Master_Init:	
  2046                           ;psect for function _I2C_Master_Init
  2047                           
  2048     035A                     l1235:	
  2049                           ;incstack = 0
  2050                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2051                           
  2052                           
  2053                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
  2054     035A  3028               	movlw	40
  2055     035B  1283               	bcf	3,5	;RP0=0, select bank0
  2056     035C  1303               	bcf	3,6	;RP1=0, select bank0
  2057     035D  0094               	movwf	20	;volatile
  2058     035E                     l1237:
  2059                           
  2060                           ;configI2C.c: 16:     SSPCON2 = 0;
  2061     035E  1683               	bsf	3,5	;RP0=1, select bank1
  2062     035F  1303               	bcf	3,6	;RP1=0, select bank1
  2063     0360  0191               	clrf	17	;volatile
  2064     0361                     l1239:
  2065                           
  2066                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
  2067     0361  1283               	bcf	3,5	;RP0=0, select bank0
  2068     0362  1303               	bcf	3,6	;RP1=0, select bank0
  2069     0363  0820               	movf	I2C_Master_Init@c,w
  2070     0364  00A4               	movwf	??_I2C_Master_Init
  2071     0365  0821               	movf	I2C_Master_Init@c+1,w
  2072     0366  00A5               	movwf	??_I2C_Master_Init+1
  2073     0367  0822               	movf	I2C_Master_Init@c+2,w
  2074     0368  00A6               	movwf	??_I2C_Master_Init+2
  2075     0369  0823               	movf	I2C_Master_Init@c+3,w
  2076     036A  00A7               	movwf	??_I2C_Master_Init+3
  2077     036B  3002               	movlw	2
  2078     036C                     u725:
  2079     036C  1003               	clrc
  2080     036D  0DA4               	rlf	??_I2C_Master_Init,f
  2081     036E  0DA5               	rlf	??_I2C_Master_Init+1,f
  2082     036F  0DA6               	rlf	??_I2C_Master_Init+2,f
  2083     0370  0DA7               	rlf	??_I2C_Master_Init+3,f
  2084     0371                     u720:
  2085     0371  3EFF               	addlw	-1
  2086     0372  1D03               	skipz
  2087     0373  2B6C               	goto	u725
  2088     0374  0827               	movf	??_I2C_Master_Init+3,w
  2089     0375  00F3               	movwf	___lldiv@divisor+3
  2090     0376  0826               	movf	??_I2C_Master_Init+2,w
  2091     0377  00F2               	movwf	___lldiv@divisor+2
  2092     0378  0825               	movf	??_I2C_Master_Init+1,w
  2093     0379  00F1               	movwf	___lldiv@divisor+1
  2094     037A  0824               	movf	??_I2C_Master_Init,w
  2095     037B  00F0               	movwf	___lldiv@divisor
  2096     037C  3000               	movlw	0
  2097     037D  00F7               	movwf	___lldiv@dividend+3
  2098     037E  307A               	movlw	122
  2099     037F  00F6               	movwf	___lldiv@dividend+2
  2100     0380  3012               	movlw	18
  2101     0381  00F5               	movwf	___lldiv@dividend+1
  2102     0382  3000               	movlw	0
  2103     0383  00F4               	movwf	___lldiv@dividend
  2104     0384  120A  118A  2550  120A  118A  	fcall	___lldiv
  2105     0389  0870               	movf	?___lldiv,w
  2106     038A  3EFF               	addlw	255
  2107     038B  1683               	bsf	3,5	;RP0=1, select bank1
  2108     038C  1303               	bcf	3,6	;RP1=0, select bank1
  2109     038D  0093               	movwf	19	;volatile
  2110     038E                     l1241:
  2111                           
  2112                           ;configI2C.c: 18:     SSPSTAT = 0;
  2113     038E  0194               	clrf	20	;volatile
  2114     038F                     l1243:
  2115                           
  2116                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
  2117     038F  1587               	bsf	7,3	;volatile
  2118     0390                     l1245:
  2119                           
  2120                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
  2121     0390  1607               	bsf	7,4	;volatile
  2122     0391                     l29:
  2123     0391  0008               	return
  2124     0392                     __end_of_I2C_Master_Init:
  2125                           
  2126                           	psect	text8
  2127     0550                     __ptext8:	
  2128 ;; *************** function ___lldiv *****************
  2129 ;; Defined at:
  2130 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  2131 ;; Parameters:    Size  Location     Type
  2132 ;;  divisor         4    0[COMMON] unsigned long 
  2133 ;;  dividend        4    4[COMMON] unsigned long 
  2134 ;; Auto vars:     Size  Location     Type
  2135 ;;  quotient        4    9[COMMON] unsigned long 
  2136 ;;  counter         1   13[COMMON] unsigned char 
  2137 ;; Return value:  Size  Location     Type
  2138 ;;                  4    0[COMMON] unsigned long 
  2139 ;; Registers used:
  2140 ;;		wreg, status,2, status,0
  2141 ;; Tracked objects:
  2142 ;;		On entry : 0/0
  2143 ;;		On exit  : 0/0
  2144 ;;		Unchanged: 0/0
  2145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2146 ;;      Params:         8       0       0       0       0
  2147 ;;      Locals:         5       0       0       0       0
  2148 ;;      Temps:          1       0       0       0       0
  2149 ;;      Totals:        14       0       0       0       0
  2150 ;;Total ram usage:       14 bytes
  2151 ;; Hardware stack levels used: 1
  2152 ;; This function calls:
  2153 ;;		Nothing
  2154 ;; This function is called by:
  2155 ;;		_I2C_Master_Init
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           
  2159     0550                     ___lldiv:	
  2160                           ;psect for function ___lldiv
  2161                           
  2162     0550                     l1211:	
  2163                           ;incstack = 0
  2164                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2165                           
  2166     0550  3000               	movlw	0
  2167     0551  00FC               	movwf	___lldiv@quotient+3
  2168     0552  3000               	movlw	0
  2169     0553  00FB               	movwf	___lldiv@quotient+2
  2170     0554  3000               	movlw	0
  2171     0555  00FA               	movwf	___lldiv@quotient+1
  2172     0556  3000               	movlw	0
  2173     0557  00F9               	movwf	___lldiv@quotient
  2174     0558  0873               	movf	___lldiv@divisor+3,w
  2175     0559  0472               	iorwf	___lldiv@divisor+2,w
  2176     055A  0471               	iorwf	___lldiv@divisor+1,w
  2177     055B  0470               	iorwf	___lldiv@divisor,w
  2178     055C  1903               	skipnz
  2179     055D  2D5F               	goto	u651
  2180     055E  2D60               	goto	u650
  2181     055F                     u651:
  2182     055F  2DAD               	goto	l1231
  2183     0560                     u650:
  2184     0560                     l1213:
  2185     0560  01FD               	clrf	___lldiv@counter
  2186     0561  0AFD               	incf	___lldiv@counter,f
  2187     0562  2D70               	goto	l1217
  2188     0563                     l1215:
  2189     0563  3001               	movlw	1
  2190     0564  00F8               	movwf	??___lldiv
  2191     0565                     u665:
  2192     0565  1003               	clrc
  2193     0566  0DF0               	rlf	___lldiv@divisor,f
  2194     0567  0DF1               	rlf	___lldiv@divisor+1,f
  2195     0568  0DF2               	rlf	___lldiv@divisor+2,f
  2196     0569  0DF3               	rlf	___lldiv@divisor+3,f
  2197     056A  0BF8               	decfsz	??___lldiv,f
  2198     056B  2D65               	goto	u665
  2199     056C  3001               	movlw	1
  2200     056D  00F8               	movwf	??___lldiv
  2201     056E  0878               	movf	??___lldiv,w
  2202     056F  07FD               	addwf	___lldiv@counter,f
  2203     0570                     l1217:
  2204     0570  1FF3               	btfss	___lldiv@divisor+3,7
  2205     0571  2D73               	goto	u671
  2206     0572  2D74               	goto	u670
  2207     0573                     u671:
  2208     0573  2D63               	goto	l1215
  2209     0574                     u670:
  2210     0574                     l1219:
  2211     0574  3001               	movlw	1
  2212     0575  00F8               	movwf	??___lldiv
  2213     0576                     u685:
  2214     0576  1003               	clrc
  2215     0577  0DF9               	rlf	___lldiv@quotient,f
  2216     0578  0DFA               	rlf	___lldiv@quotient+1,f
  2217     0579  0DFB               	rlf	___lldiv@quotient+2,f
  2218     057A  0DFC               	rlf	___lldiv@quotient+3,f
  2219     057B  0BF8               	decfsz	??___lldiv,f
  2220     057C  2D76               	goto	u685
  2221     057D                     l1221:
  2222     057D  0873               	movf	___lldiv@divisor+3,w
  2223     057E  0277               	subwf	___lldiv@dividend+3,w
  2224     057F  1D03               	skipz
  2225     0580  2D8B               	goto	u695
  2226     0581  0872               	movf	___lldiv@divisor+2,w
  2227     0582  0276               	subwf	___lldiv@dividend+2,w
  2228     0583  1D03               	skipz
  2229     0584  2D8B               	goto	u695
  2230     0585  0871               	movf	___lldiv@divisor+1,w
  2231     0586  0275               	subwf	___lldiv@dividend+1,w
  2232     0587  1D03               	skipz
  2233     0588  2D8B               	goto	u695
  2234     0589  0870               	movf	___lldiv@divisor,w
  2235     058A  0274               	subwf	___lldiv@dividend,w
  2236     058B                     u695:
  2237     058B  1C03               	skipc
  2238     058C  2D8E               	goto	u691
  2239     058D  2D8F               	goto	u690
  2240     058E                     u691:
  2241     058E  2D9E               	goto	l1227
  2242     058F                     u690:
  2243     058F                     l1223:
  2244     058F  0870               	movf	___lldiv@divisor,w
  2245     0590  02F4               	subwf	___lldiv@dividend,f
  2246     0591  0871               	movf	___lldiv@divisor+1,w
  2247     0592  1C03               	skipc
  2248     0593  0F71               	incfsz	___lldiv@divisor+1,w
  2249     0594  02F5               	subwf	___lldiv@dividend+1,f
  2250     0595  0872               	movf	___lldiv@divisor+2,w
  2251     0596  1C03               	skipc
  2252     0597  0F72               	incfsz	___lldiv@divisor+2,w
  2253     0598  02F6               	subwf	___lldiv@dividend+2,f
  2254     0599  0873               	movf	___lldiv@divisor+3,w
  2255     059A  1C03               	skipc
  2256     059B  0F73               	incfsz	___lldiv@divisor+3,w
  2257     059C  02F7               	subwf	___lldiv@dividend+3,f
  2258     059D                     l1225:
  2259     059D  1479               	bsf	___lldiv@quotient,0
  2260     059E                     l1227:
  2261     059E  3001               	movlw	1
  2262     059F                     u705:
  2263     059F  1003               	clrc
  2264     05A0  0CF3               	rrf	___lldiv@divisor+3,f
  2265     05A1  0CF2               	rrf	___lldiv@divisor+2,f
  2266     05A2  0CF1               	rrf	___lldiv@divisor+1,f
  2267     05A3  0CF0               	rrf	___lldiv@divisor,f
  2268     05A4  3EFF               	addlw	-1
  2269     05A5  1D03               	skipz
  2270     05A6  2D9F               	goto	u705
  2271     05A7                     l1229:
  2272     05A7  3001               	movlw	1
  2273     05A8  02FD               	subwf	___lldiv@counter,f
  2274     05A9  1D03               	btfss	3,2
  2275     05AA  2DAC               	goto	u711
  2276     05AB  2DAD               	goto	u710
  2277     05AC                     u711:
  2278     05AC  2D74               	goto	l1219
  2279     05AD                     u710:
  2280     05AD                     l1231:
  2281     05AD  087C               	movf	___lldiv@quotient+3,w
  2282     05AE  00F3               	movwf	?___lldiv+3
  2283     05AF  087B               	movf	___lldiv@quotient+2,w
  2284     05B0  00F2               	movwf	?___lldiv+2
  2285     05B1  087A               	movf	___lldiv@quotient+1,w
  2286     05B2  00F1               	movwf	?___lldiv+1
  2287     05B3  0879               	movf	___lldiv@quotient,w
  2288     05B4  00F0               	movwf	?___lldiv
  2289     05B5                     l301:
  2290     05B5  0008               	return
  2291     05B6                     __end_of___lldiv:
  2292                           
  2293                           	psect	text9
  2294     0498                     __ptext9:	
  2295 ;; *************** function ___awmod *****************
  2296 ;; Defined at:
  2297 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  divisor         2    9[COMMON] int 
  2300 ;;  dividend        2   11[COMMON] int 
  2301 ;; Auto vars:     Size  Location     Type
  2302 ;;  sign            1    1[BANK0 ] unsigned char 
  2303 ;;  counter         1    0[BANK0 ] unsigned char 
  2304 ;; Return value:  Size  Location     Type
  2305 ;;                  2    9[COMMON] int 
  2306 ;; Registers used:
  2307 ;;		wreg, status,2, status,0
  2308 ;; Tracked objects:
  2309 ;;		On entry : 0/0
  2310 ;;		On exit  : 0/0
  2311 ;;		Unchanged: 0/0
  2312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2313 ;;      Params:         4       0       0       0       0
  2314 ;;      Locals:         0       2       0       0       0
  2315 ;;      Temps:          1       0       0       0       0
  2316 ;;      Totals:         5       2       0       0       0
  2317 ;;Total ram usage:        7 bytes
  2318 ;; Hardware stack levels used: 1
  2319 ;; This function calls:
  2320 ;;		Nothing
  2321 ;; This function is called by:
  2322 ;;		_main
  2323 ;; This function uses a non-reentrant model
  2324 ;;
  2325                           
  2326     0498                     ___awmod:	
  2327                           ;psect for function ___awmod
  2328                           
  2329     0498                     l1495:	
  2330                           ;incstack = 0
  2331                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2332                           
  2333     0498  1283               	bcf	3,5	;RP0=0, select bank0
  2334     0499  1303               	bcf	3,6	;RP1=0, select bank0
  2335     049A  01A1               	clrf	___awmod@sign
  2336     049B                     l1497:
  2337     049B  1FFC               	btfss	___awmod@dividend+1,7
  2338     049C  2C9E               	goto	u1121
  2339     049D  2C9F               	goto	u1120
  2340     049E                     u1121:
  2341     049E  2CA6               	goto	l1503
  2342     049F                     u1120:
  2343     049F                     l1499:
  2344     049F  09FB               	comf	___awmod@dividend,f
  2345     04A0  09FC               	comf	___awmod@dividend+1,f
  2346     04A1  0AFB               	incf	___awmod@dividend,f
  2347     04A2  1903               	skipnz
  2348     04A3  0AFC               	incf	___awmod@dividend+1,f
  2349     04A4                     l1501:
  2350     04A4  01A1               	clrf	___awmod@sign
  2351     04A5  0AA1               	incf	___awmod@sign,f
  2352     04A6                     l1503:
  2353     04A6  1FFA               	btfss	___awmod@divisor+1,7
  2354     04A7  2CA9               	goto	u1131
  2355     04A8  2CAA               	goto	u1130
  2356     04A9                     u1131:
  2357     04A9  2CAF               	goto	l1507
  2358     04AA                     u1130:
  2359     04AA                     l1505:
  2360     04AA  09F9               	comf	___awmod@divisor,f
  2361     04AB  09FA               	comf	___awmod@divisor+1,f
  2362     04AC  0AF9               	incf	___awmod@divisor,f
  2363     04AD  1903               	skipnz
  2364     04AE  0AFA               	incf	___awmod@divisor+1,f
  2365     04AF                     l1507:
  2366     04AF  0879               	movf	___awmod@divisor,w
  2367     04B0  047A               	iorwf	___awmod@divisor+1,w
  2368     04B1  1903               	btfsc	3,2
  2369     04B2  2CB4               	goto	u1141
  2370     04B3  2CB5               	goto	u1140
  2371     04B4                     u1141:
  2372     04B4  2CE4               	goto	l1525
  2373     04B5                     u1140:
  2374     04B5                     l1509:
  2375     04B5  01A0               	clrf	___awmod@counter
  2376     04B6  0AA0               	incf	___awmod@counter,f
  2377     04B7  2CC3               	goto	l1515
  2378     04B8                     l1511:
  2379     04B8  3001               	movlw	1
  2380     04B9                     u1155:
  2381     04B9  1003               	clrc
  2382     04BA  0DF9               	rlf	___awmod@divisor,f
  2383     04BB  0DFA               	rlf	___awmod@divisor+1,f
  2384     04BC  3EFF               	addlw	-1
  2385     04BD  1D03               	skipz
  2386     04BE  2CB9               	goto	u1155
  2387     04BF                     l1513:
  2388     04BF  3001               	movlw	1
  2389     04C0  00FD               	movwf	??___awmod
  2390     04C1  087D               	movf	??___awmod,w
  2391     04C2  07A0               	addwf	___awmod@counter,f
  2392     04C3                     l1515:
  2393     04C3  1FFA               	btfss	___awmod@divisor+1,7
  2394     04C4  2CC6               	goto	u1161
  2395     04C5  2CC7               	goto	u1160
  2396     04C6                     u1161:
  2397     04C6  2CB8               	goto	l1511
  2398     04C7                     u1160:
  2399     04C7                     l1517:
  2400     04C7  087A               	movf	___awmod@divisor+1,w
  2401     04C8  027C               	subwf	___awmod@dividend+1,w
  2402     04C9  1D03               	skipz
  2403     04CA  2CCD               	goto	u1175
  2404     04CB  0879               	movf	___awmod@divisor,w
  2405     04CC  027B               	subwf	___awmod@dividend,w
  2406     04CD                     u1175:
  2407     04CD  1C03               	skipc
  2408     04CE  2CD0               	goto	u1171
  2409     04CF  2CD1               	goto	u1170
  2410     04D0                     u1171:
  2411     04D0  2CD7               	goto	l1521
  2412     04D1                     u1170:
  2413     04D1                     l1519:
  2414     04D1  0879               	movf	___awmod@divisor,w
  2415     04D2  02FB               	subwf	___awmod@dividend,f
  2416     04D3  087A               	movf	___awmod@divisor+1,w
  2417     04D4  1C03               	skipc
  2418     04D5  03FC               	decf	___awmod@dividend+1,f
  2419     04D6  02FC               	subwf	___awmod@dividend+1,f
  2420     04D7                     l1521:
  2421     04D7  3001               	movlw	1
  2422     04D8                     u1185:
  2423     04D8  1003               	clrc
  2424     04D9  0CFA               	rrf	___awmod@divisor+1,f
  2425     04DA  0CF9               	rrf	___awmod@divisor,f
  2426     04DB  3EFF               	addlw	-1
  2427     04DC  1D03               	skipz
  2428     04DD  2CD8               	goto	u1185
  2429     04DE                     l1523:
  2430     04DE  3001               	movlw	1
  2431     04DF  02A0               	subwf	___awmod@counter,f
  2432     04E0  1D03               	btfss	3,2
  2433     04E1  2CE3               	goto	u1191
  2434     04E2  2CE4               	goto	u1190
  2435     04E3                     u1191:
  2436     04E3  2CC7               	goto	l1517
  2437     04E4                     u1190:
  2438     04E4                     l1525:
  2439     04E4  0821               	movf	___awmod@sign,w
  2440     04E5  1903               	btfsc	3,2
  2441     04E6  2CE8               	goto	u1201
  2442     04E7  2CE9               	goto	u1200
  2443     04E8                     u1201:
  2444     04E8  2CEE               	goto	l1529
  2445     04E9                     u1200:
  2446     04E9                     l1527:
  2447     04E9  09FB               	comf	___awmod@dividend,f
  2448     04EA  09FC               	comf	___awmod@dividend+1,f
  2449     04EB  0AFB               	incf	___awmod@dividend,f
  2450     04EC  1903               	skipnz
  2451     04ED  0AFC               	incf	___awmod@dividend+1,f
  2452     04EE                     l1529:
  2453     04EE  087C               	movf	___awmod@dividend+1,w
  2454     04EF  00FA               	movwf	?___awmod+1
  2455     04F0  087B               	movf	___awmod@dividend,w
  2456     04F1  00F9               	movwf	?___awmod
  2457     04F2                     l431:
  2458     04F2  0008               	return
  2459     04F3                     __end_of___awmod:
  2460                           
  2461                           	psect	text10
  2462     05B6                     __ptext10:	
  2463 ;; *************** function ___awdiv *****************
  2464 ;; Defined at:
  2465 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  divisor         2    0[COMMON] int 
  2468 ;;  dividend        2    2[COMMON] int 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  quotient        2    7[COMMON] int 
  2471 ;;  sign            1    6[COMMON] unsigned char 
  2472 ;;  counter         1    5[COMMON] unsigned char 
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  2    0[COMMON] int 
  2475 ;; Registers used:
  2476 ;;		wreg, status,2, status,0
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         4       0       0       0       0
  2483 ;;      Locals:         4       0       0       0       0
  2484 ;;      Temps:          1       0       0       0       0
  2485 ;;      Totals:         9       0       0       0       0
  2486 ;;Total ram usage:        9 bytes
  2487 ;; Hardware stack levels used: 1
  2488 ;; This function calls:
  2489 ;;		Nothing
  2490 ;; This function is called by:
  2491 ;;		_main
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495     05B6                     ___awdiv:	
  2496                           ;psect for function ___awdiv
  2497                           
  2498     05B6                     l1451:	
  2499                           ;incstack = 0
  2500                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2501                           
  2502     05B6  01F6               	clrf	___awdiv@sign
  2503     05B7                     l1453:
  2504     05B7  1FF1               	btfss	___awdiv@divisor+1,7
  2505     05B8  2DBA               	goto	u1021
  2506     05B9  2DBB               	goto	u1020
  2507     05BA                     u1021:
  2508     05BA  2DC2               	goto	l1459
  2509     05BB                     u1020:
  2510     05BB                     l1455:
  2511     05BB  09F0               	comf	___awdiv@divisor,f
  2512     05BC  09F1               	comf	___awdiv@divisor+1,f
  2513     05BD  0AF0               	incf	___awdiv@divisor,f
  2514     05BE  1903               	skipnz
  2515     05BF  0AF1               	incf	___awdiv@divisor+1,f
  2516     05C0                     l1457:
  2517     05C0  01F6               	clrf	___awdiv@sign
  2518     05C1  0AF6               	incf	___awdiv@sign,f
  2519     05C2                     l1459:
  2520     05C2  1FF3               	btfss	___awdiv@dividend+1,7
  2521     05C3  2DC5               	goto	u1031
  2522     05C4  2DC6               	goto	u1030
  2523     05C5                     u1031:
  2524     05C5  2DCF               	goto	l1465
  2525     05C6                     u1030:
  2526     05C6                     l1461:
  2527     05C6  09F2               	comf	___awdiv@dividend,f
  2528     05C7  09F3               	comf	___awdiv@dividend+1,f
  2529     05C8  0AF2               	incf	___awdiv@dividend,f
  2530     05C9  1903               	skipnz
  2531     05CA  0AF3               	incf	___awdiv@dividend+1,f
  2532     05CB                     l1463:
  2533     05CB  3001               	movlw	1
  2534     05CC  00F4               	movwf	??___awdiv
  2535     05CD  0874               	movf	??___awdiv,w
  2536     05CE  06F6               	xorwf	___awdiv@sign,f
  2537     05CF                     l1465:
  2538     05CF  01F7               	clrf	___awdiv@quotient
  2539     05D0  01F8               	clrf	___awdiv@quotient+1
  2540     05D1                     l1467:
  2541     05D1  0870               	movf	___awdiv@divisor,w
  2542     05D2  0471               	iorwf	___awdiv@divisor+1,w
  2543     05D3  1903               	btfsc	3,2
  2544     05D4  2DD6               	goto	u1041
  2545     05D5  2DD7               	goto	u1040
  2546     05D6                     u1041:
  2547     05D6  2E0E               	goto	l1487
  2548     05D7                     u1040:
  2549     05D7                     l1469:
  2550     05D7  01F5               	clrf	___awdiv@counter
  2551     05D8  0AF5               	incf	___awdiv@counter,f
  2552     05D9  2DE5               	goto	l1475
  2553     05DA                     l1471:
  2554     05DA  3001               	movlw	1
  2555     05DB                     u1055:
  2556     05DB  1003               	clrc
  2557     05DC  0DF0               	rlf	___awdiv@divisor,f
  2558     05DD  0DF1               	rlf	___awdiv@divisor+1,f
  2559     05DE  3EFF               	addlw	-1
  2560     05DF  1D03               	skipz
  2561     05E0  2DDB               	goto	u1055
  2562     05E1                     l1473:
  2563     05E1  3001               	movlw	1
  2564     05E2  00F4               	movwf	??___awdiv
  2565     05E3  0874               	movf	??___awdiv,w
  2566     05E4  07F5               	addwf	___awdiv@counter,f
  2567     05E5                     l1475:
  2568     05E5  1FF1               	btfss	___awdiv@divisor+1,7
  2569     05E6  2DE8               	goto	u1061
  2570     05E7  2DE9               	goto	u1060
  2571     05E8                     u1061:
  2572     05E8  2DDA               	goto	l1471
  2573     05E9                     u1060:
  2574     05E9                     l1477:
  2575     05E9  3001               	movlw	1
  2576     05EA                     u1075:
  2577     05EA  1003               	clrc
  2578     05EB  0DF7               	rlf	___awdiv@quotient,f
  2579     05EC  0DF8               	rlf	___awdiv@quotient+1,f
  2580     05ED  3EFF               	addlw	-1
  2581     05EE  1D03               	skipz
  2582     05EF  2DEA               	goto	u1075
  2583     05F0  0871               	movf	___awdiv@divisor+1,w
  2584     05F1  0273               	subwf	___awdiv@dividend+1,w
  2585     05F2  1D03               	skipz
  2586     05F3  2DF6               	goto	u1085
  2587     05F4  0870               	movf	___awdiv@divisor,w
  2588     05F5  0272               	subwf	___awdiv@dividend,w
  2589     05F6                     u1085:
  2590     05F6  1C03               	skipc
  2591     05F7  2DF9               	goto	u1081
  2592     05F8  2DFA               	goto	u1080
  2593     05F9                     u1081:
  2594     05F9  2E01               	goto	l1483
  2595     05FA                     u1080:
  2596     05FA                     l1479:
  2597     05FA  0870               	movf	___awdiv@divisor,w
  2598     05FB  02F2               	subwf	___awdiv@dividend,f
  2599     05FC  0871               	movf	___awdiv@divisor+1,w
  2600     05FD  1C03               	skipc
  2601     05FE  03F3               	decf	___awdiv@dividend+1,f
  2602     05FF  02F3               	subwf	___awdiv@dividend+1,f
  2603     0600                     l1481:
  2604     0600  1477               	bsf	___awdiv@quotient,0
  2605     0601                     l1483:
  2606     0601  3001               	movlw	1
  2607     0602                     u1095:
  2608     0602  1003               	clrc
  2609     0603  0CF1               	rrf	___awdiv@divisor+1,f
  2610     0604  0CF0               	rrf	___awdiv@divisor,f
  2611     0605  3EFF               	addlw	-1
  2612     0606  1D03               	skipz
  2613     0607  2E02               	goto	u1095
  2614     0608                     l1485:
  2615     0608  3001               	movlw	1
  2616     0609  02F5               	subwf	___awdiv@counter,f
  2617     060A  1D03               	btfss	3,2
  2618     060B  2E0D               	goto	u1101
  2619     060C  2E0E               	goto	u1100
  2620     060D                     u1101:
  2621     060D  2DE9               	goto	l1477
  2622     060E                     u1100:
  2623     060E                     l1487:
  2624     060E  0876               	movf	___awdiv@sign,w
  2625     060F  1903               	btfsc	3,2
  2626     0610  2E12               	goto	u1111
  2627     0611  2E13               	goto	u1110
  2628     0612                     u1111:
  2629     0612  2E18               	goto	l1491
  2630     0613                     u1110:
  2631     0613                     l1489:
  2632     0613  09F7               	comf	___awdiv@quotient,f
  2633     0614  09F8               	comf	___awdiv@quotient+1,f
  2634     0615  0AF7               	incf	___awdiv@quotient,f
  2635     0616  1903               	skipnz
  2636     0617  0AF8               	incf	___awdiv@quotient+1,f
  2637     0618                     l1491:
  2638     0618  0878               	movf	___awdiv@quotient+1,w
  2639     0619  00F1               	movwf	?___awdiv+1
  2640     061A  0877               	movf	___awdiv@quotient,w
  2641     061B  00F0               	movwf	?___awdiv
  2642     061C                     l418:
  2643     061C  0008               	return
  2644     061D                     __end_of___awdiv:
  2645                           
  2646                           	psect	text11
  2647     03CC                     __ptext11:	
  2648 ;; *************** function _Lcd_Write_String_4bits *****************
  2649 ;; Defined at:
  2650 ;;		line 99 in file "configLCD_4bits.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;  a               2    5[COMMON] PTR unsigned char 
  2653 ;;		 -> main@ADC1(9), STR_3(4), STR_2(4), STR_1(4), 
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  i               2   10[COMMON] int 
  2656 ;; Return value:  Size  Location     Type
  2657 ;;                  1    wreg      void 
  2658 ;; Registers used:
  2659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2660 ;; Tracked objects:
  2661 ;;		On entry : 0/0
  2662 ;;		On exit  : 0/0
  2663 ;;		Unchanged: 0/0
  2664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2665 ;;      Params:         2       0       0       0       0
  2666 ;;      Locals:         2       0       0       0       0
  2667 ;;      Temps:          3       0       0       0       0
  2668 ;;      Totals:         7       0       0       0       0
  2669 ;;Total ram usage:        7 bytes
  2670 ;; Hardware stack levels used: 1
  2671 ;; Hardware stack levels required when called: 2
  2672 ;; This function calls:
  2673 ;;		_Lcd_Write_Char_4bits
  2674 ;; This function is called by:
  2675 ;;		_main
  2676 ;; This function uses a non-reentrant model
  2677 ;;
  2678                           
  2679     03CC                     _Lcd_Write_String_4bits:	
  2680                           ;psect for function _Lcd_Write_String_4bits
  2681                           
  2682     03CC                     l1383:	
  2683                           ;incstack = 0
  2684                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  2685                           
  2686                           
  2687                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  2688     03CC  01FA               	clrf	Lcd_Write_String_4bits@i
  2689     03CD  01FB               	clrf	Lcd_Write_String_4bits@i+1
  2690     03CE  2BF1               	goto	l1389
  2691     03CF                     l1385:
  2692                           
  2693                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  2694     03CF  087A               	movf	Lcd_Write_String_4bits@i,w
  2695     03D0  0775               	addwf	Lcd_Write_String_4bits@a,w
  2696     03D1  00F8               	movwf	??_Lcd_Write_String_4bits+1
  2697     03D2  0876               	movf	Lcd_Write_String_4bits@a+1,w
  2698     03D3  00F7               	movwf	??_Lcd_Write_String_4bits
  2699     03D4  1803               	skipnc
  2700     03D5  0AF7               	incf	??_Lcd_Write_String_4bits,f
  2701     03D6  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  2702     03D7  2BD9               	goto	u940
  2703     03D8  03F7               	decf	??_Lcd_Write_String_4bits,f
  2704     03D9                     u940:
  2705     03D9  0877               	movf	??_Lcd_Write_String_4bits,w
  2706     03DA  00F9               	movwf	??_Lcd_Write_String_4bits+2
  2707     03DB  0879               	movf	??_Lcd_Write_String_4bits+2,w
  2708     03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2709     03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2710     03DE  00FF               	movwf	btemp+1
  2711     03DF  0878               	movf	??_Lcd_Write_String_4bits+1,w
  2712     03E0  0084               	movwf	4
  2713     03E1  120A  118A  2003  120A  118A  	fcall	stringtab
  2714     03E6  120A  118A  2325  120A  118A  	fcall	_Lcd_Write_Char_4bits
  2715     03EB                     l1387:
  2716     03EB  3001               	movlw	1
  2717     03EC  07FA               	addwf	Lcd_Write_String_4bits@i,f
  2718     03ED  1803               	skipnc
  2719     03EE  0AFB               	incf	Lcd_Write_String_4bits@i+1,f
  2720     03EF  3000               	movlw	0
  2721     03F0  07FB               	addwf	Lcd_Write_String_4bits@i+1,f
  2722     03F1                     l1389:
  2723     03F1  087A               	movf	Lcd_Write_String_4bits@i,w
  2724     03F2  0775               	addwf	Lcd_Write_String_4bits@a,w
  2725     03F3  00F8               	movwf	??_Lcd_Write_String_4bits+1
  2726     03F4  0876               	movf	Lcd_Write_String_4bits@a+1,w
  2727     03F5  00F7               	movwf	??_Lcd_Write_String_4bits
  2728     03F6  1803               	skipnc
  2729     03F7  0AF7               	incf	??_Lcd_Write_String_4bits,f
  2730     03F8  1FFA               	btfss	Lcd_Write_String_4bits@i,7
  2731     03F9  2BFB               	goto	u950
  2732     03FA  03F7               	decf	??_Lcd_Write_String_4bits,f
  2733     03FB                     u950:
  2734     03FB  0877               	movf	??_Lcd_Write_String_4bits,w
  2735     03FC  00F9               	movwf	??_Lcd_Write_String_4bits+2
  2736     03FD  0879               	movf	??_Lcd_Write_String_4bits+2,w
  2737     03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2738     03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2739     0400  00FF               	movwf	btemp+1
  2740     0401  0878               	movf	??_Lcd_Write_String_4bits+1,w
  2741     0402  0084               	movwf	4
  2742     0403  120A  118A  2003  120A  118A  	fcall	stringtab
  2743     0408  3A00               	xorlw	0
  2744     0409  1D03               	skipz
  2745     040A  2C0C               	goto	u961
  2746     040B  2C0D               	goto	u960
  2747     040C                     u961:
  2748     040C  2BCF               	goto	l1385
  2749     040D                     u960:
  2750     040D                     l99:
  2751     040D  0008               	return
  2752     040E                     __end_of_Lcd_Write_String_4bits:
  2753                           
  2754                           	psect	text12
  2755     0325                     __ptext12:	
  2756 ;; *************** function _Lcd_Write_Char_4bits *****************
  2757 ;; Defined at:
  2758 ;;		line 84 in file "configLCD_4bits.c"
  2759 ;; Parameters:    Size  Location     Type
  2760 ;;  a               1    wreg     unsigned char 
  2761 ;; Auto vars:     Size  Location     Type
  2762 ;;  a               1    4[COMMON] unsigned char 
  2763 ;;  y               1    3[COMMON] unsigned char 
  2764 ;;  temp            1    2[COMMON] unsigned char 
  2765 ;; Return value:  Size  Location     Type
  2766 ;;                  1    wreg      void 
  2767 ;; Registers used:
  2768 ;;		wreg, status,2, status,0, pclath, cstack
  2769 ;; Tracked objects:
  2770 ;;		On entry : 0/0
  2771 ;;		On exit  : 0/0
  2772 ;;		Unchanged: 0/0
  2773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2774 ;;      Params:         0       0       0       0       0
  2775 ;;      Locals:         3       0       0       0       0
  2776 ;;      Temps:          1       0       0       0       0
  2777 ;;      Totals:         4       0       0       0       0
  2778 ;;Total ram usage:        4 bytes
  2779 ;; Hardware stack levels used: 1
  2780 ;; Hardware stack levels required when called: 1
  2781 ;; This function calls:
  2782 ;;		_Lcd_Port_4bits
  2783 ;; This function is called by:
  2784 ;;		_Lcd_Write_String_4bits
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           
  2788     0325                     _Lcd_Write_Char_4bits:	
  2789                           ;psect for function _Lcd_Write_Char_4bits
  2790                           
  2791                           
  2792                           ;incstack = 0
  2793                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  2794                           ;Lcd_Write_Char_4bits@a stored from wreg
  2795     0325  00F4               	movwf	Lcd_Write_Char_4bits@a
  2796     0326                     l1265:
  2797                           
  2798                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  2799     0326  0874               	movf	Lcd_Write_Char_4bits@a,w
  2800     0327  390F               	andlw	15
  2801     0328  00F2               	movwf	Lcd_Write_Char_4bits@temp
  2802                           
  2803                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  2804     0329  0874               	movf	Lcd_Write_Char_4bits@a,w
  2805     032A  39F0               	andlw	240
  2806     032B  00F3               	movwf	Lcd_Write_Char_4bits@y
  2807     032C                     l1267:
  2808                           
  2809                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  2810     032C  1283               	bcf	3,5	;RP0=0, select bank0
  2811     032D  1303               	bcf	3,6	;RP1=0, select bank0
  2812     032E  1508               	bsf	8,2	;volatile
  2813     032F                     l1269:
  2814                           
  2815                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  2816     032F  0873               	movf	Lcd_Write_Char_4bits@y,w
  2817     0330  00F1               	movwf	??_Lcd_Write_Char_4bits
  2818     0331  3004               	movlw	4
  2819     0332                     u755:
  2820     0332  1003               	clrc
  2821     0333  0CF1               	rrf	??_Lcd_Write_Char_4bits,f
  2822     0334  3EFF               	addlw	-1
  2823     0335  1D03               	skipz
  2824     0336  2B32               	goto	u755
  2825     0337  0871               	movf	??_Lcd_Write_Char_4bits,w
  2826     0338  120A  118A  22B0  120A  118A  	fcall	_Lcd_Port_4bits
  2827     033D                     l1271:
  2828                           
  2829                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  2830     033D  1283               	bcf	3,5	;RP0=0, select bank0
  2831     033E  1303               	bcf	3,6	;RP1=0, select bank0
  2832     033F  1588               	bsf	8,3	;volatile
  2833     0340                     l1273:
  2834                           
  2835                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2836     0340  301A               	movlw	26
  2837     0341  00F1               	movwf	??_Lcd_Write_Char_4bits
  2838     0342                     u1257:
  2839     0342  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  2840     0343  2B42               	goto	u1257
  2841     0344  0000               	nop
  2842     0345                     l1275:
  2843                           
  2844                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  2845     0345  1283               	bcf	3,5	;RP0=0, select bank0
  2846     0346  1303               	bcf	3,6	;RP1=0, select bank0
  2847     0347  1188               	bcf	8,3	;volatile
  2848     0348                     l1277:
  2849                           
  2850                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  2851     0348  0872               	movf	Lcd_Write_Char_4bits@temp,w
  2852     0349  120A  118A  22B0  120A  118A  	fcall	_Lcd_Port_4bits
  2853     034E                     l1279:
  2854                           
  2855                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  2856     034E  1283               	bcf	3,5	;RP0=0, select bank0
  2857     034F  1303               	bcf	3,6	;RP1=0, select bank0
  2858     0350  1588               	bsf	8,3	;volatile
  2859     0351                     l1281:
  2860                           
  2861                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  2862     0351  301A               	movlw	26
  2863     0352  00F1               	movwf	??_Lcd_Write_Char_4bits
  2864     0353                     u1267:
  2865     0353  0BF1               	decfsz	??_Lcd_Write_Char_4bits,f
  2866     0354  2B53               	goto	u1267
  2867     0355  0000               	nop
  2868     0356                     l1283:
  2869                           
  2870                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  2871     0356  1283               	bcf	3,5	;RP0=0, select bank0
  2872     0357  1303               	bcf	3,6	;RP1=0, select bank0
  2873     0358  1188               	bcf	8,3	;volatile
  2874     0359                     l93:
  2875     0359  0008               	return
  2876     035A                     __end_of_Lcd_Write_Char_4bits:
  2877                           
  2878                           	psect	text13
  2879     0452                     __ptext13:	
  2880 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  2881 ;; Defined at:
  2882 ;;		line 49 in file "configLCD_4bits.c"
  2883 ;; Parameters:    Size  Location     Type
  2884 ;;  a               1    wreg     unsigned char 
  2885 ;;  b               1    4[COMMON] unsigned char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  a               1    6[COMMON] unsigned char 
  2888 ;;  temp            1    9[COMMON] unsigned char 
  2889 ;;  y               1    8[COMMON] unsigned char 
  2890 ;;  z               1    7[COMMON] unsigned char 
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		wreg, status,2, status,0, pclath, cstack
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2900 ;;      Params:         1       0       0       0       0
  2901 ;;      Locals:         4       0       0       0       0
  2902 ;;      Temps:          1       0       0       0       0
  2903 ;;      Totals:         6       0       0       0       0
  2904 ;;Total ram usage:        6 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 2
  2907 ;; This function calls:
  2908 ;;		_Lcd_Cmd_4bits
  2909 ;; This function is called by:
  2910 ;;		_main
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914     0452                     _Lcd_Set_Cursor_4bits:	
  2915                           ;psect for function _Lcd_Set_Cursor_4bits
  2916                           
  2917                           
  2918                           ;incstack = 0
  2919                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  2920                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  2921     0452  00F6               	movwf	Lcd_Set_Cursor_4bits@a
  2922     0453                     l1363:
  2923                           
  2924                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  2925     0453  0376               	decf	Lcd_Set_Cursor_4bits@a,w
  2926     0454  1D03               	btfss	3,2
  2927     0455  2C57               	goto	u901
  2928     0456  2C58               	goto	u900
  2929     0457                     u901:
  2930     0457  2C75               	goto	l1373
  2931     0458                     u900:
  2932     0458                     l1365:
  2933                           
  2934                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  2935     0458  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  2936     0459  3E7F               	addlw	127
  2937     045A  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  2938                           
  2939                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  2940     045B  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  2941     045C  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  2942     045D  3004               	movlw	4
  2943     045E                     u915:
  2944     045E  1003               	clrc
  2945     045F  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  2946     0460  3EFF               	addlw	-1
  2947     0461  1D03               	skipz
  2948     0462  2C5E               	goto	u915
  2949     0463  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  2950     0464  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  2951     0465                     l1367:
  2952                           
  2953                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  2954     0465  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  2955     0466  390F               	andlw	15
  2956     0467  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  2957     0468                     l1369:
  2958                           
  2959                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  2960     0468  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  2961     0469  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  2962     046E                     l1371:
  2963                           
  2964                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  2965     046E  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  2966     046F  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  2967                           
  2968                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  2969     0474  2C97               	goto	l87
  2970     0475                     l1373:
  2971     0475  3002               	movlw	2
  2972     0476  0676               	xorwf	Lcd_Set_Cursor_4bits@a,w
  2973     0477  1D03               	btfss	3,2
  2974     0478  2C7A               	goto	u921
  2975     0479  2C7B               	goto	u920
  2976     047A                     u921:
  2977     047A  2C97               	goto	l87
  2978     047B                     u920:
  2979     047B                     l1375:
  2980                           
  2981                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  2982     047B  0874               	movf	Lcd_Set_Cursor_4bits@b,w
  2983     047C  3EBF               	addlw	191
  2984     047D  00F9               	movwf	Lcd_Set_Cursor_4bits@temp
  2985                           
  2986                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  2987     047E  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  2988     047F  00F5               	movwf	??_Lcd_Set_Cursor_4bits
  2989     0480  3004               	movlw	4
  2990     0481                     u935:
  2991     0481  1003               	clrc
  2992     0482  0CF5               	rrf	??_Lcd_Set_Cursor_4bits,f
  2993     0483  3EFF               	addlw	-1
  2994     0484  1D03               	skipz
  2995     0485  2C81               	goto	u935
  2996     0486  0875               	movf	??_Lcd_Set_Cursor_4bits,w
  2997     0487  00F7               	movwf	Lcd_Set_Cursor_4bits@z
  2998     0488                     l1377:
  2999                           
  3000                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  3001     0488  0879               	movf	Lcd_Set_Cursor_4bits@temp,w
  3002     0489  390F               	andlw	15
  3003     048A  00F8               	movwf	Lcd_Set_Cursor_4bits@y
  3004     048B                     l1379:
  3005                           
  3006                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  3007     048B  0877               	movf	Lcd_Set_Cursor_4bits@z,w
  3008     048C  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  3009     0491                     l1381:
  3010                           
  3011                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  3012     0491  0878               	movf	Lcd_Set_Cursor_4bits@y,w
  3013     0492  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  3014     0497                     l87:
  3015     0497  0008               	return
  3016     0498                     __end_of_Lcd_Set_Cursor_4bits:
  3017                           
  3018                           	psect	text14
  3019     027C                     __ptext14:	
  3020 ;; *************** function _Lcd_Clear_4bits *****************
  3021 ;; Defined at:
  3022 ;;		line 44 in file "configLCD_4bits.c"
  3023 ;; Parameters:    Size  Location     Type
  3024 ;;		None
  3025 ;; Auto vars:     Size  Location     Type
  3026 ;;		None
  3027 ;; Return value:  Size  Location     Type
  3028 ;;                  1    wreg      void 
  3029 ;; Registers used:
  3030 ;;		wreg, status,2, status,0, pclath, cstack
  3031 ;; Tracked objects:
  3032 ;;		On entry : 0/0
  3033 ;;		On exit  : 0/0
  3034 ;;		Unchanged: 0/0
  3035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3036 ;;      Params:         0       0       0       0       0
  3037 ;;      Locals:         0       0       0       0       0
  3038 ;;      Temps:          0       0       0       0       0
  3039 ;;      Totals:         0       0       0       0       0
  3040 ;;Total ram usage:        0 bytes
  3041 ;; Hardware stack levels used: 1
  3042 ;; Hardware stack levels required when called: 2
  3043 ;; This function calls:
  3044 ;;		_Lcd_Cmd_4bits
  3045 ;; This function is called by:
  3046 ;;		_main
  3047 ;; This function uses a non-reentrant model
  3048 ;;
  3049                           
  3050     027C                     _Lcd_Clear_4bits:	
  3051                           ;psect for function _Lcd_Clear_4bits
  3052                           
  3053     027C                     l1361:	
  3054                           ;incstack = 0
  3055                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  3056                           
  3057                           
  3058                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  3059     027C  3000               	movlw	0
  3060     027D  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  3061                           
  3062                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  3063     0282  3001               	movlw	1
  3064     0283  120A  118A  2296  120A  118A  	fcall	_Lcd_Cmd_4bits
  3065     0288                     l81:
  3066     0288  0008               	return
  3067     0289                     __end_of_Lcd_Clear_4bits:
  3068                           
  3069                           	psect	text15
  3070     0296                     __ptext15:	
  3071 ;; *************** function _Lcd_Cmd_4bits *****************
  3072 ;; Defined at:
  3073 ;;		line 36 in file "configLCD_4bits.c"
  3074 ;; Parameters:    Size  Location     Type
  3075 ;;  a               1    wreg     unsigned char 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  a               1    3[COMMON] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      void 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0, pclath, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3087 ;;      Params:         0       0       0       0       0
  3088 ;;      Locals:         1       0       0       0       0
  3089 ;;      Temps:          2       0       0       0       0
  3090 ;;      Totals:         3       0       0       0       0
  3091 ;;Total ram usage:        3 bytes
  3092 ;; Hardware stack levels used: 1
  3093 ;; Hardware stack levels required when called: 1
  3094 ;; This function calls:
  3095 ;;		_Lcd_Port_4bits
  3096 ;; This function is called by:
  3097 ;;		_Lcd_Clear_4bits
  3098 ;;		_Lcd_Set_Cursor_4bits
  3099 ;;		_Lcd_Init_4bits
  3100 ;;		_Lcd_Shift_Right_4bits
  3101 ;;		_Lcd_Shift_Left_4bits
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105     0296                     _Lcd_Cmd_4bits:	
  3106                           ;psect for function _Lcd_Cmd_4bits
  3107                           
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  3111                           ;Lcd_Cmd_4bits@a stored from wreg
  3112     0296  00F3               	movwf	Lcd_Cmd_4bits@a
  3113     0297                     l1201:
  3114                           
  3115                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  3116     0297  1283               	bcf	3,5	;RP0=0, select bank0
  3117     0298  1303               	bcf	3,6	;RP1=0, select bank0
  3118     0299  1108               	bcf	8,2	;volatile
  3119     029A                     l1203:
  3120                           
  3121                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  3122     029A  0873               	movf	Lcd_Cmd_4bits@a,w
  3123     029B  120A  118A  22B0  120A  118A  	fcall	_Lcd_Port_4bits
  3124     02A0                     l1205:
  3125                           
  3126                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  3127     02A0  1283               	bcf	3,5	;RP0=0, select bank0
  3128     02A1  1303               	bcf	3,6	;RP1=0, select bank0
  3129     02A2  1588               	bsf	8,3	;volatile
  3130     02A3                     l1207:
  3131                           
  3132                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3133     02A3  300B               	movlw	11
  3134     02A4  00F2               	movwf	??_Lcd_Cmd_4bits+1
  3135     02A5  3062               	movlw	98
  3136     02A6  00F1               	movwf	??_Lcd_Cmd_4bits
  3137     02A7                     u1277:
  3138     02A7  0BF1               	decfsz	??_Lcd_Cmd_4bits,f
  3139     02A8  2AA7               	goto	u1277
  3140     02A9  0BF2               	decfsz	??_Lcd_Cmd_4bits+1,f
  3141     02AA  2AA7               	goto	u1277
  3142     02AB  0000               	nop
  3143     02AC                     l1209:
  3144                           
  3145                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  3146     02AC  1283               	bcf	3,5	;RP0=0, select bank0
  3147     02AD  1303               	bcf	3,6	;RP1=0, select bank0
  3148     02AE  1188               	bcf	8,3	;volatile
  3149     02AF                     l78:
  3150     02AF  0008               	return
  3151     02B0                     __end_of_Lcd_Cmd_4bits:
  3152                           
  3153                           	psect	text16
  3154     02B0                     __ptext16:	
  3155 ;; *************** function _Lcd_Port_4bits *****************
  3156 ;; Defined at:
  3157 ;;		line 14 in file "configLCD_4bits.c"
  3158 ;; Parameters:    Size  Location     Type
  3159 ;;  a               1    wreg     unsigned char 
  3160 ;; Auto vars:     Size  Location     Type
  3161 ;;  a               1    0[COMMON] unsigned char 
  3162 ;; Return value:  Size  Location     Type
  3163 ;;                  1    wreg      void 
  3164 ;; Registers used:
  3165 ;;		wreg
  3166 ;; Tracked objects:
  3167 ;;		On entry : 0/0
  3168 ;;		On exit  : 0/0
  3169 ;;		Unchanged: 0/0
  3170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3171 ;;      Params:         0       0       0       0       0
  3172 ;;      Locals:         1       0       0       0       0
  3173 ;;      Temps:          0       0       0       0       0
  3174 ;;      Totals:         1       0       0       0       0
  3175 ;;Total ram usage:        1 bytes
  3176 ;; Hardware stack levels used: 1
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_Lcd_Cmd_4bits
  3181 ;;		_Lcd_Init_4bits
  3182 ;;		_Lcd_Write_Char_4bits
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186     02B0                     _Lcd_Port_4bits:	
  3187                           ;psect for function _Lcd_Port_4bits
  3188                           
  3189                           
  3190                           ;incstack = 0
  3191                           ; Regs used in _Lcd_Port_4bits: [wreg]
  3192                           ;Lcd_Port_4bits@a stored from wreg
  3193     02B0  00F0               	movwf	Lcd_Port_4bits@a
  3194     02B1                     l1191:
  3195                           
  3196                           ;configLCD_4bits.c: 15:     if (a & 1)
  3197     02B1  1C70               	btfss	Lcd_Port_4bits@a,0
  3198     02B2  2AB4               	goto	u611
  3199     02B3  2AB5               	goto	u610
  3200     02B4                     u611:
  3201     02B4  2AB9               	goto	l67
  3202     02B5                     u610:
  3203     02B5                     l1193:
  3204                           
  3205                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  3206     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  3207     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  3208     02B7  1608               	bsf	8,4	;volatile
  3209     02B8  2ABC               	goto	l68
  3210     02B9                     l67:	
  3211                           ;configLCD_4bits.c: 17:     else
  3212                           
  3213                           
  3214                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  3215     02B9  1283               	bcf	3,5	;RP0=0, select bank0
  3216     02BA  1303               	bcf	3,6	;RP1=0, select bank0
  3217     02BB  1208               	bcf	8,4	;volatile
  3218     02BC                     l68:
  3219                           
  3220                           ;configLCD_4bits.c: 20:     if (a & 2)
  3221     02BC  1CF0               	btfss	Lcd_Port_4bits@a,1
  3222     02BD  2ABF               	goto	u621
  3223     02BE  2AC0               	goto	u620
  3224     02BF                     u621:
  3225     02BF  2AC2               	goto	l69
  3226     02C0                     u620:
  3227     02C0                     l1195:
  3228                           
  3229                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  3230     02C0  1688               	bsf	8,5	;volatile
  3231     02C1  2AC3               	goto	l70
  3232     02C2                     l69:	
  3233                           ;configLCD_4bits.c: 22:     else
  3234                           
  3235                           
  3236                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  3237     02C2  1288               	bcf	8,5	;volatile
  3238     02C3                     l70:
  3239                           
  3240                           ;configLCD_4bits.c: 25:     if (a & 4)
  3241     02C3  1D70               	btfss	Lcd_Port_4bits@a,2
  3242     02C4  2AC6               	goto	u631
  3243     02C5  2AC7               	goto	u630
  3244     02C6                     u631:
  3245     02C6  2AC9               	goto	l71
  3246     02C7                     u630:
  3247     02C7                     l1197:
  3248                           
  3249                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  3250     02C7  1708               	bsf	8,6	;volatile
  3251     02C8  2ACA               	goto	l72
  3252     02C9                     l71:	
  3253                           ;configLCD_4bits.c: 27:     else
  3254                           
  3255                           
  3256                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  3257     02C9  1308               	bcf	8,6	;volatile
  3258     02CA                     l72:
  3259                           
  3260                           ;configLCD_4bits.c: 30:     if (a & 8)
  3261     02CA  1DF0               	btfss	Lcd_Port_4bits@a,3
  3262     02CB  2ACD               	goto	u641
  3263     02CC  2ACE               	goto	u640
  3264     02CD                     u641:
  3265     02CD  2AD0               	goto	l73
  3266     02CE                     u640:
  3267     02CE                     l1199:
  3268                           
  3269                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  3270     02CE  1788               	bsf	8,7	;volatile
  3271     02CF  2AD1               	goto	l75
  3272     02D0                     l73:	
  3273                           ;configLCD_4bits.c: 32:     else
  3274                           
  3275                           
  3276                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  3277     02D0  1388               	bcf	8,7	;volatile
  3278     02D1                     l75:
  3279     02D1  0008               	return
  3280     02D2                     __end_of_Lcd_Port_4bits:
  3281                           
  3282                           	psect	text17
  3283     0265                     __ptext17:	
  3284 ;; *************** function _I2C_Master_Write *****************
  3285 ;; Defined at:
  3286 ;;		line 62 in file "configI2C.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  d               2    0[COMMON] unsigned int 
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, status,2, status,0, pclath, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : 0/0
  3297 ;;		On exit  : 0/0
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3300 ;;      Params:         2       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0
  3303 ;;      Totals:         2       0       0       0       0
  3304 ;;Total ram usage:        2 bytes
  3305 ;; Hardware stack levels used: 1
  3306 ;; Hardware stack levels required when called: 1
  3307 ;; This function calls:
  3308 ;;		_I2C_Master_Wait
  3309 ;; This function is called by:
  3310 ;;		_main
  3311 ;; This function uses a non-reentrant model
  3312 ;;
  3313                           
  3314     0265                     _I2C_Master_Write:	
  3315                           ;psect for function _I2C_Master_Write
  3316                           
  3317     0265                     l1341:	
  3318                           ;incstack = 0
  3319                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3320                           
  3321                           
  3322                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
  3323     0265  120A  118A  226F  120A  118A  	fcall	_I2C_Master_Wait
  3324     026A                     l1343:
  3325                           
  3326                           ;configI2C.c: 65:     SSPBUF = d;
  3327     026A  0870               	movf	I2C_Master_Write@d,w
  3328     026B  1283               	bcf	3,5	;RP0=0, select bank0
  3329     026C  1303               	bcf	3,6	;RP1=0, select bank0
  3330     026D  0093               	movwf	19	;volatile
  3331     026E                     l47:
  3332     026E  0008               	return
  3333     026F                     __end_of_I2C_Master_Write:
  3334                           
  3335                           	psect	text18
  3336     025C                     __ptext18:	
  3337 ;; *************** function _I2C_Master_Stop *****************
  3338 ;; Defined at:
  3339 ;;		line 52 in file "configI2C.c"
  3340 ;; Parameters:    Size  Location     Type
  3341 ;;		None
  3342 ;; Auto vars:     Size  Location     Type
  3343 ;;		None
  3344 ;; Return value:  Size  Location     Type
  3345 ;;                  1    wreg      void 
  3346 ;; Registers used:
  3347 ;;		wreg, status,2, status,0, pclath, cstack
  3348 ;; Tracked objects:
  3349 ;;		On entry : 0/0
  3350 ;;		On exit  : 0/0
  3351 ;;		Unchanged: 0/0
  3352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3353 ;;      Params:         0       0       0       0       0
  3354 ;;      Locals:         0       0       0       0       0
  3355 ;;      Temps:          0       0       0       0       0
  3356 ;;      Totals:         0       0       0       0       0
  3357 ;;Total ram usage:        0 bytes
  3358 ;; Hardware stack levels used: 1
  3359 ;; Hardware stack levels required when called: 1
  3360 ;; This function calls:
  3361 ;;		_I2C_Master_Wait
  3362 ;; This function is called by:
  3363 ;;		_main
  3364 ;; This function uses a non-reentrant model
  3365 ;;
  3366                           
  3367     025C                     _I2C_Master_Stop:	
  3368                           ;psect for function _I2C_Master_Stop
  3369                           
  3370     025C                     l1337:	
  3371                           ;incstack = 0
  3372                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  3373                           
  3374                           
  3375                           ;configI2C.c: 54:     I2C_Master_Wait();
  3376     025C  120A  118A  226F  120A  118A  	fcall	_I2C_Master_Wait
  3377     0261                     l1339:
  3378                           
  3379                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
  3380     0261  1683               	bsf	3,5	;RP0=1, select bank1
  3381     0262  1303               	bcf	3,6	;RP1=0, select bank1
  3382     0263  1511               	bsf	17,2	;volatile
  3383     0264                     l44:
  3384     0264  0008               	return
  3385     0265                     __end_of_I2C_Master_Stop:
  3386                           
  3387                           	psect	text19
  3388     0253                     __ptext19:	
  3389 ;; *************** function _I2C_Master_Start *****************
  3390 ;; Defined at:
  3391 ;;		line 36 in file "configI2C.c"
  3392 ;; Parameters:    Size  Location     Type
  3393 ;;		None
  3394 ;; Auto vars:     Size  Location     Type
  3395 ;;		None
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, status,2, status,0, pclath, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : 0/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3405 ;;      Params:         0       0       0       0       0
  3406 ;;      Locals:         0       0       0       0       0
  3407 ;;      Temps:          0       0       0       0       0
  3408 ;;      Totals:         0       0       0       0       0
  3409 ;;Total ram usage:        0 bytes
  3410 ;; Hardware stack levels used: 1
  3411 ;; Hardware stack levels required when called: 1
  3412 ;; This function calls:
  3413 ;;		_I2C_Master_Wait
  3414 ;; This function is called by:
  3415 ;;		_main
  3416 ;; This function uses a non-reentrant model
  3417 ;;
  3418                           
  3419     0253                     _I2C_Master_Start:	
  3420                           ;psect for function _I2C_Master_Start
  3421                           
  3422     0253                     l1333:	
  3423                           ;incstack = 0
  3424                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  3425                           
  3426                           
  3427                           ;configI2C.c: 38:     I2C_Master_Wait();
  3428     0253  120A  118A  226F  120A  118A  	fcall	_I2C_Master_Wait
  3429     0258                     l1335:
  3430                           
  3431                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
  3432     0258  1683               	bsf	3,5	;RP0=1, select bank1
  3433     0259  1303               	bcf	3,6	;RP1=0, select bank1
  3434     025A  1411               	bsf	17,0	;volatile
  3435     025B                     l38:
  3436     025B  0008               	return
  3437     025C                     __end_of_I2C_Master_Start:
  3438                           
  3439                           	psect	text20
  3440     02F7                     __ptext20:	
  3441 ;; *************** function _I2C_Master_Read *****************
  3442 ;; Defined at:
  3443 ;;		line 71 in file "configI2C.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  a               2    0[COMMON] unsigned short 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  temp            2    4[COMMON] unsigned short 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  2    0[COMMON] unsigned short 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0, pclath, cstack
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         2       0       0       0       0
  3458 ;;      Locals:         2       0       0       0       0
  3459 ;;      Temps:          2       0       0       0       0
  3460 ;;      Totals:         6       0       0       0       0
  3461 ;;Total ram usage:        6 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; Hardware stack levels required when called: 1
  3464 ;; This function calls:
  3465 ;;		_I2C_Master_Wait
  3466 ;; This function is called by:
  3467 ;;		_main
  3468 ;; This function uses a non-reentrant model
  3469 ;;
  3470                           
  3471     02F7                     _I2C_Master_Read:	
  3472                           ;psect for function _I2C_Master_Read
  3473                           
  3474     02F7                     l1345:	
  3475                           ;incstack = 0
  3476                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  3477                           
  3478                           
  3479                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
  3480     02F7  120A  118A  226F  120A  118A  	fcall	_I2C_Master_Wait
  3481     02FC                     l1347:
  3482                           
  3483                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
  3484     02FC  1683               	bsf	3,5	;RP0=1, select bank1
  3485     02FD  1303               	bcf	3,6	;RP1=0, select bank1
  3486     02FE  1591               	bsf	17,3	;volatile
  3487                           
  3488                           ;configI2C.c: 76:     I2C_Master_Wait();
  3489     02FF  120A  118A  226F  120A  118A  	fcall	_I2C_Master_Wait
  3490     0304                     l1349:
  3491                           
  3492                           ;configI2C.c: 77:     temp = SSPBUF;
  3493     0304  1283               	bcf	3,5	;RP0=0, select bank0
  3494     0305  1303               	bcf	3,6	;RP1=0, select bank0
  3495     0306  0813               	movf	19,w	;volatile
  3496     0307  00F2               	movwf	??_I2C_Master_Read
  3497     0308  01F3               	clrf	??_I2C_Master_Read+1
  3498     0309  0872               	movf	??_I2C_Master_Read,w
  3499     030A  00F4               	movwf	I2C_Master_Read@temp
  3500     030B  0873               	movf	??_I2C_Master_Read+1,w
  3501     030C  00F5               	movwf	I2C_Master_Read@temp+1
  3502     030D                     l1351:
  3503                           
  3504                           ;configI2C.c: 78:     I2C_Master_Wait();
  3505     030D  120A  118A  226F  120A  118A  	fcall	_I2C_Master_Wait
  3506     0312                     l1353:
  3507                           
  3508                           ;configI2C.c: 79:     if(a == 1){
  3509     0312  0370               	decf	I2C_Master_Read@a,w
  3510     0313  0471               	iorwf	I2C_Master_Read@a+1,w
  3511     0314  1D03               	btfss	3,2
  3512     0315  2B17               	goto	u891
  3513     0316  2B18               	goto	u890
  3514     0317                     u891:
  3515     0317  2B1C               	goto	l50
  3516     0318                     u890:
  3517     0318                     l1355:
  3518                           
  3519                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
  3520     0318  1683               	bsf	3,5	;RP0=1, select bank1
  3521     0319  1303               	bcf	3,6	;RP1=0, select bank1
  3522     031A  1291               	bcf	17,5	;volatile
  3523                           
  3524                           ;configI2C.c: 81:     }else{
  3525     031B  2B1F               	goto	l51
  3526     031C                     l50:
  3527                           
  3528                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
  3529     031C  1683               	bsf	3,5	;RP0=1, select bank1
  3530     031D  1303               	bcf	3,6	;RP1=0, select bank1
  3531     031E  1691               	bsf	17,5	;volatile
  3532     031F                     l51:	
  3533                           ;configI2C.c: 83:     }
  3534                           
  3535                           
  3536                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
  3537     031F  1611               	bsf	17,4	;volatile
  3538     0320                     l1357:
  3539                           
  3540                           ;configI2C.c: 85:     return temp;
  3541     0320  0875               	movf	I2C_Master_Read@temp+1,w
  3542     0321  00F1               	movwf	?_I2C_Master_Read+1
  3543     0322  0874               	movf	I2C_Master_Read@temp,w
  3544     0323  00F0               	movwf	?_I2C_Master_Read
  3545     0324                     l52:
  3546     0324  0008               	return
  3547     0325                     __end_of_I2C_Master_Read:
  3548                           
  3549                           	psect	text21
  3550     026F                     __ptext21:	
  3551 ;; *************** function _I2C_Master_Wait *****************
  3552 ;; Defined at:
  3553 ;;		line 29 in file "configI2C.c"
  3554 ;; Parameters:    Size  Location     Type
  3555 ;;		None
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  1    wreg      void 
  3560 ;; Registers used:
  3561 ;;		wreg, status,2
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/0
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3567 ;;      Params:         0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0
  3570 ;;      Totals:         0       0       0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used: 1
  3573 ;; This function calls:
  3574 ;;		Nothing
  3575 ;; This function is called by:
  3576 ;;		_I2C_Master_Start
  3577 ;;		_I2C_Master_Stop
  3578 ;;		_I2C_Master_Write
  3579 ;;		_I2C_Master_Read
  3580 ;;		_I2C_Master_RepeatedStart
  3581 ;; This function uses a non-reentrant model
  3582 ;;
  3583                           
  3584     026F                     _I2C_Master_Wait:	
  3585                           ;psect for function _I2C_Master_Wait
  3586                           
  3587     026F                     l1247:	
  3588                           ;incstack = 0
  3589                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  3590                           
  3591     026F                     l32:	
  3592                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  3593                           
  3594     026F  1683               	bsf	3,5	;RP0=1, select bank1
  3595     0270  1303               	bcf	3,6	;RP1=0, select bank1
  3596     0271  1914               	btfsc	20,2	;volatile
  3597     0272  2A74               	goto	u731
  3598     0273  2A75               	goto	u730
  3599     0274                     u731:
  3600     0274  2A6F               	goto	l32
  3601     0275                     u730:
  3602     0275                     l1249:
  3603     0275  0811               	movf	17,w	;volatile
  3604     0276  391F               	andlw	31
  3605     0277  1D03               	btfss	3,2
  3606     0278  2A7A               	goto	u741
  3607     0279  2A7B               	goto	u740
  3608     027A                     u741:
  3609     027A  2A6F               	goto	l32
  3610     027B                     u740:
  3611     027B                     l35:
  3612     027B  0008               	return
  3613     027C                     __end_of_I2C_Master_Wait:
  3614     007E                     btemp	set	126	;btemp
  3615     007E                     wtemp0	set	126
  3616                           
  3617                           	psect	idloc
  3618                           
  3619                           ;Config register IDLOC0 @ 0x2000
  3620                           ;	unspecified, using default values
  3621     2000                     	org	8192
  3622     2000  3FFF               	dw	16383
  3623                           
  3624                           ;Config register IDLOC1 @ 0x2001
  3625                           ;	unspecified, using default values
  3626     2001                     	org	8193
  3627     2001  3FFF               	dw	16383
  3628                           
  3629                           ;Config register IDLOC2 @ 0x2002
  3630                           ;	unspecified, using default values
  3631     2002                     	org	8194
  3632     2002  3FFF               	dw	16383
  3633                           
  3634                           ;Config register IDLOC3 @ 0x2003
  3635                           ;	unspecified, using default values
  3636     2003                     	org	8195
  3637     2003  3FFF               	dw	16383
  3638                           
  3639                           	psect	config
  3640                           
  3641                           ;Config register CONFIG1 @ 0x2007
  3642                           ;	Oscillator Selection bits
  3643                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  3644                           ;	Watchdog Timer Enable bit
  3645                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3646                           ;	Power-up Timer Enable bit
  3647                           ;	PWRTE = OFF, PWRT disabled
  3648                           ;	RE3/MCLR pin function select bit
  3649                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3650                           ;	Code Protection bit
  3651                           ;	CP = OFF, Program memory code protection is disabled
  3652                           ;	Data Code Protection bit
  3653                           ;	CPD = OFF, Data memory code protection is disabled
  3654                           ;	Brown Out Reset Selection bits
  3655                           ;	BOREN = OFF, BOR disabled
  3656                           ;	Internal External Switchover bit
  3657                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3658                           ;	Fail-Safe Clock Monitor Enabled bit
  3659                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3660                           ;	Low Voltage Programming Enable bit
  3661                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3662                           ;	In-Circuit Debugger Mode bit
  3663                           ;	DEBUG = 0x1, unprogramme  3664     2007                     	org	8199
  3665     2007  20D4               	dw	8404
  3666                           
  3667                           ;Config register CONFIG2 @ 0x2008
  3668                           ;	Brown-out Reset Selection bit
  3669                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3670                           ;	Flash Program Memory Self Write Enable bits
  3671                           ;	WRT = OFF, Write protection off
  3672     2008                     	org	8200
  3673     2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     29      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@ADC1(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 9
		 -> main@ADC1(BANK0[9]), STR_3(CODE[4]), STR_2(CODE[4]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->___awmod
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _main in BANK0

    _main->_sprintf
    _setup->_I2C_Master_Init

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    5340
                                             13 BANK0     16    16      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1339
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     632
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              4 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2     724
                                              5 COMMON     7     5      2
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              1 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1     836
                                              4 COMMON     6     5      1
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              1 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     121
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1D      1D       5       36.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Feb 10 11:00:40 2023

                             pc 0002                              l32 026F                              l50 031C  
                            l35 027B                              l51 031F                              l52 0324  
                            l44 0264                              l60 0295                              l29 0391  
                            l38 025B                              l70 02C3                              l47 026E  
                            l71 02C9                              l72 02CA                              l73 02D0  
                            l81 0288                              l90 054F                              l75 02D1  
                            l67 02B9                              l68 02BC                              l69 02C2  
                            l93 0359                              l78 02AF                              l87 0497  
                            l99 040D                    ___awdiv@sign 0076                              fsr 0004  
                           l301 05B5                             l154 02F6                             l148 071B  
                           l261 06DD                             l431 04F2                             l418 061C  
                           l537 0451                             l547 03CB                             _GIE 005F  
                           u610 02B5                             u611 02B4                             u620 02C0  
                           u621 02BF                             u630 02C7                             u710 05AD  
                           u631 02C6                             u711 05AC                             u640 02CE  
                           u720 0371                             u800 0439                             u641 02CD  
                           u705 059F                             u801 0438                             u730 0275  
                           u650 0560                             u731 0274                             u651 055F  
                           u740 027B                             u900 0458                             u820 044D  
                           u741 027A                             u901 0457                             u725 036C  
                           u821 044C                             u805 0435                             u670 0574  
                           u830 0398                             u671 0573                             u815 0441  
                           u831 0397                             u920 047B                             u760 0416  
                           u921 047A                             u665 0565                             u761 0415  
                           u690 058F                             u850 03AA                             u915 045E  
                           u755 0332                             u691 058E                             u851 03A9  
                           u940 03D9                             u780 0428                             u860 03B4  
                           u685 0576                             u781 0427                             u861 03B3  
                           u845 039C                             u950 03FB                             u935 0481  
                           u695 058B                             u775 041A                             u960 040D  
                           u880 03C7                             u961 040C                             u881 03C6  
                           u865 03B0                             u890 0318                             u970 0629  
                           u891 0317                             u795 0429                             u875 03BB  
                           u971 0628                             u980 067D                             u981 067C  
                           u990 0688                             u991 0687                             u985 0679  
                           fsr0 0004                             indf 0000                    ___awmod@sign 0021  
                          l1201 0297                            l1203 029A                            l1211 0550  
                          l1205 02A0                            l1221 057D                            l1213 0560  
                          l1301 043F                            l1207 02A3                            l1223 058F  
                          l1215 0563                            l1231 05AD                            l1303 0440  
                          l1311 0392                            l1209 02AC                            l1225 059D  
                          l1217 0570                            l1241 038E                            l1305 0447  
                          l1321 03AA                            l1313 0398                            l1401 0623  
                          l1227 059E                            l1219 0574                            l1243 038F  
                          l1235 035A                            l1251 028A                            l1307 044D  
                          l1323 03B4                            l1315 039B                            l1403 0629  
                          l1333 0253                            l1341 0265                            l1501 04A4  
                          l1229 05A7                            l1245 0390                            l1237 035E  
                          l1261 0511                            l1253 0294                            l1325 03BA  
                          l1317 03A2                            l1413 063A                            l1405 062E  
                          l1247 026F                            l1351 030D                            l1335 0258  
                          l1343 026A                            l1191 02B1                            l1271 033D  
                          l1511 04B8                            l1503 04A6                            l1239 0361  
                          l1263 0517                            l1255 04F3                            l1327 03C1  
                          l1319 03A6                            l1431 0688                            l1415 0654  
                          l1407 0633                            l1249 0275                            l1353 0312  
                          l1345 02F7                            l1337 025C                            l1193 02B5  
                          l1361 027C                            l1281 0351                            l1273 0340  
                          l1265 0326                            l1521 04D7                            l1513 04BF  
                          l1505 04AA                            l1257 04F9                            l1329 03C7  
                          l1433 068B                            l1425 0662                            l1417 065C  
                          l1409 0635                            l1441 06C9                            l1355 0318  
                          l1347 02FC                            l1339 0261                            l1195 02C0  
                          l1371 046E                            l1363 0453                            l1283 0356  
                          l1275 0345                            l1267 032C                            l1451 05B6  
                          l1523 04DE                            l1515 04C3                            l1507 04AF  
                          l1259 0502                            l1291 0419                            l1435 06B7  
                          l1419 0660                            l1443 06D9                            l1357 0320  
                          l1349 0304                            l1197 02C7                            l1381 0491  
                          l1365 0458                            l1373 0475                            l1277 0348  
                          l1269 032F                            l1461 05C6                            l1453 05B7  
                          l1517 04C7                            l1509 04B5                            l1525 04E4  
                          l1293 0420                            l1285 040E                            l1437 06BC  
                          l1429 067E                            l1541 06DE                            l1199 02CE  
                          l1375 047B                            l1367 0465                            l1279 034E  
                          l1383 03CC                            l1471 05DA                            l1463 05CB  
                          l1455 05BB                            l1527 04E9                            l1519 04D1  
                          l1391 02D2                            l1295 0424                            l1287 0410  
                          l1439 06C0                            l1551 073A                            l1543 06F0  
                          l1377 0488                            l1369 0468                            l1385 03CF  
                          l1481 0600                            l1473 05E1                            l1465 05CF  
                          l1457 05C0                            l1529 04EE                            l1393 02DE  
                          l1297 0428                            l1289 0416                            l1561 07A3  
                          l1553 0749                            l1545 06F9                            l1379 048B  
                          l1387 03EB                            l1491 0618                            l1483 0601  
                          l1475 05E5                            l1467 05D1                            l1459 05C2  
                          l1395 02EB                            l1299 0439                            l1571 07D6  
                          l1563 07AB                            l1555 075F                            l1547 070A  
                          l1389 03F1                            l1485 0608                            l1477 05E9  
                          l1469 05D7                            l1397 02F1                            l1573 07E7  
                          l1565 07B4                            l1557 0780                            l1549 0712  
                          l1479 05FA                            l1487 060E                            l1495 0498  
                          l1399 0620                            l1575 07EF                            l1567 07C5  
                          l1559 0794                            l1489 0613                            l1497 049B  
                          l1569 07CD                            l1499 049F                            l1597 064C  
                          STR_1 001D                            STR_2 0021                            STR_3 0025  
                          STR_4 0029                            STR_5 0029                            STR_6 0029  
                          u1000 06C9                            u1001 06C8                            u1010 06D9  
                          u1011 06D8                            u1100 060E                            u1020 05BB  
                          u1101 060D                            u1021 05BA                            u1110 0613  
                          u1030 05C6                            u1111 0612                            u1031 05C5  
                          u1040 05D7                            u1200 04E9                            u1120 049F  
                          u1041 05D6                            u1201 04E8                            u1121 049E  
                          u1130 04AA                            u1131 04A9                            u1060 05E9  
                          u1140 04B5                            u1061 05E8                            u1141 04B4  
                          u1055 05DB                            u1080 05FA                            u1160 04C7  
                          u1081 05F9                            u1161 04C6                            u1217 0742  
                          u1170 04D1                            u1075 05EA                            u1171 04D0  
                          u1155 04B9                            u1227 04FD                            u1085 05F6  
                          u1237 050C                            u1190 04E4                            u1095 0602  
                          u1191 04E3                            u1175 04CD                            u1247 051B  
                          u1257 0342                            u1185 04D8                            u1267 0353  
                          u1277 02A7                            _PEIE 005E                            _main 06DE  
        _Lcd_Write_String_4bits 03CC                            btemp 007E                            start 0000  
              ?_I2C_Master_Init 0020                ?_I2C_Master_Read 0070                ?_I2C_Master_Wait 0070  
              ?_I2C_Master_Stop 0070                           ?_main 0070               ??_Lcd_Clear_4bits 0074  
               __end_of___awdiv 061D                 __end_of___awmod 04F3                           _ANSEL 0188  
               __end_of___lldiv 05B6                 ___awdiv@divisor 0070                 __end_of___lwdiv 0452  
               __end_of___lwmod 03CC                 ___awdiv@counter 0075                           _PORTB 0006  
                         _PORTD 0008                           _TRISB 0086                           _TRISD 0088  
                         _SSPIE 0463                           _SSPIF 0063           __end_of_Lcd_Cmd_4bits 02B0  
               __end_of_dpowers 001D                           _setup 02D2                           pclath 000A  
                         status 0003                           wtemp0 007E                 __end_of_sprintf 06DE  
               __initialization 07FC                    __end_of_main 07FC                          ??_main 002D  
             ?_I2C_Master_Start 0070               ?_I2C_Master_Write 0070              ??_I2C_Master_Start 0070  
            ??_I2C_Master_Write 0072                ___awdiv@dividend 0072                          ?_setup 0070  
                        _ANSELH 0189                          _SSPADD 0093                          _TRISC3 043B  
                        _TRISC4 043C                          _SSPCON 0014                          _SSPBUF 0013  
      Lcd_Write_Char_4bits@temp 0072                       ??___awdiv 0074                       ??___awmod 007D  
                     ??___lldiv 0078                       ??___lwdiv 0074                       ??___lwmod 007C  
              ___awdiv@quotient 0077                 ___awmod@divisor 0079                 ___awmod@counter 0020  
                  ?_setupINTOSC 0070                  _Lcd_Init_4bits 04F3                       ??_sprintf 0023  
       __end_of__initialization 07FC                  __pcstackCOMMON 0070           Lcd_Write_Char_4bits@a 0074  
         Lcd_Write_Char_4bits@y 0073                   __end_of_setup 02F7          __end_of_Lcd_Init_4bits 0550  
       ?_Lcd_Write_String_4bits 0075                         ??_setup 007E                  _Lcd_Port_4bits 02B0  
               _Lcd_Clear_4bits 027C                      __pmaintext 06DE    __end_of_Lcd_Write_Char_4bits 035A  
               Lcd_Port_4bits@a 0070                 ?_Lcd_Init_4bits 0070  __end_of_Lcd_Write_String_4bits 040E  
                       _SSPCON2 0091                         _SSPSTAT 0094                      __stringtab 0003  
        __end_of_Lcd_Port_4bits 02D2                         ___awdiv 05B6                         ___awmod 0498  
                       ___lldiv 0550                         ___lwdiv 040E                         ___lwmod 0392  
                       __ptext1 061D                         __ptext2 0392                         __ptext3 040E  
                       __ptext4 02D2                         __ptext5 0289                         __ptext6 04F3  
                       __ptext7 035A                         __ptext8 0550                         __ptext9 0498  
                       _dpowers 0013                ___awmod@dividend 007B    __end_of_Lcd_Set_Cursor_4bits 0498  
                       _sprintf 061D            end_of_initialization 07FC                 ?_Lcd_Port_4bits 0070  
       __end_of_Lcd_Clear_4bits 0289                 ___lldiv@divisor 0070                 ___lldiv@counter 007D  
              I2C_Master_Init@c 0020                I2C_Master_Read@a 0070                       _PORTDbits 0008  
                    main@VAL1_C 003B                      main@VAL1_D 003A                      main@VAL1_U 0039  
                     _TRISCbits 0087            _Lcd_Write_Char_4bits 0325             start_initialization 07FC  
                 _Lcd_Cmd_4bits 0296           Lcd_Set_Cursor_4bits@a 0076           Lcd_Set_Cursor_4bits@b 0074  
         Lcd_Set_Cursor_4bits@y 0078           Lcd_Set_Cursor_4bits@z 0077                ?_Lcd_Clear_4bits 0070  
             ??_I2C_Master_Init 0024               ??_I2C_Master_Read 0072               ??_I2C_Master_Wait 0070  
             ??_I2C_Master_Stop 0070           ?_Lcd_Write_Char_4bits 0070        Lcd_Set_Cursor_4bits@temp 0079  
          _Lcd_Set_Cursor_4bits 0452                ??_Lcd_Init_4bits 0074                       ___latbits 0002  
                 __pcstackBANK0 0020                  ?_Lcd_Cmd_4bits 0070                     sprintf@flag 0026  
                   sprintf@prec 002A                _I2C_Master_Start 0253                _I2C_Master_Write 0265  
              ___lwdiv@dividend 0072           ?_Lcd_Set_Cursor_4bits 0074                        ?___awdiv 0070  
                      ?___awmod 0079                        ?___lldiv 0070                        ?___lwdiv 0070  
                      ?___lwmod 0078                       __pstrings 0003                ??_Lcd_Port_4bits 0070  
              ___lwdiv@quotient 0075                        ?_sprintf 0020          ??_Lcd_Write_Char_4bits 0071  
                   __stringbase 0012                   ??_setupINTOSC 0070                 ??_Lcd_Cmd_4bits 0071  
           I2C_Master_Read@temp 0074         Lcd_Write_String_4bits@a 0075         Lcd_Write_String_4bits@i 007A  
        ??_Lcd_Set_Cursor_4bits 0075              __end_of__stringtab 0013        ??_Lcd_Write_String_4bits 0077  
                Lcd_Cmd_4bits@a 0073                      sprintf@val 0028                 _I2C_Master_Init 035A  
               _I2C_Master_Read 02F7                 _I2C_Master_Wait 026F                 _I2C_Master_Stop 025C  
               ___lwdiv@divisor 0070                 ___lwdiv@counter 0077                        __ptext10 05B6  
                      __ptext11 03CC                        __ptext20 02F7                        __ptext12 0325  
                      __ptext21 026F                        __ptext13 0452                        __ptext14 027C  
                      __ptext15 0296                        __ptext16 02B0                        __ptext17 0265  
                      __ptext18 025C                        __ptext19 0253             __end_of_setupINTOSC 0296  
                      main@ADC1 0030                        main@VAL1 003C        __end_of_I2C_Master_Start 025C  
      __end_of_I2C_Master_Write 026F                       sprintf@ap 0027                       sprintf@sp 002B  
              ___lwmod@dividend 007A                ___lldiv@dividend 0074                       stringcode 000D  
                    _OSCCONbits 008F         __end_of_I2C_Master_Init 0392         __end_of_I2C_Master_Read 0325  
       __end_of_I2C_Master_Wait 027C         __end_of_I2C_Master_Stop 0265                     _setupINTOSC 0289  
                      sprintf@c 002C                        sprintf@f 0020                    setupINTOSC@F 0071  
              ___lldiv@quotient 0079               I2C_Master_Write@d 0070                 ___lwmod@divisor 0078  
               ___lwmod@counter 007D                        stringdir 000D                        stringtab 0003  
                   _SSPCON2bits 0091  
