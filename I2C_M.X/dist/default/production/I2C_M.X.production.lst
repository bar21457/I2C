

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 16 12:38:19 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	intentry,global,class=CODE,delta=2
    42                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    43                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    44                           	dabs	1,0x7E,2
    45     0000                     
    46                           ; Version 2.40
    47                           ; Generated 17/11/2021 GMT
    48                           ; 
    49                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    50                           ; All rights reserved.
    51                           ; 
    52                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    53                           ; 
    54                           ; Redistribution and use in source and binary forms, with or without modification, are
    55                           ; permitted provided that the following conditions are met:
    56                           ; 
    57                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    58                           ;        conditions and the following disclaimer.
    59                           ; 
    60                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    61                           ;        of conditions and the following disclaimer in the documentation and/or other
    62                           ;        materials provided with the distribution. Publication is not required when
    63                           ;        this file is used in an embedded application.
    64                           ; 
    65                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    66                           ;        software without specific prior written permission.
    67                           ; 
    68                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    69                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    70                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    71                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    72                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    73                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    74                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    75                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    76                           ; 
    77                           ; 
    78                           ; Code-generator required, PIC16F887 Definitions
    79                           ; 
    80                           ; SFR Addresses
    81     0000                     	;# 
    82     0001                     	;# 
    83     0002                     	;# 
    84     0003                     	;# 
    85     0004                     	;# 
    86     0005                     	;# 
    87     0006                     	;# 
    88     0007                     	;# 
    89     0008                     	;# 
    90     0009                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000D                     	;# 
    95     000E                     	;# 
    96     000E                     	;# 
    97     000F                     	;# 
    98     0010                     	;# 
    99     0011                     	;# 
   100     0012                     	;# 
   101     0013                     	;# 
   102     0014                     	;# 
   103     0015                     	;# 
   104     0015                     	;# 
   105     0016                     	;# 
   106     0017                     	;# 
   107     0018                     	;# 
   108     0019                     	;# 
   109     001A                     	;# 
   110     001B                     	;# 
   111     001B                     	;# 
   112     001C                     	;# 
   113     001D                     	;# 
   114     001E                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     0087                     	;# 
   120     0088                     	;# 
   121     0089                     	;# 
   122     008C                     	;# 
   123     008D                     	;# 
   124     008E                     	;# 
   125     008F                     	;# 
   126     0090                     	;# 
   127     0091                     	;# 
   128     0092                     	;# 
   129     0093                     	;# 
   130     0093                     	;# 
   131     0093                     	;# 
   132     0094                     	;# 
   133     0095                     	;# 
   134     0096                     	;# 
   135     0097                     	;# 
   136     0098                     	;# 
   137     0099                     	;# 
   138     009A                     	;# 
   139     009B                     	;# 
   140     009C                     	;# 
   141     009D                     	;# 
   142     009E                     	;# 
   143     009F                     	;# 
   144     0105                     	;# 
   145     0107                     	;# 
   146     0108                     	;# 
   147     0109                     	;# 
   148     010C                     	;# 
   149     010C                     	;# 
   150     010D                     	;# 
   151     010E                     	;# 
   152     010F                     	;# 
   153     0185                     	;# 
   154     0187                     	;# 
   155     0188                     	;# 
   156     0189                     	;# 
   157     018C                     	;# 
   158     018D                     	;# 
   159     0000                     	;# 
   160     0001                     	;# 
   161     0002                     	;# 
   162     0003                     	;# 
   163     0004                     	;# 
   164     0005                     	;# 
   165     0006                     	;# 
   166     0007                     	;# 
   167     0008                     	;# 
   168     0009                     	;# 
   169     000A                     	;# 
   170     000B                     	;# 
   171     000C                     	;# 
   172     000D                     	;# 
   173     000E                     	;# 
   174     000E                     	;# 
   175     000F                     	;# 
   176     0010                     	;# 
   177     0011                     	;# 
   178     0012                     	;# 
   179     0013                     	;# 
   180     0014                     	;# 
   181     0015                     	;# 
   182     0015                     	;# 
   183     0016                     	;# 
   184     0017                     	;# 
   185     0018                     	;# 
   186     0019                     	;# 
   187     001A                     	;# 
   188     001B                     	;# 
   189     001B                     	;# 
   190     001C                     	;# 
   191     001D                     	;# 
   192     001E                     	;# 
   193     001F                     	;# 
   194     0081                     	;# 
   195     0085                     	;# 
   196     0086                     	;# 
   197     0087                     	;# 
   198     0088                     	;# 
   199     0089                     	;# 
   200     008C                     	;# 
   201     008D                     	;# 
   202     008E                     	;# 
   203     008F                     	;# 
   204     0090                     	;# 
   205     0091                     	;# 
   206     0092                     	;# 
   207     0093                     	;# 
   208     0093                     	;# 
   209     0093                     	;# 
   210     0094                     	;# 
   211     0095                     	;# 
   212     0096                     	;# 
   213     0097                     	;# 
   214     0098                     	;# 
   215     0099                     	;# 
   216     009A                     	;# 
   217     009B                     	;# 
   218     009C                     	;# 
   219     009D                     	;# 
   220     009E                     	;# 
   221     009F                     	;# 
   222     0105                     	;# 
   223     0107                     	;# 
   224     0108                     	;# 
   225     0109                     	;# 
   226     010C                     	;# 
   227     010C                     	;# 
   228     010D                     	;# 
   229     010E                     	;# 
   230     010F                     	;# 
   231     0185                     	;# 
   232     0187                     	;# 
   233     0188                     	;# 
   234     0189                     	;# 
   235     018C                     	;# 
   236     018D                     	;# 
   237     0000                     	;# 
   238     0001                     	;# 
   239     0002                     	;# 
   240     0003                     	;# 
   241     0004                     	;# 
   242     0005                     	;# 
   243     0006                     	;# 
   244     0007                     	;# 
   245     0008                     	;# 
   246     0009                     	;# 
   247     000A                     	;# 
   248     000B                     	;# 
   249     000C                     	;# 
   250     000D                     	;# 
   251     000E                     	;# 
   252     000E                     	;# 
   253     000F                     	;# 
   254     0010                     	;# 
   255     0011                     	;# 
   256     0012                     	;# 
   257     0013                     	;# 
   258     0014                     	;# 
   259     0015                     	;# 
   260     0015                     	;# 
   261     0016                     	;# 
   262     0017                     	;# 
   263     0018                     	;# 
   264     0019                     	;# 
   265     001A                     	;# 
   266     001B                     	;# 
   267     001B                     	;# 
   268     001C                     	;# 
   269     001D                     	;# 
   270     001E                     	;# 
   271     001F                     	;# 
   272     0081                     	;# 
   273     0085                     	;# 
   274     0086                     	;# 
   275     0087                     	;# 
   276     0088                     	;# 
   277     0089                     	;# 
   278     008C                     	;# 
   279     008D                     	;# 
   280     008E                     	;# 
   281     008F                     	;# 
   282     0090                     	;# 
   283     0091                     	;# 
   284     0092                     	;# 
   285     0093                     	;# 
   286     0093                     	;# 
   287     0093                     	;# 
   288     0094                     	;# 
   289     0095                     	;# 
   290     0096                     	;# 
   291     0097                     	;# 
   292     0098                     	;# 
   293     0099                     	;# 
   294     009A                     	;# 
   295     009B                     	;# 
   296     009C                     	;# 
   297     009D                     	;# 
   298     009E                     	;# 
   299     009F                     	;# 
   300     0105                     	;# 
   301     0107                     	;# 
   302     0108                     	;# 
   303     0109                     	;# 
   304     010C                     	;# 
   305     010C                     	;# 
   306     010D                     	;# 
   307     010E                     	;# 
   308     010F                     	;# 
   309     0185                     	;# 
   310     0187                     	;# 
   311     0188                     	;# 
   312     0189                     	;# 
   313     018C                     	;# 
   314     018D                     	;# 
   315     0000                     	;# 
   316     0001                     	;# 
   317     0002                     	;# 
   318     0003                     	;# 
   319     0004                     	;# 
   320     0005                     	;# 
   321     0006                     	;# 
   322     0007                     	;# 
   323     0008                     	;# 
   324     0009                     	;# 
   325     000A                     	;# 
   326     000B                     	;# 
   327     000C                     	;# 
   328     000D                     	;# 
   329     000E                     	;# 
   330     000E                     	;# 
   331     000F                     	;# 
   332     0010                     	;# 
   333     0011                     	;# 
   334     0012                     	;# 
   335     0013                     	;# 
   336     0014                     	;# 
   337     0015                     	;# 
   338     0015                     	;# 
   339     0016                     	;# 
   340     0017                     	;# 
   341     0018                     	;# 
   342     0019                     	;# 
   343     001A                     	;# 
   344     001B                     	;# 
   345     001B                     	;# 
   346     001C                     	;# 
   347     001D                     	;# 
   348     001E                     	;# 
   349     001F                     	;# 
   350     0081                     	;# 
   351     0085                     	;# 
   352     0086                     	;# 
   353     0087                     	;# 
   354     0088                     	;# 
   355     0089                     	;# 
   356     008C                     	;# 
   357     008D                     	;# 
   358     008E                     	;# 
   359     008F                     	;# 
   360     0090                     	;# 
   361     0091                     	;# 
   362     0092                     	;# 
   363     0093                     	;# 
   364     0093                     	;# 
   365     0093                     	;# 
   366     0094                     	;# 
   367     0095                     	;# 
   368     0096                     	;# 
   369     0097                     	;# 
   370     0098                     	;# 
   371     0099                     	;# 
   372     009A                     	;# 
   373     009B                     	;# 
   374     009C                     	;# 
   375     009D                     	;# 
   376     009E                     	;# 
   377     009F                     	;# 
   378     0105                     	;# 
   379     0107                     	;# 
   380     0108                     	;# 
   381     0109                     	;# 
   382     010C                     	;# 
   383     010C                     	;# 
   384     010D                     	;# 
   385     010E                     	;# 
   386     010F                     	;# 
   387     0185                     	;# 
   388     0187                     	;# 
   389     0188                     	;# 
   390     0189                     	;# 
   391     018C                     	;# 
   392     018D                     	;# 
   393     0000                     	;# 
   394     0001                     	;# 
   395     0002                     	;# 
   396     0003                     	;# 
   397     0004                     	;# 
   398     0005                     	;# 
   399     0006                     	;# 
   400     0007                     	;# 
   401     0008                     	;# 
   402     0009                     	;# 
   403     000A                     	;# 
   404     000B                     	;# 
   405     000C                     	;# 
   406     000D                     	;# 
   407     000E                     	;# 
   408     000E                     	;# 
   409     000F                     	;# 
   410     0010                     	;# 
   411     0011                     	;# 
   412     0012                     	;# 
   413     0013                     	;# 
   414     0014                     	;# 
   415     0015                     	;# 
   416     0015                     	;# 
   417     0016                     	;# 
   418     0017                     	;# 
   419     0018                     	;# 
   420     0019                     	;# 
   421     001A                     	;# 
   422     001B                     	;# 
   423     001B                     	;# 
   424     001C                     	;# 
   425     001D                     	;# 
   426     001E                     	;# 
   427     001F                     	;# 
   428     0081                     	;# 
   429     0085                     	;# 
   430     0086                     	;# 
   431     0087                     	;# 
   432     0088                     	;# 
   433     0089                     	;# 
   434     008C                     	;# 
   435     008D                     	;# 
   436     008E                     	;# 
   437     008F                     	;# 
   438     0090                     	;# 
   439     0091                     	;# 
   440     0092                     	;# 
   441     0093                     	;# 
   442     0093                     	;# 
   443     0093                     	;# 
   444     0094                     	;# 
   445     0095                     	;# 
   446     0096                     	;# 
   447     0097                     	;# 
   448     0098                     	;# 
   449     0099                     	;# 
   450     009A                     	;# 
   451     009B                     	;# 
   452     009C                     	;# 
   453     009D                     	;# 
   454     009E                     	;# 
   455     009F                     	;# 
   456     0105                     	;# 
   457     0107                     	;# 
   458     0108                     	;# 
   459     0109                     	;# 
   460     010C                     	;# 
   461     010C                     	;# 
   462     010D                     	;# 
   463     010E                     	;# 
   464     010F                     	;# 
   465     0185                     	;# 
   466     0187                     	;# 
   467     0188                     	;# 
   468     0189                     	;# 
   469     018C                     	;# 
   470     018D                     	;# 
   471     0000                     	;# 
   472     0001                     	;# 
   473     0002                     	;# 
   474     0003                     	;# 
   475     0004                     	;# 
   476     0005                     	;# 
   477     0006                     	;# 
   478     0007                     	;# 
   479     0008                     	;# 
   480     0009                     	;# 
   481     000A                     	;# 
   482     000B                     	;# 
   483     000C                     	;# 
   484     000D                     	;# 
   485     000E                     	;# 
   486     000E                     	;# 
   487     000F                     	;# 
   488     0010                     	;# 
   489     0011                     	;# 
   490     0012                     	;# 
   491     0013                     	;# 
   492     0014                     	;# 
   493     0015                     	;# 
   494     0015                     	;# 
   495     0016                     	;# 
   496     0017                     	;# 
   497     0018                     	;# 
   498     0019                     	;# 
   499     001A                     	;# 
   500     001B                     	;# 
   501     001B                     	;# 
   502     001C                     	;# 
   503     001D                     	;# 
   504     001E                     	;# 
   505     001F                     	;# 
   506     0081                     	;# 
   507     0085                     	;# 
   508     0086                     	;# 
   509     0087                     	;# 
   510     0088                     	;# 
   511     0089                     	;# 
   512     008C                     	;# 
   513     008D                     	;# 
   514     008E                     	;# 
   515     008F                     	;# 
   516     0090                     	;# 
   517     0091                     	;# 
   518     0092                     	;# 
   519     0093                     	;# 
   520     0093                     	;# 
   521     0093                     	;# 
   522     0094                     	;# 
   523     0095                     	;# 
   524     0096                     	;# 
   525     0097                     	;# 
   526     0098                     	;# 
   527     0099                     	;# 
   528     009A                     	;# 
   529     009B                     	;# 
   530     009C                     	;# 
   531     009D                     	;# 
   532     009E                     	;# 
   533     009F                     	;# 
   534     0105                     	;# 
   535     0107                     	;# 
   536     0108                     	;# 
   537     0109                     	;# 
   538     010C                     	;# 
   539     010C                     	;# 
   540     010D                     	;# 
   541     010E                     	;# 
   542     010F                     	;# 
   543     0185                     	;# 
   544     0187                     	;# 
   545     0188                     	;# 
   546     0189                     	;# 
   547     018C                     	;# 
   548     018D                     	;# 
   549                           
   550                           	psect	idataBANK0
   551     0D98                     __pidataBANK0:
   552                           
   553                           ;initializer for _fecha
   554     0D98  3430               	retlw	48
   555     0D99  3431               	retlw	49
   556     0D9A  342F               	retlw	47
   557     0D9B  3430               	retlw	48
   558     0D9C  3431               	retlw	49
   559     0D9D  342F               	retlw	47
   560     0D9E  3432               	retlw	50
   561     0D9F  3430               	retlw	48
   562     0DA0  3430               	retlw	48
   563     0DA1  3430               	retlw	48
   564                           
   565                           ;initializer for _tiempo
   566     0DA2  3430               	retlw	48
   567     0DA3  3430               	retlw	48
   568     0DA4  343A               	retlw	58
   569     0DA5  3430               	retlw	48
   570     0DA6  3430               	retlw	48
   571     0DA7  343A               	retlw	58
   572     0DA8  3430               	retlw	48
   573     0DA9  3430               	retlw	48
   574                           
   575                           	psect	strings
   576     0800                     __pstrings:
   577     0800                     stringtab:
   578     0800                     __stringtab:
   579                           
   580                           ;	String table - string pointers are 1 byte each
   581     0800  1BFF               	btfsc	btemp+1,7
   582     0801  280A               	ljmp	stringcode
   583     0802  1383               	bcf	3,7
   584     0803  187F               	btfsc	btemp+1,0
   585     0804  1783               	bsf	3,7
   586     0805  0800               	movf	0,w
   587     0806  0A84               	incf	4,f
   588     0807  1903               	skipnz
   589     0808  0AFF               	incf	btemp+1,f
   590     0809  0008               	return
   591     080A                     stringcode:
   592     080A                     stringdir:
   593     080A  3008               	movlw	high stringdir
   594     080B  008A               	movwf	10
   595     080C  0804               	movf	4,w
   596     080D  0A84               	incf	4,f
   597     080E  0782               	addwf	2,f
   598     080F                     __stringbase:
   599     080F  3400               	retlw	0
   600     0810                     __end_of__stringtab:
   601     0810                     _dpowers:
   602     0810  3401               	retlw	1
   603     0811  3400               	retlw	0
   604     0812  340A               	retlw	10
   605     0813  3400               	retlw	0
   606     0814  3464               	retlw	100
   607     0815  3400               	retlw	0
   608     0816  34E8               	retlw	232
   609     0817  3403               	retlw	3
   610     0818  3410               	retlw	16
   611     0819  3427               	retlw	39
   612     081A                     __end_of_dpowers:
   613     0008                     _PORTD	set	8
   614     0006                     _PORTB	set	6
   615     0005                     _PORTA	set	5
   616     0006                     _PORTBbits	set	6
   617     000B                     _INTCONbits	set	11
   618     0008                     _PORTDbits	set	8
   619     0013                     _SSPBUF	set	19
   620     0014                     _SSPCON	set	20
   621     0063                     _SSPIF	set	99
   622     005E                     _PEIE	set	94
   623     005F                     _GIE	set	95
   624     0096                     _IOCB	set	150
   625     0095                     _WPUBbits	set	149
   626     0081                     _OPTION_REGbits	set	129
   627     0088                     _TRISD	set	136
   628     0086                     _TRISB	set	134
   629     0085                     _TRISA	set	133
   630     008F                     _OSCCONbits	set	143
   631     0091                     _SSPCON2bits	set	145
   632     0087                     _TRISCbits	set	135
   633     0094                     _SSPSTAT	set	148
   634     0093                     _SSPADD	set	147
   635     0091                     _SSPCON2	set	145
   636     0463                     _SSPIE	set	1123
   637     043C                     _TRISC4	set	1084
   638     043B                     _TRISC3	set	1083
   639     0189                     _ANSELH	set	393
   640     0188                     _ANSEL	set	392
   641     081A                     STR_1:
   642     081A  3453               	retlw	83	;'S'
   643     081B  3431               	retlw	49	;'1'
   644     081C  343A               	retlw	58	;':'
   645     081D  3400               	retlw	0
   646     081E                     STR_2:
   647     081E  3425               	retlw	37	;'%'
   648     081F  3475               	retlw	117	;'u'
   649     0820  3400               	retlw	0
   650     081E                     
   651                           	psect	cinit
   652     000F                     start_initialization:	
   653                           ; #config settings
   654                           
   655     000F                     __initialization:
   656                           
   657                           ; Initialize objects allocated to BANK0
   658     000F  1383               	bcf	3,7	;select IRP bank0
   659     0010  3063               	movlw	low (__pdataBANK0+18)
   660     0011  00FD               	movwf	btemp+-1
   661     0012  300D               	movlw	high __pidataBANK0
   662     0013  00FE               	movwf	btemp
   663     0014  3098               	movlw	low __pidataBANK0
   664     0015  00FF               	movwf	btemp+1
   665     0016  3051               	movlw	low __pdataBANK0
   666     0017  0084               	movwf	4
   667     0018  120A  158A  25AE  120A  118A  	fcall	init_ram0
   668                           
   669                           ; Clear objects allocated to BANK0
   670     001D  3020               	movlw	low __pbssBANK0
   671     001E  0084               	movwf	4
   672     001F  303A               	movlw	low (__pbssBANK0+26)
   673     0020  120A  158A  254E  120A  118A  	fcall	clear_ram0
   674                           
   675                           ; Clear objects allocated to COMMON
   676     0025  01FA               	clrf	__pbssCOMMON& (0+127)
   677     0026                     end_of_initialization:	
   678                           ;End of C runtime variable initialization code
   679                           
   680     0026                     __end_of__initialization:
   681     0026  0183               	clrf	3
   682     0027  120A  118A  282A   	ljmp	_main	;jump to C main() function
   683                           
   684                           	psect	bssCOMMON
   685     007A                     __pbssCOMMON:
   686     007A                     _D:
   687     007A                     	ds	1
   688                           
   689                           	psect	bssBANK0
   690     0020                     __pbssBANK0:
   691     0020                     _modifAO:
   692     0020                     	ds	1
   693     0021                     _modifMES:
   694     0021                     	ds	1
   695     0022                     _modifDIA:
   696     0022                     	ds	1
   697     0023                     _modifHOR:
   698     0023                     	ds	1
   699     0024                     _modifMIN:
   700     0024                     	ds	1
   701     0025                     _modifSEG:
   702     0025                     	ds	1
   703     0026                     _AO:
   704     0026                     	ds	1
   705     0027                     _MES:
   706     0027                     	ds	1
   707     0028                     _DIA:
   708     0028                     	ds	1
   709     0029                     _HOR:
   710     0029                     	ds	1
   711     002A                     _MIN:
   712     002A                     	ds	1
   713     002B                     _SEG:
   714     002B                     	ds	1
   715     002C                     _VAL1_C:
   716     002C                     	ds	1
   717     002D                     _VAL1_D:
   718     002D                     	ds	1
   719     002E                     _VAL1_U:
   720     002E                     	ds	1
   721     002F                     _VAL1:
   722     002F                     	ds	1
   723     0030                     _modo:
   724     0030                     	ds	1
   725     0031                     _ADC1:
   726     0031                     	ds	9
   727                           
   728                           	psect	dataBANK0
   729     0051                     __pdataBANK0:
   730     0051                     _fecha:
   731     0051                     	ds	10
   732     005B                     _tiempo:
   733     005B                     	ds	8
   734                           
   735                           	psect	inittext
   736     0DAA                     init_fetch0:	
   737                           ;	Called with low address in FSR and high address in W
   738                           
   739     0DAA  087E               	movf	btemp,w
   740     0DAB  008A               	movwf	10
   741     0DAC  087F               	movf	btemp+1,w
   742     0DAD  0082               	movwf	2
   743     0DAE                     init_ram0:	
   744                           ;Called with:
   745                           ;	high address of idata address in btemp 
   746                           ;	low address of idata address in btemp+1 
   747                           ;	low address of data in FSR
   748                           ;	high address + 1 of data in btemp-1
   749                           
   750     0DAE  120A  158A  25AA  120A  158A  	fcall	init_fetch0
   751     0DB3  0080               	movwf	0
   752     0DB4  0A84               	incf	4,f
   753     0DB5  0804               	movf	4,w
   754     0DB6  067D               	xorwf	btemp+-1,w
   755     0DB7  1903               	btfsc	3,2
   756     0DB8  3400               	retlw	0
   757     0DB9  0AFF               	incf	btemp+1,f
   758     0DBA  1903               	btfsc	3,2
   759     0DBB  0AFE               	incf	btemp,f
   760     0DBC  2DAE               	goto	init_ram0
   761                           
   762                           	psect	clrtext
   763     0D4E                     clear_ram0:	
   764                           ;	Called with FSR containing the base address, and
   765                           ;	W with the last address+1
   766                           
   767     0D4E  0064               	clrwdt	;clear the watchdog before getting into this loop
   768     0D4F                     clrloop0:
   769     0D4F  0180               	clrf	0	;clear RAM location pointed to by FSR
   770     0D50  0A84               	incf	4,f	;increment pointer
   771     0D51  0604               	xorwf	4,w	;XOR with final address
   772     0D52  1903               	btfsc	3,2	;have we reached the end yet?
   773     0D53  3400               	retlw	0	;all done for this memory range, return
   774     0D54  0604               	xorwf	4,w	;XOR again to restore value
   775     0D55  2D4F               	goto	clrloop0	;do the next byte
   776                           
   777                           	psect	cstackCOMMON
   778     0070                     __pcstackCOMMON:
   779     0070                     ?_setup:
   780     0070                     ?_leerRTC:	
   781                           ; 1 bytes @ 0x0
   782                           
   783     0070                     ?_I2C_Master_Wait:	
   784                           ; 1 bytes @ 0x0
   785                           
   786     0070                     ?_I2C_Master_Start:	
   787                           ; 1 bytes @ 0x0
   788                           
   789     0070                     ?_I2C_Master_RepeatedStart:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ?_I2C_Master_Stop:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_setupINTOSC:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_Lcd_Port_4bits:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_Lcd_Cmd_4bits:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ?_Lcd_Clear_4bits:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_Lcd_Init_4bits:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ?_Lcd_Write_Char_4bits:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_ISR:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ??_ISR:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ?_main:	
   820                           ; 1 bytes @ 0x0
   821                           
   822                           
   823                           ; 1 bytes @ 0x0
   824     0070                     	ds	3
   825     0073                     ??_I2C_Master_Wait:
   826     0073                     ??_I2C_Master_Start:	
   827                           ; 1 bytes @ 0x3
   828                           
   829     0073                     ??_I2C_Master_RepeatedStart:	
   830                           ; 1 bytes @ 0x3
   831                           
   832     0073                     ??_I2C_Master_Stop:	
   833                           ; 1 bytes @ 0x3
   834                           
   835     0073                     ?_I2C_Master_Write:	
   836                           ; 1 bytes @ 0x3
   837                           
   838     0073                     ??_setupINTOSC:	
   839                           ; 1 bytes @ 0x3
   840                           
   841     0073                     ??_Lcd_Port_4bits:	
   842                           ; 1 bytes @ 0x3
   843                           
   844     0073                     ?___bmul:	
   845                           ; 1 bytes @ 0x3
   846                           
   847     0073                     ??___lldiv:	
   848                           ; 1 bytes @ 0x3
   849                           
   850     0073                     ?_I2C_Master_Read:	
   851                           ; 1 bytes @ 0x3
   852                           
   853     0073                     ?___awdiv:	
   854                           ; 2 bytes @ 0x3
   855                           
   856     0073                     ?___lwdiv:	
   857                           ; 2 bytes @ 0x3
   858                           
   859     0073                     Lcd_Port_4bits@a:	
   860                           ; 2 bytes @ 0x3
   861                           
   862     0073                     ___bmul@multiplicand:	
   863                           ; 1 bytes @ 0x3
   864                           
   865     0073                     I2C_Master_Write@d:	
   866                           ; 1 bytes @ 0x3
   867                           
   868     0073                     I2C_Master_Read@a:	
   869                           ; 2 bytes @ 0x3
   870                           
   871     0073                     ___awdiv@divisor:	
   872                           ; 2 bytes @ 0x3
   873                           
   874     0073                     ___lwdiv@divisor:	
   875                           ; 2 bytes @ 0x3
   876                           
   877                           
   878                           ; 2 bytes @ 0x3
   879     0073                     	ds	1
   880     0074                     ??_Lcd_Cmd_4bits:
   881     0074                     ??_Lcd_Write_Char_4bits:	
   882                           ; 1 bytes @ 0x4
   883                           
   884     0074                     ??___bmul:	
   885                           ; 1 bytes @ 0x4
   886                           
   887     0074                     setupINTOSC@F:	
   888                           ; 1 bytes @ 0x4
   889                           
   890     0074                     ___lldiv@quotient:	
   891                           ; 1 bytes @ 0x4
   892                           
   893                           
   894                           ; 4 bytes @ 0x4
   895     0074                     	ds	1
   896     0075                     ??_I2C_Master_Write:
   897     0075                     ??_I2C_Master_Read:	
   898                           ; 1 bytes @ 0x5
   899                           
   900     0075                     Lcd_Write_Char_4bits@temp:	
   901                           ; 1 bytes @ 0x5
   902                           
   903     0075                     ___bmul@product:	
   904                           ; 1 bytes @ 0x5
   905                           
   906     0075                     ___awdiv@dividend:	
   907                           ; 1 bytes @ 0x5
   908                           
   909     0075                     ___lwdiv@dividend:	
   910                           ; 2 bytes @ 0x5
   911                           
   912                           
   913                           ; 2 bytes @ 0x5
   914     0075                     	ds	1
   915     0076                     Lcd_Cmd_4bits@a:
   916     0076                     Lcd_Write_Char_4bits@y:	
   917                           ; 1 bytes @ 0x6
   918                           
   919     0076                     ___bmul@multiplier:	
   920                           ; 1 bytes @ 0x6
   921                           
   922                           
   923                           ; 1 bytes @ 0x6
   924     0076                     	ds	1
   925     0077                     ??_Lcd_Clear_4bits:
   926     0077                     ?_Lcd_Set_Cursor_4bits:	
   927                           ; 1 bytes @ 0x7
   928                           
   929     0077                     ??_Lcd_Init_4bits:	
   930                           ; 1 bytes @ 0x7
   931                           
   932     0077                     ??___awdiv:	
   933                           ; 1 bytes @ 0x7
   934                           
   935     0077                     ??___lwdiv:	
   936                           ; 1 bytes @ 0x7
   937                           
   938     0077                     Lcd_Set_Cursor_4bits@b:	
   939                           ; 1 bytes @ 0x7
   940                           
   941     0077                     Lcd_Write_Char_4bits@a:	
   942                           ; 1 bytes @ 0x7
   943                           
   944     0077                     I2C_Master_Read@temp:	
   945                           ; 1 bytes @ 0x7
   946                           
   947                           
   948                           ; 2 bytes @ 0x7
   949     0077                     	ds	1
   950     0078                     ??_Lcd_Set_Cursor_4bits:
   951     0078                     ?_Lcd_Write_String_4bits:	
   952                           ; 1 bytes @ 0x8
   953                           
   954     0078                     ??___awmod:	
   955                           ; 1 bytes @ 0x8
   956                           
   957     0078                     ??___lwmod:	
   958                           ; 1 bytes @ 0x8
   959                           
   960     0078                     ___lldiv@counter:	
   961                           ; 1 bytes @ 0x8
   962                           
   963     0078                     Lcd_Write_String_4bits@a:	
   964                           ; 1 bytes @ 0x8
   965                           
   966                           
   967                           ; 2 bytes @ 0x8
   968     0078                     	ds	1
   969     0079                     ??_setup:
   970     0079                     modifRTC@R:	
   971                           ; 1 bytes @ 0x9
   972                           
   973     0079                     ___lwmod@counter:	
   974                           ; 1 bytes @ 0x9
   975                           
   976                           
   977                           ; 1 bytes @ 0x9
   978     0079                     	ds	1
   979                           
   980                           	psect	cstackBANK0
   981     003A                     __pcstackBANK0:
   982     003A                     ??_leerRTC:
   983     003A                     ??_Lcd_Write_String_4bits:	
   984                           ; 1 bytes @ 0x0
   985                           
   986     003A                     ?___lldiv:	
   987                           ; 1 bytes @ 0x0
   988                           
   989     003A                     Lcd_Set_Cursor_4bits@a:	
   990                           ; 4 bytes @ 0x0
   991                           
   992     003A                     ___awdiv@counter:	
   993                           ; 1 bytes @ 0x0
   994                           
   995     003A                     ___lwdiv@counter:	
   996                           ; 1 bytes @ 0x0
   997                           
   998     003A                     ___lldiv@divisor:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001                           
  1002                           ; 4 bytes @ 0x0
  1003     003A                     	ds	1
  1004     003B                     Lcd_Set_Cursor_4bits@z:
  1005     003B                     ___awdiv@sign:	
  1006                           ; 1 bytes @ 0x1
  1007                           
  1008     003B                     ___lwdiv@quotient:	
  1009                           ; 1 bytes @ 0x1
  1010                           
  1011                           
  1012                           ; 2 bytes @ 0x1
  1013     003B                     	ds	1
  1014     003C                     Lcd_Set_Cursor_4bits@y:
  1015     003C                     leerRTC@R:	
  1016                           ; 1 bytes @ 0x2
  1017                           
  1018     003C                     ___awdiv@quotient:	
  1019                           ; 1 bytes @ 0x2
  1020                           
  1021                           
  1022                           ; 2 bytes @ 0x2
  1023     003C                     	ds	1
  1024     003D                     ?___lwmod:
  1025     003D                     Lcd_Set_Cursor_4bits@temp:	
  1026                           ; 2 bytes @ 0x3
  1027                           
  1028     003D                     leerRTC@DATO:	
  1029                           ; 1 bytes @ 0x3
  1030                           
  1031     003D                     Lcd_Write_String_4bits@i:	
  1032                           ; 1 bytes @ 0x3
  1033                           
  1034     003D                     ___lwmod@divisor:	
  1035                           ; 2 bytes @ 0x3
  1036                           
  1037                           
  1038                           ; 2 bytes @ 0x3
  1039     003D                     	ds	1
  1040     003E                     ?___awmod:
  1041     003E                     ___awmod@divisor:	
  1042                           ; 2 bytes @ 0x4
  1043                           
  1044     003E                     ___lldiv@dividend:	
  1045                           ; 2 bytes @ 0x4
  1046                           
  1047                           
  1048                           ; 4 bytes @ 0x4
  1049     003E                     	ds	1
  1050     003F                     ___lwmod@dividend:
  1051                           
  1052                           ; 2 bytes @ 0x5
  1053     003F                     	ds	1
  1054     0040                     ___awmod@dividend:
  1055                           
  1056                           ; 2 bytes @ 0x6
  1057     0040                     	ds	1
  1058     0041                     ?_sprintf:
  1059     0041                     sprintf@f:	
  1060                           ; 2 bytes @ 0x7
  1061                           
  1062                           
  1063                           ; 1 bytes @ 0x7
  1064     0041                     	ds	1
  1065     0042                     ?_I2C_Master_Init:
  1066     0042                     ___awmod@counter:	
  1067                           ; 1 bytes @ 0x8
  1068                           
  1069     0042                     I2C_Master_Init@c:	
  1070                           ; 1 bytes @ 0x8
  1071                           
  1072                           
  1073                           ; 4 bytes @ 0x8
  1074     0042                     	ds	1
  1075     0043                     ___awmod@sign:
  1076                           
  1077                           ; 1 bytes @ 0x9
  1078     0043                     	ds	1
  1079     0044                     ??_sprintf:
  1080     0044                     ?_modifRTC:	
  1081                           ; 1 bytes @ 0xA
  1082                           
  1083     0044                     modifRTC@D:	
  1084                           ; 1 bytes @ 0xA
  1085                           
  1086                           
  1087                           ; 2 bytes @ 0xA
  1088     0044                     	ds	2
  1089     0046                     ??_modifRTC:
  1090     0046                     ??_I2C_Master_Init:	
  1091                           ; 1 bytes @ 0xC
  1092                           
  1093                           
  1094                           ; 1 bytes @ 0xC
  1095     0046                     	ds	1
  1096     0047                     sprintf@flag:
  1097                           
  1098                           ; 1 bytes @ 0xD
  1099     0047                     	ds	1
  1100     0048                     sprintf@ap:
  1101                           
  1102                           ; 1 bytes @ 0xE
  1103     0048                     	ds	1
  1104     0049                     sprintf@val:
  1105                           
  1106                           ; 2 bytes @ 0xF
  1107     0049                     	ds	2
  1108     004B                     sprintf@prec:
  1109                           
  1110                           ; 1 bytes @ 0x11
  1111     004B                     	ds	1
  1112     004C                     sprintf@sp:
  1113                           
  1114                           ; 1 bytes @ 0x12
  1115     004C                     	ds	1
  1116     004D                     sprintf@c:
  1117                           
  1118                           ; 1 bytes @ 0x13
  1119     004D                     	ds	1
  1120     004E                     ??_main:
  1121                           
  1122                           ; 1 bytes @ 0x14
  1123     004E                     	ds	3
  1124                           
  1125                           	psect	maintext
  1126     002A                     __pmaintext:	
  1127 ;;
  1128 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1129 ;;
  1130 ;; *************** function _main *****************
  1131 ;; Defined at:
  1132 ;;		line 215 in file "main_M.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;                  1    wreg      void 
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : B00/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1146 ;;      Params:         0       0       0       0       0
  1147 ;;      Locals:         0       0       0       0       0
  1148 ;;      Temps:          0       3       0       0       0
  1149 ;;      Totals:         0       3       0       0       0
  1150 ;;Total ram usage:        3 bytes
  1151 ;; Hardware stack levels required when called: 5
  1152 ;; This function calls:
  1153 ;;		_I2C_Master_Read
  1154 ;;		_I2C_Master_Start
  1155 ;;		_I2C_Master_Stop
  1156 ;;		_I2C_Master_Write
  1157 ;;		_Lcd_Clear_4bits
  1158 ;;		_Lcd_Set_Cursor_4bits
  1159 ;;		_Lcd_Write_String_4bits
  1160 ;;		___awdiv
  1161 ;;		___awmod
  1162 ;;		_leerRTC
  1163 ;;		_modifRTC
  1164 ;;		_setup
  1165 ;;		_sprintf
  1166 ;; This function is called by:
  1167 ;;		Startup code after reset
  1168 ;; This function uses a non-reentrant model
  1169 ;;
  1170                           
  1171     002A                     _main:	
  1172                           ;psect for function _main
  1173                           
  1174     002A                     l2341:	
  1175                           ;incstack = 0
  1176                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1177                           
  1178                           
  1179                           ;main_M.c: 217:     setup();
  1180     002A  120A  158A  263C  120A  118A  	fcall	_setup
  1181                           
  1182                           ;main_M.c: 218:     Lcd_Clear_4bits();
  1183     002F  120A  158A  2571  120A  118A  	fcall	_Lcd_Clear_4bits
  1184                           
  1185                           ;main_M.c: 219:     Lcd_Set_Cursor_4bits(1,1);
  1186     0034  01F7               	clrf	Lcd_Set_Cursor_4bits@b
  1187     0035  0AF7               	incf	Lcd_Set_Cursor_4bits@b,f
  1188     0036  3001               	movlw	1
  1189     0037  120A  118A  27AA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1190     003C                     l2343:
  1191                           
  1192                           ;main_M.c: 220:     Lcd_Write_String_4bits("S1:");
  1193     003C  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1194     003D  00F8               	movwf	Lcd_Write_String_4bits@a
  1195     003E  3080               	movlw	128
  1196     003F  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1197     0040  120A  158A  2719  120A  118A  	fcall	_Lcd_Write_String_4bits
  1198     0045                     l2345:
  1199                           
  1200                           ;main_M.c: 223:     {;main_M.c: 225:         PORTA = modo;
  1201     0045  1283               	bcf	3,5	;RP0=0, select bank0
  1202     0046  1303               	bcf	3,6	;RP1=0, select bank0
  1203     0047  0830               	movf	_modo,w
  1204     0048  0085               	movwf	5	;volatile
  1205     0049                     l2347:
  1206                           
  1207                           ;main_M.c: 227:         I2C_Master_Start();
  1208     0049  120A  158A  255F  120A  118A  	fcall	_I2C_Master_Start
  1209     004E                     l2349:
  1210                           
  1211                           ;main_M.c: 228:         I2C_Master_Write(0x11);
  1212     004E  3011               	movlw	17
  1213     004F  00F3               	movwf	I2C_Master_Write@d
  1214     0050  3000               	movlw	0
  1215     0051  00F4               	movwf	I2C_Master_Write@d+1
  1216     0052  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  1217     0057                     l2351:
  1218                           
  1219                           ;main_M.c: 229:         VAL1 = I2C_Master_Read(0);
  1220     0057  3000               	movlw	0
  1221     0058  00F3               	movwf	I2C_Master_Read@a
  1222     0059  00F4               	movwf	I2C_Master_Read@a+1
  1223     005A  120A  158A  260E  120A  118A  	fcall	_I2C_Master_Read
  1224     005F  0873               	movf	?_I2C_Master_Read,w
  1225     0060  1283               	bcf	3,5	;RP0=0, select bank0
  1226     0061  1303               	bcf	3,6	;RP1=0, select bank0
  1227     0062  00AF               	movwf	_VAL1
  1228     0063                     l2353:
  1229                           
  1230                           ;main_M.c: 230:         I2C_Master_Stop();
  1231     0063  120A  158A  2568  120A  118A  	fcall	_I2C_Master_Stop
  1232     0068                     l2355:
  1233                           
  1234                           ;main_M.c: 231:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1235     0068  3003               	movlw	3
  1236     0069  1283               	bcf	3,5	;RP0=0, select bank0
  1237     006A  1303               	bcf	3,6	;RP1=0, select bank0
  1238     006B  00D0               	movwf	??_main+2
  1239     006C  3008               	movlw	8
  1240     006D  00CF               	movwf	??_main+1
  1241     006E  3076               	movlw	118
  1242     006F  00CE               	movwf	??_main
  1243     0070                     u2467:
  1244     0070  0BCE               	decfsz	??_main,f
  1245     0071  2870               	goto	u2467
  1246     0072  0BCF               	decfsz	??_main+1,f
  1247     0073  2870               	goto	u2467
  1248     0074  0BD0               	decfsz	??_main+2,f
  1249     0075  2870               	goto	u2467
  1250     0076  0000               	nop
  1251     0077                     l2357:
  1252                           
  1253                           ;main_M.c: 233:         VAL1_C = (VAL1/100);
  1254     0077  3064               	movlw	100
  1255     0078  00F3               	movwf	___awdiv@divisor
  1256     0079  3000               	movlw	0
  1257     007A  00F4               	movwf	___awdiv@divisor+1
  1258     007B  1283               	bcf	3,5	;RP0=0, select bank0
  1259     007C  1303               	bcf	3,6	;RP1=0, select bank0
  1260     007D  082F               	movf	_VAL1,w
  1261     007E  00CE               	movwf	??_main
  1262     007F  01CF               	clrf	??_main+1
  1263     0080  084E               	movf	??_main,w
  1264     0081  00F5               	movwf	___awdiv@dividend
  1265     0082  084F               	movf	??_main+1,w
  1266     0083  00F6               	movwf	___awdiv@dividend+1
  1267     0084  120A  118A  2618  120A  118A  	fcall	___awdiv
  1268     0089  0873               	movf	?___awdiv,w
  1269     008A  1283               	bcf	3,5	;RP0=0, select bank0
  1270     008B  1303               	bcf	3,6	;RP1=0, select bank0
  1271     008C  00AC               	movwf	_VAL1_C
  1272     008D                     l2359:
  1273                           
  1274                           ;main_M.c: 234:         VAL1_D = (VAL1/10)%10;
  1275     008D  300A               	movlw	10
  1276     008E  00BE               	movwf	___awmod@divisor
  1277     008F  3000               	movlw	0
  1278     0090  00BF               	movwf	___awmod@divisor+1
  1279     0091  300A               	movlw	10
  1280     0092  00F3               	movwf	___awdiv@divisor
  1281     0093  3000               	movlw	0
  1282     0094  00F4               	movwf	___awdiv@divisor+1
  1283     0095  082F               	movf	_VAL1,w
  1284     0096  00CE               	movwf	??_main
  1285     0097  01CF               	clrf	??_main+1
  1286     0098  084E               	movf	??_main,w
  1287     0099  00F5               	movwf	___awdiv@dividend
  1288     009A  084F               	movf	??_main+1,w
  1289     009B  00F6               	movwf	___awdiv@dividend+1
  1290     009C  120A  118A  2618  120A  118A  	fcall	___awdiv
  1291     00A1  0874               	movf	?___awdiv+1,w
  1292     00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1293     00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1294     00A4  00C1               	movwf	___awmod@dividend+1
  1295     00A5  0873               	movf	?___awdiv,w
  1296     00A6  00C0               	movwf	___awmod@dividend
  1297     00A7  120A  158A  27A5  120A  118A  	fcall	___awmod
  1298     00AC  1283               	bcf	3,5	;RP0=0, select bank0
  1299     00AD  1303               	bcf	3,6	;RP1=0, select bank0
  1300     00AE  083E               	movf	?___awmod,w
  1301     00AF  00AD               	movwf	_VAL1_D
  1302     00B0                     l2361:
  1303                           
  1304                           ;main_M.c: 235:         VAL1_U = VAL1%10;
  1305     00B0  300A               	movlw	10
  1306     00B1  00BE               	movwf	___awmod@divisor
  1307     00B2  3000               	movlw	0
  1308     00B3  00BF               	movwf	___awmod@divisor+1
  1309     00B4  082F               	movf	_VAL1,w
  1310     00B5  00CE               	movwf	??_main
  1311     00B6  01CF               	clrf	??_main+1
  1312     00B7  084E               	movf	??_main,w
  1313     00B8  00C0               	movwf	___awmod@dividend
  1314     00B9  084F               	movf	??_main+1,w
  1315     00BA  00C1               	movwf	___awmod@dividend+1
  1316     00BB  120A  158A  27A5  120A  118A  	fcall	___awmod
  1317     00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1318     00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1319     00C2  083E               	movf	?___awmod,w
  1320     00C3  00AE               	movwf	_VAL1_U
  1321                           
  1322                           ;main_M.c: 237:         sprintf(ADC1, "%u", VAL1_C);
  1323     00C4  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1324     00C5  00C1               	movwf	sprintf@f
  1325     00C6  082C               	movf	_VAL1_C,w
  1326     00C7  00CE               	movwf	??_main
  1327     00C8  01CF               	clrf	??_main+1
  1328     00C9  084E               	movf	??_main,w
  1329     00CA  00C2               	movwf	?_sprintf+1
  1330     00CB  084F               	movf	??_main+1,w
  1331     00CC  00C3               	movwf	?_sprintf+2
  1332     00CD  3031               	movlw	(low (_ADC1| 0))& (0+255)
  1333     00CE  120A  118A  24E7  120A  118A  	fcall	_sprintf
  1334     00D3                     l2363:
  1335                           
  1336                           ;main_M.c: 238:         Lcd_Set_Cursor_4bits(2,1);
  1337     00D3  01F7               	clrf	Lcd_Set_Cursor_4bits@b
  1338     00D4  0AF7               	incf	Lcd_Set_Cursor_4bits@b,f
  1339     00D5  3002               	movlw	2
  1340     00D6  120A  118A  27AA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1341     00DB                     l2365:
  1342                           
  1343                           ;main_M.c: 239:         Lcd_Write_String_4bits(ADC1);
  1344     00DB  3031               	movlw	(low (_ADC1| 0))& (0+255)
  1345     00DC  00F8               	movwf	Lcd_Write_String_4bits@a
  1346     00DD  3000               	movlw	0
  1347     00DE  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1348     00DF  120A  158A  2719  120A  118A  	fcall	_Lcd_Write_String_4bits
  1349     00E4                     l2367:
  1350                           
  1351                           ;main_M.c: 241:         sprintf(ADC1, "%u", VAL1_D);
  1352     00E4  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1353     00E5  1283               	bcf	3,5	;RP0=0, select bank0
  1354     00E6  1303               	bcf	3,6	;RP1=0, select bank0
  1355     00E7  00C1               	movwf	sprintf@f
  1356     00E8  082D               	movf	_VAL1_D,w
  1357     00E9  00CE               	movwf	??_main
  1358     00EA  01CF               	clrf	??_main+1
  1359     00EB  084E               	movf	??_main,w
  1360     00EC  00C2               	movwf	?_sprintf+1
  1361     00ED  084F               	movf	??_main+1,w
  1362     00EE  00C3               	movwf	?_sprintf+2
  1363     00EF  3031               	movlw	(low (_ADC1| 0))& (0+255)
  1364     00F0  120A  118A  24E7  120A  118A  	fcall	_sprintf
  1365     00F5                     l2369:
  1366                           
  1367                           ;main_M.c: 242:         Lcd_Set_Cursor_4bits(2,2);
  1368     00F5  3002               	movlw	2
  1369     00F6  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1370     00F7  3002               	movlw	2
  1371     00F8  120A  118A  27AA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1372                           
  1373                           ;main_M.c: 243:         Lcd_Write_String_4bits(ADC1);
  1374     00FD  3031               	movlw	(low (_ADC1| 0))& (0+255)
  1375     00FE  00F8               	movwf	Lcd_Write_String_4bits@a
  1376     00FF  3000               	movlw	0
  1377     0100  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1378     0101  120A  158A  2719  120A  118A  	fcall	_Lcd_Write_String_4bits
  1379                           
  1380                           ;main_M.c: 245:         sprintf(ADC1, "%u", VAL1_U);
  1381     0106  300F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1382     0107  1283               	bcf	3,5	;RP0=0, select bank0
  1383     0108  1303               	bcf	3,6	;RP1=0, select bank0
  1384     0109  00C1               	movwf	sprintf@f
  1385     010A  082E               	movf	_VAL1_U,w
  1386     010B  00CE               	movwf	??_main
  1387     010C  01CF               	clrf	??_main+1
  1388     010D  084E               	movf	??_main,w
  1389     010E  00C2               	movwf	?_sprintf+1
  1390     010F  084F               	movf	??_main+1,w
  1391     0110  00C3               	movwf	?_sprintf+2
  1392     0111  3031               	movlw	(low (_ADC1| 0))& (0+255)
  1393     0112  120A  118A  24E7  120A  118A  	fcall	_sprintf
  1394     0117                     l2371:
  1395                           
  1396                           ;main_M.c: 246:         Lcd_Set_Cursor_4bits(2,3);
  1397     0117  3003               	movlw	3
  1398     0118  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1399     0119  3002               	movlw	2
  1400     011A  120A  118A  27AA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1401     011F                     l2373:
  1402                           
  1403                           ;main_M.c: 247:         Lcd_Write_String_4bits(ADC1);
  1404     011F  3031               	movlw	(low (_ADC1| 0))& (0+255)
  1405     0120  00F8               	movwf	Lcd_Write_String_4bits@a
  1406     0121  3000               	movlw	0
  1407     0122  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1408     0123  120A  158A  2719  120A  118A  	fcall	_Lcd_Write_String_4bits
  1409     0128                     l2375:
  1410                           
  1411                           ;main_M.c: 249:         if (modo != 0)
  1412     0128  1283               	bcf	3,5	;RP0=0, select bank0
  1413     0129  1303               	bcf	3,6	;RP1=0, select bank0
  1414     012A  0830               	movf	_modo,w
  1415     012B  1903               	btfsc	3,2
  1416     012C  292E               	goto	u2441
  1417     012D  292F               	goto	u2440
  1418     012E                     u2441:
  1419     012E  2AA7               	goto	l2383
  1420     012F                     u2440:
  1421     012F                     l2377:
  1422                           
  1423                           ;main_M.c: 250:         {;main_M.c: 251:             modifRTC(REG_SEG,modifSEG);
  1424     012F  0825               	movf	_modifSEG,w
  1425     0130  00CE               	movwf	??_main
  1426     0131  01CF               	clrf	??_main+1
  1427     0132  084E               	movf	??_main,w
  1428     0133  00C4               	movwf	modifRTC@D
  1429     0134  084F               	movf	??_main+1,w
  1430     0135  00C5               	movwf	modifRTC@D+1
  1431     0136  3000               	movlw	0
  1432     0137  120A  118A  25AA  120A  118A  	fcall	_modifRTC
  1433                           
  1434                           ;main_M.c: 252:             modifRTC(REG_MIN,modifMIN);
  1435     013C  1283               	bcf	3,5	;RP0=0, select bank0
  1436     013D  1303               	bcf	3,6	;RP1=0, select bank0
  1437     013E  0824               	movf	_modifMIN,w
  1438     013F  00CE               	movwf	??_main
  1439     0140  01CF               	clrf	??_main+1
  1440     0141  084E               	movf	??_main,w
  1441     0142  00C4               	movwf	modifRTC@D
  1442     0143  084F               	movf	??_main+1,w
  1443     0144  00C5               	movwf	modifRTC@D+1
  1444     0145  3001               	movlw	1
  1445     0146  120A  118A  25AA  120A  118A  	fcall	_modifRTC
  1446                           
  1447                           ;main_M.c: 253:             modifRTC(REG_HOR,modifHOR);
  1448     014B  1283               	bcf	3,5	;RP0=0, select bank0
  1449     014C  1303               	bcf	3,6	;RP1=0, select bank0
  1450     014D  0823               	movf	_modifHOR,w
  1451     014E  00CE               	movwf	??_main
  1452     014F  01CF               	clrf	??_main+1
  1453     0150  084E               	movf	??_main,w
  1454     0151  00C4               	movwf	modifRTC@D
  1455     0152  084F               	movf	??_main+1,w
  1456     0153  00C5               	movwf	modifRTC@D+1
  1457     0154  3002               	movlw	2
  1458     0155  120A  118A  25AA  120A  118A  	fcall	_modifRTC
  1459                           
  1460                           ;main_M.c: 254:             modifRTC(REG_DIA,modifDIA);
  1461     015A  1283               	bcf	3,5	;RP0=0, select bank0
  1462     015B  1303               	bcf	3,6	;RP1=0, select bank0
  1463     015C  0822               	movf	_modifDIA,w
  1464     015D  00CE               	movwf	??_main
  1465     015E  01CF               	clrf	??_main+1
  1466     015F  084E               	movf	??_main,w
  1467     0160  00C4               	movwf	modifRTC@D
  1468     0161  084F               	movf	??_main+1,w
  1469     0162  00C5               	movwf	modifRTC@D+1
  1470     0163  3003               	movlw	3
  1471     0164  120A  118A  25AA  120A  118A  	fcall	_modifRTC
  1472                           
  1473                           ;main_M.c: 255:             modifRTC(REG_MES,modifMES);
  1474     0169  1283               	bcf	3,5	;RP0=0, select bank0
  1475     016A  1303               	bcf	3,6	;RP1=0, select bank0
  1476     016B  0821               	movf	_modifMES,w
  1477     016C  00CE               	movwf	??_main
  1478     016D  01CF               	clrf	??_main+1
  1479     016E  084E               	movf	??_main,w
  1480     016F  00C4               	movwf	modifRTC@D
  1481     0170  084F               	movf	??_main+1,w
  1482     0171  00C5               	movwf	modifRTC@D+1
  1483     0172  3004               	movlw	4
  1484     0173  120A  118A  25AA  120A  118A  	fcall	_modifRTC
  1485                           
  1486                           ;main_M.c: 256:             modifRTC(REG_A,modifAO);
  1487     0178  1283               	bcf	3,5	;RP0=0, select bank0
  1488     0179  1303               	bcf	3,6	;RP1=0, select bank0
  1489     017A  0820               	movf	_modifAO,w
  1490     017B  00CE               	movwf	??_main
  1491     017C  01CF               	clrf	??_main+1
  1492     017D  084E               	movf	??_main,w
  1493     017E  00C4               	movwf	modifRTC@D
  1494     017F  084F               	movf	??_main+1,w
  1495     0180  00C5               	movwf	modifRTC@D+1
  1496     0181  3005               	movlw	5
  1497     0182  120A  118A  25AA  120A  118A  	fcall	_modifRTC
  1498                           
  1499                           ;main_M.c: 258:             tiempo[7] = modifSEG % 10 + 48;
  1500     0187  300A               	movlw	10
  1501     0188  1283               	bcf	3,5	;RP0=0, select bank0
  1502     0189  1303               	bcf	3,6	;RP1=0, select bank0
  1503     018A  00BE               	movwf	___awmod@divisor
  1504     018B  3000               	movlw	0
  1505     018C  00BF               	movwf	___awmod@divisor+1
  1506     018D  0825               	movf	_modifSEG,w
  1507     018E  00CE               	movwf	??_main
  1508     018F  01CF               	clrf	??_main+1
  1509     0190  084E               	movf	??_main,w
  1510     0191  00C0               	movwf	___awmod@dividend
  1511     0192  084F               	movf	??_main+1,w
  1512     0193  00C1               	movwf	___awmod@dividend+1
  1513     0194  120A  158A  27A5  120A  118A  	fcall	___awmod
  1514     0199  1283               	bcf	3,5	;RP0=0, select bank0
  1515     019A  1303               	bcf	3,6	;RP1=0, select bank0
  1516     019B  083E               	movf	?___awmod,w
  1517     019C  3E30               	addlw	48
  1518     019D  00E2               	movwf	_tiempo+7
  1519                           
  1520                           ;main_M.c: 259:             tiempo[6] = modifSEG / 10 + 48;
  1521     019E  300A               	movlw	10
  1522     019F  00F3               	movwf	___awdiv@divisor
  1523     01A0  3000               	movlw	0
  1524     01A1  00F4               	movwf	___awdiv@divisor+1
  1525     01A2  0825               	movf	_modifSEG,w
  1526     01A3  00CE               	movwf	??_main
  1527     01A4  01CF               	clrf	??_main+1
  1528     01A5  084E               	movf	??_main,w
  1529     01A6  00F5               	movwf	___awdiv@dividend
  1530     01A7  084F               	movf	??_main+1,w
  1531     01A8  00F6               	movwf	___awdiv@dividend+1
  1532     01A9  120A  118A  2618  120A  118A  	fcall	___awdiv
  1533     01AE  0873               	movf	?___awdiv,w
  1534     01AF  3E30               	addlw	48
  1535     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1536     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1537     01B2  00E1               	movwf	_tiempo+6
  1538                           
  1539                           ;main_M.c: 260:             tiempo[4] = modifMIN % 10 + 48;
  1540     01B3  300A               	movlw	10
  1541     01B4  00BE               	movwf	___awmod@divisor
  1542     01B5  3000               	movlw	0
  1543     01B6  00BF               	movwf	___awmod@divisor+1
  1544     01B7  0824               	movf	_modifMIN,w
  1545     01B8  00CE               	movwf	??_main
  1546     01B9  01CF               	clrf	??_main+1
  1547     01BA  084E               	movf	??_main,w
  1548     01BB  00C0               	movwf	___awmod@dividend
  1549     01BC  084F               	movf	??_main+1,w
  1550     01BD  00C1               	movwf	___awmod@dividend+1
  1551     01BE  120A  158A  27A5  120A  118A  	fcall	___awmod
  1552     01C3  1283               	bcf	3,5	;RP0=0, select bank0
  1553     01C4  1303               	bcf	3,6	;RP1=0, select bank0
  1554     01C5  083E               	movf	?___awmod,w
  1555     01C6  3E30               	addlw	48
  1556     01C7  00DF               	movwf	_tiempo+4
  1557                           
  1558                           ;main_M.c: 261:             tiempo[3] = modifMIN / 10 + 48;
  1559     01C8  300A               	movlw	10
  1560     01C9  00F3               	movwf	___awdiv@divisor
  1561     01CA  3000               	movlw	0
  1562     01CB  00F4               	movwf	___awdiv@divisor+1
  1563     01CC  0824               	movf	_modifMIN,w
  1564     01CD  00CE               	movwf	??_main
  1565     01CE  01CF               	clrf	??_main+1
  1566     01CF  084E               	movf	??_main,w
  1567     01D0  00F5               	movwf	___awdiv@dividend
  1568     01D1  084F               	movf	??_main+1,w
  1569     01D2  00F6               	movwf	___awdiv@dividend+1
  1570     01D3  120A  118A  2618  120A  118A  	fcall	___awdiv
  1571     01D8  0873               	movf	?___awdiv,w
  1572     01D9  3E30               	addlw	48
  1573     01DA  1283               	bcf	3,5	;RP0=0, select bank0
  1574     01DB  1303               	bcf	3,6	;RP1=0, select bank0
  1575     01DC  00DE               	movwf	_tiempo+3
  1576                           
  1577                           ;main_M.c: 262:             tiempo[1] = modifHOR % 10 + 48;
  1578     01DD  300A               	movlw	10
  1579     01DE  00BE               	movwf	___awmod@divisor
  1580     01DF  3000               	movlw	0
  1581     01E0  00BF               	movwf	___awmod@divisor+1
  1582     01E1  0823               	movf	_modifHOR,w
  1583     01E2  00CE               	movwf	??_main
  1584     01E3  01CF               	clrf	??_main+1
  1585     01E4  084E               	movf	??_main,w
  1586     01E5  00C0               	movwf	___awmod@dividend
  1587     01E6  084F               	movf	??_main+1,w
  1588     01E7  00C1               	movwf	___awmod@dividend+1
  1589     01E8  120A  158A  27A5  120A  118A  	fcall	___awmod
  1590     01ED  1283               	bcf	3,5	;RP0=0, select bank0
  1591     01EE  1303               	bcf	3,6	;RP1=0, select bank0
  1592     01EF  083E               	movf	?___awmod,w
  1593     01F0  3E30               	addlw	48
  1594     01F1  00DC               	movwf	_tiempo+1
  1595                           
  1596                           ;main_M.c: 263:             tiempo[0] = modifHOR / 10 + 48;
  1597     01F2  300A               	movlw	10
  1598     01F3  00F3               	movwf	___awdiv@divisor
  1599     01F4  3000               	movlw	0
  1600     01F5  00F4               	movwf	___awdiv@divisor+1
  1601     01F6  0823               	movf	_modifHOR,w
  1602     01F7  00CE               	movwf	??_main
  1603     01F8  01CF               	clrf	??_main+1
  1604     01F9  084E               	movf	??_main,w
  1605     01FA  00F5               	movwf	___awdiv@dividend
  1606     01FB  084F               	movf	??_main+1,w
  1607     01FC  00F6               	movwf	___awdiv@dividend+1
  1608     01FD  120A  118A  2618  120A  118A  	fcall	___awdiv
  1609     0202  0873               	movf	?___awdiv,w
  1610     0203  3E30               	addlw	48
  1611     0204  1283               	bcf	3,5	;RP0=0, select bank0
  1612     0205  1303               	bcf	3,6	;RP1=0, select bank0
  1613     0206  00DB               	movwf	_tiempo
  1614                           
  1615                           ;main_M.c: 264:             fecha[9] = modifAO % 10 + 48;
  1616     0207  300A               	movlw	10
  1617     0208  00BE               	movwf	___awmod@divisor
  1618     0209  3000               	movlw	0
  1619     020A  00BF               	movwf	___awmod@divisor+1
  1620     020B  0820               	movf	_modifAO,w
  1621     020C  00CE               	movwf	??_main
  1622     020D  01CF               	clrf	??_main+1
  1623     020E  084E               	movf	??_main,w
  1624     020F  00C0               	movwf	___awmod@dividend
  1625     0210  084F               	movf	??_main+1,w
  1626     0211  00C1               	movwf	___awmod@dividend+1
  1627     0212  120A  158A  27A5  120A  118A  	fcall	___awmod
  1628     0217  1283               	bcf	3,5	;RP0=0, select bank0
  1629     0218  1303               	bcf	3,6	;RP1=0, select bank0
  1630     0219  083E               	movf	?___awmod,w
  1631     021A  3E30               	addlw	48
  1632     021B  00DA               	movwf	_fecha+9
  1633                           
  1634                           ;main_M.c: 265:             fecha[8] = modifAO / 10 + 48;
  1635     021C  300A               	movlw	10
  1636     021D  00F3               	movwf	___awdiv@divisor
  1637     021E  3000               	movlw	0
  1638     021F  00F4               	movwf	___awdiv@divisor+1
  1639     0220  0820               	movf	_modifAO,w
  1640     0221  00CE               	movwf	??_main
  1641     0222  01CF               	clrf	??_main+1
  1642     0223  084E               	movf	??_main,w
  1643     0224  00F5               	movwf	___awdiv@dividend
  1644     0225  084F               	movf	??_main+1,w
  1645     0226  00F6               	movwf	___awdiv@dividend+1
  1646     0227  120A  118A  2618  120A  118A  	fcall	___awdiv
  1647     022C  0873               	movf	?___awdiv,w
  1648     022D  3E30               	addlw	48
  1649     022E  1283               	bcf	3,5	;RP0=0, select bank0
  1650     022F  1303               	bcf	3,6	;RP1=0, select bank0
  1651     0230  00D9               	movwf	_fecha+8
  1652                           
  1653                           ;main_M.c: 266:             fecha[4] = modifMES % 10 + 48;
  1654     0231  300A               	movlw	10
  1655     0232  00BE               	movwf	___awmod@divisor
  1656     0233  3000               	movlw	0
  1657     0234  00BF               	movwf	___awmod@divisor+1
  1658     0235  0821               	movf	_modifMES,w
  1659     0236  00CE               	movwf	??_main
  1660     0237  01CF               	clrf	??_main+1
  1661     0238  084E               	movf	??_main,w
  1662     0239  00C0               	movwf	___awmod@dividend
  1663     023A  084F               	movf	??_main+1,w
  1664     023B  00C1               	movwf	___awmod@dividend+1
  1665     023C  120A  158A  27A5  120A  118A  	fcall	___awmod
  1666     0241  1283               	bcf	3,5	;RP0=0, select bank0
  1667     0242  1303               	bcf	3,6	;RP1=0, select bank0
  1668     0243  083E               	movf	?___awmod,w
  1669     0244  3E30               	addlw	48
  1670     0245  00D5               	movwf	_fecha+4
  1671                           
  1672                           ;main_M.c: 267:             fecha[3] = modifMES / 10 + 48;
  1673     0246  300A               	movlw	10
  1674     0247  00F3               	movwf	___awdiv@divisor
  1675     0248  3000               	movlw	0
  1676     0249  00F4               	movwf	___awdiv@divisor+1
  1677     024A  0821               	movf	_modifMES,w
  1678     024B  00CE               	movwf	??_main
  1679     024C  01CF               	clrf	??_main+1
  1680     024D  084E               	movf	??_main,w
  1681     024E  00F5               	movwf	___awdiv@dividend
  1682     024F  084F               	movf	??_main+1,w
  1683     0250  00F6               	movwf	___awdiv@dividend+1
  1684     0251  120A  118A  2618  120A  118A  	fcall	___awdiv
  1685     0256  0873               	movf	?___awdiv,w
  1686     0257  3E30               	addlw	48
  1687     0258  1283               	bcf	3,5	;RP0=0, select bank0
  1688     0259  1303               	bcf	3,6	;RP1=0, select bank0
  1689     025A  00D4               	movwf	_fecha+3
  1690                           
  1691                           ;main_M.c: 268:             fecha[1] = modifDIA % 10 + 48;
  1692     025B  300A               	movlw	10
  1693     025C  00BE               	movwf	___awmod@divisor
  1694     025D  3000               	movlw	0
  1695     025E  00BF               	movwf	___awmod@divisor+1
  1696     025F  0822               	movf	_modifDIA,w
  1697     0260  00CE               	movwf	??_main
  1698     0261  01CF               	clrf	??_main+1
  1699     0262  084E               	movf	??_main,w
  1700     0263  00C0               	movwf	___awmod@dividend
  1701     0264  084F               	movf	??_main+1,w
  1702     0265  00C1               	movwf	___awmod@dividend+1
  1703     0266  120A  158A  27A5  120A  118A  	fcall	___awmod
  1704     026B  1283               	bcf	3,5	;RP0=0, select bank0
  1705     026C  1303               	bcf	3,6	;RP1=0, select bank0
  1706     026D  083E               	movf	?___awmod,w
  1707     026E  3E30               	addlw	48
  1708     026F  00D2               	movwf	_fecha+1
  1709                           
  1710                           ;main_M.c: 269:             fecha[0] = modifDIA / 10 + 48;
  1711     0270  300A               	movlw	10
  1712     0271  00F3               	movwf	___awdiv@divisor
  1713     0272  3000               	movlw	0
  1714     0273  00F4               	movwf	___awdiv@divisor+1
  1715     0274  0822               	movf	_modifDIA,w
  1716     0275  00CE               	movwf	??_main
  1717     0276  01CF               	clrf	??_main+1
  1718     0277  084E               	movf	??_main,w
  1719     0278  00F5               	movwf	___awdiv@dividend
  1720     0279  084F               	movf	??_main+1,w
  1721     027A  00F6               	movwf	___awdiv@dividend+1
  1722     027B  120A  118A  2618  120A  118A  	fcall	___awdiv
  1723     0280  0873               	movf	?___awdiv,w
  1724     0281  3E30               	addlw	48
  1725     0282  1283               	bcf	3,5	;RP0=0, select bank0
  1726     0283  1303               	bcf	3,6	;RP1=0, select bank0
  1727     0284  00D1               	movwf	_fecha
  1728                           
  1729                           ;main_M.c: 271:             Lcd_Set_Cursor_4bits(1,7);
  1730     0285  3007               	movlw	7
  1731     0286  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1732     0287  3001               	movlw	1
  1733     0288  120A  118A  27AA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1734     028D                     l2379:
  1735                           
  1736                           ;main_M.c: 272:             Lcd_Write_String_4bits(tiempo);
  1737     028D  305B               	movlw	(low (_tiempo| 0))& (0+255)
  1738     028E  00F8               	movwf	Lcd_Write_String_4bits@a
  1739     028F  3000               	movlw	0
  1740     0290  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1741     0291  120A  158A  2719  120A  118A  	fcall	_Lcd_Write_String_4bits
  1742     0296                     l2381:
  1743                           
  1744                           ;main_M.c: 273:             Lcd_Set_Cursor_4bits(2,7);
  1745     0296  3007               	movlw	7
  1746     0297  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1747     0298  3002               	movlw	2
  1748     0299  120A  118A  27AA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1749                           
  1750                           ;main_M.c: 274:             Lcd_Write_String_4bits(fecha);
  1751     029E  3051               	movlw	(low (_fecha| 0))& (0+255)
  1752     029F  00F8               	movwf	Lcd_Write_String_4bits@a
  1753     02A0  3000               	movlw	0
  1754     02A1  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1755     02A2  120A  158A  2719  120A  118A  	fcall	_Lcd_Write_String_4bits
  1756     02A7                     l2383:
  1757                           
  1758                           ;main_M.c: 277:         if (modo == 0){
  1759     02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1760     02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1761     02A9  0830               	movf	_modo,w
  1762     02AA  1D03               	btfss	3,2
  1763     02AB  2AAD               	goto	u2451
  1764     02AC  2AAE               	goto	u2450
  1765     02AD                     u2451:
  1766     02AD  2845               	goto	l2345
  1767     02AE                     u2450:
  1768     02AE                     l2385:
  1769                           
  1770                           ;main_M.c: 279:             SEG = leerRTC(REG_SEG);
  1771     02AE  3000               	movlw	0
  1772     02AF  120A  118A  26E9  120A  118A  	fcall	_leerRTC
  1773     02B4  1283               	bcf	3,5	;RP0=0, select bank0
  1774     02B5  1303               	bcf	3,6	;RP1=0, select bank0
  1775     02B6  00AB               	movwf	_SEG
  1776                           
  1777                           ;main_M.c: 280:             MIN = leerRTC(REG_MIN);
  1778     02B7  3001               	movlw	1
  1779     02B8  120A  118A  26E9  120A  118A  	fcall	_leerRTC
  1780     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1781     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1782     02BF  00AA               	movwf	_MIN
  1783                           
  1784                           ;main_M.c: 281:             HOR = leerRTC(REG_HOR);
  1785     02C0  3002               	movlw	2
  1786     02C1  120A  118A  26E9  120A  118A  	fcall	_leerRTC
  1787     02C6  1283               	bcf	3,5	;RP0=0, select bank0
  1788     02C7  1303               	bcf	3,6	;RP1=0, select bank0
  1789     02C8  00A9               	movwf	_HOR
  1790                           
  1791                           ;main_M.c: 282:             DIA = leerRTC(REG_DIA);
  1792     02C9  3003               	movlw	3
  1793     02CA  120A  118A  26E9  120A  118A  	fcall	_leerRTC
  1794     02CF  1283               	bcf	3,5	;RP0=0, select bank0
  1795     02D0  1303               	bcf	3,6	;RP1=0, select bank0
  1796     02D1  00A8               	movwf	_DIA
  1797                           
  1798                           ;main_M.c: 283:             MES = leerRTC(REG_MES);
  1799     02D2  3004               	movlw	4
  1800     02D3  120A  118A  26E9  120A  118A  	fcall	_leerRTC
  1801     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1802     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1803     02DA  00A7               	movwf	_MES
  1804                           
  1805                           ;main_M.c: 284:             AO = leerRTC(REG_A);
  1806     02DB  3005               	movlw	5
  1807     02DC  120A  118A  26E9  120A  118A  	fcall	_leerRTC
  1808     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1809     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1810     02E3  00A6               	movwf	_AO
  1811                           
  1812                           ;main_M.c: 286:             tiempo[7] = SEG % 10 + 48;
  1813     02E4  300A               	movlw	10
  1814     02E5  00BE               	movwf	___awmod@divisor
  1815     02E6  3000               	movlw	0
  1816     02E7  00BF               	movwf	___awmod@divisor+1
  1817     02E8  082B               	movf	_SEG,w
  1818     02E9  00CE               	movwf	??_main
  1819     02EA  01CF               	clrf	??_main+1
  1820     02EB  084E               	movf	??_main,w
  1821     02EC  00C0               	movwf	___awmod@dividend
  1822     02ED  084F               	movf	??_main+1,w
  1823     02EE  00C1               	movwf	___awmod@dividend+1
  1824     02EF  120A  158A  27A5  120A  118A  	fcall	___awmod
  1825     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1826     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1827     02F6  083E               	movf	?___awmod,w
  1828     02F7  3E30               	addlw	48
  1829     02F8  00E2               	movwf	_tiempo+7
  1830                           
  1831                           ;main_M.c: 287:             tiempo[6] = SEG / 10 + 48;
  1832     02F9  300A               	movlw	10
  1833     02FA  00F3               	movwf	___awdiv@divisor
  1834     02FB  3000               	movlw	0
  1835     02FC  00F4               	movwf	___awdiv@divisor+1
  1836     02FD  082B               	movf	_SEG,w
  1837     02FE  00CE               	movwf	??_main
  1838     02FF  01CF               	clrf	??_main+1
  1839     0300  084E               	movf	??_main,w
  1840     0301  00F5               	movwf	___awdiv@dividend
  1841     0302  084F               	movf	??_main+1,w
  1842     0303  00F6               	movwf	___awdiv@dividend+1
  1843     0304  120A  118A  2618  120A  118A  	fcall	___awdiv
  1844     0309  0873               	movf	?___awdiv,w
  1845     030A  3E30               	addlw	48
  1846     030B  1283               	bcf	3,5	;RP0=0, select bank0
  1847     030C  1303               	bcf	3,6	;RP1=0, select bank0
  1848     030D  00E1               	movwf	_tiempo+6
  1849                           
  1850                           ;main_M.c: 288:             tiempo[4] = MIN % 10 + 48;
  1851     030E  300A               	movlw	10
  1852     030F  00BE               	movwf	___awmod@divisor
  1853     0310  3000               	movlw	0
  1854     0311  00BF               	movwf	___awmod@divisor+1
  1855     0312  082A               	movf	_MIN,w
  1856     0313  00CE               	movwf	??_main
  1857     0314  01CF               	clrf	??_main+1
  1858     0315  084E               	movf	??_main,w
  1859     0316  00C0               	movwf	___awmod@dividend
  1860     0317  084F               	movf	??_main+1,w
  1861     0318  00C1               	movwf	___awmod@dividend+1
  1862     0319  120A  158A  27A5  120A  118A  	fcall	___awmod
  1863     031E  1283               	bcf	3,5	;RP0=0, select bank0
  1864     031F  1303               	bcf	3,6	;RP1=0, select bank0
  1865     0320  083E               	movf	?___awmod,w
  1866     0321  3E30               	addlw	48
  1867     0322  00DF               	movwf	_tiempo+4
  1868                           
  1869                           ;main_M.c: 289:             tiempo[3] = MIN / 10 + 48;
  1870     0323  300A               	movlw	10
  1871     0324  00F3               	movwf	___awdiv@divisor
  1872     0325  3000               	movlw	0
  1873     0326  00F4               	movwf	___awdiv@divisor+1
  1874     0327  082A               	movf	_MIN,w
  1875     0328  00CE               	movwf	??_main
  1876     0329  01CF               	clrf	??_main+1
  1877     032A  084E               	movf	??_main,w
  1878     032B  00F5               	movwf	___awdiv@dividend
  1879     032C  084F               	movf	??_main+1,w
  1880     032D  00F6               	movwf	___awdiv@dividend+1
  1881     032E  120A  118A  2618  120A  118A  	fcall	___awdiv
  1882     0333  0873               	movf	?___awdiv,w
  1883     0334  3E30               	addlw	48
  1884     0335  1283               	bcf	3,5	;RP0=0, select bank0
  1885     0336  1303               	bcf	3,6	;RP1=0, select bank0
  1886     0337  00DE               	movwf	_tiempo+3
  1887                           
  1888                           ;main_M.c: 290:             tiempo[1] = HOR % 10 + 48;
  1889     0338  300A               	movlw	10
  1890     0339  00BE               	movwf	___awmod@divisor
  1891     033A  3000               	movlw	0
  1892     033B  00BF               	movwf	___awmod@divisor+1
  1893     033C  0829               	movf	_HOR,w
  1894     033D  00CE               	movwf	??_main
  1895     033E  01CF               	clrf	??_main+1
  1896     033F  084E               	movf	??_main,w
  1897     0340  00C0               	movwf	___awmod@dividend
  1898     0341  084F               	movf	??_main+1,w
  1899     0342  00C1               	movwf	___awmod@dividend+1
  1900     0343  120A  158A  27A5  120A  118A  	fcall	___awmod
  1901     0348  1283               	bcf	3,5	;RP0=0, select bank0
  1902     0349  1303               	bcf	3,6	;RP1=0, select bank0
  1903     034A  083E               	movf	?___awmod,w
  1904     034B  3E30               	addlw	48
  1905     034C  00DC               	movwf	_tiempo+1
  1906                           
  1907                           ;main_M.c: 291:             tiempo[0] = HOR / 10 + 48;
  1908     034D  300A               	movlw	10
  1909     034E  00F3               	movwf	___awdiv@divisor
  1910     034F  3000               	movlw	0
  1911     0350  00F4               	movwf	___awdiv@divisor+1
  1912     0351  0829               	movf	_HOR,w
  1913     0352  00CE               	movwf	??_main
  1914     0353  01CF               	clrf	??_main+1
  1915     0354  084E               	movf	??_main,w
  1916     0355  00F5               	movwf	___awdiv@dividend
  1917     0356  084F               	movf	??_main+1,w
  1918     0357  00F6               	movwf	___awdiv@dividend+1
  1919     0358  120A  118A  2618  120A  118A  	fcall	___awdiv
  1920     035D  0873               	movf	?___awdiv,w
  1921     035E  3E30               	addlw	48
  1922     035F  1283               	bcf	3,5	;RP0=0, select bank0
  1923     0360  1303               	bcf	3,6	;RP1=0, select bank0
  1924     0361  00DB               	movwf	_tiempo
  1925                           
  1926                           ;main_M.c: 292:             fecha[9] = AO % 10 + 48;
  1927     0362  300A               	movlw	10
  1928     0363  00BE               	movwf	___awmod@divisor
  1929     0364  3000               	movlw	0
  1930     0365  00BF               	movwf	___awmod@divisor+1
  1931     0366  0826               	movf	_AO,w
  1932     0367  00CE               	movwf	??_main
  1933     0368  01CF               	clrf	??_main+1
  1934     0369  084E               	movf	??_main,w
  1935     036A  00C0               	movwf	___awmod@dividend
  1936     036B  084F               	movf	??_main+1,w
  1937     036C  00C1               	movwf	___awmod@dividend+1
  1938     036D  120A  158A  27A5  120A  118A  	fcall	___awmod
  1939     0372  1283               	bcf	3,5	;RP0=0, select bank0
  1940     0373  1303               	bcf	3,6	;RP1=0, select bank0
  1941     0374  083E               	movf	?___awmod,w
  1942     0375  3E30               	addlw	48
  1943     0376  00DA               	movwf	_fecha+9
  1944                           
  1945                           ;main_M.c: 293:             fecha[8] = AO / 10 + 48;
  1946     0377  300A               	movlw	10
  1947     0378  00F3               	movwf	___awdiv@divisor
  1948     0379  3000               	movlw	0
  1949     037A  00F4               	movwf	___awdiv@divisor+1
  1950     037B  0826               	movf	_AO,w
  1951     037C  00CE               	movwf	??_main
  1952     037D  01CF               	clrf	??_main+1
  1953     037E  084E               	movf	??_main,w
  1954     037F  00F5               	movwf	___awdiv@dividend
  1955     0380  084F               	movf	??_main+1,w
  1956     0381  00F6               	movwf	___awdiv@dividend+1
  1957     0382  120A  118A  2618  120A  118A  	fcall	___awdiv
  1958     0387  0873               	movf	?___awdiv,w
  1959     0388  3E30               	addlw	48
  1960     0389  1283               	bcf	3,5	;RP0=0, select bank0
  1961     038A  1303               	bcf	3,6	;RP1=0, select bank0
  1962     038B  00D9               	movwf	_fecha+8
  1963                           
  1964                           ;main_M.c: 294:             fecha[4] = MES % 10 + 48;
  1965     038C  300A               	movlw	10
  1966     038D  00BE               	movwf	___awmod@divisor
  1967     038E  3000               	movlw	0
  1968     038F  00BF               	movwf	___awmod@divisor+1
  1969     0390  0827               	movf	_MES,w
  1970     0391  00CE               	movwf	??_main
  1971     0392  01CF               	clrf	??_main+1
  1972     0393  084E               	movf	??_main,w
  1973     0394  00C0               	movwf	___awmod@dividend
  1974     0395  084F               	movf	??_main+1,w
  1975     0396  00C1               	movwf	___awmod@dividend+1
  1976     0397  120A  158A  27A5  120A  118A  	fcall	___awmod
  1977     039C  1283               	bcf	3,5	;RP0=0, select bank0
  1978     039D  1303               	bcf	3,6	;RP1=0, select bank0
  1979     039E  083E               	movf	?___awmod,w
  1980     039F  3E30               	addlw	48
  1981     03A0  00D5               	movwf	_fecha+4
  1982                           
  1983                           ;main_M.c: 295:             fecha[3] = MES / 10 + 48;
  1984     03A1  300A               	movlw	10
  1985     03A2  00F3               	movwf	___awdiv@divisor
  1986     03A3  3000               	movlw	0
  1987     03A4  00F4               	movwf	___awdiv@divisor+1
  1988     03A5  0827               	movf	_MES,w
  1989     03A6  00CE               	movwf	??_main
  1990     03A7  01CF               	clrf	??_main+1
  1991     03A8  084E               	movf	??_main,w
  1992     03A9  00F5               	movwf	___awdiv@dividend
  1993     03AA  084F               	movf	??_main+1,w
  1994     03AB  00F6               	movwf	___awdiv@dividend+1
  1995     03AC  120A  118A  2618  120A  118A  	fcall	___awdiv
  1996     03B1  0873               	movf	?___awdiv,w
  1997     03B2  3E30               	addlw	48
  1998     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1999     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  2000     03B5  00D4               	movwf	_fecha+3
  2001                           
  2002                           ;main_M.c: 296:             fecha[1] = DIA % 10 + 48;
  2003     03B6  300A               	movlw	10
  2004     03B7  00BE               	movwf	___awmod@divisor
  2005     03B8  3000               	movlw	0
  2006     03B9  00BF               	movwf	___awmod@divisor+1
  2007     03BA  0828               	movf	_DIA,w
  2008     03BB  00CE               	movwf	??_main
  2009     03BC  01CF               	clrf	??_main+1
  2010     03BD  084E               	movf	??_main,w
  2011     03BE  00C0               	movwf	___awmod@dividend
  2012     03BF  084F               	movf	??_main+1,w
  2013     03C0  00C1               	movwf	___awmod@dividend+1
  2014     03C1  120A  158A  27A5  120A  118A  	fcall	___awmod
  2015     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2016     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2017     03C8  083E               	movf	?___awmod,w
  2018     03C9  3E30               	addlw	48
  2019     03CA  00D2               	movwf	_fecha+1
  2020                           
  2021                           ;main_M.c: 297:             fecha[0] = DIA / 10 + 48;
  2022     03CB  300A               	movlw	10
  2023     03CC  00F3               	movwf	___awdiv@divisor
  2024     03CD  3000               	movlw	0
  2025     03CE  00F4               	movwf	___awdiv@divisor+1
  2026     03CF  0828               	movf	_DIA,w
  2027     03D0  00CE               	movwf	??_main
  2028     03D1  01CF               	clrf	??_main+1
  2029     03D2  084E               	movf	??_main,w
  2030     03D3  00F5               	movwf	___awdiv@dividend
  2031     03D4  084F               	movf	??_main+1,w
  2032     03D5  00F6               	movwf	___awdiv@dividend+1
  2033     03D6  120A  118A  2618  120A  118A  	fcall	___awdiv
  2034     03DB  0873               	movf	?___awdiv,w
  2035     03DC  3E30               	addlw	48
  2036     03DD  1283               	bcf	3,5	;RP0=0, select bank0
  2037     03DE  1303               	bcf	3,6	;RP1=0, select bank0
  2038     03DF  00D1               	movwf	_fecha
  2039                           
  2040                           ;main_M.c: 299:             Lcd_Set_Cursor_4bits(1,7);
  2041     03E0  3007               	movlw	7
  2042     03E1  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  2043     03E2  3001               	movlw	1
  2044     03E3  120A  118A  27AA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2045     03E8                     l2387:
  2046                           
  2047                           ;main_M.c: 300:             Lcd_Write_String_4bits(tiempo);
  2048     03E8  305B               	movlw	(low (_tiempo| 0))& (0+255)
  2049     03E9  00F8               	movwf	Lcd_Write_String_4bits@a
  2050     03EA  3000               	movlw	0
  2051     03EB  00F9               	movwf	Lcd_Write_String_4bits@a+1
  2052     03EC  120A  158A  2719  120A  118A  	fcall	_Lcd_Write_String_4bits
  2053     03F1                     l2389:
  2054                           
  2055                           ;main_M.c: 301:             Lcd_Set_Cursor_4bits(2,7);
  2056     03F1  3007               	movlw	7
  2057     03F2  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  2058     03F3  3002               	movlw	2
  2059     03F4  120A  118A  27AA  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2060                           
  2061                           ;main_M.c: 302:             Lcd_Write_String_4bits(fecha);
  2062     03F9  3051               	movlw	(low (_fecha| 0))& (0+255)
  2063     03FA  00F8               	movwf	Lcd_Write_String_4bits@a
  2064     03FB  3000               	movlw	0
  2065     03FC  00F9               	movwf	Lcd_Write_String_4bits@a+1
  2066     03FD  120A  158A  2719  120A  118A  	fcall	_Lcd_Write_String_4bits
  2067     0402  2845               	goto	l2345
  2068     0403  120A  118A  280C   	ljmp	start
  2069     0406                     __end_of_main:
  2070                           
  2071                           	psect	text1
  2072     04E7                     __ptext1:	
  2073 ;; *************** function _sprintf *****************
  2074 ;; Defined at:
  2075 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;  sp              1    wreg     PTR unsigned char 
  2078 ;;		 -> ADC1(9), 
  2079 ;;  f               1    7[BANK0 ] PTR const unsigned char 
  2080 ;;		 -> STR_4(3), STR_3(3), STR_2(3), 
  2081 ;; Auto vars:     Size  Location     Type
  2082 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  2083 ;;		 -> ADC1(9), 
  2084 ;;  tmpval          4    0        struct .
  2085 ;;  val             2   15[BANK0 ] unsigned int 
  2086 ;;  cp              2    0        PTR const unsigned char 
  2087 ;;  len             2    0        unsigned int 
  2088 ;;  c               1   19[BANK0 ] unsigned char 
  2089 ;;  prec            1   17[BANK0 ] char 
  2090 ;;  ap              1   14[BANK0 ] PTR void [1]
  2091 ;;		 -> ?_sprintf(2), 
  2092 ;;  flag            1   13[BANK0 ] unsigned char 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  2    7[BANK0 ] int 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2102 ;;      Params:         0       3       0       0       0
  2103 ;;      Locals:         0       7       0       0       0
  2104 ;;      Temps:          0       3       0       0       0
  2105 ;;      Totals:         0      13       0       0       0
  2106 ;;Total ram usage:       13 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 2
  2109 ;; This function calls:
  2110 ;;		___lwdiv
  2111 ;;		___lwmod
  2112 ;; This function is called by:
  2113 ;;		_main
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117     04E7                     _sprintf:	
  2118                           ;psect for function _sprintf
  2119                           
  2120                           
  2121                           ;incstack = 0
  2122                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2123                           ;sprintf@sp stored from wreg
  2124     04E7  1283               	bcf	3,5	;RP0=0, select bank0
  2125     04E8  1303               	bcf	3,6	;RP1=0, select bank0
  2126     04E9  00CC               	movwf	sprintf@sp
  2127     04EA                     l2277:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2130     04EA  3042               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2131     04EB  00C8               	movwf	sprintf@ap
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2134     04EC  2D95               	goto	l2319
  2135     04ED                     l2279:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2138     04ED  3025               	movlw	37
  2139     04EE  064D               	xorwf	sprintf@c,w
  2140     04EF  1903               	btfsc	3,2
  2141     04F0  2CF2               	goto	u2381
  2142     04F1  2CF3               	goto	u2380
  2143     04F2                     u2381:
  2144     04F2  2CFD               	goto	l2285
  2145     04F3                     u2380:
  2146     04F3                     l2281:
  2147                           
  2148                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2149     04F3  084C               	movf	sprintf@sp,w
  2150     04F4  0084               	movwf	4
  2151     04F5  084D               	movf	sprintf@c,w
  2152     04F6  1383               	bcf	3,7	;select IRP bank0
  2153     04F7  0080               	movwf	0
  2154     04F8                     l2283:
  2155     04F8  3001               	movlw	1
  2156     04F9  00C4               	movwf	??_sprintf
  2157     04FA  0844               	movf	??_sprintf,w
  2158     04FB  07CC               	addwf	sprintf@sp,f
  2159                           
  2160                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2161     04FC  2D95               	goto	l2319
  2162     04FD                     l2285:
  2163                           
  2164                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2165     04FD  01C7               	clrf	sprintf@flag
  2166                           
  2167                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2168     04FE  2D04               	goto	l2291
  2169     04FF                     l2287:
  2170                           
  2171                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2172     04FF  30C0               	movlw	192
  2173     0500  00C4               	movwf	??_sprintf
  2174     0501  0844               	movf	??_sprintf,w
  2175     0502  04C7               	iorwf	sprintf@flag,f
  2176                           
  2177                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2178     0503  2D1E               	goto	l2293
  2179     0504                     l2291:
  2180     0504  3001               	movlw	1
  2181     0505  07C1               	addwf	sprintf@f,f
  2182     0506  30FF               	movlw	-1
  2183     0507  0741               	addwf	sprintf@f,w
  2184     0508  0084               	movwf	4
  2185     0509  120A  158A  200A  120A  118A  	fcall	stringdir
  2186     050E  00CD               	movwf	sprintf@c
  2187     050F  00C4               	movwf	??_sprintf
  2188     0510  01C5               	clrf	??_sprintf+1
  2189                           
  2190                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2191                           ; Switch size 1, requested type "simple"
  2192                           ; Number of cases is 1, Range of values is 0 to 0
  2193                           ; switch strategies available:
  2194                           ; Name         Instructions Cycles
  2195                           ; simple_byte            4     3 (average)
  2196                           ; direct_byte           11     8 (fixed)
  2197                           ; jumptable            260     6 (fixed)
  2198                           ;	Chosen strategy is simple_byte
  2199     0511  0845               	movf	??_sprintf+1,w
  2200     0512  3A00               	xorlw	0	; case 0
  2201     0513  1903               	skipnz
  2202     0514  2D16               	goto	l2411
  2203     0515  2D95               	goto	l2319
  2204     0516                     l2411:
  2205                           
  2206                           ; Switch size 1, requested type "simple"
  2207                           ; Number of cases is 2, Range of values is 0 to 117
  2208                           ; switch strategies available:
  2209                           ; Name         Instructions Cycles
  2210                           ; simple_byte            7     4 (average)
  2211                           ; jumptable            260     6 (fixed)
  2212                           ;	Chosen strategy is simple_byte
  2213     0516  0844               	movf	??_sprintf,w
  2214     0517  3A00               	xorlw	0	; case 0
  2215     0518  1903               	skipnz
  2216     0519  2DA5               	goto	l2321
  2217     051A  3A75               	xorlw	117	; case 117
  2218     051B  1903               	skipnz
  2219     051C  2CFF               	goto	l2287
  2220     051D  2D95               	goto	l2319
  2221     051E                     l2293:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2224     051E  0848               	movf	sprintf@ap,w
  2225     051F  0084               	movwf	4
  2226     0520  1383               	bcf	3,7	;select IRP bank0
  2227     0521  0800               	movf	0,w
  2228     0522  00C9               	movwf	sprintf@val
  2229     0523  0A84               	incf	4,f
  2230     0524  0800               	movf	0,w
  2231     0525  00CA               	movwf	sprintf@val+1
  2232     0526                     l2295:
  2233     0526  3002               	movlw	2
  2234     0527  00C4               	movwf	??_sprintf
  2235     0528  0844               	movf	??_sprintf,w
  2236     0529  07C8               	addwf	sprintf@ap,f
  2237     052A                     l2297:
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2240     052A  01CD               	clrf	sprintf@c
  2241     052B  0ACD               	incf	sprintf@c,f
  2242     052C                     l2303:
  2243                           
  2244                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2245     052C  084D               	movf	sprintf@c,w
  2246     052D  00C4               	movwf	??_sprintf
  2247     052E  0744               	addwf	??_sprintf,w
  2248     052F  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2249     0530  0084               	movwf	4
  2250     0531  120A  158A  200A  120A  118A  	fcall	stringdir
  2251     0536  00C5               	movwf	??_sprintf+1
  2252     0537  120A  158A  200A  120A  118A  	fcall	stringdir
  2253     053C  00C6               	movwf	??_sprintf+2
  2254     053D  0846               	movf	??_sprintf+2,w
  2255     053E  024A               	subwf	sprintf@val+1,w
  2256     053F  1D03               	skipz
  2257     0540  2D43               	goto	u2395
  2258     0541  0845               	movf	??_sprintf+1,w
  2259     0542  0249               	subwf	sprintf@val,w
  2260     0543                     u2395:
  2261     0543  1803               	skipnc
  2262     0544  2D46               	goto	u2391
  2263     0545  2D47               	goto	u2390
  2264     0546                     u2391:
  2265     0546  2D48               	goto	l2307
  2266     0547                     u2390:
  2267     0547  2D52               	goto	l2309
  2268     0548                     l2307:
  2269     0548  3001               	movlw	1
  2270     0549  00C4               	movwf	??_sprintf
  2271     054A  0844               	movf	??_sprintf,w
  2272     054B  07CD               	addwf	sprintf@c,f
  2273     054C  3005               	movlw	5
  2274     054D  064D               	xorwf	sprintf@c,w
  2275     054E  1D03               	btfss	3,2
  2276     054F  2D51               	goto	u2401
  2277     0550  2D52               	goto	u2400
  2278     0551                     u2401:
  2279     0551  2D2C               	goto	l2303
  2280     0552                     u2400:
  2281     0552                     l2309:
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2284     0552  084D               	movf	sprintf@c,w
  2285     0553  00CB               	movwf	sprintf@prec
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2288     0554  2D8C               	goto	l2317
  2289     0555                     l2311:
  2290                           
  2291                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2292     0555  300A               	movlw	10
  2293     0556  00BD               	movwf	___lwmod@divisor
  2294     0557  3000               	movlw	0
  2295     0558  00BE               	movwf	___lwmod@divisor+1
  2296     0559  084B               	movf	sprintf@prec,w
  2297     055A  00C4               	movwf	??_sprintf
  2298     055B  0744               	addwf	??_sprintf,w
  2299     055C  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2300     055D  0084               	movwf	4
  2301     055E  120A  158A  200A  120A  118A  	fcall	stringdir
  2302     0563  00F3               	movwf	___lwdiv@divisor
  2303     0564  120A  158A  200A  120A  118A  	fcall	stringdir
  2304     0569  00F4               	movwf	___lwdiv@divisor+1
  2305     056A  084A               	movf	sprintf@val+1,w
  2306     056B  00F6               	movwf	___lwdiv@dividend+1
  2307     056C  0849               	movf	sprintf@val,w
  2308     056D  00F5               	movwf	___lwdiv@dividend
  2309     056E  120A  158A  275F  120A  118A  	fcall	___lwdiv
  2310     0573  0874               	movf	?___lwdiv+1,w
  2311     0574  1283               	bcf	3,5	;RP0=0, select bank0
  2312     0575  1303               	bcf	3,6	;RP1=0, select bank0
  2313     0576  00C0               	movwf	___lwmod@dividend+1
  2314     0577  0873               	movf	?___lwdiv,w
  2315     0578  00BF               	movwf	___lwmod@dividend
  2316     0579  120A  158A  26DD  120A  118A  	fcall	___lwmod
  2317     057E  1283               	bcf	3,5	;RP0=0, select bank0
  2318     057F  1303               	bcf	3,6	;RP1=0, select bank0
  2319     0580  083D               	movf	?___lwmod,w
  2320     0581  3E30               	addlw	48
  2321     0582  00CD               	movwf	sprintf@c
  2322     0583                     l2313:
  2323                           
  2324                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2325     0583  084C               	movf	sprintf@sp,w
  2326     0584  0084               	movwf	4
  2327     0585  084D               	movf	sprintf@c,w
  2328     0586  1383               	bcf	3,7	;select IRP bank0
  2329     0587  0080               	movwf	0
  2330     0588                     l2315:
  2331     0588  3001               	movlw	1
  2332     0589  00C4               	movwf	??_sprintf
  2333     058A  0844               	movf	??_sprintf,w
  2334     058B  07CC               	addwf	sprintf@sp,f
  2335     058C                     l2317:
  2336                           
  2337                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2338     058C  30FF               	movlw	255
  2339     058D  00C4               	movwf	??_sprintf
  2340     058E  0844               	movf	??_sprintf,w
  2341     058F  07CB               	addwf	sprintf@prec,f
  2342     0590  0A4B               	incf	sprintf@prec,w
  2343     0591  1D03               	btfss	3,2
  2344     0592  2D94               	goto	u2411
  2345     0593  2D95               	goto	u2410
  2346     0594                     u2411:
  2347     0594  2D55               	goto	l2311
  2348     0595                     u2410:
  2349     0595                     l2319:
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2352     0595  3001               	movlw	1
  2353     0596  07C1               	addwf	sprintf@f,f
  2354     0597  30FF               	movlw	-1
  2355     0598  0741               	addwf	sprintf@f,w
  2356     0599  0084               	movwf	4
  2357     059A  120A  158A  200A  120A  118A  	fcall	stringdir
  2358     059F  00CD               	movwf	sprintf@c
  2359     05A0  084D               	movf	sprintf@c,w
  2360     05A1  1D03               	btfss	3,2
  2361     05A2  2DA4               	goto	u2421
  2362     05A3  2DA5               	goto	u2420
  2363     05A4                     u2421:
  2364     05A4  2CED               	goto	l2279
  2365     05A5                     u2420:
  2366     05A5                     l2321:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2369     05A5  084C               	movf	sprintf@sp,w
  2370     05A6  0084               	movwf	4
  2371     05A7  1383               	bcf	3,7	;select IRP bank0
  2372     05A8  0180               	clrf	0
  2373     05A9                     l381:
  2374     05A9  0008               	return
  2375     05AA                     __end_of_sprintf:
  2376                           
  2377                           	psect	text2
  2378     0EDD                     __ptext2:	
  2379 ;; *************** function ___lwmod *****************
  2380 ;; Defined at:
  2381 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  divisor         2    3[BANK0 ] unsigned int 
  2384 ;;  dividend        2    5[BANK0 ] unsigned int 
  2385 ;; Auto vars:     Size  Location     Type
  2386 ;;  counter         1    9[COMMON] unsigned char 
  2387 ;; Return value:  Size  Location     Type
  2388 ;;                  2    3[BANK0 ] unsigned int 
  2389 ;; Registers used:
  2390 ;;		wreg, status,2, status,0
  2391 ;; Tracked objects:
  2392 ;;		On entry : 0/0
  2393 ;;		On exit  : 0/0
  2394 ;;		Unchanged: 0/0
  2395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2396 ;;      Params:         0       4       0       0       0
  2397 ;;      Locals:         1       0       0       0       0
  2398 ;;      Temps:          1       0       0       0       0
  2399 ;;      Totals:         2       4       0       0       0
  2400 ;;Total ram usage:        6 bytes
  2401 ;; Hardware stack levels used: 1
  2402 ;; Hardware stack levels required when called: 1
  2403 ;; This function calls:
  2404 ;;		Nothing
  2405 ;; This function is called by:
  2406 ;;		_sprintf
  2407 ;; This function uses a non-reentrant model
  2408 ;;
  2409                           
  2410     0EDD                     ___lwmod:	
  2411                           ;psect for function ___lwmod
  2412                           
  2413     0EDD                     l2221:	
  2414                           ;incstack = 0
  2415                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2416                           
  2417     0EDD  1283               	bcf	3,5	;RP0=0, select bank0
  2418     0EDE  1303               	bcf	3,6	;RP1=0, select bank0
  2419     0EDF  083D               	movf	___lwmod@divisor,w
  2420     0EE0  043E               	iorwf	___lwmod@divisor+1,w
  2421     0EE1  1903               	btfsc	3,2
  2422     0EE2  2EE4               	goto	u2321
  2423     0EE3  2EE5               	goto	u2320
  2424     0EE4                     u2321:
  2425     0EE4  2F14               	goto	l2239
  2426     0EE5                     u2320:
  2427     0EE5                     l2223:
  2428     0EE5  01F9               	clrf	___lwmod@counter
  2429     0EE6  0AF9               	incf	___lwmod@counter,f
  2430     0EE7  2EF3               	goto	l2229
  2431     0EE8                     l2225:
  2432     0EE8  3001               	movlw	1
  2433     0EE9                     u2335:
  2434     0EE9  1003               	clrc
  2435     0EEA  0DBD               	rlf	___lwmod@divisor,f
  2436     0EEB  0DBE               	rlf	___lwmod@divisor+1,f
  2437     0EEC  3EFF               	addlw	-1
  2438     0EED  1D03               	skipz
  2439     0EEE  2EE9               	goto	u2335
  2440     0EEF                     l2227:
  2441     0EEF  3001               	movlw	1
  2442     0EF0  00F8               	movwf	??___lwmod
  2443     0EF1  0878               	movf	??___lwmod,w
  2444     0EF2  07F9               	addwf	___lwmod@counter,f
  2445     0EF3                     l2229:
  2446     0EF3  1FBE               	btfss	___lwmod@divisor+1,7
  2447     0EF4  2EF6               	goto	u2341
  2448     0EF5  2EF7               	goto	u2340
  2449     0EF6                     u2341:
  2450     0EF6  2EE8               	goto	l2225
  2451     0EF7                     u2340:
  2452     0EF7                     l2231:
  2453     0EF7  083E               	movf	___lwmod@divisor+1,w
  2454     0EF8  0240               	subwf	___lwmod@dividend+1,w
  2455     0EF9  1D03               	skipz
  2456     0EFA  2EFD               	goto	u2355
  2457     0EFB  083D               	movf	___lwmod@divisor,w
  2458     0EFC  023F               	subwf	___lwmod@dividend,w
  2459     0EFD                     u2355:
  2460     0EFD  1C03               	skipc
  2461     0EFE  2F00               	goto	u2351
  2462     0EFF  2F01               	goto	u2350
  2463     0F00                     u2351:
  2464     0F00  2F07               	goto	l2235
  2465     0F01                     u2350:
  2466     0F01                     l2233:
  2467     0F01  083D               	movf	___lwmod@divisor,w
  2468     0F02  02BF               	subwf	___lwmod@dividend,f
  2469     0F03  083E               	movf	___lwmod@divisor+1,w
  2470     0F04  1C03               	skipc
  2471     0F05  03C0               	decf	___lwmod@dividend+1,f
  2472     0F06  02C0               	subwf	___lwmod@dividend+1,f
  2473     0F07                     l2235:
  2474     0F07  3001               	movlw	1
  2475     0F08                     u2365:
  2476     0F08  1003               	clrc
  2477     0F09  0CBE               	rrf	___lwmod@divisor+1,f
  2478     0F0A  0CBD               	rrf	___lwmod@divisor,f
  2479     0F0B  3EFF               	addlw	-1
  2480     0F0C  1D03               	skipz
  2481     0F0D  2F08               	goto	u2365
  2482     0F0E                     l2237:
  2483     0F0E  3001               	movlw	1
  2484     0F0F  02F9               	subwf	___lwmod@counter,f
  2485     0F10  1D03               	btfss	3,2
  2486     0F11  2F13               	goto	u2371
  2487     0F12  2F14               	goto	u2370
  2488     0F13                     u2371:
  2489     0F13  2EF7               	goto	l2231
  2490     0F14                     u2370:
  2491     0F14                     l2239:
  2492     0F14  0840               	movf	___lwmod@dividend+1,w
  2493     0F15  00BE               	movwf	?___lwmod+1
  2494     0F16  083F               	movf	___lwmod@dividend,w
  2495     0F17  00BD               	movwf	?___lwmod
  2496     0F18                     l667:
  2497     0F18  0008               	return
  2498     0F19                     __end_of___lwmod:
  2499                           
  2500                           	psect	text3
  2501     0F5F                     __ptext3:	
  2502 ;; *************** function ___lwdiv *****************
  2503 ;; Defined at:
  2504 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2505 ;; Parameters:    Size  Location     Type
  2506 ;;  divisor         2    3[COMMON] unsigned int 
  2507 ;;  dividend        2    5[COMMON] unsigned int 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  quotient        2    1[BANK0 ] unsigned int 
  2510 ;;  counter         1    0[BANK0 ] unsigned char 
  2511 ;; Return value:  Size  Location     Type
  2512 ;;                  2    3[COMMON] unsigned int 
  2513 ;; Registers used:
  2514 ;;		wreg, status,2, status,0
  2515 ;; Tracked objects:
  2516 ;;		On entry : 0/0
  2517 ;;		On exit  : 0/0
  2518 ;;		Unchanged: 0/0
  2519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2520 ;;      Params:         4       0       0       0       0
  2521 ;;      Locals:         0       3       0       0       0
  2522 ;;      Temps:          1       0       0       0       0
  2523 ;;      Totals:         5       3       0       0       0
  2524 ;;Total ram usage:        8 bytes
  2525 ;; Hardware stack levels used: 1
  2526 ;; Hardware stack levels required when called: 1
  2527 ;; This function calls:
  2528 ;;		Nothing
  2529 ;; This function is called by:
  2530 ;;		_sprintf
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534     0F5F                     ___lwdiv:	
  2535                           ;psect for function ___lwdiv
  2536                           
  2537     0F5F                     l2195:	
  2538                           ;incstack = 0
  2539                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2540                           
  2541     0F5F  1283               	bcf	3,5	;RP0=0, select bank0
  2542     0F60  1303               	bcf	3,6	;RP1=0, select bank0
  2543     0F61  01BB               	clrf	___lwdiv@quotient
  2544     0F62  01BC               	clrf	___lwdiv@quotient+1
  2545     0F63                     l2197:
  2546     0F63  0873               	movf	___lwdiv@divisor,w
  2547     0F64  0474               	iorwf	___lwdiv@divisor+1,w
  2548     0F65  1903               	btfsc	3,2
  2549     0F66  2F68               	goto	u2251
  2550     0F67  2F69               	goto	u2250
  2551     0F68                     u2251:
  2552     0F68  2FA0               	goto	l2217
  2553     0F69                     u2250:
  2554     0F69                     l2199:
  2555     0F69  01BA               	clrf	___lwdiv@counter
  2556     0F6A  0ABA               	incf	___lwdiv@counter,f
  2557     0F6B  2F77               	goto	l2205
  2558     0F6C                     l2201:
  2559     0F6C  3001               	movlw	1
  2560     0F6D                     u2265:
  2561     0F6D  1003               	clrc
  2562     0F6E  0DF3               	rlf	___lwdiv@divisor,f
  2563     0F6F  0DF4               	rlf	___lwdiv@divisor+1,f
  2564     0F70  3EFF               	addlw	-1
  2565     0F71  1D03               	skipz
  2566     0F72  2F6D               	goto	u2265
  2567     0F73                     l2203:
  2568     0F73  3001               	movlw	1
  2569     0F74  00F7               	movwf	??___lwdiv
  2570     0F75  0877               	movf	??___lwdiv,w
  2571     0F76  07BA               	addwf	___lwdiv@counter,f
  2572     0F77                     l2205:
  2573     0F77  1FF4               	btfss	___lwdiv@divisor+1,7
  2574     0F78  2F7A               	goto	u2271
  2575     0F79  2F7B               	goto	u2270
  2576     0F7A                     u2271:
  2577     0F7A  2F6C               	goto	l2201
  2578     0F7B                     u2270:
  2579     0F7B                     l2207:
  2580     0F7B  3001               	movlw	1
  2581     0F7C                     u2285:
  2582     0F7C  1003               	clrc
  2583     0F7D  0DBB               	rlf	___lwdiv@quotient,f
  2584     0F7E  0DBC               	rlf	___lwdiv@quotient+1,f
  2585     0F7F  3EFF               	addlw	-1
  2586     0F80  1D03               	skipz
  2587     0F81  2F7C               	goto	u2285
  2588     0F82  0874               	movf	___lwdiv@divisor+1,w
  2589     0F83  0276               	subwf	___lwdiv@dividend+1,w
  2590     0F84  1D03               	skipz
  2591     0F85  2F88               	goto	u2295
  2592     0F86  0873               	movf	___lwdiv@divisor,w
  2593     0F87  0275               	subwf	___lwdiv@dividend,w
  2594     0F88                     u2295:
  2595     0F88  1C03               	skipc
  2596     0F89  2F8B               	goto	u2291
  2597     0F8A  2F8C               	goto	u2290
  2598     0F8B                     u2291:
  2599     0F8B  2F93               	goto	l2213
  2600     0F8C                     u2290:
  2601     0F8C                     l2209:
  2602     0F8C  0873               	movf	___lwdiv@divisor,w
  2603     0F8D  02F5               	subwf	___lwdiv@dividend,f
  2604     0F8E  0874               	movf	___lwdiv@divisor+1,w
  2605     0F8F  1C03               	skipc
  2606     0F90  03F6               	decf	___lwdiv@dividend+1,f
  2607     0F91  02F6               	subwf	___lwdiv@dividend+1,f
  2608     0F92                     l2211:
  2609     0F92  143B               	bsf	___lwdiv@quotient,0
  2610     0F93                     l2213:
  2611     0F93  3001               	movlw	1
  2612     0F94                     u2305:
  2613     0F94  1003               	clrc
  2614     0F95  0CF4               	rrf	___lwdiv@divisor+1,f
  2615     0F96  0CF3               	rrf	___lwdiv@divisor,f
  2616     0F97  3EFF               	addlw	-1
  2617     0F98  1D03               	skipz
  2618     0F99  2F94               	goto	u2305
  2619     0F9A                     l2215:
  2620     0F9A  3001               	movlw	1
  2621     0F9B  02BA               	subwf	___lwdiv@counter,f
  2622     0F9C  1D03               	btfss	3,2
  2623     0F9D  2F9F               	goto	u2311
  2624     0F9E  2FA0               	goto	u2310
  2625     0F9F                     u2311:
  2626     0F9F  2F7B               	goto	l2207
  2627     0FA0                     u2310:
  2628     0FA0                     l2217:
  2629     0FA0  083C               	movf	___lwdiv@quotient+1,w
  2630     0FA1  00F4               	movwf	?___lwdiv+1
  2631     0FA2  083B               	movf	___lwdiv@quotient,w
  2632     0FA3  00F3               	movwf	?___lwdiv
  2633     0FA4                     l657:
  2634     0FA4  0008               	return
  2635     0FA5                     __end_of___lwdiv:
  2636                           
  2637                           	psect	text4
  2638     0E3C                     __ptext4:	
  2639 ;; *************** function _setup *****************
  2640 ;; Defined at:
  2641 ;;		line 313 in file "main_M.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2655 ;;      Params:         0       0       0       0       0
  2656 ;;      Locals:         0       0       0       0       0
  2657 ;;      Temps:          0       0       0       0       0
  2658 ;;      Totals:         0       0       0       0       0
  2659 ;;Total ram usage:        0 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 4
  2662 ;; This function calls:
  2663 ;;		_I2C_Master_Init
  2664 ;;		_Lcd_Init_4bits
  2665 ;;		_setupINTOSC
  2666 ;; This function is called by:
  2667 ;;		_main
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671     0E3C                     _setup:	
  2672                           ;psect for function _setup
  2673                           
  2674     0E3C                     l2243:	
  2675                           ;incstack = 0
  2676                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  2677                           
  2678                           
  2679                           ;main_M.c: 315:     ANSEL = 0;
  2680     0E3C  1683               	bsf	3,5	;RP0=1, select bank3
  2681     0E3D  1703               	bsf	3,6	;RP1=1, select bank3
  2682     0E3E  0188               	clrf	8	;volatile
  2683                           
  2684                           ;main_M.c: 316:     ANSELH = 0;
  2685     0E3F  0189               	clrf	9	;volatile
  2686                           
  2687                           ;main_M.c: 318:     TRISA = 0;
  2688     0E40  1683               	bsf	3,5	;RP0=1, select bank1
  2689     0E41  1303               	bcf	3,6	;RP1=0, select bank1
  2690     0E42  0185               	clrf	5	;volatile
  2691     0E43                     l2245:
  2692                           
  2693                           ;main_M.c: 319:     TRISB = 0b00000111;
  2694     0E43  3007               	movlw	7
  2695     0E44  0086               	movwf	6	;volatile
  2696     0E45                     l2247:
  2697                           
  2698                           ;main_M.c: 320:     TRISD = 0;
  2699     0E45  0188               	clrf	8	;volatile
  2700     0E46                     l2249:
  2701                           
  2702                           ;main_M.c: 322:     OPTION_REGbits.nRBPU = 0;
  2703     0E46  1381               	bcf	1,7	;volatile
  2704     0E47                     l2251:
  2705                           
  2706                           ;main_M.c: 323:     WPUBbits.WPUB0 = 1;
  2707     0E47  1415               	bsf	21,0	;volatile
  2708     0E48                     l2253:
  2709                           
  2710                           ;main_M.c: 324:     WPUBbits.WPUB1 = 1;
  2711     0E48  1495               	bsf	21,1	;volatile
  2712     0E49                     l2255:
  2713                           
  2714                           ;main_M.c: 325:     WPUBbits.WPUB2 = 1;
  2715     0E49  1515               	bsf	21,2	;volatile
  2716                           
  2717                           ;main_M.c: 326:     IOCB = 0b00000111;
  2718     0E4A  3007               	movlw	7
  2719     0E4B  0096               	movwf	22	;volatile
  2720     0E4C                     l2257:
  2721                           
  2722                           ;main_M.c: 328:     PORTA = 0;
  2723     0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  2724     0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  2725     0E4E  0185               	clrf	5	;volatile
  2726     0E4F                     l2259:
  2727                           
  2728                           ;main_M.c: 329:     PORTB = 0;
  2729     0E4F  0186               	clrf	6	;volatile
  2730     0E50                     l2261:
  2731                           
  2732                           ;main_M.c: 330:     PORTD = 0;
  2733     0E50  0188               	clrf	8	;volatile
  2734     0E51                     l2263:
  2735                           
  2736                           ;main_M.c: 332:     I2C_Master_Init(100000);
  2737     0E51  3000               	movlw	0
  2738     0E52  00C5               	movwf	I2C_Master_Init@c+3
  2739     0E53  3001               	movlw	1
  2740     0E54  00C4               	movwf	I2C_Master_Init@c+2
  2741     0E55  3086               	movlw	134
  2742     0E56  00C3               	movwf	I2C_Master_Init@c+1
  2743     0E57  30A0               	movlw	160
  2744     0E58  00C2               	movwf	I2C_Master_Init@c
  2745     0E59  120A  158A  26A3  120A  158A  	fcall	_I2C_Master_Init
  2746     0E5E                     l2265:
  2747                           
  2748                           ;main_M.c: 333:     setupINTOSC(FOSC_8MHZ);
  2749     0E5E  3007               	movlw	7
  2750     0E5F  120A  158A  258B  120A  158A  	fcall	_setupINTOSC
  2751     0E64                     l2267:
  2752                           
  2753                           ;main_M.c: 334:     Lcd_Init_4bits();
  2754     0E64  120A  118A  274D  120A  158A  	fcall	_Lcd_Init_4bits
  2755     0E69                     l2269:
  2756                           
  2757                           ;main_M.c: 336:     INTCONbits.GIE = 1;
  2758     0E69  178B               	bsf	11,7	;volatile
  2759     0E6A                     l2271:
  2760                           
  2761                           ;main_M.c: 337:     INTCONbits.PEIE = 1;
  2762     0E6A  170B               	bsf	11,6	;volatile
  2763     0E6B                     l2273:
  2764                           
  2765                           ;main_M.c: 338:     INTCONbits.RBIE = 1;
  2766     0E6B  158B               	bsf	11,3	;volatile
  2767     0E6C                     l2275:
  2768                           
  2769                           ;main_M.c: 339:     INTCONbits.RBIF = 0;
  2770     0E6C  100B               	bcf	11,0	;volatile
  2771     0E6D                     l254:
  2772     0E6D  0008               	return
  2773     0E6E                     __end_of_setup:
  2774                           
  2775                           	psect	text5
  2776     0D8B                     __ptext5:	
  2777 ;; *************** function _setupINTOSC *****************
  2778 ;; Defined at:
  2779 ;;		line 11 in file "configINTOSC.c"
  2780 ;; Parameters:    Size  Location     Type
  2781 ;;  F               1    wreg     enum E1292
  2782 ;; Auto vars:     Size  Location     Type
  2783 ;;  F               1    4[COMMON] enum E1292
  2784 ;; Return value:  Size  Location     Type
  2785 ;;                  1    wreg      void 
  2786 ;; Registers used:
  2787 ;;		wreg, status,2, status,0
  2788 ;; Tracked objects:
  2789 ;;		On entry : 0/0
  2790 ;;		On exit  : 0/0
  2791 ;;		Unchanged: 0/0
  2792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2793 ;;      Params:         0       0       0       0       0
  2794 ;;      Locals:         1       0       0       0       0
  2795 ;;      Temps:          1       0       0       0       0
  2796 ;;      Totals:         2       0       0       0       0
  2797 ;;Total ram usage:        2 bytes
  2798 ;; Hardware stack levels used: 1
  2799 ;; Hardware stack levels required when called: 1
  2800 ;; This function calls:
  2801 ;;		Nothing
  2802 ;; This function is called by:
  2803 ;;		_setup
  2804 ;; This function uses a non-reentrant model
  2805 ;;
  2806                           
  2807     0D8B                     _setupINTOSC:	
  2808                           ;psect for function _setupINTOSC
  2809                           
  2810                           
  2811                           ;incstack = 0
  2812                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  2813                           ;setupINTOSC@F stored from wreg
  2814     0D8B  00F4               	movwf	setupINTOSC@F
  2815     0D8C                     l1565:
  2816                           
  2817                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  2818     0D8C  0874               	movf	setupINTOSC@F,w
  2819     0D8D  00F3               	movwf	??_setupINTOSC
  2820     0D8E  0EF3               	swapf	??_setupINTOSC,f
  2821     0D8F  1683               	bsf	3,5	;RP0=1, select bank1
  2822     0D90  1303               	bcf	3,6	;RP1=0, select bank1
  2823     0D91  080F               	movf	15,w	;volatile
  2824     0D92  0673               	xorwf	??_setupINTOSC,w
  2825     0D93  398F               	andlw	-113
  2826     0D94  0673               	xorwf	??_setupINTOSC,w
  2827     0D95  008F               	movwf	15	;volatile
  2828     0D96                     l1567:
  2829                           
  2830                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  2831     0D96  140F               	bsf	15,0	;volatile
  2832     0D97                     l60:
  2833     0D97  0008               	return
  2834     0D98                     __end_of_setupINTOSC:
  2835                           
  2836                           	psect	text6
  2837     074D                     __ptext6:	
  2838 ;; *************** function _Lcd_Init_4bits *****************
  2839 ;; Defined at:
  2840 ;;		line 66 in file "configLCD_4bits.c"
  2841 ;; Parameters:    Size  Location     Type
  2842 ;;		None
  2843 ;; Auto vars:     Size  Location     Type
  2844 ;;		None
  2845 ;; Return value:  Size  Location     Type
  2846 ;;                  1    wreg      void 
  2847 ;; Registers used:
  2848 ;;		wreg, status,2, status,0, pclath, cstack
  2849 ;; Tracked objects:
  2850 ;;		On entry : 0/0
  2851 ;;		On exit  : 0/0
  2852 ;;		Unchanged: 0/0
  2853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2854 ;;      Params:         0       0       0       0       0
  2855 ;;      Locals:         0       0       0       0       0
  2856 ;;      Temps:          2       0       0       0       0
  2857 ;;      Totals:         2       0       0       0       0
  2858 ;;Total ram usage:        2 bytes
  2859 ;; Hardware stack levels used: 1
  2860 ;; Hardware stack levels required when called: 3
  2861 ;; This function calls:
  2862 ;;		_Lcd_Cmd_4bits
  2863 ;;		_Lcd_Port_4bits
  2864 ;; This function is called by:
  2865 ;;		_setup
  2866 ;; This function uses a non-reentrant model
  2867 ;;
  2868                           
  2869     074D                     _Lcd_Init_4bits:	
  2870                           ;psect for function _Lcd_Init_4bits
  2871                           
  2872     074D                     l1569:	
  2873                           ;incstack = 0
  2874                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  2875                           
  2876                           
  2877                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  2878     074D  3000               	movlw	0
  2879     074E  120A  158A  25EC  120A  118A  	fcall	_Lcd_Port_4bits
  2880     0753                     l1571:
  2881                           
  2882                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  2883     0753  3034               	movlw	52
  2884     0754  00F8               	movwf	??_Lcd_Init_4bits+1
  2885     0755  30F1               	movlw	241
  2886     0756  00F7               	movwf	??_Lcd_Init_4bits
  2887     0757                     u2477:
  2888     0757  0BF7               	decfsz	??_Lcd_Init_4bits,f
  2889     0758  2F57               	goto	u2477
  2890     0759  0BF8               	decfsz	??_Lcd_Init_4bits+1,f
  2891     075A  2F57               	goto	u2477
  2892     075B  2F5C               	nop2
  2893     075C                     l1573:
  2894                           
  2895                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  2896     075C  3003               	movlw	3
  2897     075D  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  2898                           
  2899                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2900     0762  300D               	movlw	13
  2901     0763  00F8               	movwf	??_Lcd_Init_4bits+1
  2902     0764  30FB               	movlw	251
  2903     0765  00F7               	movwf	??_Lcd_Init_4bits
  2904     0766                     u2487:
  2905     0766  0BF7               	decfsz	??_Lcd_Init_4bits,f
  2906     0767  2F66               	goto	u2487
  2907     0768  0BF8               	decfsz	??_Lcd_Init_4bits+1,f
  2908     0769  2F66               	goto	u2487
  2909     076A  2F6B               	nop2
  2910     076B                     l1575:
  2911                           
  2912                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  2913     076B  3003               	movlw	3
  2914     076C  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  2915     0771                     l1577:
  2916                           
  2917                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2918     0771  301D               	movlw	29
  2919     0772  00F8               	movwf	??_Lcd_Init_4bits+1
  2920     0773  3091               	movlw	145
  2921     0774  00F7               	movwf	??_Lcd_Init_4bits
  2922     0775                     u2497:
  2923     0775  0BF7               	decfsz	??_Lcd_Init_4bits,f
  2924     0776  2F75               	goto	u2497
  2925     0777  0BF8               	decfsz	??_Lcd_Init_4bits+1,f
  2926     0778  2F75               	goto	u2497
  2927                           
  2928                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  2929     0779  3003               	movlw	3
  2930     077A  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  2931                           
  2932                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  2933     077F  3002               	movlw	2
  2934     0780  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  2935                           
  2936                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  2937     0785  3002               	movlw	2
  2938     0786  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  2939                           
  2940                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  2941     078B  3008               	movlw	8
  2942     078C  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  2943                           
  2944                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  2945     0791  3000               	movlw	0
  2946     0792  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  2947                           
  2948                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  2949     0797  300C               	movlw	12
  2950     0798  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  2951                           
  2952                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  2953     079D  3000               	movlw	0
  2954     079E  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  2955                           
  2956                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  2957     07A3  3006               	movlw	6
  2958     07A4  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  2959     07A9                     l90:
  2960     07A9  0008               	return
  2961     07AA                     __end_of_Lcd_Init_4bits:
  2962                           
  2963                           	psect	text7
  2964     0EA3                     __ptext7:	
  2965 ;; *************** function _I2C_Master_Init *****************
  2966 ;; Defined at:
  2967 ;;		line 13 in file "configI2C.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;  c               4    8[BANK0 ] const unsigned long 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;		None
  2972 ;; Return value:  Size  Location     Type
  2973 ;;                  1    wreg      void 
  2974 ;; Registers used:
  2975 ;;		wreg, status,2, status,0, pclath, cstack
  2976 ;; Tracked objects:
  2977 ;;		On entry : 0/0
  2978 ;;		On exit  : 0/0
  2979 ;;		Unchanged: 0/0
  2980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2981 ;;      Params:         0       4       0       0       0
  2982 ;;      Locals:         0       0       0       0       0
  2983 ;;      Temps:          0       4       0       0       0
  2984 ;;      Totals:         0       8       0       0       0
  2985 ;;Total ram usage:        8 bytes
  2986 ;; Hardware stack levels used: 1
  2987 ;; Hardware stack levels required when called: 2
  2988 ;; This function calls:
  2989 ;;		___lldiv
  2990 ;; This function is called by:
  2991 ;;		_setup
  2992 ;; This function uses a non-reentrant model
  2993 ;;
  2994                           
  2995     0EA3                     _I2C_Master_Init:	
  2996                           ;psect for function _I2C_Master_Init
  2997                           
  2998     0EA3                     l2069:	
  2999                           ;incstack = 0
  3000                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3001                           
  3002                           
  3003                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
  3004     0EA3  3028               	movlw	40
  3005     0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  3006     0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  3007     0EA6  0094               	movwf	20	;volatile
  3008     0EA7                     l2071:
  3009                           
  3010                           ;configI2C.c: 16:     SSPCON2 = 0;
  3011     0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  3012     0EA8  1303               	bcf	3,6	;RP1=0, select bank1
  3013     0EA9  0191               	clrf	17	;volatile
  3014     0EAA                     l2073:
  3015                           
  3016                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
  3017     0EAA  1283               	bcf	3,5	;RP0=0, select bank0
  3018     0EAB  1303               	bcf	3,6	;RP1=0, select bank0
  3019     0EAC  0842               	movf	I2C_Master_Init@c,w
  3020     0EAD  00C6               	movwf	??_I2C_Master_Init
  3021     0EAE  0843               	movf	I2C_Master_Init@c+1,w
  3022     0EAF  00C7               	movwf	??_I2C_Master_Init+1
  3023     0EB0  0844               	movf	I2C_Master_Init@c+2,w
  3024     0EB1  00C8               	movwf	??_I2C_Master_Init+2
  3025     0EB2  0845               	movf	I2C_Master_Init@c+3,w
  3026     0EB3  00C9               	movwf	??_I2C_Master_Init+3
  3027     0EB4  3002               	movlw	2
  3028     0EB5                     u2045:
  3029     0EB5  1003               	clrc
  3030     0EB6  0DC6               	rlf	??_I2C_Master_Init,f
  3031     0EB7  0DC7               	rlf	??_I2C_Master_Init+1,f
  3032     0EB8  0DC8               	rlf	??_I2C_Master_Init+2,f
  3033     0EB9  0DC9               	rlf	??_I2C_Master_Init+3,f
  3034     0EBA                     u2040:
  3035     0EBA  3EFF               	addlw	-1
  3036     0EBB  1D03               	skipz
  3037     0EBC  2EB5               	goto	u2045
  3038     0EBD  0849               	movf	??_I2C_Master_Init+3,w
  3039     0EBE  00BD               	movwf	___lldiv@divisor+3
  3040     0EBF  0848               	movf	??_I2C_Master_Init+2,w
  3041     0EC0  00BC               	movwf	___lldiv@divisor+2
  3042     0EC1  0847               	movf	??_I2C_Master_Init+1,w
  3043     0EC2  00BB               	movwf	___lldiv@divisor+1
  3044     0EC3  0846               	movf	??_I2C_Master_Init,w
  3045     0EC4  00BA               	movwf	___lldiv@divisor
  3046     0EC5  3000               	movlw	0
  3047     0EC6  00C1               	movwf	___lldiv@dividend+3
  3048     0EC7  307A               	movlw	122
  3049     0EC8  00C0               	movwf	___lldiv@dividend+2
  3050     0EC9  3012               	movlw	18
  3051     0ECA  00BF               	movwf	___lldiv@dividend+1
  3052     0ECB  3000               	movlw	0
  3053     0ECC  00BE               	movwf	___lldiv@dividend
  3054     0ECD  120A  118A  2681  120A  158A  	fcall	___lldiv
  3055     0ED2  1283               	bcf	3,5	;RP0=0, select bank0
  3056     0ED3  1303               	bcf	3,6	;RP1=0, select bank0
  3057     0ED4  083A               	movf	?___lldiv,w
  3058     0ED5  3EFF               	addlw	255
  3059     0ED6  1683               	bsf	3,5	;RP0=1, select bank1
  3060     0ED7  1303               	bcf	3,6	;RP1=0, select bank1
  3061     0ED8  0093               	movwf	19	;volatile
  3062     0ED9                     l2075:
  3063                           
  3064                           ;configI2C.c: 18:     SSPSTAT = 0;
  3065     0ED9  0194               	clrf	20	;volatile
  3066     0EDA                     l2077:
  3067                           
  3068                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
  3069     0EDA  1587               	bsf	7,3	;volatile
  3070     0EDB                     l2079:
  3071                           
  3072                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
  3073     0EDB  1607               	bsf	7,4	;volatile
  3074     0EDC                     l29:
  3075     0EDC  0008               	return
  3076     0EDD                     __end_of_I2C_Master_Init:
  3077                           
  3078                           	psect	text8
  3079     0681                     __ptext8:	
  3080 ;; *************** function ___lldiv *****************
  3081 ;; Defined at:
  3082 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  divisor         4    0[BANK0 ] unsigned long 
  3085 ;;  dividend        4    4[BANK0 ] unsigned long 
  3086 ;; Auto vars:     Size  Location     Type
  3087 ;;  quotient        4    4[COMMON] unsigned long 
  3088 ;;  counter         1    8[COMMON] unsigned char 
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  4    0[BANK0 ] unsigned long 
  3091 ;; Registers used:
  3092 ;;		wreg, status,2, status,0
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         0       8       0       0       0
  3099 ;;      Locals:         5       0       0       0       0
  3100 ;;      Temps:          1       0       0       0       0
  3101 ;;      Totals:         6       8       0       0       0
  3102 ;;Total ram usage:       14 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 1
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_I2C_Master_Init
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112     0681                     ___lldiv:	
  3113                           ;psect for function ___lldiv
  3114                           
  3115     0681                     l2045:	
  3116                           ;incstack = 0
  3117                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3118                           
  3119     0681  3000               	movlw	0
  3120     0682  00F7               	movwf	___lldiv@quotient+3
  3121     0683  3000               	movlw	0
  3122     0684  00F6               	movwf	___lldiv@quotient+2
  3123     0685  3000               	movlw	0
  3124     0686  00F5               	movwf	___lldiv@quotient+1
  3125     0687  3000               	movlw	0
  3126     0688  00F4               	movwf	___lldiv@quotient
  3127     0689  1283               	bcf	3,5	;RP0=0, select bank0
  3128     068A  1303               	bcf	3,6	;RP1=0, select bank0
  3129     068B  083D               	movf	___lldiv@divisor+3,w
  3130     068C  043C               	iorwf	___lldiv@divisor+2,w
  3131     068D  043B               	iorwf	___lldiv@divisor+1,w
  3132     068E  043A               	iorwf	___lldiv@divisor,w
  3133     068F  1903               	skipnz
  3134     0690  2E92               	goto	u1971
  3135     0691  2E93               	goto	u1970
  3136     0692                     u1971:
  3137     0692  2EE0               	goto	l2065
  3138     0693                     u1970:
  3139     0693                     l2047:
  3140     0693  01F8               	clrf	___lldiv@counter
  3141     0694  0AF8               	incf	___lldiv@counter,f
  3142     0695  2EA3               	goto	l2051
  3143     0696                     l2049:
  3144     0696  3001               	movlw	1
  3145     0697  00F3               	movwf	??___lldiv
  3146     0698                     u1985:
  3147     0698  1003               	clrc
  3148     0699  0DBA               	rlf	___lldiv@divisor,f
  3149     069A  0DBB               	rlf	___lldiv@divisor+1,f
  3150     069B  0DBC               	rlf	___lldiv@divisor+2,f
  3151     069C  0DBD               	rlf	___lldiv@divisor+3,f
  3152     069D  0BF3               	decfsz	??___lldiv,f
  3153     069E  2E98               	goto	u1985
  3154     069F  3001               	movlw	1
  3155     06A0  00F3               	movwf	??___lldiv
  3156     06A1  0873               	movf	??___lldiv,w
  3157     06A2  07F8               	addwf	___lldiv@counter,f
  3158     06A3                     l2051:
  3159     06A3  1FBD               	btfss	___lldiv@divisor+3,7
  3160     06A4  2EA6               	goto	u1991
  3161     06A5  2EA7               	goto	u1990
  3162     06A6                     u1991:
  3163     06A6  2E96               	goto	l2049
  3164     06A7                     u1990:
  3165     06A7                     l2053:
  3166     06A7  3001               	movlw	1
  3167     06A8  00F3               	movwf	??___lldiv
  3168     06A9                     u2005:
  3169     06A9  1003               	clrc
  3170     06AA  0DF4               	rlf	___lldiv@quotient,f
  3171     06AB  0DF5               	rlf	___lldiv@quotient+1,f
  3172     06AC  0DF6               	rlf	___lldiv@quotient+2,f
  3173     06AD  0DF7               	rlf	___lldiv@quotient+3,f
  3174     06AE  0BF3               	decfsz	??___lldiv,f
  3175     06AF  2EA9               	goto	u2005
  3176     06B0                     l2055:
  3177     06B0  083D               	movf	___lldiv@divisor+3,w
  3178     06B1  0241               	subwf	___lldiv@dividend+3,w
  3179     06B2  1D03               	skipz
  3180     06B3  2EBE               	goto	u2015
  3181     06B4  083C               	movf	___lldiv@divisor+2,w
  3182     06B5  0240               	subwf	___lldiv@dividend+2,w
  3183     06B6  1D03               	skipz
  3184     06B7  2EBE               	goto	u2015
  3185     06B8  083B               	movf	___lldiv@divisor+1,w
  3186     06B9  023F               	subwf	___lldiv@dividend+1,w
  3187     06BA  1D03               	skipz
  3188     06BB  2EBE               	goto	u2015
  3189     06BC  083A               	movf	___lldiv@divisor,w
  3190     06BD  023E               	subwf	___lldiv@dividend,w
  3191     06BE                     u2015:
  3192     06BE  1C03               	skipc
  3193     06BF  2EC1               	goto	u2011
  3194     06C0  2EC2               	goto	u2010
  3195     06C1                     u2011:
  3196     06C1  2ED1               	goto	l2061
  3197     06C2                     u2010:
  3198     06C2                     l2057:
  3199     06C2  083A               	movf	___lldiv@divisor,w
  3200     06C3  02BE               	subwf	___lldiv@dividend,f
  3201     06C4  083B               	movf	___lldiv@divisor+1,w
  3202     06C5  1C03               	skipc
  3203     06C6  0F3B               	incfsz	___lldiv@divisor+1,w
  3204     06C7  02BF               	subwf	___lldiv@dividend+1,f
  3205     06C8  083C               	movf	___lldiv@divisor+2,w
  3206     06C9  1C03               	skipc
  3207     06CA  0F3C               	incfsz	___lldiv@divisor+2,w
  3208     06CB  02C0               	subwf	___lldiv@dividend+2,f
  3209     06CC  083D               	movf	___lldiv@divisor+3,w
  3210     06CD  1C03               	skipc
  3211     06CE  0F3D               	incfsz	___lldiv@divisor+3,w
  3212     06CF  02C1               	subwf	___lldiv@dividend+3,f
  3213     06D0                     l2059:
  3214     06D0  1474               	bsf	___lldiv@quotient,0
  3215     06D1                     l2061:
  3216     06D1  3001               	movlw	1
  3217     06D2                     u2025:
  3218     06D2  1003               	clrc
  3219     06D3  0CBD               	rrf	___lldiv@divisor+3,f
  3220     06D4  0CBC               	rrf	___lldiv@divisor+2,f
  3221     06D5  0CBB               	rrf	___lldiv@divisor+1,f
  3222     06D6  0CBA               	rrf	___lldiv@divisor,f
  3223     06D7  3EFF               	addlw	-1
  3224     06D8  1D03               	skipz
  3225     06D9  2ED2               	goto	u2025
  3226     06DA                     l2063:
  3227     06DA  3001               	movlw	1
  3228     06DB  02F8               	subwf	___lldiv@counter,f
  3229     06DC  1D03               	btfss	3,2
  3230     06DD  2EDF               	goto	u2031
  3231     06DE  2EE0               	goto	u2030
  3232     06DF                     u2031:
  3233     06DF  2EA7               	goto	l2053
  3234     06E0                     u2030:
  3235     06E0                     l2065:
  3236     06E0  0877               	movf	___lldiv@quotient+3,w
  3237     06E1  00BD               	movwf	?___lldiv+3
  3238     06E2  0876               	movf	___lldiv@quotient+2,w
  3239     06E3  00BC               	movwf	?___lldiv+2
  3240     06E4  0875               	movf	___lldiv@quotient+1,w
  3241     06E5  00BB               	movwf	?___lldiv+1
  3242     06E6  0874               	movf	___lldiv@quotient,w
  3243     06E7  00BA               	movwf	?___lldiv
  3244     06E8                     l421:
  3245     06E8  0008               	return
  3246     06E9                     __end_of___lldiv:
  3247                           
  3248                           	psect	text9
  3249     05AA                     __ptext9:	
  3250 ;; *************** function _modifRTC *****************
  3251 ;; Defined at:
  3252 ;;		line 31 in file "DS3231.c"
  3253 ;; Parameters:    Size  Location     Type
  3254 ;;  R               1    wreg     enum E1292
  3255 ;;  D               2   10[BANK0 ] int 
  3256 ;; Auto vars:     Size  Location     Type
  3257 ;;  R               1    9[COMMON] enum E1292
  3258 ;; Return value:  Size  Location     Type
  3259 ;;                  1    wreg      void 
  3260 ;; Registers used:
  3261 ;;		wreg, status,2, status,0, pclath, cstack
  3262 ;; Tracked objects:
  3263 ;;		On entry : 0/0
  3264 ;;		On exit  : 0/0
  3265 ;;		Unchanged: 0/0
  3266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3267 ;;      Params:         0       2       0       0       0
  3268 ;;      Locals:         1       0       0       0       0
  3269 ;;      Temps:          0       2       0       0       0
  3270 ;;      Totals:         1       4       0       0       0
  3271 ;;Total ram usage:        5 bytes
  3272 ;; Hardware stack levels used: 1
  3273 ;; Hardware stack levels required when called: 3
  3274 ;; This function calls:
  3275 ;;		_I2C_Master_Start
  3276 ;;		_I2C_Master_Stop
  3277 ;;		_I2C_Master_Write
  3278 ;;		___awdiv
  3279 ;;		___awmod
  3280 ;; This function is called by:
  3281 ;;		_main
  3282 ;; This function uses a non-reentrant model
  3283 ;;
  3284                           
  3285     05AA                     _modifRTC:	
  3286                           ;psect for function _modifRTC
  3287                           
  3288                           
  3289                           ;incstack = 0
  3290                           ; Regs used in _modifRTC: [wreg+status,2+status,0+pclath+cstack]
  3291                           ;modifRTC@R stored from wreg
  3292     05AA  00F9               	movwf	modifRTC@R
  3293     05AB                     l2329:
  3294                           
  3295                           ;DS3231.c: 33:     D = ((D / 10) << 4) + (D % 10);
  3296     05AB  300A               	movlw	10
  3297     05AC  00F3               	movwf	___awdiv@divisor
  3298     05AD  3000               	movlw	0
  3299     05AE  00F4               	movwf	___awdiv@divisor+1
  3300     05AF  1283               	bcf	3,5	;RP0=0, select bank0
  3301     05B0  1303               	bcf	3,6	;RP1=0, select bank0
  3302     05B1  0845               	movf	modifRTC@D+1,w
  3303     05B2  00F6               	movwf	___awdiv@dividend+1
  3304     05B3  0844               	movf	modifRTC@D,w
  3305     05B4  00F5               	movwf	___awdiv@dividend
  3306     05B5  120A  118A  2618  120A  118A  	fcall	___awdiv
  3307     05BA  0873               	movf	?___awdiv,w
  3308     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  3309     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  3310     05BD  00C6               	movwf	??_modifRTC
  3311     05BE  0874               	movf	?___awdiv+1,w
  3312     05BF  00C7               	movwf	??_modifRTC+1
  3313     05C0  0EC6               	swapf	??_modifRTC,f
  3314     05C1  0EC7               	swapf	??_modifRTC+1,f
  3315     05C2  30F0               	movlw	240
  3316     05C3  05C7               	andwf	??_modifRTC+1,f
  3317     05C4  0846               	movf	??_modifRTC,w
  3318     05C5  390F               	andlw	15
  3319     05C6  04C7               	iorwf	??_modifRTC+1,f
  3320     05C7  30F0               	movlw	240
  3321     05C8  05C6               	andwf	??_modifRTC,f
  3322     05C9  300A               	movlw	10
  3323     05CA  00BE               	movwf	___awmod@divisor
  3324     05CB  3000               	movlw	0
  3325     05CC  00BF               	movwf	___awmod@divisor+1
  3326     05CD  0845               	movf	modifRTC@D+1,w
  3327     05CE  00C1               	movwf	___awmod@dividend+1
  3328     05CF  0844               	movf	modifRTC@D,w
  3329     05D0  00C0               	movwf	___awmod@dividend
  3330     05D1  120A  158A  27A5  120A  118A  	fcall	___awmod
  3331     05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3332     05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3333     05D8  083E               	movf	?___awmod,w
  3334     05D9  0746               	addwf	??_modifRTC,w
  3335     05DA  00C4               	movwf	modifRTC@D
  3336     05DB  083F               	movf	?___awmod+1,w
  3337     05DC  1803               	skipnc
  3338     05DD  0A3F               	incf	?___awmod+1,w
  3339     05DE  0747               	addwf	??_modifRTC+1,w
  3340     05DF  00C5               	movwf	modifRTC@D+1
  3341                           
  3342                           ;DS3231.c: 35:     I2C_Master_Start();
  3343     05E0  120A  158A  255F  120A  118A  	fcall	_I2C_Master_Start
  3344                           
  3345                           ;DS3231.c: 36:     I2C_Master_Write(0xD0);
  3346     05E5  30D0               	movlw	208
  3347     05E6  00F3               	movwf	I2C_Master_Write@d
  3348     05E7  3000               	movlw	0
  3349     05E8  00F4               	movwf	I2C_Master_Write@d+1
  3350     05E9  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  3351                           
  3352                           ;DS3231.c: 37:     I2C_Master_Write(R);
  3353     05EE  0879               	movf	modifRTC@R,w
  3354     05EF  1283               	bcf	3,5	;RP0=0, select bank0
  3355     05F0  1303               	bcf	3,6	;RP1=0, select bank0
  3356     05F1  00C6               	movwf	??_modifRTC
  3357     05F2  01C7               	clrf	??_modifRTC+1
  3358     05F3  0846               	movf	??_modifRTC,w
  3359     05F4  00F3               	movwf	I2C_Master_Write@d
  3360     05F5  0847               	movf	??_modifRTC+1,w
  3361     05F6  00F4               	movwf	I2C_Master_Write@d+1
  3362     05F7  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  3363                           
  3364                           ;DS3231.c: 38:     I2C_Master_Write(D);
  3365     05FC  1283               	bcf	3,5	;RP0=0, select bank0
  3366     05FD  1303               	bcf	3,6	;RP1=0, select bank0
  3367     05FE  0845               	movf	modifRTC@D+1,w
  3368     05FF  00F4               	movwf	I2C_Master_Write@d+1
  3369     0600  0844               	movf	modifRTC@D,w
  3370     0601  00F3               	movwf	I2C_Master_Write@d
  3371     0602  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  3372                           
  3373                           ;DS3231.c: 39:     I2C_Master_Stop();
  3374     0607  120A  158A  2568  120A  118A  	fcall	_I2C_Master_Stop
  3375     060C                     l2331:
  3376                           
  3377                           ;DS3231.c: 40:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3378     060C  301A               	movlw	26
  3379     060D  1283               	bcf	3,5	;RP0=0, select bank0
  3380     060E  1303               	bcf	3,6	;RP1=0, select bank0
  3381     060F  00C7               	movwf	??_modifRTC+1
  3382     0610  30F7               	movlw	247
  3383     0611  00C6               	movwf	??_modifRTC
  3384     0612                     u2507:
  3385     0612  0BC6               	decfsz	??_modifRTC,f
  3386     0613  2E12               	goto	u2507
  3387     0614  0BC7               	decfsz	??_modifRTC+1,f
  3388     0615  2E12               	goto	u2507
  3389     0616  2E17               	nop2
  3390     0617                     l274:
  3391     0617  0008               	return
  3392     0618                     __end_of_modifRTC:
  3393                           
  3394                           	psect	text10
  3395     0FA5                     __ptext10:	
  3396 ;; *************** function ___awmod *****************
  3397 ;; Defined at:
  3398 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;  divisor         2    4[BANK0 ] int 
  3401 ;;  dividend        2    6[BANK0 ] int 
  3402 ;; Auto vars:     Size  Location     Type
  3403 ;;  sign            1    9[BANK0 ] unsigned char 
  3404 ;;  counter         1    8[BANK0 ] unsigned char 
  3405 ;; Return value:  Size  Location     Type
  3406 ;;                  2    4[BANK0 ] int 
  3407 ;; Registers used:
  3408 ;;		wreg, status,2, status,0
  3409 ;; Tracked objects:
  3410 ;;		On entry : 0/0
  3411 ;;		On exit  : 0/0
  3412 ;;		Unchanged: 0/0
  3413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3414 ;;      Params:         0       4       0       0       0
  3415 ;;      Locals:         0       2       0       0       0
  3416 ;;      Temps:          1       0       0       0       0
  3417 ;;      Totals:         1       6       0       0       0
  3418 ;;Total ram usage:        7 bytes
  3419 ;; Hardware stack levels used: 1
  3420 ;; Hardware stack levels required when called: 1
  3421 ;; This function calls:
  3422 ;;		Nothing
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;;		_modifRTC
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429     0FA5                     ___awmod:	
  3430                           ;psect for function ___awmod
  3431                           
  3432     0FA5                     l2157:	
  3433                           ;incstack = 0
  3434                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3435                           
  3436     0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  3437     0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  3438     0FA7  01C3               	clrf	___awmod@sign
  3439     0FA8                     l2159:
  3440     0FA8  1FC1               	btfss	___awmod@dividend+1,7
  3441     0FA9  2FAB               	goto	u2161
  3442     0FAA  2FAC               	goto	u2160
  3443     0FAB                     u2161:
  3444     0FAB  2FB3               	goto	l2165
  3445     0FAC                     u2160:
  3446     0FAC                     l2161:
  3447     0FAC  09C0               	comf	___awmod@dividend,f
  3448     0FAD  09C1               	comf	___awmod@dividend+1,f
  3449     0FAE  0AC0               	incf	___awmod@dividend,f
  3450     0FAF  1903               	skipnz
  3451     0FB0  0AC1               	incf	___awmod@dividend+1,f
  3452     0FB1                     l2163:
  3453     0FB1  01C3               	clrf	___awmod@sign
  3454     0FB2  0AC3               	incf	___awmod@sign,f
  3455     0FB3                     l2165:
  3456     0FB3  1FBF               	btfss	___awmod@divisor+1,7
  3457     0FB4  2FB6               	goto	u2171
  3458     0FB5  2FB7               	goto	u2170
  3459     0FB6                     u2171:
  3460     0FB6  2FBC               	goto	l2169
  3461     0FB7                     u2170:
  3462     0FB7                     l2167:
  3463     0FB7  09BE               	comf	___awmod@divisor,f
  3464     0FB8  09BF               	comf	___awmod@divisor+1,f
  3465     0FB9  0ABE               	incf	___awmod@divisor,f
  3466     0FBA  1903               	skipnz
  3467     0FBB  0ABF               	incf	___awmod@divisor+1,f
  3468     0FBC                     l2169:
  3469     0FBC  083E               	movf	___awmod@divisor,w
  3470     0FBD  043F               	iorwf	___awmod@divisor+1,w
  3471     0FBE  1903               	btfsc	3,2
  3472     0FBF  2FC1               	goto	u2181
  3473     0FC0  2FC2               	goto	u2180
  3474     0FC1                     u2181:
  3475     0FC1  2FF1               	goto	l2187
  3476     0FC2                     u2180:
  3477     0FC2                     l2171:
  3478     0FC2  01C2               	clrf	___awmod@counter
  3479     0FC3  0AC2               	incf	___awmod@counter,f
  3480     0FC4  2FD0               	goto	l2177
  3481     0FC5                     l2173:
  3482     0FC5  3001               	movlw	1
  3483     0FC6                     u2195:
  3484     0FC6  1003               	clrc
  3485     0FC7  0DBE               	rlf	___awmod@divisor,f
  3486     0FC8  0DBF               	rlf	___awmod@divisor+1,f
  3487     0FC9  3EFF               	addlw	-1
  3488     0FCA  1D03               	skipz
  3489     0FCB  2FC6               	goto	u2195
  3490     0FCC                     l2175:
  3491     0FCC  3001               	movlw	1
  3492     0FCD  00F8               	movwf	??___awmod
  3493     0FCE  0878               	movf	??___awmod,w
  3494     0FCF  07C2               	addwf	___awmod@counter,f
  3495     0FD0                     l2177:
  3496     0FD0  1FBF               	btfss	___awmod@divisor+1,7
  3497     0FD1  2FD3               	goto	u2201
  3498     0FD2  2FD4               	goto	u2200
  3499     0FD3                     u2201:
  3500     0FD3  2FC5               	goto	l2173
  3501     0FD4                     u2200:
  3502     0FD4                     l2179:
  3503     0FD4  083F               	movf	___awmod@divisor+1,w
  3504     0FD5  0241               	subwf	___awmod@dividend+1,w
  3505     0FD6  1D03               	skipz
  3506     0FD7  2FDA               	goto	u2215
  3507     0FD8  083E               	movf	___awmod@divisor,w
  3508     0FD9  0240               	subwf	___awmod@dividend,w
  3509     0FDA                     u2215:
  3510     0FDA  1C03               	skipc
  3511     0FDB  2FDD               	goto	u2211
  3512     0FDC  2FDE               	goto	u2210
  3513     0FDD                     u2211:
  3514     0FDD  2FE4               	goto	l2183
  3515     0FDE                     u2210:
  3516     0FDE                     l2181:
  3517     0FDE  083E               	movf	___awmod@divisor,w
  3518     0FDF  02C0               	subwf	___awmod@dividend,f
  3519     0FE0  083F               	movf	___awmod@divisor+1,w
  3520     0FE1  1C03               	skipc
  3521     0FE2  03C1               	decf	___awmod@dividend+1,f
  3522     0FE3  02C1               	subwf	___awmod@dividend+1,f
  3523     0FE4                     l2183:
  3524     0FE4  3001               	movlw	1
  3525     0FE5                     u2225:
  3526     0FE5  1003               	clrc
  3527     0FE6  0CBF               	rrf	___awmod@divisor+1,f
  3528     0FE7  0CBE               	rrf	___awmod@divisor,f
  3529     0FE8  3EFF               	addlw	-1
  3530     0FE9  1D03               	skipz
  3531     0FEA  2FE5               	goto	u2225
  3532     0FEB                     l2185:
  3533     0FEB  3001               	movlw	1
  3534     0FEC  02C2               	subwf	___awmod@counter,f
  3535     0FED  1D03               	btfss	3,2
  3536     0FEE  2FF0               	goto	u2231
  3537     0FEF  2FF1               	goto	u2230
  3538     0FF0                     u2231:
  3539     0FF0  2FD4               	goto	l2179
  3540     0FF1                     u2230:
  3541     0FF1                     l2187:
  3542     0FF1  0843               	movf	___awmod@sign,w
  3543     0FF2  1903               	btfsc	3,2
  3544     0FF3  2FF5               	goto	u2241
  3545     0FF4  2FF6               	goto	u2240
  3546     0FF5                     u2241:
  3547     0FF5  2FFB               	goto	l2191
  3548     0FF6                     u2240:
  3549     0FF6                     l2189:
  3550     0FF6  09C0               	comf	___awmod@dividend,f
  3551     0FF7  09C1               	comf	___awmod@dividend+1,f
  3552     0FF8  0AC0               	incf	___awmod@dividend,f
  3553     0FF9  1903               	skipnz
  3554     0FFA  0AC1               	incf	___awmod@dividend+1,f
  3555     0FFB                     l2191:
  3556     0FFB  0841               	movf	___awmod@dividend+1,w
  3557     0FFC  00BF               	movwf	?___awmod+1
  3558     0FFD  0840               	movf	___awmod@dividend,w
  3559     0FFE  00BE               	movwf	?___awmod
  3560     0FFF                     l551:
  3561     0FFF  0008               	return
  3562     1000                     __end_of___awmod:
  3563                           
  3564                           	psect	text11
  3565     0618                     __ptext11:	
  3566 ;; *************** function ___awdiv *****************
  3567 ;; Defined at:
  3568 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  divisor         2    3[COMMON] int 
  3571 ;;  dividend        2    5[COMMON] int 
  3572 ;; Auto vars:     Size  Location     Type
  3573 ;;  quotient        2    2[BANK0 ] int 
  3574 ;;  sign            1    1[BANK0 ] unsigned char 
  3575 ;;  counter         1    0[BANK0 ] unsigned char 
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  2    3[COMMON] int 
  3578 ;; Registers used:
  3579 ;;		wreg, status,2, status,0
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3585 ;;      Params:         4       0       0       0       0
  3586 ;;      Locals:         0       4       0       0       0
  3587 ;;      Temps:          1       0       0       0       0
  3588 ;;      Totals:         5       4       0       0       0
  3589 ;;Total ram usage:        9 bytes
  3590 ;; Hardware stack levels used: 1
  3591 ;; Hardware stack levels required when called: 1
  3592 ;; This function calls:
  3593 ;;		Nothing
  3594 ;; This function is called by:
  3595 ;;		_main
  3596 ;;		_modifRTC
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600     0618                     ___awdiv:	
  3601                           ;psect for function ___awdiv
  3602                           
  3603     0618                     l2113:	
  3604                           ;incstack = 0
  3605                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3606                           
  3607     0618  1283               	bcf	3,5	;RP0=0, select bank0
  3608     0619  1303               	bcf	3,6	;RP1=0, select bank0
  3609     061A  01BB               	clrf	___awdiv@sign
  3610     061B                     l2115:
  3611     061B  1FF4               	btfss	___awdiv@divisor+1,7
  3612     061C  2E1E               	goto	u2061
  3613     061D  2E1F               	goto	u2060
  3614     061E                     u2061:
  3615     061E  2E26               	goto	l2121
  3616     061F                     u2060:
  3617     061F                     l2117:
  3618     061F  09F3               	comf	___awdiv@divisor,f
  3619     0620  09F4               	comf	___awdiv@divisor+1,f
  3620     0621  0AF3               	incf	___awdiv@divisor,f
  3621     0622  1903               	skipnz
  3622     0623  0AF4               	incf	___awdiv@divisor+1,f
  3623     0624                     l2119:
  3624     0624  01BB               	clrf	___awdiv@sign
  3625     0625  0ABB               	incf	___awdiv@sign,f
  3626     0626                     l2121:
  3627     0626  1FF6               	btfss	___awdiv@dividend+1,7
  3628     0627  2E29               	goto	u2071
  3629     0628  2E2A               	goto	u2070
  3630     0629                     u2071:
  3631     0629  2E33               	goto	l2127
  3632     062A                     u2070:
  3633     062A                     l2123:
  3634     062A  09F5               	comf	___awdiv@dividend,f
  3635     062B  09F6               	comf	___awdiv@dividend+1,f
  3636     062C  0AF5               	incf	___awdiv@dividend,f
  3637     062D  1903               	skipnz
  3638     062E  0AF6               	incf	___awdiv@dividend+1,f
  3639     062F                     l2125:
  3640     062F  3001               	movlw	1
  3641     0630  00F7               	movwf	??___awdiv
  3642     0631  0877               	movf	??___awdiv,w
  3643     0632  06BB               	xorwf	___awdiv@sign,f
  3644     0633                     l2127:
  3645     0633  01BC               	clrf	___awdiv@quotient
  3646     0634  01BD               	clrf	___awdiv@quotient+1
  3647     0635                     l2129:
  3648     0635  0873               	movf	___awdiv@divisor,w
  3649     0636  0474               	iorwf	___awdiv@divisor+1,w
  3650     0637  1903               	btfsc	3,2
  3651     0638  2E3A               	goto	u2081
  3652     0639  2E3B               	goto	u2080
  3653     063A                     u2081:
  3654     063A  2E72               	goto	l2149
  3655     063B                     u2080:
  3656     063B                     l2131:
  3657     063B  01BA               	clrf	___awdiv@counter
  3658     063C  0ABA               	incf	___awdiv@counter,f
  3659     063D  2E49               	goto	l2137
  3660     063E                     l2133:
  3661     063E  3001               	movlw	1
  3662     063F                     u2095:
  3663     063F  1003               	clrc
  3664     0640  0DF3               	rlf	___awdiv@divisor,f
  3665     0641  0DF4               	rlf	___awdiv@divisor+1,f
  3666     0642  3EFF               	addlw	-1
  3667     0643  1D03               	skipz
  3668     0644  2E3F               	goto	u2095
  3669     0645                     l2135:
  3670     0645  3001               	movlw	1
  3671     0646  00F7               	movwf	??___awdiv
  3672     0647  0877               	movf	??___awdiv,w
  3673     0648  07BA               	addwf	___awdiv@counter,f
  3674     0649                     l2137:
  3675     0649  1FF4               	btfss	___awdiv@divisor+1,7
  3676     064A  2E4C               	goto	u2101
  3677     064B  2E4D               	goto	u2100
  3678     064C                     u2101:
  3679     064C  2E3E               	goto	l2133
  3680     064D                     u2100:
  3681     064D                     l2139:
  3682     064D  3001               	movlw	1
  3683     064E                     u2115:
  3684     064E  1003               	clrc
  3685     064F  0DBC               	rlf	___awdiv@quotient,f
  3686     0650  0DBD               	rlf	___awdiv@quotient+1,f
  3687     0651  3EFF               	addlw	-1
  3688     0652  1D03               	skipz
  3689     0653  2E4E               	goto	u2115
  3690     0654  0874               	movf	___awdiv@divisor+1,w
  3691     0655  0276               	subwf	___awdiv@dividend+1,w
  3692     0656  1D03               	skipz
  3693     0657  2E5A               	goto	u2125
  3694     0658  0873               	movf	___awdiv@divisor,w
  3695     0659  0275               	subwf	___awdiv@dividend,w
  3696     065A                     u2125:
  3697     065A  1C03               	skipc
  3698     065B  2E5D               	goto	u2121
  3699     065C  2E5E               	goto	u2120
  3700     065D                     u2121:
  3701     065D  2E65               	goto	l2145
  3702     065E                     u2120:
  3703     065E                     l2141:
  3704     065E  0873               	movf	___awdiv@divisor,w
  3705     065F  02F5               	subwf	___awdiv@dividend,f
  3706     0660  0874               	movf	___awdiv@divisor+1,w
  3707     0661  1C03               	skipc
  3708     0662  03F6               	decf	___awdiv@dividend+1,f
  3709     0663  02F6               	subwf	___awdiv@dividend+1,f
  3710     0664                     l2143:
  3711     0664  143C               	bsf	___awdiv@quotient,0
  3712     0665                     l2145:
  3713     0665  3001               	movlw	1
  3714     0666                     u2135:
  3715     0666  1003               	clrc
  3716     0667  0CF4               	rrf	___awdiv@divisor+1,f
  3717     0668  0CF3               	rrf	___awdiv@divisor,f
  3718     0669  3EFF               	addlw	-1
  3719     066A  1D03               	skipz
  3720     066B  2E66               	goto	u2135
  3721     066C                     l2147:
  3722     066C  3001               	movlw	1
  3723     066D  02BA               	subwf	___awdiv@counter,f
  3724     066E  1D03               	btfss	3,2
  3725     066F  2E71               	goto	u2141
  3726     0670  2E72               	goto	u2140
  3727     0671                     u2141:
  3728     0671  2E4D               	goto	l2139
  3729     0672                     u2140:
  3730     0672                     l2149:
  3731     0672  083B               	movf	___awdiv@sign,w
  3732     0673  1903               	btfsc	3,2
  3733     0674  2E76               	goto	u2151
  3734     0675  2E77               	goto	u2150
  3735     0676                     u2151:
  3736     0676  2E7C               	goto	l2153
  3737     0677                     u2150:
  3738     0677                     l2151:
  3739     0677  09BC               	comf	___awdiv@quotient,f
  3740     0678  09BD               	comf	___awdiv@quotient+1,f
  3741     0679  0ABC               	incf	___awdiv@quotient,f
  3742     067A  1903               	skipnz
  3743     067B  0ABD               	incf	___awdiv@quotient+1,f
  3744     067C                     l2153:
  3745     067C  083D               	movf	___awdiv@quotient+1,w
  3746     067D  00F4               	movwf	?___awdiv+1
  3747     067E  083C               	movf	___awdiv@quotient,w
  3748     067F  00F3               	movwf	?___awdiv
  3749     0680                     l538:
  3750     0680  0008               	return
  3751     0681                     __end_of___awdiv:
  3752                           
  3753                           	psect	text12
  3754     06E9                     __ptext12:	
  3755 ;; *************** function _leerRTC *****************
  3756 ;; Defined at:
  3757 ;;		line 13 in file "DS3231.c"
  3758 ;; Parameters:    Size  Location     Type
  3759 ;;  R               1    wreg     enum E1292
  3760 ;; Auto vars:     Size  Location     Type
  3761 ;;  R               1    2[BANK0 ] enum E1292
  3762 ;;  DATO            1    3[BANK0 ] unsigned char 
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      unsigned char 
  3765 ;; Registers used:
  3766 ;;		wreg, status,2, status,0, pclath, cstack
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3772 ;;      Params:         0       0       0       0       0
  3773 ;;      Locals:         0       2       0       0       0
  3774 ;;      Temps:          0       2       0       0       0
  3775 ;;      Totals:         0       4       0       0       0
  3776 ;;Total ram usage:        4 bytes
  3777 ;; Hardware stack levels used: 1
  3778 ;; Hardware stack levels required when called: 3
  3779 ;; This function calls:
  3780 ;;		_I2C_Master_Read
  3781 ;;		_I2C_Master_RepeatedStart
  3782 ;;		_I2C_Master_Start
  3783 ;;		_I2C_Master_Stop
  3784 ;;		_I2C_Master_Write
  3785 ;;		___bmul
  3786 ;; This function is called by:
  3787 ;;		_main
  3788 ;; This function uses a non-reentrant model
  3789 ;;
  3790                           
  3791     06E9                     _leerRTC:	
  3792                           ;psect for function _leerRTC
  3793                           
  3794                           
  3795                           ;incstack = 0
  3796                           ; Regs used in _leerRTC: [wreg+status,2+status,0+pclath+cstack]
  3797                           ;leerRTC@R stored from wreg
  3798     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  3799     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  3800     06EB  00BC               	movwf	leerRTC@R
  3801     06EC                     l2333:
  3802                           
  3803                           ;DS3231.c: 15:     uint8_t DATO;;DS3231.c: 17:     I2C_Master_Start();
  3804     06EC  120A  158A  255F  120A  118A  	fcall	_I2C_Master_Start
  3805                           
  3806                           ;DS3231.c: 18:     I2C_Master_Write(0xD0);
  3807     06F1  30D0               	movlw	208
  3808     06F2  00F3               	movwf	I2C_Master_Write@d
  3809     06F3  3000               	movlw	0
  3810     06F4  00F4               	movwf	I2C_Master_Write@d+1
  3811     06F5  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  3812                           
  3813                           ;DS3231.c: 19:     I2C_Master_Write(R);
  3814     06FA  1283               	bcf	3,5	;RP0=0, select bank0
  3815     06FB  1303               	bcf	3,6	;RP1=0, select bank0
  3816     06FC  083C               	movf	leerRTC@R,w
  3817     06FD  00BA               	movwf	??_leerRTC
  3818     06FE  01BB               	clrf	??_leerRTC+1
  3819     06FF  083A               	movf	??_leerRTC,w
  3820     0700  00F3               	movwf	I2C_Master_Write@d
  3821     0701  083B               	movf	??_leerRTC+1,w
  3822     0702  00F4               	movwf	I2C_Master_Write@d+1
  3823     0703  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  3824                           
  3825                           ;DS3231.c: 20:     I2C_Master_RepeatedStart();
  3826     0708  120A  158A  2556  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3827                           
  3828                           ;DS3231.c: 21:     I2C_Master_Write(0xD1);
  3829     070D  30D1               	movlw	209
  3830     070E  00F3               	movwf	I2C_Master_Write@d
  3831     070F  3000               	movlw	0
  3832     0710  00F4               	movwf	I2C_Master_Write@d+1
  3833     0711  120A  118A  27F6  120A  118A  	fcall	_I2C_Master_Write
  3834                           
  3835                           ;DS3231.c: 22:     DATO = I2C_Master_Read(0);
  3836     0716  3000               	movlw	0
  3837     0717  00F3               	movwf	I2C_Master_Read@a
  3838     0718  00F4               	movwf	I2C_Master_Read@a+1
  3839     0719  120A  158A  260E  120A  118A  	fcall	_I2C_Master_Read
  3840     071E  0873               	movf	?_I2C_Master_Read,w
  3841     071F  1283               	bcf	3,5	;RP0=0, select bank0
  3842     0720  1303               	bcf	3,6	;RP1=0, select bank0
  3843     0721  00BD               	movwf	leerRTC@DATO
  3844                           
  3845                           ;DS3231.c: 23:     I2C_Master_Stop();
  3846     0722  120A  158A  2568  120A  118A  	fcall	_I2C_Master_Stop
  3847     0727                     l2335:
  3848                           
  3849                           ;DS3231.c: 24:     _delay((unsigned long)((10)*(8000000/4000.0)));
  3850     0727  301A               	movlw	26
  3851     0728  1283               	bcf	3,5	;RP0=0, select bank0
  3852     0729  1303               	bcf	3,6	;RP1=0, select bank0
  3853     072A  00BB               	movwf	??_leerRTC+1
  3854     072B  30F7               	movlw	247
  3855     072C  00BA               	movwf	??_leerRTC
  3856     072D                     u2517:
  3857     072D  0BBA               	decfsz	??_leerRTC,f
  3858     072E  2F2D               	goto	u2517
  3859     072F  0BBB               	decfsz	??_leerRTC+1,f
  3860     0730  2F2D               	goto	u2517
  3861     0731  2F32               	nop2
  3862     0732                     l2337:
  3863                           
  3864                           ;DS3231.c: 26:     DATO = (DATO >> 4) * 10 + (DATO & 0x0F);
  3865     0732  300F               	movlw	15
  3866     0733  1283               	bcf	3,5	;RP0=0, select bank0
  3867     0734  1303               	bcf	3,6	;RP1=0, select bank0
  3868     0735  053D               	andwf	leerRTC@DATO,w
  3869     0736  00BA               	movwf	??_leerRTC
  3870     0737  300A               	movlw	10
  3871     0738  00F3               	movwf	___bmul@multiplicand
  3872     0739  083D               	movf	leerRTC@DATO,w
  3873     073A  00BB               	movwf	??_leerRTC+1
  3874     073B  3004               	movlw	4
  3875     073C                     u2435:
  3876     073C  1003               	clrc
  3877     073D  0CBB               	rrf	??_leerRTC+1,f
  3878     073E  3EFF               	addlw	-1
  3879     073F  1D03               	skipz
  3880     0740  2F3C               	goto	u2435
  3881     0741  083B               	movf	??_leerRTC+1,w
  3882     0742  120A  158A  25BD  120A  118A  	fcall	___bmul
  3883     0747  1283               	bcf	3,5	;RP0=0, select bank0
  3884     0748  1303               	bcf	3,6	;RP1=0, select bank0
  3885     0749  073A               	addwf	??_leerRTC,w
  3886     074A  00BD               	movwf	leerRTC@DATO
  3887                           
  3888                           ;DS3231.c: 28:     return DATO;
  3889     074B  083D               	movf	leerRTC@DATO,w
  3890     074C                     l271:
  3891     074C  0008               	return
  3892     074D                     __end_of_leerRTC:
  3893                           
  3894                           	psect	text13
  3895     0DBD                     __ptext13:	
  3896 ;; *************** function ___bmul *****************
  3897 ;; Defined at:
  3898 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3899 ;; Parameters:    Size  Location     Type
  3900 ;;  multiplier      1    wreg     unsigned char 
  3901 ;;  multiplicand    1    3[COMMON] unsigned char 
  3902 ;; Auto vars:     Size  Location     Type
  3903 ;;  multiplier      1    6[COMMON] unsigned char 
  3904 ;;  product         1    5[COMMON] unsigned char 
  3905 ;; Return value:  Size  Location     Type
  3906 ;;                  1    wreg      unsigned char 
  3907 ;; Registers used:
  3908 ;;		wreg, status,2, status,0
  3909 ;; Tracked objects:
  3910 ;;		On entry : 0/0
  3911 ;;		On exit  : 0/0
  3912 ;;		Unchanged: 0/0
  3913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3914 ;;      Params:         1       0       0       0       0
  3915 ;;      Locals:         2       0       0       0       0
  3916 ;;      Temps:          1       0       0       0       0
  3917 ;;      Totals:         4       0       0       0       0
  3918 ;;Total ram usage:        4 bytes
  3919 ;; Hardware stack levels used: 1
  3920 ;; Hardware stack levels required when called: 1
  3921 ;; This function calls:
  3922 ;;		Nothing
  3923 ;; This function is called by:
  3924 ;;		_leerRTC
  3925 ;; This function uses a non-reentrant model
  3926 ;;
  3927                           
  3928     0DBD                     ___bmul:	
  3929                           ;psect for function ___bmul
  3930                           
  3931                           
  3932                           ;incstack = 0
  3933                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3934                           ;___bmul@multiplier stored from wreg
  3935     0DBD  00F6               	movwf	___bmul@multiplier
  3936     0DBE                     l1599:
  3937     0DBE  01F5               	clrf	___bmul@product
  3938     0DBF                     l1601:
  3939     0DBF  1C76               	btfss	___bmul@multiplier,0
  3940     0DC0  2DC2               	goto	u1141
  3941     0DC1  2DC3               	goto	u1140
  3942     0DC2                     u1141:
  3943     0DC2  2DC7               	goto	l1605
  3944     0DC3                     u1140:
  3945     0DC3                     l1603:
  3946     0DC3  0873               	movf	___bmul@multiplicand,w
  3947     0DC4  00F4               	movwf	??___bmul
  3948     0DC5  0874               	movf	??___bmul,w
  3949     0DC6  07F5               	addwf	___bmul@product,f
  3950     0DC7                     l1605:
  3951     0DC7  1003               	clrc
  3952     0DC8  0DF3               	rlf	___bmul@multiplicand,f
  3953     0DC9                     l1607:
  3954     0DC9  1003               	clrc
  3955     0DCA  0CF6               	rrf	___bmul@multiplier,f
  3956     0DCB  0876               	movf	___bmul@multiplier,w
  3957     0DCC  1D03               	btfss	3,2
  3958     0DCD  2DCF               	goto	u1151
  3959     0DCE  2DD0               	goto	u1150
  3960     0DCF                     u1151:
  3961     0DCF  2DBF               	goto	l1601
  3962     0DD0                     u1150:
  3963     0DD0                     l1609:
  3964     0DD0  0875               	movf	___bmul@product,w
  3965     0DD1                     l411:
  3966     0DD1  0008               	return
  3967     0DD2                     __end_of___bmul:
  3968                           
  3969                           	psect	text14
  3970     07F6                     __ptext14:	
  3971 ;; *************** function _I2C_Master_Write *****************
  3972 ;; Defined at:
  3973 ;;		line 62 in file "configI2C.c"
  3974 ;; Parameters:    Size  Location     Type
  3975 ;;  d               2    3[COMMON] unsigned int 
  3976 ;; Auto vars:     Size  Location     Type
  3977 ;;		None
  3978 ;; Return value:  Size  Location     Type
  3979 ;;                  1    wreg      void 
  3980 ;; Registers used:
  3981 ;;		wreg, status,2, status,0, pclath, cstack
  3982 ;; Tracked objects:
  3983 ;;		On entry : 0/0
  3984 ;;		On exit  : 0/0
  3985 ;;		Unchanged: 0/0
  3986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3987 ;;      Params:         2       0       0       0       0
  3988 ;;      Locals:         0       0       0       0       0
  3989 ;;      Temps:          0       0       0       0       0
  3990 ;;      Totals:         2       0       0       0       0
  3991 ;;Total ram usage:        2 bytes
  3992 ;; Hardware stack levels used: 1
  3993 ;; Hardware stack levels required when called: 2
  3994 ;; This function calls:
  3995 ;;		_I2C_Master_Wait
  3996 ;; This function is called by:
  3997 ;;		_main
  3998 ;;		_leerRTC
  3999 ;;		_modifRTC
  4000 ;; This function uses a non-reentrant model
  4001 ;;
  4002                           
  4003     07F6                     _I2C_Master_Write:	
  4004                           ;psect for function _I2C_Master_Write
  4005                           
  4006     07F6                     l2093:	
  4007                           ;incstack = 0
  4008                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4009                           
  4010                           
  4011                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
  4012     07F6  120A  158A  257E  120A  118A  	fcall	_I2C_Master_Wait
  4013     07FB                     l2095:
  4014                           
  4015                           ;configI2C.c: 65:     SSPBUF = d;
  4016     07FB  0873               	movf	I2C_Master_Write@d,w
  4017     07FC  1283               	bcf	3,5	;RP0=0, select bank0
  4018     07FD  1303               	bcf	3,6	;RP1=0, select bank0
  4019     07FE  0093               	movwf	19	;volatile
  4020     07FF                     l47:
  4021     07FF  0008               	return
  4022     0800                     __end_of_I2C_Master_Write:
  4023                           
  4024                           	psect	text15
  4025     0D68                     __ptext15:	
  4026 ;; *************** function _I2C_Master_Stop *****************
  4027 ;; Defined at:
  4028 ;;		line 52 in file "configI2C.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, pclath, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4042 ;;      Params:         0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0
  4045 ;;      Totals:         0       0       0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used: 1
  4048 ;; Hardware stack levels required when called: 2
  4049 ;; This function calls:
  4050 ;;		_I2C_Master_Wait
  4051 ;; This function is called by:
  4052 ;;		_main
  4053 ;;		_leerRTC
  4054 ;;		_modifRTC
  4055 ;; This function uses a non-reentrant model
  4056 ;;
  4057                           
  4058     0D68                     _I2C_Master_Stop:	
  4059                           ;psect for function _I2C_Master_Stop
  4060                           
  4061     0D68                     l2089:	
  4062                           ;incstack = 0
  4063                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4064                           
  4065                           
  4066                           ;configI2C.c: 54:     I2C_Master_Wait();
  4067     0D68  120A  158A  257E  120A  158A  	fcall	_I2C_Master_Wait
  4068     0D6D                     l2091:
  4069                           
  4070                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
  4071     0D6D  1683               	bsf	3,5	;RP0=1, select bank1
  4072     0D6E  1303               	bcf	3,6	;RP1=0, select bank1
  4073     0D6F  1511               	bsf	17,2	;volatile
  4074     0D70                     l44:
  4075     0D70  0008               	return
  4076     0D71                     __end_of_I2C_Master_Stop:
  4077                           
  4078                           	psect	text16
  4079     0D5F                     __ptext16:	
  4080 ;; *************** function _I2C_Master_Start *****************
  4081 ;; Defined at:
  4082 ;;		line 36 in file "configI2C.c"
  4083 ;; Parameters:    Size  Location     Type
  4084 ;;		None
  4085 ;; Auto vars:     Size  Location     Type
  4086 ;;		None
  4087 ;; Return value:  Size  Location     Type
  4088 ;;                  1    wreg      void 
  4089 ;; Registers used:
  4090 ;;		wreg, status,2, status,0, pclath, cstack
  4091 ;; Tracked objects:
  4092 ;;		On entry : 0/0
  4093 ;;		On exit  : 0/0
  4094 ;;		Unchanged: 0/0
  4095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4096 ;;      Params:         0       0       0       0       0
  4097 ;;      Locals:         0       0       0       0       0
  4098 ;;      Temps:          0       0       0       0       0
  4099 ;;      Totals:         0       0       0       0       0
  4100 ;;Total ram usage:        0 bytes
  4101 ;; Hardware stack levels used: 1
  4102 ;; Hardware stack levels required when called: 2
  4103 ;; This function calls:
  4104 ;;		_I2C_Master_Wait
  4105 ;; This function is called by:
  4106 ;;		_main
  4107 ;;		_leerRTC
  4108 ;;		_modifRTC
  4109 ;; This function uses a non-reentrant model
  4110 ;;
  4111                           
  4112     0D5F                     _I2C_Master_Start:	
  4113                           ;psect for function _I2C_Master_Start
  4114                           
  4115     0D5F                     l2081:	
  4116                           ;incstack = 0
  4117                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4118                           
  4119                           
  4120                           ;configI2C.c: 38:     I2C_Master_Wait();
  4121     0D5F  120A  158A  257E  120A  158A  	fcall	_I2C_Master_Wait
  4122     0D64                     l2083:
  4123                           
  4124                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
  4125     0D64  1683               	bsf	3,5	;RP0=1, select bank1
  4126     0D65  1303               	bcf	3,6	;RP1=0, select bank1
  4127     0D66  1411               	bsf	17,0	;volatile
  4128     0D67                     l38:
  4129     0D67  0008               	return
  4130     0D68                     __end_of_I2C_Master_Start:
  4131                           
  4132                           	psect	text17
  4133     0D56                     __ptext17:	
  4134 ;; *************** function _I2C_Master_RepeatedStart *****************
  4135 ;; Defined at:
  4136 ;;		line 44 in file "configI2C.c"
  4137 ;; Parameters:    Size  Location     Type
  4138 ;;		None
  4139 ;; Auto vars:     Size  Location     Type
  4140 ;;		None
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  1    wreg      void 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0, pclath, cstack
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4150 ;;      Params:         0       0       0       0       0
  4151 ;;      Locals:         0       0       0       0       0
  4152 ;;      Temps:          0       0       0       0       0
  4153 ;;      Totals:         0       0       0       0       0
  4154 ;;Total ram usage:        0 bytes
  4155 ;; Hardware stack levels used: 1
  4156 ;; Hardware stack levels required when called: 2
  4157 ;; This function calls:
  4158 ;;		_I2C_Master_Wait
  4159 ;; This function is called by:
  4160 ;;		_leerRTC
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164     0D56                     _I2C_Master_RepeatedStart:	
  4165                           ;psect for function _I2C_Master_RepeatedStart
  4166                           
  4167     0D56                     l2085:	
  4168                           ;incstack = 0
  4169                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4170                           
  4171                           
  4172                           ;configI2C.c: 46:     I2C_Master_Wait();
  4173     0D56  120A  158A  257E  120A  158A  	fcall	_I2C_Master_Wait
  4174     0D5B                     l2087:
  4175                           
  4176                           ;configI2C.c: 47:     SSPCON2bits.RSEN = 1;
  4177     0D5B  1683               	bsf	3,5	;RP0=1, select bank1
  4178     0D5C  1303               	bcf	3,6	;RP1=0, select bank1
  4179     0D5D  1491               	bsf	17,1	;volatile
  4180     0D5E                     l41:
  4181     0D5E  0008               	return
  4182     0D5F                     __end_of_I2C_Master_RepeatedStart:
  4183                           
  4184                           	psect	text18
  4185     0E0E                     __ptext18:	
  4186 ;; *************** function _I2C_Master_Read *****************
  4187 ;; Defined at:
  4188 ;;		line 71 in file "configI2C.c"
  4189 ;; Parameters:    Size  Location     Type
  4190 ;;  a               2    3[COMMON] unsigned short 
  4191 ;; Auto vars:     Size  Location     Type
  4192 ;;  temp            2    7[COMMON] unsigned short 
  4193 ;; Return value:  Size  Location     Type
  4194 ;;                  2    3[COMMON] unsigned short 
  4195 ;; Registers used:
  4196 ;;		wreg, status,2, status,0, pclath, cstack
  4197 ;; Tracked objects:
  4198 ;;		On entry : 0/0
  4199 ;;		On exit  : 0/0
  4200 ;;		Unchanged: 0/0
  4201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4202 ;;      Params:         2       0       0       0       0
  4203 ;;      Locals:         2       0       0       0       0
  4204 ;;      Temps:          2       0       0       0       0
  4205 ;;      Totals:         6       0       0       0       0
  4206 ;;Total ram usage:        6 bytes
  4207 ;; Hardware stack levels used: 1
  4208 ;; Hardware stack levels required when called: 2
  4209 ;; This function calls:
  4210 ;;		_I2C_Master_Wait
  4211 ;; This function is called by:
  4212 ;;		_main
  4213 ;;		_leerRTC
  4214 ;; This function uses a non-reentrant model
  4215 ;;
  4216                           
  4217     0E0E                     _I2C_Master_Read:	
  4218                           ;psect for function _I2C_Master_Read
  4219                           
  4220     0E0E                     l2097:	
  4221                           ;incstack = 0
  4222                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4223                           
  4224                           
  4225                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
  4226     0E0E  120A  158A  257E  120A  158A  	fcall	_I2C_Master_Wait
  4227     0E13                     l2099:
  4228                           
  4229                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
  4230     0E13  1683               	bsf	3,5	;RP0=1, select bank1
  4231     0E14  1303               	bcf	3,6	;RP1=0, select bank1
  4232     0E15  1591               	bsf	17,3	;volatile
  4233                           
  4234                           ;configI2C.c: 76:     I2C_Master_Wait();
  4235     0E16  120A  158A  257E  120A  158A  	fcall	_I2C_Master_Wait
  4236     0E1B                     l2101:
  4237                           
  4238                           ;configI2C.c: 77:     temp = SSPBUF;
  4239     0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  4240     0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  4241     0E1D  0813               	movf	19,w	;volatile
  4242     0E1E  00F5               	movwf	??_I2C_Master_Read
  4243     0E1F  01F6               	clrf	??_I2C_Master_Read+1
  4244     0E20  0875               	movf	??_I2C_Master_Read,w
  4245     0E21  00F7               	movwf	I2C_Master_Read@temp
  4246     0E22  0876               	movf	??_I2C_Master_Read+1,w
  4247     0E23  00F8               	movwf	I2C_Master_Read@temp+1
  4248     0E24                     l2103:
  4249                           
  4250                           ;configI2C.c: 78:     I2C_Master_Wait();
  4251     0E24  120A  158A  257E  120A  158A  	fcall	_I2C_Master_Wait
  4252     0E29                     l2105:
  4253                           
  4254                           ;configI2C.c: 79:     if(a == 1){
  4255     0E29  0373               	decf	I2C_Master_Read@a,w
  4256     0E2A  0474               	iorwf	I2C_Master_Read@a+1,w
  4257     0E2B  1D03               	btfss	3,2
  4258     0E2C  2E2E               	goto	u2051
  4259     0E2D  2E2F               	goto	u2050
  4260     0E2E                     u2051:
  4261     0E2E  2E33               	goto	l50
  4262     0E2F                     u2050:
  4263     0E2F                     l2107:
  4264                           
  4265                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
  4266     0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  4267     0E30  1303               	bcf	3,6	;RP1=0, select bank1
  4268     0E31  1291               	bcf	17,5	;volatile
  4269                           
  4270                           ;configI2C.c: 81:     }else{
  4271     0E32  2E36               	goto	l51
  4272     0E33                     l50:
  4273                           
  4274                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
  4275     0E33  1683               	bsf	3,5	;RP0=1, select bank1
  4276     0E34  1303               	bcf	3,6	;RP1=0, select bank1
  4277     0E35  1691               	bsf	17,5	;volatile
  4278     0E36                     l51:	
  4279                           ;configI2C.c: 83:     }
  4280                           
  4281                           
  4282                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
  4283     0E36  1611               	bsf	17,4	;volatile
  4284     0E37                     l2109:
  4285                           
  4286                           ;configI2C.c: 85:     return temp;
  4287     0E37  0878               	movf	I2C_Master_Read@temp+1,w
  4288     0E38  00F4               	movwf	?_I2C_Master_Read+1
  4289     0E39  0877               	movf	I2C_Master_Read@temp,w
  4290     0E3A  00F3               	movwf	?_I2C_Master_Read
  4291     0E3B                     l52:
  4292     0E3B  0008               	return
  4293     0E3C                     __end_of_I2C_Master_Read:
  4294                           
  4295                           	psect	text19
  4296     0D7E                     __ptext19:	
  4297 ;; *************** function _I2C_Master_Wait *****************
  4298 ;; Defined at:
  4299 ;;		line 29 in file "configI2C.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4313 ;;      Params:         0       0       0       0       0
  4314 ;;      Locals:         0       0       0       0       0
  4315 ;;      Temps:          0       0       0       0       0
  4316 ;;      Totals:         0       0       0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used: 1
  4319 ;; Hardware stack levels required when called: 1
  4320 ;; This function calls:
  4321 ;;		Nothing
  4322 ;; This function is called by:
  4323 ;;		_I2C_Master_Start
  4324 ;;		_I2C_Master_RepeatedStart
  4325 ;;		_I2C_Master_Stop
  4326 ;;		_I2C_Master_Write
  4327 ;;		_I2C_Master_Read
  4328 ;; This function uses a non-reentrant model
  4329 ;;
  4330                           
  4331     0D7E                     _I2C_Master_Wait:	
  4332                           ;psect for function _I2C_Master_Wait
  4333                           
  4334     0D7E                     l2041:	
  4335                           ;incstack = 0
  4336                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4337                           
  4338     0D7E                     l32:	
  4339                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4340                           
  4341     0D7E  1683               	bsf	3,5	;RP0=1, select bank1
  4342     0D7F  1303               	bcf	3,6	;RP1=0, select bank1
  4343     0D80  1914               	btfsc	20,2	;volatile
  4344     0D81  2D83               	goto	u1951
  4345     0D82  2D84               	goto	u1950
  4346     0D83                     u1951:
  4347     0D83  2D7E               	goto	l32
  4348     0D84                     u1950:
  4349     0D84                     l2043:
  4350     0D84  0811               	movf	17,w	;volatile
  4351     0D85  391F               	andlw	31
  4352     0D86  1D03               	btfss	3,2
  4353     0D87  2D89               	goto	u1961
  4354     0D88  2D8A               	goto	u1960
  4355     0D89                     u1961:
  4356     0D89  2D7E               	goto	l32
  4357     0D8A                     u1960:
  4358     0D8A                     l35:
  4359     0D8A  0008               	return
  4360     0D8B                     __end_of_I2C_Master_Wait:
  4361                           
  4362                           	psect	text20
  4363     0F19                     __ptext20:	
  4364 ;; *************** function _Lcd_Write_String_4bits *****************
  4365 ;; Defined at:
  4366 ;;		line 99 in file "configLCD_4bits.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  a               2    8[COMMON] PTR unsigned char 
  4369 ;;		 -> fecha(10), tiempo(8), ADC1(9), STR_1(4), 
  4370 ;; Auto vars:     Size  Location     Type
  4371 ;;  i               2    3[BANK0 ] int 
  4372 ;; Return value:  Size  Location     Type
  4373 ;;                  1    wreg      void 
  4374 ;; Registers used:
  4375 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4376 ;; Tracked objects:
  4377 ;;		On entry : 0/0
  4378 ;;		On exit  : 0/0
  4379 ;;		Unchanged: 0/0
  4380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4381 ;;      Params:         2       0       0       0       0
  4382 ;;      Locals:         0       2       0       0       0
  4383 ;;      Temps:          0       3       0       0       0
  4384 ;;      Totals:         2       5       0       0       0
  4385 ;;Total ram usage:        7 bytes
  4386 ;; Hardware stack levels used: 1
  4387 ;; Hardware stack levels required when called: 3
  4388 ;; This function calls:
  4389 ;;		_Lcd_Write_Char_4bits
  4390 ;; This function is called by:
  4391 ;;		_main
  4392 ;; This function uses a non-reentrant model
  4393 ;;
  4394                           
  4395     0F19                     _Lcd_Write_String_4bits:	
  4396                           ;psect for function _Lcd_Write_String_4bits
  4397                           
  4398     0F19                     l1765:	
  4399                           ;incstack = 0
  4400                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4401                           
  4402                           
  4403                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  4404     0F19  1283               	bcf	3,5	;RP0=0, select bank0
  4405     0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  4406     0F1B  01BD               	clrf	Lcd_Write_String_4bits@i
  4407     0F1C  01BE               	clrf	Lcd_Write_String_4bits@i+1
  4408     0F1D  2F42               	goto	l1771
  4409     0F1E                     l1767:
  4410                           
  4411                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  4412     0F1E  083D               	movf	Lcd_Write_String_4bits@i,w
  4413     0F1F  0778               	addwf	Lcd_Write_String_4bits@a,w
  4414     0F20  00BB               	movwf	??_Lcd_Write_String_4bits+1
  4415     0F21  0879               	movf	Lcd_Write_String_4bits@a+1,w
  4416     0F22  00BA               	movwf	??_Lcd_Write_String_4bits
  4417     0F23  1803               	skipnc
  4418     0F24  0ABA               	incf	??_Lcd_Write_String_4bits,f
  4419     0F25  1FBD               	btfss	Lcd_Write_String_4bits@i,7
  4420     0F26  2F28               	goto	u1520
  4421     0F27  03BA               	decf	??_Lcd_Write_String_4bits,f
  4422     0F28                     u1520:
  4423     0F28  1283               	bcf	3,5	;RP0=0, select bank0
  4424     0F29  1303               	bcf	3,6	;RP1=0, select bank0
  4425     0F2A  083A               	movf	??_Lcd_Write_String_4bits,w
  4426     0F2B  00BC               	movwf	??_Lcd_Write_String_4bits+2
  4427     0F2C  083C               	movf	??_Lcd_Write_String_4bits+2,w
  4428     0F2D  00FF               	movwf	btemp+1
  4429     0F2E  083B               	movf	??_Lcd_Write_String_4bits+1,w
  4430     0F2F  0084               	movwf	4
  4431     0F30  120A  158A  2000  120A  158A  	fcall	stringtab
  4432     0F35  120A  158A  266E  120A  158A  	fcall	_Lcd_Write_Char_4bits
  4433     0F3A                     l1769:
  4434     0F3A  3001               	movlw	1
  4435     0F3B  1283               	bcf	3,5	;RP0=0, select bank0
  4436     0F3C  1303               	bcf	3,6	;RP1=0, select bank0
  4437     0F3D  07BD               	addwf	Lcd_Write_String_4bits@i,f
  4438     0F3E  1803               	skipnc
  4439     0F3F  0ABE               	incf	Lcd_Write_String_4bits@i+1,f
  4440     0F40  3000               	movlw	0
  4441     0F41  07BE               	addwf	Lcd_Write_String_4bits@i+1,f
  4442     0F42                     l1771:
  4443     0F42  083D               	movf	Lcd_Write_String_4bits@i,w
  4444     0F43  0778               	addwf	Lcd_Write_String_4bits@a,w
  4445     0F44  00BB               	movwf	??_Lcd_Write_String_4bits+1
  4446     0F45  0879               	movf	Lcd_Write_String_4bits@a+1,w
  4447     0F46  00BA               	movwf	??_Lcd_Write_String_4bits
  4448     0F47  1803               	skipnc
  4449     0F48  0ABA               	incf	??_Lcd_Write_String_4bits,f
  4450     0F49  1FBD               	btfss	Lcd_Write_String_4bits@i,7
  4451     0F4A  2F4C               	goto	u1530
  4452     0F4B  03BA               	decf	??_Lcd_Write_String_4bits,f
  4453     0F4C                     u1530:
  4454     0F4C  1283               	bcf	3,5	;RP0=0, select bank0
  4455     0F4D  1303               	bcf	3,6	;RP1=0, select bank0
  4456     0F4E  083A               	movf	??_Lcd_Write_String_4bits,w
  4457     0F4F  00BC               	movwf	??_Lcd_Write_String_4bits+2
  4458     0F50  083C               	movf	??_Lcd_Write_String_4bits+2,w
  4459     0F51  00FF               	movwf	btemp+1
  4460     0F52  083B               	movf	??_Lcd_Write_String_4bits+1,w
  4461     0F53  0084               	movwf	4
  4462     0F54  120A  158A  2000  120A  158A  	fcall	stringtab
  4463     0F59  3A00               	xorlw	0
  4464     0F5A  1D03               	skipz
  4465     0F5B  2F5D               	goto	u1541
  4466     0F5C  2F5E               	goto	u1540
  4467     0F5D                     u1541:
  4468     0F5D  2F1E               	goto	l1767
  4469     0F5E                     u1540:
  4470     0F5E                     l99:
  4471     0F5E  0008               	return
  4472     0F5F                     __end_of_Lcd_Write_String_4bits:
  4473                           
  4474                           	psect	text21
  4475     0E6E                     __ptext21:	
  4476 ;; *************** function _Lcd_Write_Char_4bits *****************
  4477 ;; Defined at:
  4478 ;;		line 84 in file "configLCD_4bits.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  a               1    wreg     unsigned char 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  a               1    7[COMMON] unsigned char 
  4483 ;;  y               1    6[COMMON] unsigned char 
  4484 ;;  temp            1    5[COMMON] unsigned char 
  4485 ;; Return value:  Size  Location     Type
  4486 ;;                  1    wreg      void 
  4487 ;; Registers used:
  4488 ;;		wreg, status,2, status,0, pclath, cstack
  4489 ;; Tracked objects:
  4490 ;;		On entry : 0/0
  4491 ;;		On exit  : 0/0
  4492 ;;		Unchanged: 0/0
  4493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4494 ;;      Params:         0       0       0       0       0
  4495 ;;      Locals:         3       0       0       0       0
  4496 ;;      Temps:          1       0       0       0       0
  4497 ;;      Totals:         4       0       0       0       0
  4498 ;;Total ram usage:        4 bytes
  4499 ;; Hardware stack levels used: 1
  4500 ;; Hardware stack levels required when called: 2
  4501 ;; This function calls:
  4502 ;;		_Lcd_Port_4bits
  4503 ;; This function is called by:
  4504 ;;		_Lcd_Write_String_4bits
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508     0E6E                     _Lcd_Write_Char_4bits:	
  4509                           ;psect for function _Lcd_Write_Char_4bits
  4510                           
  4511                           
  4512                           ;incstack = 0
  4513                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  4514                           ;Lcd_Write_Char_4bits@a stored from wreg
  4515     0E6E  00F7               	movwf	Lcd_Write_Char_4bits@a
  4516     0E6F                     l1579:
  4517                           
  4518                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  4519     0E6F  0877               	movf	Lcd_Write_Char_4bits@a,w
  4520     0E70  390F               	andlw	15
  4521     0E71  00F5               	movwf	Lcd_Write_Char_4bits@temp
  4522                           
  4523                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  4524     0E72  0877               	movf	Lcd_Write_Char_4bits@a,w
  4525     0E73  39F0               	andlw	240
  4526     0E74  00F6               	movwf	Lcd_Write_Char_4bits@y
  4527     0E75                     l1581:
  4528                           
  4529                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  4530     0E75  1283               	bcf	3,5	;RP0=0, select bank0
  4531     0E76  1303               	bcf	3,6	;RP1=0, select bank0
  4532     0E77  1508               	bsf	8,2	;volatile
  4533     0E78                     l1583:
  4534                           
  4535                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  4536     0E78  0876               	movf	Lcd_Write_Char_4bits@y,w
  4537     0E79  00F4               	movwf	??_Lcd_Write_Char_4bits
  4538     0E7A  3004               	movlw	4
  4539     0E7B                     u1135:
  4540     0E7B  1003               	clrc
  4541     0E7C  0CF4               	rrf	??_Lcd_Write_Char_4bits,f
  4542     0E7D  3EFF               	addlw	-1
  4543     0E7E  1D03               	skipz
  4544     0E7F  2E7B               	goto	u1135
  4545     0E80  0874               	movf	??_Lcd_Write_Char_4bits,w
  4546     0E81  120A  158A  25EC  120A  158A  	fcall	_Lcd_Port_4bits
  4547     0E86                     l1585:
  4548                           
  4549                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  4550     0E86  1283               	bcf	3,5	;RP0=0, select bank0
  4551     0E87  1303               	bcf	3,6	;RP1=0, select bank0
  4552     0E88  1588               	bsf	8,3	;volatile
  4553     0E89                     l1587:
  4554                           
  4555                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4556     0E89  301A               	movlw	26
  4557     0E8A  00F4               	movwf	??_Lcd_Write_Char_4bits
  4558     0E8B                     u2527:
  4559     0E8B  0BF4               	decfsz	??_Lcd_Write_Char_4bits,f
  4560     0E8C  2E8B               	goto	u2527
  4561     0E8D  0000               	nop
  4562     0E8E                     l1589:
  4563                           
  4564                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  4565     0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  4566     0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  4567     0E90  1188               	bcf	8,3	;volatile
  4568     0E91                     l1591:
  4569                           
  4570                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  4571     0E91  0875               	movf	Lcd_Write_Char_4bits@temp,w
  4572     0E92  120A  158A  25EC  120A  158A  	fcall	_Lcd_Port_4bits
  4573     0E97                     l1593:
  4574                           
  4575                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  4576     0E97  1283               	bcf	3,5	;RP0=0, select bank0
  4577     0E98  1303               	bcf	3,6	;RP1=0, select bank0
  4578     0E99  1588               	bsf	8,3	;volatile
  4579     0E9A                     l1595:
  4580                           
  4581                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4582     0E9A  301A               	movlw	26
  4583     0E9B  00F4               	movwf	??_Lcd_Write_Char_4bits
  4584     0E9C                     u2537:
  4585     0E9C  0BF4               	decfsz	??_Lcd_Write_Char_4bits,f
  4586     0E9D  2E9C               	goto	u2537
  4587     0E9E  0000               	nop
  4588     0E9F                     l1597:
  4589                           
  4590                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  4591     0E9F  1283               	bcf	3,5	;RP0=0, select bank0
  4592     0EA0  1303               	bcf	3,6	;RP1=0, select bank0
  4593     0EA1  1188               	bcf	8,3	;volatile
  4594     0EA2                     l93:
  4595     0EA2  0008               	return
  4596     0EA3                     __end_of_Lcd_Write_Char_4bits:
  4597                           
  4598                           	psect	text22
  4599     07AA                     __ptext22:	
  4600 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  4601 ;; Defined at:
  4602 ;;		line 49 in file "configLCD_4bits.c"
  4603 ;; Parameters:    Size  Location     Type
  4604 ;;  a               1    wreg     unsigned char 
  4605 ;;  b               1    7[COMMON] unsigned char 
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;  a               1    0[BANK0 ] unsigned char 
  4608 ;;  temp            1    3[BANK0 ] unsigned char 
  4609 ;;  y               1    2[BANK0 ] unsigned char 
  4610 ;;  z               1    1[BANK0 ] unsigned char 
  4611 ;; Return value:  Size  Location     Type
  4612 ;;                  1    wreg      void 
  4613 ;; Registers used:
  4614 ;;		wreg, status,2, status,0, pclath, cstack
  4615 ;; Tracked objects:
  4616 ;;		On entry : 0/0
  4617 ;;		On exit  : 0/0
  4618 ;;		Unchanged: 0/0
  4619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4620 ;;      Params:         1       0       0       0       0
  4621 ;;      Locals:         0       4       0       0       0
  4622 ;;      Temps:          1       0       0       0       0
  4623 ;;      Totals:         2       4       0       0       0
  4624 ;;Total ram usage:        6 bytes
  4625 ;; Hardware stack levels used: 1
  4626 ;; Hardware stack levels required when called: 3
  4627 ;; This function calls:
  4628 ;;		_Lcd_Cmd_4bits
  4629 ;; This function is called by:
  4630 ;;		_main
  4631 ;; This function uses a non-reentrant model
  4632 ;;
  4633                           
  4634     07AA                     _Lcd_Set_Cursor_4bits:	
  4635                           ;psect for function _Lcd_Set_Cursor_4bits
  4636                           
  4637                           
  4638                           ;incstack = 0
  4639                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  4640                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  4641     07AA  1283               	bcf	3,5	;RP0=0, select bank0
  4642     07AB  1303               	bcf	3,6	;RP1=0, select bank0
  4643     07AC  00BA               	movwf	Lcd_Set_Cursor_4bits@a
  4644     07AD                     l1745:
  4645                           
  4646                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  4647     07AD  033A               	decf	Lcd_Set_Cursor_4bits@a,w
  4648     07AE  1D03               	btfss	3,2
  4649     07AF  2FB1               	goto	u1481
  4650     07B0  2FB2               	goto	u1480
  4651     07B1                     u1481:
  4652     07B1  2FD1               	goto	l1755
  4653     07B2                     u1480:
  4654     07B2                     l1747:
  4655                           
  4656                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  4657     07B2  0877               	movf	Lcd_Set_Cursor_4bits@b,w
  4658     07B3  3E7F               	addlw	127
  4659     07B4  00BD               	movwf	Lcd_Set_Cursor_4bits@temp
  4660                           
  4661                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  4662     07B5  083D               	movf	Lcd_Set_Cursor_4bits@temp,w
  4663     07B6  00F8               	movwf	??_Lcd_Set_Cursor_4bits
  4664     07B7  3004               	movlw	4
  4665     07B8                     u1495:
  4666     07B8  1003               	clrc
  4667     07B9  0CF8               	rrf	??_Lcd_Set_Cursor_4bits,f
  4668     07BA  3EFF               	addlw	-1
  4669     07BB  1D03               	skipz
  4670     07BC  2FB8               	goto	u1495
  4671     07BD  0878               	movf	??_Lcd_Set_Cursor_4bits,w
  4672     07BE  00BB               	movwf	Lcd_Set_Cursor_4bits@z
  4673     07BF                     l1749:
  4674                           
  4675                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  4676     07BF  083D               	movf	Lcd_Set_Cursor_4bits@temp,w
  4677     07C0  390F               	andlw	15
  4678     07C1  00BC               	movwf	Lcd_Set_Cursor_4bits@y
  4679     07C2                     l1751:
  4680                           
  4681                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  4682     07C2  083B               	movf	Lcd_Set_Cursor_4bits@z,w
  4683     07C3  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  4684     07C8                     l1753:
  4685                           
  4686                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  4687     07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4688     07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4689     07CA  083C               	movf	Lcd_Set_Cursor_4bits@y,w
  4690     07CB  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  4691                           
  4692                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  4693     07D0  2FF5               	goto	l87
  4694     07D1                     l1755:
  4695     07D1  3002               	movlw	2
  4696     07D2  063A               	xorwf	Lcd_Set_Cursor_4bits@a,w
  4697     07D3  1D03               	btfss	3,2
  4698     07D4  2FD6               	goto	u1501
  4699     07D5  2FD7               	goto	u1500
  4700     07D6                     u1501:
  4701     07D6  2FF5               	goto	l87
  4702     07D7                     u1500:
  4703     07D7                     l1757:
  4704                           
  4705                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  4706     07D7  0877               	movf	Lcd_Set_Cursor_4bits@b,w
  4707     07D8  3EBF               	addlw	191
  4708     07D9  00BD               	movwf	Lcd_Set_Cursor_4bits@temp
  4709                           
  4710                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  4711     07DA  083D               	movf	Lcd_Set_Cursor_4bits@temp,w
  4712     07DB  00F8               	movwf	??_Lcd_Set_Cursor_4bits
  4713     07DC  3004               	movlw	4
  4714     07DD                     u1515:
  4715     07DD  1003               	clrc
  4716     07DE  0CF8               	rrf	??_Lcd_Set_Cursor_4bits,f
  4717     07DF  3EFF               	addlw	-1
  4718     07E0  1D03               	skipz
  4719     07E1  2FDD               	goto	u1515
  4720     07E2  0878               	movf	??_Lcd_Set_Cursor_4bits,w
  4721     07E3  00BB               	movwf	Lcd_Set_Cursor_4bits@z
  4722     07E4                     l1759:
  4723                           
  4724                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  4725     07E4  083D               	movf	Lcd_Set_Cursor_4bits@temp,w
  4726     07E5  390F               	andlw	15
  4727     07E6  00BC               	movwf	Lcd_Set_Cursor_4bits@y
  4728     07E7                     l1761:
  4729                           
  4730                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  4731     07E7  083B               	movf	Lcd_Set_Cursor_4bits@z,w
  4732     07E8  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  4733     07ED                     l1763:
  4734                           
  4735                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  4736     07ED  1283               	bcf	3,5	;RP0=0, select bank0
  4737     07EE  1303               	bcf	3,6	;RP1=0, select bank0
  4738     07EF  083C               	movf	Lcd_Set_Cursor_4bits@y,w
  4739     07F0  120A  158A  25D2  120A  118A  	fcall	_Lcd_Cmd_4bits
  4740     07F5                     l87:
  4741     07F5  0008               	return
  4742     07F6                     __end_of_Lcd_Set_Cursor_4bits:
  4743                           
  4744                           	psect	text23
  4745     0D71                     __ptext23:	
  4746 ;; *************** function _Lcd_Clear_4bits *****************
  4747 ;; Defined at:
  4748 ;;		line 44 in file "configLCD_4bits.c"
  4749 ;; Parameters:    Size  Location     Type
  4750 ;;		None
  4751 ;; Auto vars:     Size  Location     Type
  4752 ;;		None
  4753 ;; Return value:  Size  Location     Type
  4754 ;;                  1    wreg      void 
  4755 ;; Registers used:
  4756 ;;		wreg, status,2, status,0, pclath, cstack
  4757 ;; Tracked objects:
  4758 ;;		On entry : 0/0
  4759 ;;		On exit  : 0/0
  4760 ;;		Unchanged: 0/0
  4761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4762 ;;      Params:         0       0       0       0       0
  4763 ;;      Locals:         0       0       0       0       0
  4764 ;;      Temps:          0       0       0       0       0
  4765 ;;      Totals:         0       0       0       0       0
  4766 ;;Total ram usage:        0 bytes
  4767 ;; Hardware stack levels used: 1
  4768 ;; Hardware stack levels required when called: 3
  4769 ;; This function calls:
  4770 ;;		_Lcd_Cmd_4bits
  4771 ;; This function is called by:
  4772 ;;		_main
  4773 ;; This function uses a non-reentrant model
  4774 ;;
  4775                           
  4776     0D71                     _Lcd_Clear_4bits:	
  4777                           ;psect for function _Lcd_Clear_4bits
  4778                           
  4779     0D71                     l1743:	
  4780                           ;incstack = 0
  4781                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  4782                           
  4783                           
  4784                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  4785     0D71  3000               	movlw	0
  4786     0D72  120A  158A  25D2  120A  158A  	fcall	_Lcd_Cmd_4bits
  4787                           
  4788                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  4789     0D77  3001               	movlw	1
  4790     0D78  120A  158A  25D2  120A  158A  	fcall	_Lcd_Cmd_4bits
  4791     0D7D                     l81:
  4792     0D7D  0008               	return
  4793     0D7E                     __end_of_Lcd_Clear_4bits:
  4794                           
  4795                           	psect	text24
  4796     0DD2                     __ptext24:	
  4797 ;; *************** function _Lcd_Cmd_4bits *****************
  4798 ;; Defined at:
  4799 ;;		line 36 in file "configLCD_4bits.c"
  4800 ;; Parameters:    Size  Location     Type
  4801 ;;  a               1    wreg     unsigned char 
  4802 ;; Auto vars:     Size  Location     Type
  4803 ;;  a               1    6[COMMON] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0, pclath, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4813 ;;      Params:         0       0       0       0       0
  4814 ;;      Locals:         1       0       0       0       0
  4815 ;;      Temps:          2       0       0       0       0
  4816 ;;      Totals:         3       0       0       0       0
  4817 ;;Total ram usage:        3 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; Hardware stack levels required when called: 2
  4820 ;; This function calls:
  4821 ;;		_Lcd_Port_4bits
  4822 ;; This function is called by:
  4823 ;;		_Lcd_Clear_4bits
  4824 ;;		_Lcd_Set_Cursor_4bits
  4825 ;;		_Lcd_Init_4bits
  4826 ;;		_Lcd_Shift_Right_4bits
  4827 ;;		_Lcd_Shift_Left_4bits
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831     0DD2                     _Lcd_Cmd_4bits:	
  4832                           ;psect for function _Lcd_Cmd_4bits
  4833                           
  4834                           
  4835                           ;incstack = 0
  4836                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  4837                           ;Lcd_Cmd_4bits@a stored from wreg
  4838     0DD2  00F6               	movwf	Lcd_Cmd_4bits@a
  4839     0DD3                     l1487:
  4840                           
  4841                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  4842     0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  4843     0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  4844     0DD5  1108               	bcf	8,2	;volatile
  4845     0DD6                     l1489:
  4846                           
  4847                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  4848     0DD6  0876               	movf	Lcd_Cmd_4bits@a,w
  4849     0DD7  120A  158A  25EC  120A  158A  	fcall	_Lcd_Port_4bits
  4850     0DDC                     l1491:
  4851                           
  4852                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  4853     0DDC  1283               	bcf	3,5	;RP0=0, select bank0
  4854     0DDD  1303               	bcf	3,6	;RP1=0, select bank0
  4855     0DDE  1588               	bsf	8,3	;volatile
  4856     0DDF                     l1493:
  4857                           
  4858                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  4859     0DDF  300B               	movlw	11
  4860     0DE0  00F5               	movwf	??_Lcd_Cmd_4bits+1
  4861     0DE1  3062               	movlw	98
  4862     0DE2  00F4               	movwf	??_Lcd_Cmd_4bits
  4863     0DE3                     u2547:
  4864     0DE3  0BF4               	decfsz	??_Lcd_Cmd_4bits,f
  4865     0DE4  2DE3               	goto	u2547
  4866     0DE5  0BF5               	decfsz	??_Lcd_Cmd_4bits+1,f
  4867     0DE6  2DE3               	goto	u2547
  4868     0DE7  0000               	nop
  4869     0DE8                     l1495:
  4870                           
  4871                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  4872     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  4873     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  4874     0DEA  1188               	bcf	8,3	;volatile
  4875     0DEB                     l78:
  4876     0DEB  0008               	return
  4877     0DEC                     __end_of_Lcd_Cmd_4bits:
  4878                           
  4879                           	psect	text25
  4880     0DEC                     __ptext25:	
  4881 ;; *************** function _Lcd_Port_4bits *****************
  4882 ;; Defined at:
  4883 ;;		line 14 in file "configLCD_4bits.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  a               1    wreg     unsigned char 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  a               1    3[COMMON] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		wreg
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4897 ;;      Params:         0       0       0       0       0
  4898 ;;      Locals:         1       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0
  4900 ;;      Totals:         1       0       0       0       0
  4901 ;;Total ram usage:        1 bytes
  4902 ;; Hardware stack levels used: 1
  4903 ;; Hardware stack levels required when called: 1
  4904 ;; This function calls:
  4905 ;;		Nothing
  4906 ;; This function is called by:
  4907 ;;		_Lcd_Cmd_4bits
  4908 ;;		_Lcd_Init_4bits
  4909 ;;		_Lcd_Write_Char_4bits
  4910 ;; This function uses a non-reentrant model
  4911 ;;
  4912                           
  4913     0DEC                     _Lcd_Port_4bits:	
  4914                           ;psect for function _Lcd_Port_4bits
  4915                           
  4916                           
  4917                           ;incstack = 0
  4918                           ; Regs used in _Lcd_Port_4bits: [wreg]
  4919                           ;Lcd_Port_4bits@a stored from wreg
  4920     0DEC  00F3               	movwf	Lcd_Port_4bits@a
  4921     0DED                     l1473:
  4922                           
  4923                           ;configLCD_4bits.c: 15:     if (a & 1)
  4924     0DED  1C73               	btfss	Lcd_Port_4bits@a,0
  4925     0DEE  2DF0               	goto	u981
  4926     0DEF  2DF1               	goto	u980
  4927     0DF0                     u981:
  4928     0DF0  2DF5               	goto	l67
  4929     0DF1                     u980:
  4930     0DF1                     l1475:
  4931                           
  4932                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  4933     0DF1  1283               	bcf	3,5	;RP0=0, select bank0
  4934     0DF2  1303               	bcf	3,6	;RP1=0, select bank0
  4935     0DF3  1608               	bsf	8,4	;volatile
  4936     0DF4  2DF8               	goto	l68
  4937     0DF5                     l67:	
  4938                           ;configLCD_4bits.c: 17:     else
  4939                           
  4940                           
  4941                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  4942     0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  4943     0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  4944     0DF7  1208               	bcf	8,4	;volatile
  4945     0DF8                     l68:
  4946                           
  4947                           ;configLCD_4bits.c: 20:     if (a & 2)
  4948     0DF8  1CF3               	btfss	Lcd_Port_4bits@a,1
  4949     0DF9  2DFB               	goto	u991
  4950     0DFA  2DFC               	goto	u990
  4951     0DFB                     u991:
  4952     0DFB  2DFE               	goto	l69
  4953     0DFC                     u990:
  4954     0DFC                     l1477:
  4955                           
  4956                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  4957     0DFC  1688               	bsf	8,5	;volatile
  4958     0DFD  2DFF               	goto	l70
  4959     0DFE                     l69:	
  4960                           ;configLCD_4bits.c: 22:     else
  4961                           
  4962                           
  4963                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  4964     0DFE  1288               	bcf	8,5	;volatile
  4965     0DFF                     l70:
  4966                           
  4967                           ;configLCD_4bits.c: 25:     if (a & 4)
  4968     0DFF  1D73               	btfss	Lcd_Port_4bits@a,2
  4969     0E00  2E02               	goto	u1001
  4970     0E01  2E03               	goto	u1000
  4971     0E02                     u1001:
  4972     0E02  2E05               	goto	l71
  4973     0E03                     u1000:
  4974     0E03                     l1479:
  4975                           
  4976                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  4977     0E03  1708               	bsf	8,6	;volatile
  4978     0E04  2E06               	goto	l72
  4979     0E05                     l71:	
  4980                           ;configLCD_4bits.c: 27:     else
  4981                           
  4982                           
  4983                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  4984     0E05  1308               	bcf	8,6	;volatile
  4985     0E06                     l72:
  4986                           
  4987                           ;configLCD_4bits.c: 30:     if (a & 8)
  4988     0E06  1DF3               	btfss	Lcd_Port_4bits@a,3
  4989     0E07  2E09               	goto	u1011
  4990     0E08  2E0A               	goto	u1010
  4991     0E09                     u1011:
  4992     0E09  2E0C               	goto	l73
  4993     0E0A                     u1010:
  4994     0E0A                     l1481:
  4995                           
  4996                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  4997     0E0A  1788               	bsf	8,7	;volatile
  4998     0E0B  2E0D               	goto	l75
  4999     0E0C                     l73:	
  5000                           ;configLCD_4bits.c: 32:     else
  5001                           
  5002                           
  5003                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  5004     0E0C  1388               	bcf	8,7	;volatile
  5005     0E0D                     l75:
  5006     0E0D  0008               	return
  5007     0E0E                     __end_of_Lcd_Port_4bits:
  5008                           
  5009                           	psect	text26
  5010     0406                     __ptext26:	
  5011 ;; *************** function _ISR *****************
  5012 ;; Defined at:
  5013 ;;		line 70 in file "main_M.c"
  5014 ;; Parameters:    Size  Location     Type
  5015 ;;		None
  5016 ;; Auto vars:     Size  Location     Type
  5017 ;;		None
  5018 ;; Return value:  Size  Location     Type
  5019 ;;                  1    wreg      void 
  5020 ;; Registers used:
  5021 ;;		wreg, status,2, status,0
  5022 ;; Tracked objects:
  5023 ;;		On entry : 0/0
  5024 ;;		On exit  : 0/0
  5025 ;;		Unchanged: 0/0
  5026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5027 ;;      Params:         0       0       0       0       0
  5028 ;;      Locals:         0       0       0       0       0
  5029 ;;      Temps:          3       0       0       0       0
  5030 ;;      Totals:         3       0       0       0       0
  5031 ;;Total ram usage:        3 bytes
  5032 ;; Hardware stack levels used: 1
  5033 ;; This function calls:
  5034 ;;		Nothing
  5035 ;; This function is called by:
  5036 ;;		Interrupt level 1
  5037 ;; This function uses a non-reentrant model
  5038 ;;
  5039                           
  5040     0406                     _ISR:	
  5041                           ;psect for function _ISR
  5042                           
  5043     0406                     i1l1875:
  5044                           
  5045                           ;main_M.c: 72:     if (INTCONbits.RBIF == 1)
  5046     0406  1C0B               	btfss	11,0	;volatile
  5047     0407  2C09               	goto	u161_21
  5048     0408  2C0A               	goto	u161_20
  5049     0409                     u161_21:
  5050     0409  2CE0               	goto	i1l241
  5051     040A                     u161_20:
  5052     040A                     i1l1877:
  5053                           
  5054                           ;main_M.c: 73:     {;main_M.c: 74:         if(!PORTBbits.RB0)
  5055     040A  1283               	bcf	3,5	;RP0=0, select bank0
  5056     040B  1303               	bcf	3,6	;RP1=0, select bank0
  5057     040C  1806               	btfsc	6,0	;volatile
  5058     040D  2C0F               	goto	u162_21
  5059     040E  2C10               	goto	u162_20
  5060     040F                     u162_21:
  5061     040F  2C1B               	goto	i1l1883
  5062     0410                     u162_20:
  5063     0410                     i1l1879:
  5064                           
  5065                           ;main_M.c: 75:         {;main_M.c: 76:             modo++;
  5066     0410  3001               	movlw	1
  5067     0411  00F0               	movwf	??_ISR
  5068     0412  0870               	movf	??_ISR,w
  5069     0413  07B0               	addwf	_modo,f
  5070                           
  5071                           ;main_M.c: 78:             if(modo == 7)
  5072     0414  3007               	movlw	7
  5073     0415  0630               	xorwf	_modo,w
  5074     0416  1D03               	btfss	3,2
  5075     0417  2C19               	goto	u163_21
  5076     0418  2C1A               	goto	u163_20
  5077     0419                     u163_21:
  5078     0419  2C1B               	goto	i1l1883
  5079     041A                     u163_20:
  5080     041A                     i1l1881:
  5081                           
  5082                           ;main_M.c: 79:             {;main_M.c: 80:             modo = 0;
  5083     041A  01B0               	clrf	_modo
  5084     041B                     i1l1883:
  5085                           
  5086                           ;main_M.c: 84:         if (modo == 1)
  5087     041B  0330               	decf	_modo,w
  5088     041C  1D03               	btfss	3,2
  5089     041D  2C1F               	goto	u164_21
  5090     041E  2C20               	goto	u164_20
  5091     041F                     u164_21:
  5092     041F  2C3C               	goto	i1l1897
  5093     0420                     u164_20:
  5094     0420                     i1l1885:
  5095                           
  5096                           ;main_M.c: 85:         {;main_M.c: 86:             if(!PORTBbits.RB1)
  5097     0420  1886               	btfsc	6,1	;volatile
  5098     0421  2C23               	goto	u165_21
  5099     0422  2C24               	goto	u165_20
  5100     0423                     u165_21:
  5101     0423  2C2F               	goto	i1l1891
  5102     0424                     u165_20:
  5103     0424                     i1l1887:
  5104                           
  5105                           ;main_M.c: 87:             {;main_M.c: 88:                 ++modifSEG;
  5106     0424  3001               	movlw	1
  5107     0425  00F0               	movwf	??_ISR
  5108     0426  0870               	movf	??_ISR,w
  5109     0427  07A5               	addwf	_modifSEG,f
  5110                           
  5111                           ;main_M.c: 89:                 if (modifSEG == 60)
  5112     0428  303C               	movlw	60
  5113     0429  0625               	xorwf	_modifSEG,w
  5114     042A  1D03               	btfss	3,2
  5115     042B  2C2D               	goto	u166_21
  5116     042C  2C2E               	goto	u166_20
  5117     042D                     u166_21:
  5118     042D  2C2F               	goto	i1l1891
  5119     042E                     u166_20:
  5120     042E                     i1l1889:
  5121                           
  5122                           ;main_M.c: 90:                 {;main_M.c: 91:                     modifSEG = 0;
  5123     042E  01A5               	clrf	_modifSEG
  5124     042F                     i1l1891:
  5125                           
  5126                           ;main_M.c: 95:             if(!PORTBbits.RB2)
  5127     042F  1906               	btfsc	6,2	;volatile
  5128     0430  2C32               	goto	u167_21
  5129     0431  2C33               	goto	u167_20
  5130     0432                     u167_21:
  5131     0432  2C3C               	goto	i1l1897
  5132     0433                     u167_20:
  5133     0433                     i1l1893:
  5134                           
  5135                           ;main_M.c: 96:             {;main_M.c: 97:                 --modifSEG;
  5136     0433  3001               	movlw	1
  5137     0434  02A5               	subwf	_modifSEG,f
  5138                           
  5139                           ;main_M.c: 98:                 if (modifSEG == 0)
  5140     0435  0825               	movf	_modifSEG,w
  5141     0436  1D03               	btfss	3,2
  5142     0437  2C39               	goto	u168_21
  5143     0438  2C3A               	goto	u168_20
  5144     0439                     u168_21:
  5145     0439  2C3C               	goto	i1l1897
  5146     043A                     u168_20:
  5147     043A                     i1l1895:
  5148                           
  5149                           ;main_M.c: 99:                 {;main_M.c: 100:                     modifSEG = 59;
  5150     043A  303B               	movlw	59
  5151     043B  00A5               	movwf	_modifSEG
  5152     043C                     i1l1897:
  5153                           
  5154                           ;main_M.c: 105:         if (modo == 2)
  5155     043C  3002               	movlw	2
  5156     043D  0630               	xorwf	_modo,w
  5157     043E  1D03               	btfss	3,2
  5158     043F  2C41               	goto	u169_21
  5159     0440  2C42               	goto	u169_20
  5160     0441                     u169_21:
  5161     0441  2C5E               	goto	i1l1911
  5162     0442                     u169_20:
  5163     0442                     i1l1899:
  5164                           
  5165                           ;main_M.c: 106:         {;main_M.c: 107:             if(!PORTBbits.RB1)
  5166     0442  1886               	btfsc	6,1	;volatile
  5167     0443  2C45               	goto	u170_21
  5168     0444  2C46               	goto	u170_20
  5169     0445                     u170_21:
  5170     0445  2C51               	goto	i1l1905
  5171     0446                     u170_20:
  5172     0446                     i1l1901:
  5173                           
  5174                           ;main_M.c: 108:             {;main_M.c: 109:                 ++modifMIN;
  5175     0446  3001               	movlw	1
  5176     0447  00F0               	movwf	??_ISR
  5177     0448  0870               	movf	??_ISR,w
  5178     0449  07A4               	addwf	_modifMIN,f
  5179                           
  5180                           ;main_M.c: 110:                 if (modifMIN == 60)
  5181     044A  303C               	movlw	60
  5182     044B  0624               	xorwf	_modifMIN,w
  5183     044C  1D03               	btfss	3,2
  5184     044D  2C4F               	goto	u171_21
  5185     044E  2C50               	goto	u171_20
  5186     044F                     u171_21:
  5187     044F  2C51               	goto	i1l1905
  5188     0450                     u171_20:
  5189     0450                     i1l1903:
  5190                           
  5191                           ;main_M.c: 111:                 {;main_M.c: 112:                     modifMIN = 0;
  5192     0450  01A4               	clrf	_modifMIN
  5193     0451                     i1l1905:
  5194                           
  5195                           ;main_M.c: 116:             if(!PORTBbits.RB2)
  5196     0451  1906               	btfsc	6,2	;volatile
  5197     0452  2C54               	goto	u172_21
  5198     0453  2C55               	goto	u172_20
  5199     0454                     u172_21:
  5200     0454  2C5E               	goto	i1l1911
  5201     0455                     u172_20:
  5202     0455                     i1l1907:
  5203                           
  5204                           ;main_M.c: 117:             {;main_M.c: 118:                 --modifMIN;
  5205     0455  3001               	movlw	1
  5206     0456  02A4               	subwf	_modifMIN,f
  5207                           
  5208                           ;main_M.c: 119:                 if (modifMIN == 0)
  5209     0457  0824               	movf	_modifMIN,w
  5210     0458  1D03               	btfss	3,2
  5211     0459  2C5B               	goto	u173_21
  5212     045A  2C5C               	goto	u173_20
  5213     045B                     u173_21:
  5214     045B  2C5E               	goto	i1l1911
  5215     045C                     u173_20:
  5216     045C                     i1l1909:
  5217                           
  5218                           ;main_M.c: 120:                 {;main_M.c: 121:                     modifMIN = 59;
  5219     045C  303B               	movlw	59
  5220     045D  00A4               	movwf	_modifMIN
  5221     045E                     i1l1911:
  5222                           
  5223                           ;main_M.c: 126:         if (modo == 3)
  5224     045E  3003               	movlw	3
  5225     045F  0630               	xorwf	_modo,w
  5226     0460  1D03               	btfss	3,2
  5227     0461  2C63               	goto	u174_21
  5228     0462  2C64               	goto	u174_20
  5229     0463                     u174_21:
  5230     0463  2C80               	goto	i1l1925
  5231     0464                     u174_20:
  5232     0464                     i1l1913:
  5233                           
  5234                           ;main_M.c: 127:         {;main_M.c: 128:             if(!PORTBbits.RB1)
  5235     0464  1886               	btfsc	6,1	;volatile
  5236     0465  2C67               	goto	u175_21
  5237     0466  2C68               	goto	u175_20
  5238     0467                     u175_21:
  5239     0467  2C73               	goto	i1l1919
  5240     0468                     u175_20:
  5241     0468                     i1l1915:
  5242                           
  5243                           ;main_M.c: 129:             {;main_M.c: 130:                 ++modifHOR;
  5244     0468  3001               	movlw	1
  5245     0469  00F0               	movwf	??_ISR
  5246     046A  0870               	movf	??_ISR,w
  5247     046B  07A3               	addwf	_modifHOR,f
  5248                           
  5249                           ;main_M.c: 131:                 if (modifHOR == 60)
  5250     046C  303C               	movlw	60
  5251     046D  0623               	xorwf	_modifHOR,w
  5252     046E  1D03               	btfss	3,2
  5253     046F  2C71               	goto	u176_21
  5254     0470  2C72               	goto	u176_20
  5255     0471                     u176_21:
  5256     0471  2C73               	goto	i1l1919
  5257     0472                     u176_20:
  5258     0472                     i1l1917:
  5259                           
  5260                           ;main_M.c: 132:                 {;main_M.c: 133:                     modifHOR = 0;
  5261     0472  01A3               	clrf	_modifHOR
  5262     0473                     i1l1919:
  5263                           
  5264                           ;main_M.c: 137:             if(!PORTBbits.RB2)
  5265     0473  1906               	btfsc	6,2	;volatile
  5266     0474  2C76               	goto	u177_21
  5267     0475  2C77               	goto	u177_20
  5268     0476                     u177_21:
  5269     0476  2C80               	goto	i1l1925
  5270     0477                     u177_20:
  5271     0477                     i1l1921:
  5272                           
  5273                           ;main_M.c: 138:             {;main_M.c: 139:                 --modifHOR;
  5274     0477  3001               	movlw	1
  5275     0478  02A3               	subwf	_modifHOR,f
  5276                           
  5277                           ;main_M.c: 140:                 if (modifHOR == 0)
  5278     0479  0823               	movf	_modifHOR,w
  5279     047A  1D03               	btfss	3,2
  5280     047B  2C7D               	goto	u178_21
  5281     047C  2C7E               	goto	u178_20
  5282     047D                     u178_21:
  5283     047D  2C80               	goto	i1l1925
  5284     047E                     u178_20:
  5285     047E                     i1l1923:
  5286                           
  5287                           ;main_M.c: 141:                 {;main_M.c: 142:                     modifHOR = 59;
  5288     047E  303B               	movlw	59
  5289     047F  00A3               	movwf	_modifHOR
  5290     0480                     i1l1925:
  5291                           
  5292                           ;main_M.c: 147:         if (modo == 4)
  5293     0480  3004               	movlw	4
  5294     0481  0630               	xorwf	_modo,w
  5295     0482  1D03               	btfss	3,2
  5296     0483  2C85               	goto	u179_21
  5297     0484  2C86               	goto	u179_20
  5298     0485                     u179_21:
  5299     0485  2CA2               	goto	i1l1939
  5300     0486                     u179_20:
  5301     0486                     i1l1927:
  5302                           
  5303                           ;main_M.c: 148:         {;main_M.c: 149:             if(!PORTBbits.RB1)
  5304     0486  1886               	btfsc	6,1	;volatile
  5305     0487  2C89               	goto	u180_21
  5306     0488  2C8A               	goto	u180_20
  5307     0489                     u180_21:
  5308     0489  2C95               	goto	i1l1933
  5309     048A                     u180_20:
  5310     048A                     i1l1929:
  5311                           
  5312                           ;main_M.c: 150:             {;main_M.c: 151:                 ++modifDIA;
  5313     048A  3001               	movlw	1
  5314     048B  00F0               	movwf	??_ISR
  5315     048C  0870               	movf	??_ISR,w
  5316     048D  07A2               	addwf	_modifDIA,f
  5317                           
  5318                           ;main_M.c: 152:                 if (modifDIA == 31)
  5319     048E  301F               	movlw	31
  5320     048F  0622               	xorwf	_modifDIA,w
  5321     0490  1D03               	btfss	3,2
  5322     0491  2C93               	goto	u181_21
  5323     0492  2C94               	goto	u181_20
  5324     0493                     u181_21:
  5325     0493  2C95               	goto	i1l1933
  5326     0494                     u181_20:
  5327     0494                     i1l1931:
  5328                           
  5329                           ;main_M.c: 153:                 {;main_M.c: 154:                     modifDIA = 0;
  5330     0494  01A2               	clrf	_modifDIA
  5331     0495                     i1l1933:
  5332                           
  5333                           ;main_M.c: 158:             if(!PORTBbits.RB2)
  5334     0495  1906               	btfsc	6,2	;volatile
  5335     0496  2C98               	goto	u182_21
  5336     0497  2C99               	goto	u182_20
  5337     0498                     u182_21:
  5338     0498  2CA2               	goto	i1l1939
  5339     0499                     u182_20:
  5340     0499                     i1l1935:
  5341                           
  5342                           ;main_M.c: 159:             {;main_M.c: 160:                 --modifDIA;
  5343     0499  3001               	movlw	1
  5344     049A  02A2               	subwf	_modifDIA,f
  5345                           
  5346                           ;main_M.c: 161:                 if (modifDIA == 0)
  5347     049B  0822               	movf	_modifDIA,w
  5348     049C  1D03               	btfss	3,2
  5349     049D  2C9F               	goto	u183_21
  5350     049E  2CA0               	goto	u183_20
  5351     049F                     u183_21:
  5352     049F  2CA2               	goto	i1l1939
  5353     04A0                     u183_20:
  5354     04A0                     i1l1937:
  5355                           
  5356                           ;main_M.c: 162:                 {;main_M.c: 163:                     modifDIA = 31;
  5357     04A0  301F               	movlw	31
  5358     04A1  00A2               	movwf	_modifDIA
  5359     04A2                     i1l1939:
  5360                           
  5361                           ;main_M.c: 168:         if (modo == 5)
  5362     04A2  3005               	movlw	5
  5363     04A3  0630               	xorwf	_modo,w
  5364     04A4  1D03               	btfss	3,2
  5365     04A5  2CA7               	goto	u184_21
  5366     04A6  2CA8               	goto	u184_20
  5367     04A7                     u184_21:
  5368     04A7  2CC4               	goto	i1l1953
  5369     04A8                     u184_20:
  5370     04A8                     i1l1941:
  5371                           
  5372                           ;main_M.c: 169:         {;main_M.c: 170:             if(!PORTBbits.RB1)
  5373     04A8  1886               	btfsc	6,1	;volatile
  5374     04A9  2CAB               	goto	u185_21
  5375     04AA  2CAC               	goto	u185_20
  5376     04AB                     u185_21:
  5377     04AB  2CB7               	goto	i1l1947
  5378     04AC                     u185_20:
  5379     04AC                     i1l1943:
  5380                           
  5381                           ;main_M.c: 171:             {;main_M.c: 172:                 ++modifMES;
  5382     04AC  3001               	movlw	1
  5383     04AD  00F0               	movwf	??_ISR
  5384     04AE  0870               	movf	??_ISR,w
  5385     04AF  07A1               	addwf	_modifMES,f
  5386                           
  5387                           ;main_M.c: 173:                 if (modifMES == 13)
  5388     04B0  300D               	movlw	13
  5389     04B1  0621               	xorwf	_modifMES,w
  5390     04B2  1D03               	btfss	3,2
  5391     04B3  2CB5               	goto	u186_21
  5392     04B4  2CB6               	goto	u186_20
  5393     04B5                     u186_21:
  5394     04B5  2CB7               	goto	i1l1947
  5395     04B6                     u186_20:
  5396     04B6                     i1l1945:
  5397                           
  5398                           ;main_M.c: 174:                 {;main_M.c: 175:                     modifMES = 0;
  5399     04B6  01A1               	clrf	_modifMES
  5400     04B7                     i1l1947:
  5401                           
  5402                           ;main_M.c: 179:             if(!PORTBbits.RB2)
  5403     04B7  1906               	btfsc	6,2	;volatile
  5404     04B8  2CBA               	goto	u187_21
  5405     04B9  2CBB               	goto	u187_20
  5406     04BA                     u187_21:
  5407     04BA  2CC4               	goto	i1l1953
  5408     04BB                     u187_20:
  5409     04BB                     i1l1949:
  5410                           
  5411                           ;main_M.c: 180:             {;main_M.c: 181:                 --modifMES;
  5412     04BB  3001               	movlw	1
  5413     04BC  02A1               	subwf	_modifMES,f
  5414                           
  5415                           ;main_M.c: 182:                 if (modifMES == 0)
  5416     04BD  0821               	movf	_modifMES,w
  5417     04BE  1D03               	btfss	3,2
  5418     04BF  2CC1               	goto	u188_21
  5419     04C0  2CC2               	goto	u188_20
  5420     04C1                     u188_21:
  5421     04C1  2CC4               	goto	i1l1953
  5422     04C2                     u188_20:
  5423     04C2                     i1l1951:
  5424                           
  5425                           ;main_M.c: 183:                 {;main_M.c: 184:                     modifMES = 12;
  5426     04C2  300C               	movlw	12
  5427     04C3  00A1               	movwf	_modifMES
  5428     04C4                     i1l1953:
  5429                           
  5430                           ;main_M.c: 189:         if (modo == 6)
  5431     04C4  3006               	movlw	6
  5432     04C5  0630               	xorwf	_modo,w
  5433     04C6  1D03               	btfss	3,2
  5434     04C7  2CC9               	goto	u189_21
  5435     04C8  2CCA               	goto	u189_20
  5436     04C9                     u189_21:
  5437     04C9  2CDF               	goto	i1l1967
  5438     04CA                     u189_20:
  5439     04CA                     i1l1955:
  5440                           
  5441                           ;main_M.c: 190:         {;main_M.c: 191:             if(!PORTBbits.RB1)
  5442     04CA  1886               	btfsc	6,1	;volatile
  5443     04CB  2CCD               	goto	u190_21
  5444     04CC  2CCE               	goto	u190_20
  5445     04CD                     u190_21:
  5446     04CD  2CD2               	goto	i1l1961
  5447     04CE                     u190_20:
  5448     04CE                     i1l1957:
  5449                           
  5450                           ;main_M.c: 192:             {;main_M.c: 193:                 ++modifAO;
  5451     04CE  3001               	movlw	1
  5452     04CF  00F0               	movwf	??_ISR
  5453     04D0  0870               	movf	??_ISR,w
  5454     04D1  07A0               	addwf	_modifAO,f
  5455     04D2                     i1l1961:	
  5456                           ;main_M.c: 194:                 if (modifAO == 9999)
  5457                           
  5458                           
  5459                           ;main_M.c: 200:             if(!PORTBbits.RB2)
  5460     04D2  1906               	btfsc	6,2	;volatile
  5461     04D3  2CD5               	goto	u191_21
  5462     04D4  2CD6               	goto	u191_20
  5463     04D5                     u191_21:
  5464     04D5  2CDF               	goto	i1l1967
  5465     04D6                     u191_20:
  5466     04D6                     i1l1963:
  5467                           
  5468                           ;main_M.c: 201:             {;main_M.c: 202:                 --modifAO;
  5469     04D6  3001               	movlw	1
  5470     04D7  02A0               	subwf	_modifAO,f
  5471                           
  5472                           ;main_M.c: 203:                 if (modifAO == 0)
  5473     04D8  0820               	movf	_modifAO,w
  5474     04D9  1D03               	btfss	3,2
  5475     04DA  2CDC               	goto	u192_21
  5476     04DB  2CDD               	goto	u192_20
  5477     04DC                     u192_21:
  5478     04DC  2CDF               	goto	i1l1967
  5479     04DD                     u192_20:
  5480     04DD                     i1l1965:
  5481                           
  5482                           ;main_M.c: 204:                 {;main_M.c: 205:                     modifAO = 9999;
  5483     04DD  300F               	movlw	15
  5484     04DE  00A0               	movwf	_modifAO
  5485     04DF                     i1l1967:
  5486                           
  5487                           ;main_M.c: 210:         INTCONbits.RBIF = 0;
  5488     04DF  100B               	bcf	11,0	;volatile
  5489     04E0                     i1l241:
  5490     04E0  0872               	movf	??_ISR+2,w
  5491     04E1  008A               	movwf	10
  5492     04E2  0E71               	swapf	??_ISR+1,w
  5493     04E3  0083               	movwf	3
  5494     04E4  0EFE               	swapf	btemp,f
  5495     04E5  0E7E               	swapf	btemp,w
  5496     04E6  0009               	retfie
  5497     04E7                     __end_of_ISR:
  5498     007E                     btemp	set	126	;btemp
  5499     007E                     wtemp0	set	126
  5500                           
  5501                           	psect	intentry
  5502     0004                     __pintentry:	
  5503                           ;incstack = 0
  5504                           ; Regs used in _ISR: [wreg+status,2+status,0]
  5505                           
  5506     0004                     interrupt_function:
  5507     007E                     saved_w	set	btemp
  5508     0004  00FE               	movwf	btemp
  5509     0005  0E03               	swapf	3,w
  5510     0006  00F1               	movwf	??_ISR+1
  5511     0007  080A               	movf	10,w
  5512     0008  00F2               	movwf	??_ISR+2
  5513     0009  120A  118A  2C06   	ljmp	_ISR
  5514                           
  5515                           	psect	idloc
  5516                           
  5517                           ;Config register IDLOC0 @ 0x2000
  5518                           ;	unspecified, using default values
  5519     2000                     	org	8192
  5520     2000  3FFF               	dw	16383
  5521                           
  5522                           ;Config register IDLOC1 @ 0x2001
  5523                           ;	unspecified, using default values
  5524     2001                     	org	8193
  5525     2001  3FFF               	dw	16383
  5526                           
  5527                           ;Config register IDLOC2 @ 0x2002
  5528                           ;	unspecified, using default values
  5529     2002                     	org	8194
  5530     2002  3FFF               	dw	16383
  5531                           
  5532                           ;Config register IDLOC3 @ 0x2003
  5533                           ;	unspecified, using default values
  5534     2003                     	org	8195
  5535     2003  3FFF               	dw	16383
  5536                           
  5537                           	psect	config
  5538                           
  5539                           ;Config register CONFIG1 @ 0x2007
  5540                           ;	Oscillator Selection bits
  5541                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5542                           ;	Watchdog Timer Enable bit
  5543                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5544                           ;	Power-up Timer Enable bit
  5545                           ;	PWRTE = OFF, PWRT disabled
  5546                           ;	RE3/MCLR pin function select bit
  5547                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5548                           ;	Code Protection bit
  5549                           ;	CP = OFF, Program memory code protection is disabled
  5550                           ;	Data Code Protection bit
  5551                           ;	CPD = OFF, Data memory code protection is disabled
  5552                           ;	Brown Out Reset Selection bits
  5553                           ;	BOREN = OFF, BOR disabled
  5554                           ;	Internal External Switchover bit
  5555                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5556                           ;	Fail-Safe Clock Monitor Enabled bit
  5557                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5558                           ;	Low Voltage Programming Enable bit
  5559                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5560                           ;	In-Circuit Debugger Mode bit
  5561                           ;	DEBUG = 0x1, unprogramme  5562     2007                     	org	8199
  5563     2007  20D4               	dw	8404
  5564                           
  5565                           ;Config register CONFIG2 @ 0x2008
  5566                           ;	Brown-out Reset Selection bit
  5567                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5568                           ;	Flash Program Memory Self Write Enable bits
  5569                           ;	WRT = OFF, Write protection off
  5570     2008                     	org	8200
  5571     2008  3FFF               	dw	16383

Data Sizes:
    Strings     7
    Constant    10
    Data        18
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     23      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> ADC1(BANK0[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 10
		 -> fecha(BANK0[10]), tiempo(BANK0[8]), ADC1(BANK0[9]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String_4bits
    _main->_modifRTC
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init_4bits
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    _modifRTC->___awmod
    ___awmod->___awdiv
    _leerRTC->_I2C_Master_Read
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    _modifRTC->___awmod
    ___awmod->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   20507
                                             20 BANK0      3     3      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                            _leerRTC
                           _modifRTC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    1777
                                              7 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     762
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              7 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _modifRTC                                             5     3      2    7606
                                              9 COMMON     1     1      0
                                             10 BANK0      4     2      2
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    3133
                                              8 COMMON     1     1      0
                                              4 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    3145
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _leerRTC                                              4     4      0    1204
                                              0 BANK0      4     4      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     168
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     661
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     245
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2     876
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              4 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1     988
                                              7 COMMON     2     1      1
                                              0 BANK0      4     4      0
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              4 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _leerRTC
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___bmul
   _modifRTC
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___awdiv
     ___awmod
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4E      12        0.0%
ABS                  0      0      4E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 16 12:38:19 2023

                               _D 007A                                 pc 0002                    ___bmul@product 0075  
                              l32 0D7E                                l41 0D5E                                l50 0E33  
                              l35 0D8A                                l51 0E36                                l52 0E3B  
                              l44 0D70                                l60 0D97                                l29 0EDC  
                              _AO 0026                                l70 0DFF                                l38 0D67  
                              l71 0E05                                l47 07FF                                l72 0E06  
                              l73 0E0C                                l81 0D7D                                l90 07A9  
                              l75 0E0D                                l67 0DF5                                l68 0DF8  
                              l69 0DFE                                l93 0EA2                                l78 0DEB  
                              l87 07F5                                l99 0F5E                      ___awdiv@sign 003B  
                              fsr 0004                               l411 0DD1                               l421 06E8  
                             l254 0E6D                               l271 074C                               l274 0617  
                             l381 05A9                               l551 0FFF                               l538 0680  
                             l657 0FA4                               l667 0F18                               _DIA 0028  
                             _GIE 005F                               _HOR 0029                               _MES 0027  
                             _MIN 002A                               _ISR 0406                               _SEG 002B  
                             u980 0DF1                               u981 0DF0                               u990 0DFC  
                             u991 0DFB                               fsr0 0004                               indf 0000  
                    ___awmod@sign 0043                       leerRTC@DATO 003D                              ?_ISR 0070  
                            l2101 0E1B                              l2103 0E24                              l2041 0D7E  
                            l2105 0E29                              l2121 0626                              l2113 0618  
                            l2201 0F6C                              l2043 0D84                              l2107 0E2F  
                            l2131 063B                              l2123 062A                              l2115 061B  
                            l2051 06A3                              l2211 0F92                              l2203 0F73  
                            l2109 0E37                              l2141 065E                              l2133 063E  
                            l2125 062F                              l2117 061F                              l2061 06D1  
                            l2053 06A7                              l2045 0681                              l2213 0F93  
                            l2205 0F77                              l2221 0EDD                              l2151 0677  
                            l2143 0664                              l2135 0645                              l2127 0633  
                            l2119 0624                              l2063 06DA                              l2055 06B0  
                            l2047 0693                              l2071 0EA7                              l2215 0F9A  
                            l2207 0F7B                              l2231 0EF7                              l2223 0EE5  
                            l2311 0555                              l2303 052C                              l2081 0D5F  
                            l1601 0DBF                              l2153 067C                              l2145 0665  
                            l2137 0649                              l2129 0635                              l2161 0FAC  
                            l2057 06C2                              l2049 0696                              l2065 06E0  
                            l2073 0EAA                              l2209 0F8C                              l2217 0FA0  
                            l2233 0F01                              l2225 0EE8                              l2313 0583  
                            l2321 05A5                              l2083 0D64                              l2091 0D6D  
                            l1603 0DC3                              l2147 066C                              l2139 064D  
                            l2171 0FC2                              l2163 0FB1                              l2331 060C  
                            l2059 06D0                              l2075 0ED9                              l2251 0E47  
                            l2243 0E3C                              l2235 0F07                              l2227 0EEF  
                            l2315 0588                              l2307 0548                              l2411 0516  
                            l2085 0D56                              l2093 07F6                              l1605 0DC7  
                            l2333 06EC                              l2149 0672                              l2181 0FDE  
                            l2173 0FC5                              l2165 0FB3                              l2157 0FA5  
                            l2077 0EDA                              l2069 0EA3                              l2261 0E50  
                            l2253 0E48                              l2245 0E43                              l2237 0F0E  
                            l2229 0EF3                              l2317 058C                              l2309 0552  
                            l2341 002A                              l2087 0D5B                              l2095 07FB  
                            l1607 0DC9                              l2335 0727                              l2191 0FFB  
                            l2183 0FE4                              l2175 0FCC                              l2167 0FB7  
                            l2159 0FA8                              l2079 0EDB                              l2271 0E6A  
                            l2263 0E51                              l2255 0E49                              l2247 0E45  
                            l2239 0F14                              l2319 0595                              l2351 0057  
                            l2343 003C                              l1481 0E0A                              l1473 0DED  
                            l2097 0E0E                              l2089 0D68                              l1609 0DD0  
                            l2337 0732                              l2185 0FEB                              l2177 0FD0  
                            l2169 0FBC                              l2329 05AB                              l2273 0E6B  
                            l2265 0E5E                              l2257 0E4C                              l2249 0E46  
                            l2281 04F3                              l2361 00B0                              l2353 0063  
                            l2345 0045                              l1475 0DF1                              l1491 0DDC  
                            l2099 0E13                              l2179 0FD4                              l2187 0FF1  
                            l1571 0753                              l2275 0E6C                              l2267 0E64  
                            l2259 0E4F                              l2195 0F5F                              l2291 0504  
                            l2283 04F8                              l2371 0117                              l2363 00D3  
                            l2355 0068                              l2347 0049                              l1477 0DFC  
                            l1493 0DDF                              l1581 0E75                              l2189 0FF6  
                            l1573 075C                              l1565 0D8C                              l2269 0E69  
                            l2197 0F63                              l2293 051E                              l2285 04FD  
                            l2277 04EA                              l2381 0296                              l2373 011F  
                            l2365 00DB                              l2357 0077                              l2349 004E  
                            l1479 0E03                              l1495 0DE8                              l1487 0DD3  
                            l1743 0D71                              l1751 07C2                              l1591 0E91  
                            l1583 0E78                              l1575 076B                              l1567 0D96  
                            l2199 0F69                              l2295 0526                              l2287 04FF  
                            l2279 04ED                              l2383 02A7                              l2375 0128  
                            l2367 00E4                              l2359 008D                              _ADC1 0031  
                            l1489 0DD6                              l1761 07E7                              l1753 07C8  
                            l1745 07AD                              l1593 0E97                              l1585 0E86  
                            l1577 0771                              l1569 074D                              l2297 052A  
                            l2385 02AE                              l2377 012F                              l2369 00F5  
                            l1763 07ED                              l1747 07B2                              l1755 07D1  
                            l1595 0E9A                              l1587 0E89                              l1579 0E6F  
                            l1771 0F42                              l2387 03E8                              l2379 028D  
                            l1757 07D7                              l1749 07BF                              l1597 0E9F  
                            l1589 0E8E                              l1765 0F19                              l2389 03F1  
                            l1759 07E4                              l1767 0F1E                              l1599 0DBE  
                            l1769 0F3A                              STR_1 081A                              STR_2 081E  
                            STR_3 081E                              STR_4 081E                              u1000 0E03  
                            u1001 0E02                              u1010 0E0A                              u1011 0E09  
                            u2010 06C2                              u2011 06C1                              u1140 0DC3  
                            u2100 064D                              u1141 0DC2                              u2101 064C  
                            u2005 06A9                              u1150 0DD0                              u2030 06E0  
                            u1135 0E7B                              u1151 0DCF                              u2031 06DF  
                            u2015 06BE                              u2120 065E                              u2200 0FD4  
                            u2040 0EBA                              u2121 065D                              u2201 0FD3  
                            u2025 06D2                              u2050 0E2F                              u2210 0FDE  
                            u2051 0E2E                              u2115 064E                              u2211 0FDD  
                            u1500 07D7                              u2140 0672                              u2060 061F  
                            _IOCB 0096                              u1501 07D6                              u2141 0671  
                            u2125 065A                              u2061 061E                              u2045 0EB5  
                            u2150 0677                              u2070 062A                              u2230 0FF1  
                            u2310 0FA0                              u2151 0676                              u2135 0666  
                            u2071 0629                              u2231 0FF0                              u2215 0FDA  
                            u2311 0F9F                              u1520 0F28                              u2080 063B  
                            u2240 0FF6                              u2160 0FAC                              u2320 0EE5  
                            u2400 0552                              u2081 063A                              u2241 0FF5  
                            u2225 0FE5                              u2161 0FAB                              u2305 0F94  
                            u2321 0EE4                              u2401 0551                              u1530 0F4C  
                            u2170 0FB7                              u2250 0F69                              u2410 0595  
                            u1515 07DD                              u2171 0FB6                              u2251 0F68  
                            u2411 0594                              u1540 0F5E                              u2180 0FC2  
                            u2340 0EF7                              u2420 05A5                              u1541 0F5D  
                            u2181 0FC1                              u2341 0EF6                              u2421 05A4  
                            u2270 0F7B                              u2350 0F01                              u2095 063F  
                            u2271 0F7A                              u2351 0F00                              u2335 0EE9  
                            u1480 07B2                              u2440 012F                              u1481 07B1  
                            u2265 0F6D                              u2441 012E                              u2290 0F8C  
                            u2370 0F14                              u2450 02AE                              u2435 073C  
                            u2195 0FC6                              u2507 0612                              u2291 0F8B  
                            u2371 0F13                              u2355 0EFD                              u2451 02AD  
                            u2380 04F3                              u2517 072D                              u2285 0F7C  
                            u2365 0F08                              u2381 04F2                              u2390 0547  
                            u1495 07B8                              u2527 0E8B                              u2295 0F88  
                            u2391 0546                              u2537 0E9C                              u2547 0DE3  
                            u2395 0543                              u2467 0070                              u2477 0757  
                            u1950 0D84                              u1951 0D83                              u2487 0766  
                            u1960 0D8A                              u1961 0D89                              u2497 0775  
                            u1970 0693                              u1971 0692                              _PEIE 005E  
                            u1990 06A7                              u1991 06A6                              u1985 0698  
                            _VAL1 002F  __end_of_I2C_Master_RepeatedStart 0D5F                              _main 002A  
          _Lcd_Write_String_4bits 0F19                              _modo 0030                              btemp 007E  
                            start 000C                 ___bmul@multiplier 0076                             ??_ISR 0070  
                ?_I2C_Master_Init 0042                  ?_I2C_Master_Read 0073                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                             ?_main 0070                 ??_Lcd_Clear_4bits 0077  
                 __end_of___awdiv 0681                   __end_of___awmod 1000                             _ANSEL 0188  
                 __end_of___lldiv 06E9                   ___awdiv@divisor 0073                   __end_of___lwdiv 0FA5  
                           i1l241 04E0                   __end_of___lwmod 0F19                   ___awdiv@counter 003A  
                           _PORTA 0005                             _PORTB 0006                             _PORTD 0008  
                           _TRISA 0085                             _TRISB 0086                             _TRISD 0088  
                           _SSPIE 0463                             _SSPIF 0063             __end_of_Lcd_Cmd_4bits 0DEC  
                 __end_of_leerRTC 074D                             _fecha 0051                   __end_of_dpowers 081A  
                           _setup 0E3C                             pclath 000A                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 05AA                   __initialization 000F  
                    __end_of_main 0406                            ??_main 004E                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0073                ??_I2C_Master_Start 0073                ??_I2C_Master_Write 0075  
                ___awdiv@dividend 0075                            ?_setup 0070                            _ANSELH 0189  
                          i1l1901 0446                            i1l1903 0450                            i1l1911 045E  
                          i1l1921 0477                            i1l1913 0464                            i1l1905 0451  
                          i1l1931 0494                            i1l1923 047E                            i1l1915 0468  
                          i1l1907 0455                            i1l1941 04A8                            i1l1933 0495  
                          i1l1917 0472                            i1l1925 0480                            i1l1909 045C  
                          i1l1951 04C2                            i1l1943 04AC                            i1l1935 0499  
                          i1l1927 0486                            i1l1919 0473                            i1l1961 04D2  
                          i1l1945 04B6                            i1l1953 04C4                            i1l1937 04A0  
                          i1l1929 048A                            i1l1881 041A                            i1l1963 04D6  
                          i1l1955 04CA                            i1l1947 04B7                            i1l1939 04A2  
                          i1l1891 042F                            i1l1883 041B                            i1l1875 0406  
                          i1l1965 04DD                            i1l1957 04CE                            i1l1949 04BB  
                          i1l1893 0433                            i1l1885 0420                            i1l1877 040A  
                          i1l1967 04DF                            i1l1895 043A                            i1l1887 0424  
                          i1l1879 0410                            i1l1889 042E                            i1l1897 043C  
                          i1l1899 0442                            u161_20 040A                            u161_21 0409  
                          u170_20 0446                            u162_20 0410                            u170_21 0445  
                          u162_21 040F                            u171_20 0450                            u163_20 041A  
                          u171_21 044F                            u163_21 0419                            u180_20 048A  
                          u172_20 0455                            u164_20 0420                            u180_21 0489  
                          u172_21 0454                            u164_21 041F                            u181_20 0494  
                          u173_20 045C                            u165_20 0424                            u181_21 0493  
                          u173_21 045B                            u165_21 0423                            u190_20 04CE  
                          u182_20 0499                            u174_20 0464                            u166_20 042E  
                          u190_21 04CD                            u182_21 0498                            u174_21 0463  
                          u166_21 042D                            u191_20 04D6                            u183_20 04A0  
                          u175_20 0468                            u167_20 0433                            u191_21 04D5  
                          u183_21 049F                            u175_21 0467                            u167_21 0432  
                          u192_20 04DD                            u184_20 04A8                            u176_20 0472  
                          u168_20 043A                            u192_21 04DC                            u184_21 04A7  
                          u176_21 0471                            u168_21 0439                            u185_20 04AC  
                          u177_20 0477                            u169_20 0442                            u185_21 04AB  
                          u177_21 0476                            u169_21 0441                            u186_20 04B6  
                          u178_20 047E                            u186_21 04B5                            u178_21 047D  
                          u187_20 04BB                            u179_20 0486                            u187_21 04BA  
                          u179_21 0485                            u188_20 04C2                            u188_21 04C1  
                          _VAL1_C 002C                            _VAL1_D 002D                            u189_20 04CA  
                          u189_21 04C9                            _VAL1_U 002E                            _SSPADD 0093  
                          _TRISC3 043B                            _TRISC4 043C                            _SSPCON 0014  
                          _SSPBUF 0013          Lcd_Write_Char_4bits@temp 0075          _I2C_Master_RepeatedStart 0D56  
                          ___bmul 0DBD                         ??___awdiv 0077                         ??___awmod 0078  
                       ??___lldiv 0073                         ??___lwdiv 0077                         ??___lwmod 0078  
                ___awdiv@quotient 003C                  __end_of_modifRTC 0618                   ___awmod@divisor 003E  
                          _tiempo 005B                   ___awmod@counter 0042                         ??_leerRTC 003A  
                    ?_setupINTOSC 0070                            saved_w 007E                    _Lcd_Init_4bits 074D  
                       ??_sprintf 0044           __end_of__initialization 0026               ___bmul@multiplicand 0073  
                  __pcstackCOMMON 0070                      __pidataBANK0 0D98             Lcd_Write_Char_4bits@a 0077  
           Lcd_Write_Char_4bits@y 0076                     __end_of_setup 0E6E                    _OPTION_REGbits 0081  
          __end_of_Lcd_Init_4bits 07AA           ?_Lcd_Write_String_4bits 0078                           ??_setup 0079  
                      __pbssBANK0 0020                    _Lcd_Port_4bits 0DEC                   _Lcd_Clear_4bits 0D71  
                      __pmaintext 002A                           ?___bmul 0073                        __pintentry 0004  
    __end_of_Lcd_Write_Char_4bits 0EA3                   Lcd_Port_4bits@a 0073                   ?_Lcd_Init_4bits 0070  
  __end_of_Lcd_Write_String_4bits 0F5F                           _SSPCON2 0091                           _SSPSTAT 0094  
                      __stringtab 0800            __end_of_Lcd_Port_4bits 0E0E                         ?_modifRTC 0044  
                         ___awdiv 0618                           ___awmod 0FA5                           ___lldiv 0681  
                         ___lwdiv 0F5F                           ___lwmod 0EDD                           __ptext1 04E7  
                         __ptext2 0EDD                           __ptext3 0F5F                           __ptext4 0E3C  
                         __ptext5 0D8B                           __ptext6 074D                           __ptext7 0EA3  
                         __ptext8 0681                           __ptext9 05AA                           _leerRTC 06E9  
                         _dpowers 0810                           _modifAO 0020                  ___awmod@dividend 0040  
    __end_of_Lcd_Set_Cursor_4bits 07F6                           _sprintf 04E7                           clrloop0 0D4F  
            end_of_initialization 0026        ??_I2C_Master_RepeatedStart 0073                   ?_Lcd_Port_4bits 0070  
         __end_of_Lcd_Clear_4bits 0D7E                        ??_modifRTC 0046                   ___lldiv@divisor 003A  
                 ___lldiv@counter 0078                  I2C_Master_Init@c 0042                  I2C_Master_Read@a 0073  
                       _PORTBbits 0006                         _PORTDbits 0008                         _TRISCbits 0087  
            _Lcd_Write_Char_4bits 0E6E                    __end_of___bmul 0DD2               start_initialization 000F  
                     __end_of_ISR 04E7                     _Lcd_Cmd_4bits 0DD2             Lcd_Set_Cursor_4bits@a 003A  
           Lcd_Set_Cursor_4bits@b 0077             Lcd_Set_Cursor_4bits@y 003C             Lcd_Set_Cursor_4bits@z 003B  
                ?_Lcd_Clear_4bits 0070                 ??_I2C_Master_Init 0046                 ??_I2C_Master_Read 0075  
               ??_I2C_Master_Wait 0073                 ??_I2C_Master_Stop 0073             ?_Lcd_Write_Char_4bits 0070  
                        ??___bmul 0074          Lcd_Set_Cursor_4bits@temp 003D                        init_fetch0 0DAA  
            _Lcd_Set_Cursor_4bits 07AA                       __pdataBANK0 0051                  ??_Lcd_Init_4bits 0077  
                     __pbssCOMMON 007A                         ___latbits 0002                     __pcstackBANK0 003A  
                  ?_Lcd_Cmd_4bits 0070                       sprintf@flag 0047                       sprintf@prec 004B  
                _I2C_Master_Start 0D5F                  _I2C_Master_Write 07F6                  ___lwdiv@dividend 0075  
           ?_Lcd_Set_Cursor_4bits 0077                          ?___awdiv 0073                          ?___awmod 003E  
                        ?___lldiv 003A                          ?___lwdiv 0073                          ?___lwmod 003D  
                       __pstrings 0800                          ?_leerRTC 0070                  ??_Lcd_Port_4bits 0073  
                ___lwdiv@quotient 003B                          ?_sprintf 0041                 interrupt_function 0004  
                       clear_ram0 0D4E            ??_Lcd_Write_Char_4bits 0074                       __stringbase 080F  
                   ??_setupINTOSC 0073                   ??_Lcd_Cmd_4bits 0074                          _WPUBbits 0095  
             I2C_Master_Read@temp 0077           Lcd_Write_String_4bits@a 0078           Lcd_Write_String_4bits@i 003D  
          ??_Lcd_Set_Cursor_4bits 0078                         modifRTC@D 0044                         modifRTC@R 0079  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0810          ??_Lcd_Write_String_4bits 003A  
                  Lcd_Cmd_4bits@a 0076                        sprintf@val 0049                   _I2C_Master_Init 0EA3  
                 _I2C_Master_Read 0E0E                   _I2C_Master_Wait 0D7E                   _I2C_Master_Stop 0D68  
                 ___lwdiv@divisor 0073                   ___lwdiv@counter 003A                          __ptext10 0FA5  
                        __ptext11 0618                          __ptext20 0F19                          __ptext12 06E9  
                        __ptext21 0E6E                          __ptext13 0DBD                          __ptext22 07AA  
                        __ptext14 07F6                          __ptext23 0D71                          __ptext15 0D68  
                        __ptext24 0DD2                          __ptext16 0D5F                          __ptext25 0DEC  
                        __ptext17 0D56                          __ptext26 0406                          __ptext18 0E0E  
                        __ptext19 0D7E               __end_of_setupINTOSC 0D98                          _modifDIA 0022  
                        _modifHOR 0023                          _modifMES 0021                          _modifMIN 0024  
                        _modifSEG 0025                          _modifRTC 05AA                          leerRTC@R 003C  
        __end_of_I2C_Master_Start 0D68          __end_of_I2C_Master_Write 0800                        _INTCONbits 000B  
                        init_ram0 0DAE                          intlevel1 0000                         sprintf@ap 0048  
                       sprintf@sp 004C                  ___lwmod@dividend 003F                  ___lldiv@dividend 003E  
                       stringcode 080A                        _OSCCONbits 008F           __end_of_I2C_Master_Init 0EDD  
         __end_of_I2C_Master_Read 0E3C           __end_of_I2C_Master_Wait 0D8B           __end_of_I2C_Master_Stop 0D71  
                     _setupINTOSC 0D8B                          sprintf@c 004D                          sprintf@f 0041  
                    setupINTOSC@F 0074                  ___lldiv@quotient 0074                 I2C_Master_Write@d 0073  
                 ___lwmod@divisor 003D                   ___lwmod@counter 0079                          stringdir 080A  
                        stringtab 0800                       _SSPCON2bits 0091  
