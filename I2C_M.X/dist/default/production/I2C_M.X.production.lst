

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Thu Feb 16 11:21:46 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     8                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    40                           	dabs	1,0x7E,2
    41     0000                     
    42                           ; Version 2.40
    43                           ; Generated 17/11/2021 GMT
    44                           ; 
    45                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution. Publication is not required when
    59                           ;        this file is used in an embedded application.
    60                           ; 
    61                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    62                           ;        software without specific prior written permission.
    63                           ; 
    64                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    65                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    66                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    67                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    68                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    69                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    70                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    71                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    72                           ; 
    73                           ; 
    74                           ; Code-generator required, PIC16F887 Definitions
    75                           ; 
    76                           ; SFR Addresses
    77     0000                     	;# 
    78     0001                     	;# 
    79     0002                     	;# 
    80     0003                     	;# 
    81     0004                     	;# 
    82     0005                     	;# 
    83     0006                     	;# 
    84     0007                     	;# 
    85     0008                     	;# 
    86     0009                     	;# 
    87     000A                     	;# 
    88     000B                     	;# 
    89     000C                     	;# 
    90     000D                     	;# 
    91     000E                     	;# 
    92     000E                     	;# 
    93     000F                     	;# 
    94     0010                     	;# 
    95     0011                     	;# 
    96     0012                     	;# 
    97     0013                     	;# 
    98     0014                     	;# 
    99     0015                     	;# 
   100     0015                     	;# 
   101     0016                     	;# 
   102     0017                     	;# 
   103     0018                     	;# 
   104     0019                     	;# 
   105     001A                     	;# 
   106     001B                     	;# 
   107     001B                     	;# 
   108     001C                     	;# 
   109     001D                     	;# 
   110     001E                     	;# 
   111     001F                     	;# 
   112     0081                     	;# 
   113     0085                     	;# 
   114     0086                     	;# 
   115     0087                     	;# 
   116     0088                     	;# 
   117     0089                     	;# 
   118     008C                     	;# 
   119     008D                     	;# 
   120     008E                     	;# 
   121     008F                     	;# 
   122     0090                     	;# 
   123     0091                     	;# 
   124     0092                     	;# 
   125     0093                     	;# 
   126     0093                     	;# 
   127     0093                     	;# 
   128     0094                     	;# 
   129     0095                     	;# 
   130     0096                     	;# 
   131     0097                     	;# 
   132     0098                     	;# 
   133     0099                     	;# 
   134     009A                     	;# 
   135     009B                     	;# 
   136     009C                     	;# 
   137     009D                     	;# 
   138     009E                     	;# 
   139     009F                     	;# 
   140     0105                     	;# 
   141     0107                     	;# 
   142     0108                     	;# 
   143     0109                     	;# 
   144     010C                     	;# 
   145     010C                     	;# 
   146     010D                     	;# 
   147     010E                     	;# 
   148     010F                     	;# 
   149     0185                     	;# 
   150     0187                     	;# 
   151     0188                     	;# 
   152     0189                     	;# 
   153     018C                     	;# 
   154     018D                     	;# 
   155     0000                     	;# 
   156     0001                     	;# 
   157     0002                     	;# 
   158     0003                     	;# 
   159     0004                     	;# 
   160     0005                     	;# 
   161     0006                     	;# 
   162     0007                     	;# 
   163     0008                     	;# 
   164     0009                     	;# 
   165     000A                     	;# 
   166     000B                     	;# 
   167     000C                     	;# 
   168     000D                     	;# 
   169     000E                     	;# 
   170     000E                     	;# 
   171     000F                     	;# 
   172     0010                     	;# 
   173     0011                     	;# 
   174     0012                     	;# 
   175     0013                     	;# 
   176     0014                     	;# 
   177     0015                     	;# 
   178     0015                     	;# 
   179     0016                     	;# 
   180     0017                     	;# 
   181     0018                     	;# 
   182     0019                     	;# 
   183     001A                     	;# 
   184     001B                     	;# 
   185     001B                     	;# 
   186     001C                     	;# 
   187     001D                     	;# 
   188     001E                     	;# 
   189     001F                     	;# 
   190     0081                     	;# 
   191     0085                     	;# 
   192     0086                     	;# 
   193     0087                     	;# 
   194     0088                     	;# 
   195     0089                     	;# 
   196     008C                     	;# 
   197     008D                     	;# 
   198     008E                     	;# 
   199     008F                     	;# 
   200     0090                     	;# 
   201     0091                     	;# 
   202     0092                     	;# 
   203     0093                     	;# 
   204     0093                     	;# 
   205     0093                     	;# 
   206     0094                     	;# 
   207     0095                     	;# 
   208     0096                     	;# 
   209     0097                     	;# 
   210     0098                     	;# 
   211     0099                     	;# 
   212     009A                     	;# 
   213     009B                     	;# 
   214     009C                     	;# 
   215     009D                     	;# 
   216     009E                     	;# 
   217     009F                     	;# 
   218     0105                     	;# 
   219     0107                     	;# 
   220     0108                     	;# 
   221     0109                     	;# 
   222     010C                     	;# 
   223     010C                     	;# 
   224     010D                     	;# 
   225     010E                     	;# 
   226     010F                     	;# 
   227     0185                     	;# 
   228     0187                     	;# 
   229     0188                     	;# 
   230     0189                     	;# 
   231     018C                     	;# 
   232     018D                     	;# 
   233     0000                     	;# 
   234     0001                     	;# 
   235     0002                     	;# 
   236     0003                     	;# 
   237     0004                     	;# 
   238     0005                     	;# 
   239     0006                     	;# 
   240     0007                     	;# 
   241     0008                     	;# 
   242     0009                     	;# 
   243     000A                     	;# 
   244     000B                     	;# 
   245     000C                     	;# 
   246     000D                     	;# 
   247     000E                     	;# 
   248     000E                     	;# 
   249     000F                     	;# 
   250     0010                     	;# 
   251     0011                     	;# 
   252     0012                     	;# 
   253     0013                     	;# 
   254     0014                     	;# 
   255     0015                     	;# 
   256     0015                     	;# 
   257     0016                     	;# 
   258     0017                     	;# 
   259     0018                     	;# 
   260     0019                     	;# 
   261     001A                     	;# 
   262     001B                     	;# 
   263     001B                     	;# 
   264     001C                     	;# 
   265     001D                     	;# 
   266     001E                     	;# 
   267     001F                     	;# 
   268     0081                     	;# 
   269     0085                     	;# 
   270     0086                     	;# 
   271     0087                     	;# 
   272     0088                     	;# 
   273     0089                     	;# 
   274     008C                     	;# 
   275     008D                     	;# 
   276     008E                     	;# 
   277     008F                     	;# 
   278     0090                     	;# 
   279     0091                     	;# 
   280     0092                     	;# 
   281     0093                     	;# 
   282     0093                     	;# 
   283     0093                     	;# 
   284     0094                     	;# 
   285     0095                     	;# 
   286     0096                     	;# 
   287     0097                     	;# 
   288     0098                     	;# 
   289     0099                     	;# 
   290     009A                     	;# 
   291     009B                     	;# 
   292     009C                     	;# 
   293     009D                     	;# 
   294     009E                     	;# 
   295     009F                     	;# 
   296     0105                     	;# 
   297     0107                     	;# 
   298     0108                     	;# 
   299     0109                     	;# 
   300     010C                     	;# 
   301     010C                     	;# 
   302     010D                     	;# 
   303     010E                     	;# 
   304     010F                     	;# 
   305     0185                     	;# 
   306     0187                     	;# 
   307     0188                     	;# 
   308     0189                     	;# 
   309     018C                     	;# 
   310     018D                     	;# 
   311     0000                     	;# 
   312     0001                     	;# 
   313     0002                     	;# 
   314     0003                     	;# 
   315     0004                     	;# 
   316     0005                     	;# 
   317     0006                     	;# 
   318     0007                     	;# 
   319     0008                     	;# 
   320     0009                     	;# 
   321     000A                     	;# 
   322     000B                     	;# 
   323     000C                     	;# 
   324     000D                     	;# 
   325     000E                     	;# 
   326     000E                     	;# 
   327     000F                     	;# 
   328     0010                     	;# 
   329     0011                     	;# 
   330     0012                     	;# 
   331     0013                     	;# 
   332     0014                     	;# 
   333     0015                     	;# 
   334     0015                     	;# 
   335     0016                     	;# 
   336     0017                     	;# 
   337     0018                     	;# 
   338     0019                     	;# 
   339     001A                     	;# 
   340     001B                     	;# 
   341     001B                     	;# 
   342     001C                     	;# 
   343     001D                     	;# 
   344     001E                     	;# 
   345     001F                     	;# 
   346     0081                     	;# 
   347     0085                     	;# 
   348     0086                     	;# 
   349     0087                     	;# 
   350     0088                     	;# 
   351     0089                     	;# 
   352     008C                     	;# 
   353     008D                     	;# 
   354     008E                     	;# 
   355     008F                     	;# 
   356     0090                     	;# 
   357     0091                     	;# 
   358     0092                     	;# 
   359     0093                     	;# 
   360     0093                     	;# 
   361     0093                     	;# 
   362     0094                     	;# 
   363     0095                     	;# 
   364     0096                     	;# 
   365     0097                     	;# 
   366     0098                     	;# 
   367     0099                     	;# 
   368     009A                     	;# 
   369     009B                     	;# 
   370     009C                     	;# 
   371     009D                     	;# 
   372     009E                     	;# 
   373     009F                     	;# 
   374     0105                     	;# 
   375     0107                     	;# 
   376     0108                     	;# 
   377     0109                     	;# 
   378     010C                     	;# 
   379     010C                     	;# 
   380     010D                     	;# 
   381     010E                     	;# 
   382     010F                     	;# 
   383     0185                     	;# 
   384     0187                     	;# 
   385     0188                     	;# 
   386     0189                     	;# 
   387     018C                     	;# 
   388     018D                     	;# 
   389     0000                     	;# 
   390     0001                     	;# 
   391     0002                     	;# 
   392     0003                     	;# 
   393     0004                     	;# 
   394     0005                     	;# 
   395     0006                     	;# 
   396     0007                     	;# 
   397     0008                     	;# 
   398     0009                     	;# 
   399     000A                     	;# 
   400     000B                     	;# 
   401     000C                     	;# 
   402     000D                     	;# 
   403     000E                     	;# 
   404     000E                     	;# 
   405     000F                     	;# 
   406     0010                     	;# 
   407     0011                     	;# 
   408     0012                     	;# 
   409     0013                     	;# 
   410     0014                     	;# 
   411     0015                     	;# 
   412     0015                     	;# 
   413     0016                     	;# 
   414     0017                     	;# 
   415     0018                     	;# 
   416     0019                     	;# 
   417     001A                     	;# 
   418     001B                     	;# 
   419     001B                     	;# 
   420     001C                     	;# 
   421     001D                     	;# 
   422     001E                     	;# 
   423     001F                     	;# 
   424     0081                     	;# 
   425     0085                     	;# 
   426     0086                     	;# 
   427     0087                     	;# 
   428     0088                     	;# 
   429     0089                     	;# 
   430     008C                     	;# 
   431     008D                     	;# 
   432     008E                     	;# 
   433     008F                     	;# 
   434     0090                     	;# 
   435     0091                     	;# 
   436     0092                     	;# 
   437     0093                     	;# 
   438     0093                     	;# 
   439     0093                     	;# 
   440     0094                     	;# 
   441     0095                     	;# 
   442     0096                     	;# 
   443     0097                     	;# 
   444     0098                     	;# 
   445     0099                     	;# 
   446     009A                     	;# 
   447     009B                     	;# 
   448     009C                     	;# 
   449     009D                     	;# 
   450     009E                     	;# 
   451     009F                     	;# 
   452     0105                     	;# 
   453     0107                     	;# 
   454     0108                     	;# 
   455     0109                     	;# 
   456     010C                     	;# 
   457     010C                     	;# 
   458     010D                     	;# 
   459     010E                     	;# 
   460     010F                     	;# 
   461     0185                     	;# 
   462     0187                     	;# 
   463     0188                     	;# 
   464     0189                     	;# 
   465     018C                     	;# 
   466     018D                     	;# 
   467     0000                     	;# 
   468     0001                     	;# 
   469     0002                     	;# 
   470     0003                     	;# 
   471     0004                     	;# 
   472     0005                     	;# 
   473     0006                     	;# 
   474     0007                     	;# 
   475     0008                     	;# 
   476     0009                     	;# 
   477     000A                     	;# 
   478     000B                     	;# 
   479     000C                     	;# 
   480     000D                     	;# 
   481     000E                     	;# 
   482     000E                     	;# 
   483     000F                     	;# 
   484     0010                     	;# 
   485     0011                     	;# 
   486     0012                     	;# 
   487     0013                     	;# 
   488     0014                     	;# 
   489     0015                     	;# 
   490     0015                     	;# 
   491     0016                     	;# 
   492     0017                     	;# 
   493     0018                     	;# 
   494     0019                     	;# 
   495     001A                     	;# 
   496     001B                     	;# 
   497     001B                     	;# 
   498     001C                     	;# 
   499     001D                     	;# 
   500     001E                     	;# 
   501     001F                     	;# 
   502     0081                     	;# 
   503     0085                     	;# 
   504     0086                     	;# 
   505     0087                     	;# 
   506     0088                     	;# 
   507     0089                     	;# 
   508     008C                     	;# 
   509     008D                     	;# 
   510     008E                     	;# 
   511     008F                     	;# 
   512     0090                     	;# 
   513     0091                     	;# 
   514     0092                     	;# 
   515     0093                     	;# 
   516     0093                     	;# 
   517     0093                     	;# 
   518     0094                     	;# 
   519     0095                     	;# 
   520     0096                     	;# 
   521     0097                     	;# 
   522     0098                     	;# 
   523     0099                     	;# 
   524     009A                     	;# 
   525     009B                     	;# 
   526     009C                     	;# 
   527     009D                     	;# 
   528     009E                     	;# 
   529     009F                     	;# 
   530     0105                     	;# 
   531     0107                     	;# 
   532     0108                     	;# 
   533     0109                     	;# 
   534     010C                     	;# 
   535     010C                     	;# 
   536     010D                     	;# 
   537     010E                     	;# 
   538     010F                     	;# 
   539     0185                     	;# 
   540     0187                     	;# 
   541     0188                     	;# 
   542     0189                     	;# 
   543     018C                     	;# 
   544     018D                     	;# 
   545                           
   546                           	psect	strings
   547     0800                     __pstrings:
   548     0800                     stringtab:
   549     0800                     __stringtab:
   550                           
   551                           ;	String table - string pointers are 1 byte each
   552     0800  1BFF               	btfsc	btemp+1,7
   553     0801  280A               	ljmp	stringcode
   554     0802  1383               	bcf	3,7
   555     0803  187F               	btfsc	btemp+1,0
   556     0804  1783               	bsf	3,7
   557     0805  0800               	movf	0,w
   558     0806  0A84               	incf	4,f
   559     0807  1903               	skipnz
   560     0808  0AFF               	incf	btemp+1,f
   561     0809  0008               	return
   562     080A                     stringcode:
   563     080A                     stringdir:
   564     080A  3008               	movlw	high stringdir
   565     080B  008A               	movwf	10
   566     080C  0804               	movf	4,w
   567     080D  0A84               	incf	4,f
   568     080E  0782               	addwf	2,f
   569     080F                     __stringbase:
   570     080F  3400               	retlw	0
   571     0810                     __end_of__stringtab:
   572     0810                     _dpowers:
   573     0810  3401               	retlw	1
   574     0811  3400               	retlw	0
   575     0812  340A               	retlw	10
   576     0813  3400               	retlw	0
   577     0814  3464               	retlw	100
   578     0815  3400               	retlw	0
   579     0816  34E8               	retlw	232
   580     0817  3403               	retlw	3
   581     0818  3410               	retlw	16
   582     0819  3427               	retlw	39
   583     081A                     __end_of_dpowers:
   584     0008                     _PORTD	set	8
   585     0006                     _PORTB	set	6
   586     0005                     _PORTA	set	5
   587     0006                     _PORTBbits	set	6
   588     000B                     _INTCONbits	set	11
   589     0008                     _PORTDbits	set	8
   590     0013                     _SSPBUF	set	19
   591     0014                     _SSPCON	set	20
   592     0063                     _SSPIF	set	99
   593     005E                     _PEIE	set	94
   594     005F                     _GIE	set	95
   595     0096                     _IOCB	set	150
   596     0095                     _WPUBbits	set	149
   597     0081                     _OPTION_REGbits	set	129
   598     0088                     _TRISD	set	136
   599     0086                     _TRISB	set	134
   600     0085                     _TRISA	set	133
   601     008F                     _OSCCONbits	set	143
   602     0091                     _SSPCON2bits	set	145
   603     0087                     _TRISCbits	set	135
   604     0094                     _SSPSTAT	set	148
   605     0093                     _SSPADD	set	147
   606     0091                     _SSPCON2	set	145
   607     0463                     _SSPIE	set	1123
   608     043C                     _TRISC4	set	1084
   609     043B                     _TRISC3	set	1083
   610     0189                     _ANSELH	set	393
   611     0188                     _ANSEL	set	392
   612     081A                     STR_1:
   613     081A  3453               	retlw	83	;'S'
   614     081B  3431               	retlw	49	;'1'
   615     081C  343A               	retlw	58	;':'
   616     081D  3400               	retlw	0
   617     081E                     STR_6:
   618     081E  3425               	retlw	37	;'%'
   619     081F  3475               	retlw	117	;'u'
   620     0820  3400               	retlw	0
   621     0821                     STR_4:
   622     0821  342F               	retlw	47	;'/'
   623     0822  3400               	retlw	0
   624     0821                     
   625                           	psect	cinit
   626     000F                     start_initialization:	
   627                           ; #config settings
   628                           
   629     000F                     __initialization:
   630                           
   631                           ; Clear objects allocated to COMMON
   632     000F  01FA               	clrf	__pbssCOMMON& (0+127)
   633                           
   634                           ; Clear objects allocated to BANK3
   635     0010  1683               	bsf	3,5	;RP0=1, select bank3
   636     0011  1703               	bsf	3,6	;RP1=1, select bank3
   637     0012  01E9               	clrf	__pbssBANK3& (0+127)
   638     0013                     end_of_initialization:	
   639                           ;End of C runtime variable initialization code
   640                           
   641     0013                     __end_of__initialization:
   642     0013  0183               	clrf	3
   643     0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   644                           
   645                           	psect	bssCOMMON
   646     007A                     __pbssCOMMON:
   647     007A                     _D:
   648     007A                     	ds	1
   649                           
   650                           	psect	bssBANK3
   651     01E9                     __pbssBANK3:
   652     01E9                     _modo:
   653     01E9                     	ds	1
   654                           
   655                           	psect	cstackBANK3
   656     0190                     __pcstackBANK3:
   657     0190                     main@stringSEG:
   658                           
   659                           ; 9 bytes @ 0x0
   660     0190                     	ds	9
   661     0199                     main@stringMIN:
   662                           
   663                           ; 9 bytes @ 0x9
   664     0199                     	ds	9
   665     01A2                     main@stringHOR:
   666                           
   667                           ; 9 bytes @ 0x12
   668     01A2                     	ds	9
   669     01AB                     main@stringDIA:
   670                           
   671                           ; 9 bytes @ 0x1B
   672     01AB                     	ds	9
   673     01B4                     main@stringMES:
   674                           
   675                           ; 9 bytes @ 0x24
   676     01B4                     	ds	9
   677     01BD                     main@ADC1:
   678                           
   679                           ; 9 bytes @ 0x2D
   680     01BD                     	ds	9
   681     01C6                     main@stringAO:
   682                           
   683                           ; 9 bytes @ 0x36
   684     01C6                     	ds	9
   685     01CF                     _main$1138:
   686                           
   687                           ; 2 bytes @ 0x3F
   688     01CF                     	ds	2
   689     01D1                     main@VAL1_U:
   690                           
   691                           ; 1 bytes @ 0x41
   692     01D1                     	ds	1
   693     01D2                     main@VAL1_D:
   694                           
   695                           ; 1 bytes @ 0x42
   696     01D2                     	ds	1
   697     01D3                     main@VAL1_C:
   698                           
   699                           ; 1 bytes @ 0x43
   700     01D3                     	ds	1
   701     01D4                     main@SEG_U:
   702                           
   703                           ; 1 bytes @ 0x44
   704     01D4                     	ds	1
   705     01D5                     main@SEG_D:
   706                           
   707                           ; 1 bytes @ 0x45
   708     01D5                     	ds	1
   709     01D6                     main@MIN_U:
   710                           
   711                           ; 1 bytes @ 0x46
   712     01D6                     	ds	1
   713     01D7                     main@MIN_D:
   714                           
   715                           ; 1 bytes @ 0x47
   716     01D7                     	ds	1
   717     01D8                     main@HOR_U:
   718                           
   719                           ; 1 bytes @ 0x48
   720     01D8                     	ds	1
   721     01D9                     main@HOR_D:
   722                           
   723                           ; 1 bytes @ 0x49
   724     01D9                     	ds	1
   725     01DA                     main@DIA_U:
   726                           
   727                           ; 1 bytes @ 0x4A
   728     01DA                     	ds	1
   729     01DB                     main@DIA_D:
   730                           
   731                           ; 1 bytes @ 0x4B
   732     01DB                     	ds	1
   733     01DC                     main@MES_U:
   734                           
   735                           ; 1 bytes @ 0x4C
   736     01DC                     	ds	1
   737     01DD                     main@MES_D:
   738                           
   739                           ; 1 bytes @ 0x4D
   740     01DD                     	ds	1
   741     01DE                     main@AO_U:
   742                           
   743                           ; 1 bytes @ 0x4E
   744     01DE                     	ds	1
   745     01DF                     main@AO_D:
   746                           
   747                           ; 1 bytes @ 0x4F
   748     01DF                     	ds	1
   749     01E0                     main@AO_C:
   750                           
   751                           ; 1 bytes @ 0x50
   752     01E0                     	ds	1
   753     01E1                     main@AO_UM:
   754                           
   755                           ; 1 bytes @ 0x51
   756     01E1                     	ds	1
   757     01E2                     main@SEG:
   758                           
   759                           ; 1 bytes @ 0x52
   760     01E2                     	ds	1
   761     01E3                     main@MIN:
   762                           
   763                           ; 1 bytes @ 0x53
   764     01E3                     	ds	1
   765     01E4                     main@HOR:
   766                           
   767                           ; 1 bytes @ 0x54
   768     01E4                     	ds	1
   769     01E5                     main@DIA:
   770                           
   771                           ; 1 bytes @ 0x55
   772     01E5                     	ds	1
   773     01E6                     main@MES:
   774                           
   775                           ; 1 bytes @ 0x56
   776     01E6                     	ds	1
   777     01E7                     main@VAL1:
   778                           
   779                           ; 1 bytes @ 0x57
   780     01E7                     	ds	1
   781     01E8                     main@AO:
   782                           
   783                           ; 1 bytes @ 0x58
   784     01E8                     	ds	1
   785                           
   786                           	psect	cstackCOMMON
   787     0070                     __pcstackCOMMON:
   788     0070                     ?_setup:
   789     0070                     ?_leerRTC:	
   790                           ; 1 bytes @ 0x0
   791                           
   792     0070                     ?_I2C_Master_Wait:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ?_I2C_Master_Start:	
   796                           ; 1 bytes @ 0x0
   797                           
   798     0070                     ?_I2C_Master_RepeatedStart:	
   799                           ; 1 bytes @ 0x0
   800                           
   801     0070                     ?_I2C_Master_Stop:	
   802                           ; 1 bytes @ 0x0
   803                           
   804     0070                     ?_setupINTOSC:	
   805                           ; 1 bytes @ 0x0
   806                           
   807     0070                     ?_Lcd_Port_4bits:	
   808                           ; 1 bytes @ 0x0
   809                           
   810     0070                     ?_Lcd_Cmd_4bits:	
   811                           ; 1 bytes @ 0x0
   812                           
   813     0070                     ?_Lcd_Clear_4bits:	
   814                           ; 1 bytes @ 0x0
   815                           
   816     0070                     ?_Lcd_Init_4bits:	
   817                           ; 1 bytes @ 0x0
   818                           
   819     0070                     ?_Lcd_Write_Char_4bits:	
   820                           ; 1 bytes @ 0x0
   821                           
   822     0070                     ?_ISR:	
   823                           ; 1 bytes @ 0x0
   824                           
   825     0070                     ??_ISR:	
   826                           ; 1 bytes @ 0x0
   827                           
   828     0070                     ?_main:	
   829                           ; 1 bytes @ 0x0
   830                           
   831                           
   832                           ; 1 bytes @ 0x0
   833     0070                     	ds	3
   834     0073                     ??_I2C_Master_Wait:
   835     0073                     ??_I2C_Master_Start:	
   836                           ; 1 bytes @ 0x3
   837                           
   838     0073                     ??_I2C_Master_RepeatedStart:	
   839                           ; 1 bytes @ 0x3
   840                           
   841     0073                     ??_I2C_Master_Stop:	
   842                           ; 1 bytes @ 0x3
   843                           
   844     0073                     ?_I2C_Master_Write:	
   845                           ; 1 bytes @ 0x3
   846                           
   847     0073                     ??_setupINTOSC:	
   848                           ; 1 bytes @ 0x3
   849                           
   850     0073                     ??_Lcd_Port_4bits:	
   851                           ; 1 bytes @ 0x3
   852                           
   853     0073                     ?___bmul:	
   854                           ; 1 bytes @ 0x3
   855                           
   856     0073                     ??___lldiv:	
   857                           ; 1 bytes @ 0x3
   858                           
   859     0073                     ?_I2C_Master_Read:	
   860                           ; 1 bytes @ 0x3
   861                           
   862     0073                     ?___awdiv:	
   863                           ; 2 bytes @ 0x3
   864                           
   865     0073                     ?___lwdiv:	
   866                           ; 2 bytes @ 0x3
   867                           
   868     0073                     Lcd_Port_4bits@a:	
   869                           ; 2 bytes @ 0x3
   870                           
   871     0073                     ___bmul@multiplicand:	
   872                           ; 1 bytes @ 0x3
   873                           
   874     0073                     I2C_Master_Write@d:	
   875                           ; 1 bytes @ 0x3
   876                           
   877     0073                     I2C_Master_Read@a:	
   878                           ; 2 bytes @ 0x3
   879                           
   880     0073                     ___awdiv@divisor:	
   881                           ; 2 bytes @ 0x3
   882                           
   883     0073                     ___lwdiv@divisor:	
   884                           ; 2 bytes @ 0x3
   885                           
   886                           
   887                           ; 2 bytes @ 0x3
   888     0073                     	ds	1
   889     0074                     ??_Lcd_Cmd_4bits:
   890     0074                     ??_Lcd_Write_Char_4bits:	
   891                           ; 1 bytes @ 0x4
   892                           
   893     0074                     ??___bmul:	
   894                           ; 1 bytes @ 0x4
   895                           
   896     0074                     setupINTOSC@F:	
   897                           ; 1 bytes @ 0x4
   898                           
   899     0074                     ___lldiv@quotient:	
   900                           ; 1 bytes @ 0x4
   901                           
   902                           
   903                           ; 4 bytes @ 0x4
   904     0074                     	ds	1
   905     0075                     ??_I2C_Master_Write:
   906     0075                     ??_I2C_Master_Read:	
   907                           ; 1 bytes @ 0x5
   908                           
   909     0075                     Lcd_Write_Char_4bits@temp:	
   910                           ; 1 bytes @ 0x5
   911                           
   912     0075                     ___bmul@product:	
   913                           ; 1 bytes @ 0x5
   914                           
   915     0075                     ___awdiv@dividend:	
   916                           ; 1 bytes @ 0x5
   917                           
   918     0075                     ___lwdiv@dividend:	
   919                           ; 2 bytes @ 0x5
   920                           
   921                           
   922                           ; 2 bytes @ 0x5
   923     0075                     	ds	1
   924     0076                     Lcd_Cmd_4bits@a:
   925     0076                     Lcd_Write_Char_4bits@y:	
   926                           ; 1 bytes @ 0x6
   927                           
   928     0076                     ___bmul@multiplier:	
   929                           ; 1 bytes @ 0x6
   930                           
   931                           
   932                           ; 1 bytes @ 0x6
   933     0076                     	ds	1
   934     0077                     ??_Lcd_Clear_4bits:
   935     0077                     ?_Lcd_Set_Cursor_4bits:	
   936                           ; 1 bytes @ 0x7
   937                           
   938     0077                     ??_Lcd_Init_4bits:	
   939                           ; 1 bytes @ 0x7
   940                           
   941     0077                     ??___awdiv:	
   942                           ; 1 bytes @ 0x7
   943                           
   944     0077                     ??___lwdiv:	
   945                           ; 1 bytes @ 0x7
   946                           
   947     0077                     Lcd_Set_Cursor_4bits@b:	
   948                           ; 1 bytes @ 0x7
   949                           
   950     0077                     Lcd_Write_Char_4bits@a:	
   951                           ; 1 bytes @ 0x7
   952                           
   953     0077                     I2C_Master_Read@temp:	
   954                           ; 1 bytes @ 0x7
   955                           
   956                           
   957                           ; 2 bytes @ 0x7
   958     0077                     	ds	1
   959     0078                     ??_Lcd_Set_Cursor_4bits:
   960     0078                     ?_Lcd_Write_String_4bits:	
   961                           ; 1 bytes @ 0x8
   962                           
   963     0078                     ??___awmod:	
   964                           ; 1 bytes @ 0x8
   965                           
   966     0078                     ??___lwmod:	
   967                           ; 1 bytes @ 0x8
   968                           
   969     0078                     ___lldiv@counter:	
   970                           ; 1 bytes @ 0x8
   971                           
   972     0078                     Lcd_Write_String_4bits@a:	
   973                           ; 1 bytes @ 0x8
   974                           
   975                           
   976                           ; 2 bytes @ 0x8
   977     0078                     	ds	1
   978     0079                     ??_setup:
   979     0079                     ___lwmod@counter:	
   980                           ; 1 bytes @ 0x9
   981                           
   982                           
   983                           ; 1 bytes @ 0x9
   984     0079                     	ds	1
   985                           
   986                           	psect	cstackBANK0
   987     0020                     __pcstackBANK0:
   988     0020                     ??_leerRTC:
   989     0020                     ??_Lcd_Write_String_4bits:	
   990                           ; 1 bytes @ 0x0
   991                           
   992     0020                     ?___lldiv:	
   993                           ; 1 bytes @ 0x0
   994                           
   995     0020                     Lcd_Set_Cursor_4bits@a:	
   996                           ; 4 bytes @ 0x0
   997                           
   998     0020                     ___awdiv@counter:	
   999                           ; 1 bytes @ 0x0
  1000                           
  1001     0020                     ___lwdiv@counter:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004     0020                     ___lldiv@divisor:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007                           
  1008                           ; 4 bytes @ 0x0
  1009     0020                     	ds	1
  1010     0021                     Lcd_Set_Cursor_4bits@z:
  1011     0021                     ___awdiv@sign:	
  1012                           ; 1 bytes @ 0x1
  1013                           
  1014     0021                     ___lwdiv@quotient:	
  1015                           ; 1 bytes @ 0x1
  1016                           
  1017                           
  1018                           ; 2 bytes @ 0x1
  1019     0021                     	ds	1
  1020     0022                     Lcd_Set_Cursor_4bits@y:
  1021     0022                     ___awdiv@quotient:	
  1022                           ; 1 bytes @ 0x2
  1023                           
  1024                           
  1025                           ; 2 bytes @ 0x2
  1026     0022                     	ds	1
  1027     0023                     ?___lwmod:
  1028     0023                     Lcd_Set_Cursor_4bits@temp:	
  1029                           ; 2 bytes @ 0x3
  1030                           
  1031     0023                     leerRTC@R:	
  1032                           ; 1 bytes @ 0x3
  1033                           
  1034     0023                     Lcd_Write_String_4bits@i:	
  1035                           ; 1 bytes @ 0x3
  1036                           
  1037     0023                     ___lwmod@divisor:	
  1038                           ; 2 bytes @ 0x3
  1039                           
  1040                           
  1041                           ; 2 bytes @ 0x3
  1042     0023                     	ds	1
  1043     0024                     ?___awmod:
  1044     0024                     leerRTC@DATO:	
  1045                           ; 2 bytes @ 0x4
  1046                           
  1047     0024                     ___awmod@divisor:	
  1048                           ; 1 bytes @ 0x4
  1049                           
  1050     0024                     ___lldiv@dividend:	
  1051                           ; 2 bytes @ 0x4
  1052                           
  1053                           
  1054                           ; 4 bytes @ 0x4
  1055     0024                     	ds	1
  1056     0025                     ___lwmod@dividend:
  1057                           
  1058                           ; 2 bytes @ 0x5
  1059     0025                     	ds	1
  1060     0026                     ___awmod@dividend:
  1061                           
  1062                           ; 2 bytes @ 0x6
  1063     0026                     	ds	1
  1064     0027                     ?_sprintf:
  1065     0027                     sprintf@f:	
  1066                           ; 2 bytes @ 0x7
  1067                           
  1068                           
  1069                           ; 1 bytes @ 0x7
  1070     0027                     	ds	1
  1071     0028                     ?_I2C_Master_Init:
  1072     0028                     ___awmod@counter:	
  1073                           ; 1 bytes @ 0x8
  1074                           
  1075     0028                     I2C_Master_Init@c:	
  1076                           ; 1 bytes @ 0x8
  1077                           
  1078                           
  1079                           ; 4 bytes @ 0x8
  1080     0028                     	ds	1
  1081     0029                     ___awmod@sign:
  1082                           
  1083                           ; 1 bytes @ 0x9
  1084     0029                     	ds	1
  1085     002A                     ??_sprintf:
  1086                           
  1087                           ; 1 bytes @ 0xA
  1088     002A                     	ds	2
  1089     002C                     ??_I2C_Master_Init:
  1090                           
  1091                           ; 1 bytes @ 0xC
  1092     002C                     	ds	1
  1093     002D                     sprintf@flag:
  1094                           
  1095                           ; 1 bytes @ 0xD
  1096     002D                     	ds	1
  1097     002E                     sprintf@ap:
  1098                           
  1099                           ; 1 bytes @ 0xE
  1100     002E                     	ds	1
  1101     002F                     sprintf@val:
  1102                           
  1103                           ; 2 bytes @ 0xF
  1104     002F                     	ds	2
  1105     0031                     sprintf@prec:
  1106                           
  1107                           ; 1 bytes @ 0x11
  1108     0031                     	ds	1
  1109     0032                     sprintf@c:
  1110                           
  1111                           ; 1 bytes @ 0x12
  1112     0032                     	ds	1
  1113     0033                     sprintf@sp:
  1114                           
  1115                           ; 1 bytes @ 0x13
  1116     0033                     	ds	1
  1117     0034                     ??_main:
  1118                           
  1119                           ; 1 bytes @ 0x14
  1120     0034                     	ds	3
  1121                           
  1122                           	psect	maintext
  1123     0017                     __pmaintext:	
  1124 ;;
  1125 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1126 ;;
  1127 ;; *************** function _main *****************
  1128 ;; Defined at:
  1129 ;;		line 81 in file "main_M.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;  stringAO        9   54[BANK3 ] unsigned char [9]
  1134 ;;  ADC1            9   45[BANK3 ] unsigned char [9]
  1135 ;;  stringMES       9   36[BANK3 ] unsigned char [9]
  1136 ;;  stringDIA       9   27[BANK3 ] unsigned char [9]
  1137 ;;  stringHOR       9   18[BANK3 ] unsigned char [9]
  1138 ;;  stringMIN       9    9[BANK3 ] unsigned char [9]
  1139 ;;  stringSEG       9    0[BANK3 ] unsigned char [9]
  1140 ;;  AO              1   88[BANK3 ] unsigned char 
  1141 ;;  VAL1            1   87[BANK3 ] unsigned char 
  1142 ;;  MES             1   86[BANK3 ] unsigned char 
  1143 ;;  DIA             1   85[BANK3 ] unsigned char 
  1144 ;;  HOR             1   84[BANK3 ] unsigned char 
  1145 ;;  MIN             1   83[BANK3 ] unsigned char 
  1146 ;;  SEG             1   82[BANK3 ] unsigned char 
  1147 ;;  AO_UM           1   81[BANK3 ] unsigned char 
  1148 ;;  AO_C            1   80[BANK3 ] unsigned char 
  1149 ;;  AO_D            1   79[BANK3 ] unsigned char 
  1150 ;;  AO_U            1   78[BANK3 ] unsigned char 
  1151 ;;  MES_D           1   77[BANK3 ] unsigned char 
  1152 ;;  MES_U           1   76[BANK3 ] unsigned char 
  1153 ;;  DIA_D           1   75[BANK3 ] unsigned char 
  1154 ;;  DIA_U           1   74[BANK3 ] unsigned char 
  1155 ;;  HOR_D           1   73[BANK3 ] unsigned char 
  1156 ;;  HOR_U           1   72[BANK3 ] unsigned char 
  1157 ;;  MIN_D           1   71[BANK3 ] unsigned char 
  1158 ;;  MIN_U           1   70[BANK3 ] unsigned char 
  1159 ;;  SEG_D           1   69[BANK3 ] unsigned char 
  1160 ;;  SEG_U           1   68[BANK3 ] unsigned char 
  1161 ;;  VAL1_C          1   67[BANK3 ] unsigned char 
  1162 ;;  VAL1_D          1   66[BANK3 ] unsigned char 
  1163 ;;  VAL1_U          1   65[BANK3 ] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : B00/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1173 ;;      Params:         0       0       0       0       0
  1174 ;;      Locals:         0       0       0      89       0
  1175 ;;      Temps:          0       3       0       0       0
  1176 ;;      Totals:         0       3       0      89       0
  1177 ;;Total ram usage:       92 bytes
  1178 ;; Hardware stack levels required when called: 5
  1179 ;; This function calls:
  1180 ;;		_I2C_Master_Read
  1181 ;;		_I2C_Master_Start
  1182 ;;		_I2C_Master_Stop
  1183 ;;		_I2C_Master_Write
  1184 ;;		_Lcd_Clear_4bits
  1185 ;;		_Lcd_Set_Cursor_4bits
  1186 ;;		_Lcd_Write_String_4bits
  1187 ;;		___awdiv
  1188 ;;		___awmod
  1189 ;;		_leerRTC
  1190 ;;		_setup
  1191 ;;		_sprintf
  1192 ;; This function is called by:
  1193 ;;		Startup code after reset
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197     0017                     _main:	
  1198                           ;psect for function _main
  1199                           
  1200     0017                     l2267:	
  1201                           ;incstack = 0
  1202                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1203                           
  1204                           
  1205                           ;main_M.c: 83:     setup();
  1206     0017  120A  158A  25DF  120A  118A  	fcall	_setup
  1207                           
  1208                           ;main_M.c: 85:     uint8_t VAL1, VAL1_U, VAL1_D, VAL1_C;;main_M.c: 86:     uint8_t SEG, 
      +                          SEG_U, SEG_D;;main_M.c: 87:     uint8_t MIN, MIN_U, MIN_D;;main_M.c: 88:     uint8_t HOR
      +                          , HOR_U, HOR_D;;main_M.c: 89:     uint8_t DIA, DIA_U, DIA_D;;main_M.c: 90:     uint8_t M
      +                          ES, MES_U, MES_D;;main_M.c: 91:     uint8_t AO, AO_U, AO_D, AO_C, AO_UM;;main_M.c: 93:  
      +                             char ADC1[9];;main_M.c: 94:     char stringSEG[9];;main_M.c: 95:     char stringMIN[9
      +                          ];;main_M.c: 96:     char stringHOR[9];;main_M.c: 97:     char stringDIA[9];
  1209     001C  120A  158A  251A  120A  118A  	fcall	_Lcd_Clear_4bits
  1210                           
  1211                           ;main_M.c: 102:     Lcd_Set_Cursor_4bits(1,1);
  1212     0021  01F7               	clrf	Lcd_Set_Cursor_4bits@b
  1213     0022  0AF7               	incf	Lcd_Set_Cursor_4bits@b,f
  1214     0023  3001               	movlw	1
  1215     0024  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1216     0029                     l2269:
  1217                           
  1218                           ;main_M.c: 103:     Lcd_Write_String_4bits("S1:");
  1219     0029  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1220     002A  00F8               	movwf	Lcd_Write_String_4bits@a
  1221     002B  3080               	movlw	128
  1222     002C  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1223     002D  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1224     0032                     l2271:
  1225                           
  1226                           ;main_M.c: 104:     Lcd_Set_Cursor_4bits(1,9);
  1227     0032  3009               	movlw	9
  1228     0033  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1229     0034  3001               	movlw	1
  1230     0035  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1231                           
  1232                           ;main_M.c: 105:     Lcd_Write_String_4bits(":");
  1233     003A  300D               	movlw	(low (((STR_1+2)-__stringbase)| (0+32768)))& (0+255)
  1234     003B  00F8               	movwf	Lcd_Write_String_4bits@a
  1235     003C  3080               	movlw	128
  1236     003D  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1237     003E  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1238     0043                     l2273:
  1239                           
  1240                           ;main_M.c: 106:     Lcd_Set_Cursor_4bits(1,12);
  1241     0043  300C               	movlw	12
  1242     0044  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1243     0045  3001               	movlw	1
  1244     0046  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1245     004B                     l2275:
  1246                           
  1247                           ;main_M.c: 107:     Lcd_Write_String_4bits(":");
  1248     004B  300D               	movlw	(low (((STR_1+2)-__stringbase)| (0+32768)))& (0+255)
  1249     004C  00F8               	movwf	Lcd_Write_String_4bits@a
  1250     004D  3080               	movlw	128
  1251     004E  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1252     004F  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1253                           
  1254                           ;main_M.c: 108:     Lcd_Set_Cursor_4bits(2,9);
  1255     0054  3009               	movlw	9
  1256     0055  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1257     0056  3002               	movlw	2
  1258     0057  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1259     005C                     l2277:
  1260                           
  1261                           ;main_M.c: 109:     Lcd_Write_String_4bits("/");
  1262     005C  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1263     005D  00F8               	movwf	Lcd_Write_String_4bits@a
  1264     005E  3080               	movlw	128
  1265     005F  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1266     0060  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1267     0065                     l2279:
  1268                           
  1269                           ;main_M.c: 110:     Lcd_Set_Cursor_4bits(2,12);
  1270     0065  300C               	movlw	12
  1271     0066  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1272     0067  3002               	movlw	2
  1273     0068  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1274                           
  1275                           ;main_M.c: 111:     Lcd_Write_String_4bits("/");
  1276     006D  3012               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1277     006E  00F8               	movwf	Lcd_Write_String_4bits@a
  1278     006F  3080               	movlw	128
  1279     0070  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1280     0071  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1281     0076                     l2281:
  1282                           
  1283                           ;main_M.c: 114:     {;main_M.c: 116:         PORTA = modo;
  1284     0076  1683               	bsf	3,5	;RP0=1, select bank3
  1285     0077  1703               	bsf	3,6	;RP1=1, select bank3
  1286     0078  0869               	movf	_modo^(0+384),w
  1287     0079  1283               	bcf	3,5	;RP0=0, select bank0
  1288     007A  1303               	bcf	3,6	;RP1=0, select bank0
  1289     007B  0085               	movwf	5	;volatile
  1290     007C                     l2283:
  1291                           
  1292                           ;main_M.c: 118:         I2C_Master_Start();
  1293     007C  120A  158A  24FE  120A  118A  	fcall	_I2C_Master_Start
  1294     0081                     l2285:
  1295                           
  1296                           ;main_M.c: 119:         I2C_Master_Write(0x11);
  1297     0081  3011               	movlw	17
  1298     0082  00F3               	movwf	I2C_Master_Write@d
  1299     0083  3000               	movlw	0
  1300     0084  00F4               	movwf	I2C_Master_Write@d+1
  1301     0085  120A  158A  2510  120A  118A  	fcall	_I2C_Master_Write
  1302     008A                     l2287:
  1303                           
  1304                           ;main_M.c: 120:         VAL1 = I2C_Master_Read(0);
  1305     008A  3000               	movlw	0
  1306     008B  00F3               	movwf	I2C_Master_Read@a
  1307     008C  00F4               	movwf	I2C_Master_Read@a+1
  1308     008D  120A  158A  25B1  120A  118A  	fcall	_I2C_Master_Read
  1309     0092  0873               	movf	?_I2C_Master_Read,w
  1310     0093  1683               	bsf	3,5	;RP0=1, select bank3
  1311     0094  1703               	bsf	3,6	;RP1=1, select bank3
  1312     0095  00E7               	movwf	main@VAL1^(0+384)
  1313     0096                     l2289:
  1314                           
  1315                           ;main_M.c: 121:         I2C_Master_Stop();
  1316     0096  120A  158A  2507  120A  118A  	fcall	_I2C_Master_Stop
  1317     009B                     l2291:
  1318                           
  1319                           ;main_M.c: 122:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1320     009B  3003               	movlw	3
  1321     009C  1283               	bcf	3,5	;RP0=0, select bank0
  1322     009D  1303               	bcf	3,6	;RP1=0, select bank0
  1323     009E  00B6               	movwf	??_main+2
  1324     009F  3008               	movlw	8
  1325     00A0  00B5               	movwf	??_main+1
  1326     00A1  3076               	movlw	118
  1327     00A2  00B4               	movwf	??_main
  1328     00A3                     u1747:
  1329     00A3  0BB4               	decfsz	??_main,f
  1330     00A4  28A3               	goto	u1747
  1331     00A5  0BB5               	decfsz	??_main+1,f
  1332     00A6  28A3               	goto	u1747
  1333     00A7  0BB6               	decfsz	??_main+2,f
  1334     00A8  28A3               	goto	u1747
  1335     00A9  0000               	nop
  1336     00AA                     l2293:
  1337                           
  1338                           ;main_M.c: 124:         VAL1_C = (VAL1/100);
  1339     00AA  3064               	movlw	100
  1340     00AB  00F3               	movwf	___awdiv@divisor
  1341     00AC  3000               	movlw	0
  1342     00AD  00F4               	movwf	___awdiv@divisor+1
  1343     00AE  1683               	bsf	3,5	;RP0=1, select bank3
  1344     00AF  1703               	bsf	3,6	;RP1=1, select bank3
  1345     00B0  0867               	movf	main@VAL1^(0+384),w
  1346     00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1347     00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1348     00B3  00B4               	movwf	??_main
  1349     00B4  01B5               	clrf	??_main+1
  1350     00B5  0834               	movf	??_main,w
  1351     00B6  00F5               	movwf	___awdiv@dividend
  1352     00B7  0835               	movf	??_main+1,w
  1353     00B8  00F6               	movwf	___awdiv@dividend+1
  1354     00B9  120A  118A  2676  120A  118A  	fcall	___awdiv
  1355     00BE  0873               	movf	?___awdiv,w
  1356     00BF  1683               	bsf	3,5	;RP0=1, select bank3
  1357     00C0  1703               	bsf	3,6	;RP1=1, select bank3
  1358     00C1  00D3               	movwf	main@VAL1_C^(0+384)
  1359     00C2                     l2295:
  1360                           
  1361                           ;main_M.c: 125:         VAL1_D = (VAL1/10)%10;
  1362     00C2  300A               	movlw	10
  1363     00C3  1283               	bcf	3,5	;RP0=0, select bank0
  1364     00C4  1303               	bcf	3,6	;RP1=0, select bank0
  1365     00C5  00A4               	movwf	___awmod@divisor
  1366     00C6  3000               	movlw	0
  1367     00C7  00A5               	movwf	___awmod@divisor+1
  1368     00C8  300A               	movlw	10
  1369     00C9  00F3               	movwf	___awdiv@divisor
  1370     00CA  3000               	movlw	0
  1371     00CB  00F4               	movwf	___awdiv@divisor+1
  1372     00CC  1683               	bsf	3,5	;RP0=1, select bank3
  1373     00CD  1703               	bsf	3,6	;RP1=1, select bank3
  1374     00CE  0867               	movf	main@VAL1^(0+384),w
  1375     00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1376     00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1377     00D1  00B4               	movwf	??_main
  1378     00D2  01B5               	clrf	??_main+1
  1379     00D3  0834               	movf	??_main,w
  1380     00D4  00F5               	movwf	___awdiv@dividend
  1381     00D5  0835               	movf	??_main+1,w
  1382     00D6  00F6               	movwf	___awdiv@dividend+1
  1383     00D7  120A  118A  2676  120A  118A  	fcall	___awdiv
  1384     00DC  0874               	movf	?___awdiv+1,w
  1385     00DD  1283               	bcf	3,5	;RP0=0, select bank0
  1386     00DE  1303               	bcf	3,6	;RP1=0, select bank0
  1387     00DF  00A7               	movwf	___awmod@dividend+1
  1388     00E0  0873               	movf	?___awdiv,w
  1389     00E1  00A6               	movwf	___awmod@dividend
  1390     00E2  120A  158A  2748  120A  118A  	fcall	___awmod
  1391     00E7  1283               	bcf	3,5	;RP0=0, select bank0
  1392     00E8  1303               	bcf	3,6	;RP1=0, select bank0
  1393     00E9  0824               	movf	?___awmod,w
  1394     00EA  1683               	bsf	3,5	;RP0=1, select bank3
  1395     00EB  1703               	bsf	3,6	;RP1=1, select bank3
  1396     00EC  00D2               	movwf	main@VAL1_D^(0+384)
  1397     00ED                     l2297:
  1398                           
  1399                           ;main_M.c: 126:         VAL1_U = VAL1%10;
  1400     00ED  300A               	movlw	10
  1401     00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1402     00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1403     00F0  00A4               	movwf	___awmod@divisor
  1404     00F1  3000               	movlw	0
  1405     00F2  00A5               	movwf	___awmod@divisor+1
  1406     00F3  1683               	bsf	3,5	;RP0=1, select bank3
  1407     00F4  1703               	bsf	3,6	;RP1=1, select bank3
  1408     00F5  0867               	movf	main@VAL1^(0+384),w
  1409     00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1410     00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1411     00F8  00B4               	movwf	??_main
  1412     00F9  01B5               	clrf	??_main+1
  1413     00FA  0834               	movf	??_main,w
  1414     00FB  00A6               	movwf	___awmod@dividend
  1415     00FC  0835               	movf	??_main+1,w
  1416     00FD  00A7               	movwf	___awmod@dividend+1
  1417     00FE  120A  158A  2748  120A  118A  	fcall	___awmod
  1418     0103  1283               	bcf	3,5	;RP0=0, select bank0
  1419     0104  1303               	bcf	3,6	;RP1=0, select bank0
  1420     0105  0824               	movf	?___awmod,w
  1421     0106  1683               	bsf	3,5	;RP0=1, select bank3
  1422     0107  1703               	bsf	3,6	;RP1=1, select bank3
  1423     0108  00D1               	movwf	main@VAL1_U^(0+384)
  1424     0109                     l2299:
  1425                           
  1426                           ;main_M.c: 128:         sprintf(ADC1, "%u", VAL1_C);
  1427     0109  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1428     010A  1283               	bcf	3,5	;RP0=0, select bank0
  1429     010B  1303               	bcf	3,6	;RP1=0, select bank0
  1430     010C  00A7               	movwf	sprintf@f
  1431     010D  1683               	bsf	3,5	;RP0=1, select bank3
  1432     010E  1703               	bsf	3,6	;RP1=1, select bank3
  1433     010F  0853               	movf	main@VAL1_C^(0+384),w
  1434     0110  1283               	bcf	3,5	;RP0=0, select bank0
  1435     0111  1303               	bcf	3,6	;RP1=0, select bank0
  1436     0112  00B4               	movwf	??_main
  1437     0113  01B5               	clrf	??_main+1
  1438     0114  0834               	movf	??_main,w
  1439     0115  00A8               	movwf	?_sprintf+1
  1440     0116  0835               	movf	??_main+1,w
  1441     0117  00A9               	movwf	?_sprintf+2
  1442     0118  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1443     0119  120A  118A  25B3  120A  118A  	fcall	_sprintf
  1444                           
  1445                           ;main_M.c: 129:         Lcd_Set_Cursor_4bits(2,1);
  1446     011E  01F7               	clrf	Lcd_Set_Cursor_4bits@b
  1447     011F  0AF7               	incf	Lcd_Set_Cursor_4bits@b,f
  1448     0120  3002               	movlw	2
  1449     0121  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1450     0126                     l2301:
  1451                           
  1452                           ;main_M.c: 130:         Lcd_Write_String_4bits(ADC1);
  1453     0126  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1454     0127  00F8               	movwf	Lcd_Write_String_4bits@a
  1455     0128  3001               	movlw	1
  1456     0129  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1457     012A  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1458     012F                     l2303:
  1459                           
  1460                           ;main_M.c: 132:         sprintf(ADC1, "%u", VAL1_D);
  1461     012F  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1462     0130  1283               	bcf	3,5	;RP0=0, select bank0
  1463     0131  1303               	bcf	3,6	;RP1=0, select bank0
  1464     0132  00A7               	movwf	sprintf@f
  1465     0133  1683               	bsf	3,5	;RP0=1, select bank3
  1466     0134  1703               	bsf	3,6	;RP1=1, select bank3
  1467     0135  0852               	movf	main@VAL1_D^(0+384),w
  1468     0136  1283               	bcf	3,5	;RP0=0, select bank0
  1469     0137  1303               	bcf	3,6	;RP1=0, select bank0
  1470     0138  00B4               	movwf	??_main
  1471     0139  01B5               	clrf	??_main+1
  1472     013A  0834               	movf	??_main,w
  1473     013B  00A8               	movwf	?_sprintf+1
  1474     013C  0835               	movf	??_main+1,w
  1475     013D  00A9               	movwf	?_sprintf+2
  1476     013E  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1477     013F  120A  118A  25B3  120A  118A  	fcall	_sprintf
  1478                           
  1479                           ;main_M.c: 133:         Lcd_Set_Cursor_4bits(2,2);
  1480     0144  3002               	movlw	2
  1481     0145  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1482     0146  3002               	movlw	2
  1483     0147  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1484     014C                     l2305:
  1485                           
  1486                           ;main_M.c: 134:         Lcd_Write_String_4bits(ADC1);
  1487     014C  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1488     014D  00F8               	movwf	Lcd_Write_String_4bits@a
  1489     014E  3001               	movlw	1
  1490     014F  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1491     0150  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1492     0155                     l2307:
  1493                           
  1494                           ;main_M.c: 136:         sprintf(ADC1, "%u", VAL1_U);
  1495     0155  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1496     0156  1283               	bcf	3,5	;RP0=0, select bank0
  1497     0157  1303               	bcf	3,6	;RP1=0, select bank0
  1498     0158  00A7               	movwf	sprintf@f
  1499     0159  1683               	bsf	3,5	;RP0=1, select bank3
  1500     015A  1703               	bsf	3,6	;RP1=1, select bank3
  1501     015B  0851               	movf	main@VAL1_U^(0+384),w
  1502     015C  1283               	bcf	3,5	;RP0=0, select bank0
  1503     015D  1303               	bcf	3,6	;RP1=0, select bank0
  1504     015E  00B4               	movwf	??_main
  1505     015F  01B5               	clrf	??_main+1
  1506     0160  0834               	movf	??_main,w
  1507     0161  00A8               	movwf	?_sprintf+1
  1508     0162  0835               	movf	??_main+1,w
  1509     0163  00A9               	movwf	?_sprintf+2
  1510     0164  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1511     0165  120A  118A  25B3  120A  118A  	fcall	_sprintf
  1512                           
  1513                           ;main_M.c: 137:         Lcd_Set_Cursor_4bits(2,3);
  1514     016A  3003               	movlw	3
  1515     016B  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1516     016C  3002               	movlw	2
  1517     016D  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1518     0172                     l2309:
  1519                           
  1520                           ;main_M.c: 138:         Lcd_Write_String_4bits(ADC1);
  1521     0172  30BD               	movlw	(low (main@ADC1| (0+256)))& (0+255)
  1522     0173  00F8               	movwf	Lcd_Write_String_4bits@a
  1523     0174  3001               	movlw	1
  1524     0175  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1525     0176  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1526     017B                     l2311:
  1527                           
  1528                           ;main_M.c: 140:         SEG = leerRTC(REG_SEG);
  1529     017B  3000               	movlw	0
  1530     017C  120A  118A  2747  120A  118A  	fcall	_leerRTC
  1531     0181  1683               	bsf	3,5	;RP0=1, select bank3
  1532     0182  1703               	bsf	3,6	;RP1=1, select bank3
  1533     0183  00E2               	movwf	main@SEG^(0+384)
  1534     0184                     l2313:
  1535                           
  1536                           ;main_M.c: 142:         SEG_D = (SEG/10)%10;
  1537     0184  300A               	movlw	10
  1538     0185  1283               	bcf	3,5	;RP0=0, select bank0
  1539     0186  1303               	bcf	3,6	;RP1=0, select bank0
  1540     0187  00A4               	movwf	___awmod@divisor
  1541     0188  3000               	movlw	0
  1542     0189  00A5               	movwf	___awmod@divisor+1
  1543     018A  300A               	movlw	10
  1544     018B  00F3               	movwf	___awdiv@divisor
  1545     018C  3000               	movlw	0
  1546     018D  00F4               	movwf	___awdiv@divisor+1
  1547     018E  1683               	bsf	3,5	;RP0=1, select bank3
  1548     018F  1703               	bsf	3,6	;RP1=1, select bank3
  1549     0190  0862               	movf	main@SEG^(0+384),w
  1550     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1551     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1552     0193  00B4               	movwf	??_main
  1553     0194  01B5               	clrf	??_main+1
  1554     0195  0834               	movf	??_main,w
  1555     0196  00F5               	movwf	___awdiv@dividend
  1556     0197  0835               	movf	??_main+1,w
  1557     0198  00F6               	movwf	___awdiv@dividend+1
  1558     0199  120A  118A  2676  120A  118A  	fcall	___awdiv
  1559     019E  0874               	movf	?___awdiv+1,w
  1560     019F  1283               	bcf	3,5	;RP0=0, select bank0
  1561     01A0  1303               	bcf	3,6	;RP1=0, select bank0
  1562     01A1  00A7               	movwf	___awmod@dividend+1
  1563     01A2  0873               	movf	?___awdiv,w
  1564     01A3  00A6               	movwf	___awmod@dividend
  1565     01A4  120A  158A  2748  120A  118A  	fcall	___awmod
  1566     01A9  1283               	bcf	3,5	;RP0=0, select bank0
  1567     01AA  1303               	bcf	3,6	;RP1=0, select bank0
  1568     01AB  0824               	movf	?___awmod,w
  1569     01AC  1683               	bsf	3,5	;RP0=1, select bank3
  1570     01AD  1703               	bsf	3,6	;RP1=1, select bank3
  1571     01AE  00D5               	movwf	main@SEG_D^(0+384)
  1572     01AF                     l2315:
  1573                           
  1574                           ;main_M.c: 143:         SEG_U = SEG%10;
  1575     01AF  300A               	movlw	10
  1576     01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1577     01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1578     01B2  00A4               	movwf	___awmod@divisor
  1579     01B3  3000               	movlw	0
  1580     01B4  00A5               	movwf	___awmod@divisor+1
  1581     01B5  1683               	bsf	3,5	;RP0=1, select bank3
  1582     01B6  1703               	bsf	3,6	;RP1=1, select bank3
  1583     01B7  0862               	movf	main@SEG^(0+384),w
  1584     01B8  1283               	bcf	3,5	;RP0=0, select bank0
  1585     01B9  1303               	bcf	3,6	;RP1=0, select bank0
  1586     01BA  00B4               	movwf	??_main
  1587     01BB  01B5               	clrf	??_main+1
  1588     01BC  0834               	movf	??_main,w
  1589     01BD  00A6               	movwf	___awmod@dividend
  1590     01BE  0835               	movf	??_main+1,w
  1591     01BF  00A7               	movwf	___awmod@dividend+1
  1592     01C0  120A  158A  2748  120A  118A  	fcall	___awmod
  1593     01C5  1283               	bcf	3,5	;RP0=0, select bank0
  1594     01C6  1303               	bcf	3,6	;RP1=0, select bank0
  1595     01C7  0824               	movf	?___awmod,w
  1596     01C8  1683               	bsf	3,5	;RP0=1, select bank3
  1597     01C9  1703               	bsf	3,6	;RP1=1, select bank3
  1598     01CA  00D4               	movwf	main@SEG_U^(0+384)
  1599                           
  1600                           ;main_M.c: 145:         sprintf(stringSEG, "%u", SEG_D);
  1601     01CB  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1602     01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1603     01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1604     01CE  00A7               	movwf	sprintf@f
  1605     01CF  1683               	bsf	3,5	;RP0=1, select bank3
  1606     01D0  1703               	bsf	3,6	;RP1=1, select bank3
  1607     01D1  0855               	movf	main@SEG_D^(0+384),w
  1608     01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1609     01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1610     01D4  00B4               	movwf	??_main
  1611     01D5  01B5               	clrf	??_main+1
  1612     01D6  0834               	movf	??_main,w
  1613     01D7  00A8               	movwf	?_sprintf+1
  1614     01D8  0835               	movf	??_main+1,w
  1615     01D9  00A9               	movwf	?_sprintf+2
  1616     01DA  3090               	movlw	(low (main@stringSEG| (0+256)))& (0+255)
  1617     01DB  120A  118A  25B3  120A  118A  	fcall	_sprintf
  1618     01E0                     l2317:
  1619                           
  1620                           ;main_M.c: 146:         Lcd_Set_Cursor_4bits(1,13);
  1621     01E0  300D               	movlw	13
  1622     01E1  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1623     01E2  3001               	movlw	1
  1624     01E3  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1625     01E8                     l2319:
  1626                           
  1627                           ;main_M.c: 147:         Lcd_Write_String_4bits(stringSEG);
  1628     01E8  3090               	movlw	(low (main@stringSEG| (0+256)))& (0+255)
  1629     01E9  00F8               	movwf	Lcd_Write_String_4bits@a
  1630     01EA  3001               	movlw	1
  1631     01EB  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1632     01EC  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1633     01F1                     l2321:
  1634                           
  1635                           ;main_M.c: 149:         sprintf(stringSEG, "%u", SEG_U);
  1636     01F1  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1637     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1638     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1639     01F4  00A7               	movwf	sprintf@f
  1640     01F5  1683               	bsf	3,5	;RP0=1, select bank3
  1641     01F6  1703               	bsf	3,6	;RP1=1, select bank3
  1642     01F7  0854               	movf	main@SEG_U^(0+384),w
  1643     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  1644     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  1645     01FA  00B4               	movwf	??_main
  1646     01FB  01B5               	clrf	??_main+1
  1647     01FC  0834               	movf	??_main,w
  1648     01FD  00A8               	movwf	?_sprintf+1
  1649     01FE  0835               	movf	??_main+1,w
  1650     01FF  00A9               	movwf	?_sprintf+2
  1651     0200  3090               	movlw	(low (main@stringSEG| (0+256)))& (0+255)
  1652     0201  120A  118A  25B3  120A  118A  	fcall	_sprintf
  1653     0206                     l2323:
  1654                           
  1655                           ;main_M.c: 150:         Lcd_Set_Cursor_4bits(1,14);
  1656     0206  300E               	movlw	14
  1657     0207  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1658     0208  3001               	movlw	1
  1659     0209  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1660                           
  1661                           ;main_M.c: 151:         Lcd_Write_String_4bits(stringSEG);
  1662     020E  3090               	movlw	(low (main@stringSEG| (0+256)))& (0+255)
  1663     020F  00F8               	movwf	Lcd_Write_String_4bits@a
  1664     0210  3001               	movlw	1
  1665     0211  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1666     0212  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1667     0217                     l2325:
  1668                           
  1669                           ;main_M.c: 153:         MIN = leerRTC(REG_MIN);
  1670     0217  3001               	movlw	1
  1671     0218  120A  118A  2747  120A  118A  	fcall	_leerRTC
  1672     021D  1683               	bsf	3,5	;RP0=1, select bank3
  1673     021E  1703               	bsf	3,6	;RP1=1, select bank3
  1674     021F  00E3               	movwf	main@MIN^(0+384)
  1675     0220                     l2327:
  1676                           
  1677                           ;main_M.c: 155:         MIN_D = (MIN/10)%10;
  1678     0220  300A               	movlw	10
  1679     0221  1283               	bcf	3,5	;RP0=0, select bank0
  1680     0222  1303               	bcf	3,6	;RP1=0, select bank0
  1681     0223  00A4               	movwf	___awmod@divisor
  1682     0224  3000               	movlw	0
  1683     0225  00A5               	movwf	___awmod@divisor+1
  1684     0226  300A               	movlw	10
  1685     0227  00F3               	movwf	___awdiv@divisor
  1686     0228  3000               	movlw	0
  1687     0229  00F4               	movwf	___awdiv@divisor+1
  1688     022A  1683               	bsf	3,5	;RP0=1, select bank3
  1689     022B  1703               	bsf	3,6	;RP1=1, select bank3
  1690     022C  0863               	movf	main@MIN^(0+384),w
  1691     022D  1283               	bcf	3,5	;RP0=0, select bank0
  1692     022E  1303               	bcf	3,6	;RP1=0, select bank0
  1693     022F  00B4               	movwf	??_main
  1694     0230  01B5               	clrf	??_main+1
  1695     0231  0834               	movf	??_main,w
  1696     0232  00F5               	movwf	___awdiv@dividend
  1697     0233  0835               	movf	??_main+1,w
  1698     0234  00F6               	movwf	___awdiv@dividend+1
  1699     0235  120A  118A  2676  120A  118A  	fcall	___awdiv
  1700     023A  0874               	movf	?___awdiv+1,w
  1701     023B  1283               	bcf	3,5	;RP0=0, select bank0
  1702     023C  1303               	bcf	3,6	;RP1=0, select bank0
  1703     023D  00A7               	movwf	___awmod@dividend+1
  1704     023E  0873               	movf	?___awdiv,w
  1705     023F  00A6               	movwf	___awmod@dividend
  1706     0240  120A  158A  2748  120A  118A  	fcall	___awmod
  1707     0245  1283               	bcf	3,5	;RP0=0, select bank0
  1708     0246  1303               	bcf	3,6	;RP1=0, select bank0
  1709     0247  0824               	movf	?___awmod,w
  1710     0248  1683               	bsf	3,5	;RP0=1, select bank3
  1711     0249  1703               	bsf	3,6	;RP1=1, select bank3
  1712     024A  00D7               	movwf	main@MIN_D^(0+384)
  1713     024B                     l2329:
  1714                           
  1715                           ;main_M.c: 156:         MIN_U = MIN%10;
  1716     024B  300A               	movlw	10
  1717     024C  1283               	bcf	3,5	;RP0=0, select bank0
  1718     024D  1303               	bcf	3,6	;RP1=0, select bank0
  1719     024E  00A4               	movwf	___awmod@divisor
  1720     024F  3000               	movlw	0
  1721     0250  00A5               	movwf	___awmod@divisor+1
  1722     0251  1683               	bsf	3,5	;RP0=1, select bank3
  1723     0252  1703               	bsf	3,6	;RP1=1, select bank3
  1724     0253  0863               	movf	main@MIN^(0+384),w
  1725     0254  1283               	bcf	3,5	;RP0=0, select bank0
  1726     0255  1303               	bcf	3,6	;RP1=0, select bank0
  1727     0256  00B4               	movwf	??_main
  1728     0257  01B5               	clrf	??_main+1
  1729     0258  0834               	movf	??_main,w
  1730     0259  00A6               	movwf	___awmod@dividend
  1731     025A  0835               	movf	??_main+1,w
  1732     025B  00A7               	movwf	___awmod@dividend+1
  1733     025C  120A  158A  2748  120A  118A  	fcall	___awmod
  1734     0261  1283               	bcf	3,5	;RP0=0, select bank0
  1735     0262  1303               	bcf	3,6	;RP1=0, select bank0
  1736     0263  0824               	movf	?___awmod,w
  1737     0264  1683               	bsf	3,5	;RP0=1, select bank3
  1738     0265  1703               	bsf	3,6	;RP1=1, select bank3
  1739     0266  00D6               	movwf	main@MIN_U^(0+384)
  1740     0267                     l2331:
  1741                           
  1742                           ;main_M.c: 158:         sprintf(stringMIN, "%u", MIN_D);
  1743     0267  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1744     0268  1283               	bcf	3,5	;RP0=0, select bank0
  1745     0269  1303               	bcf	3,6	;RP1=0, select bank0
  1746     026A  00A7               	movwf	sprintf@f
  1747     026B  1683               	bsf	3,5	;RP0=1, select bank3
  1748     026C  1703               	bsf	3,6	;RP1=1, select bank3
  1749     026D  0857               	movf	main@MIN_D^(0+384),w
  1750     026E  1283               	bcf	3,5	;RP0=0, select bank0
  1751     026F  1303               	bcf	3,6	;RP1=0, select bank0
  1752     0270  00B4               	movwf	??_main
  1753     0271  01B5               	clrf	??_main+1
  1754     0272  0834               	movf	??_main,w
  1755     0273  00A8               	movwf	?_sprintf+1
  1756     0274  0835               	movf	??_main+1,w
  1757     0275  00A9               	movwf	?_sprintf+2
  1758     0276  3099               	movlw	(low (main@stringMIN| (0+256)))& (0+255)
  1759     0277  120A  118A  25B3  120A  118A  	fcall	_sprintf
  1760                           
  1761                           ;main_M.c: 159:         Lcd_Set_Cursor_4bits(1,10);
  1762     027C  300A               	movlw	10
  1763     027D  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1764     027E  3001               	movlw	1
  1765     027F  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1766     0284                     l2333:
  1767                           
  1768                           ;main_M.c: 160:         Lcd_Write_String_4bits(stringMIN);
  1769     0284  3099               	movlw	(low (main@stringMIN| (0+256)))& (0+255)
  1770     0285  00F8               	movwf	Lcd_Write_String_4bits@a
  1771     0286  3001               	movlw	1
  1772     0287  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1773     0288  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1774     028D                     l2335:
  1775                           
  1776                           ;main_M.c: 162:         sprintf(stringMIN, "%u", MIN_U);
  1777     028D  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1778     028E  1283               	bcf	3,5	;RP0=0, select bank0
  1779     028F  1303               	bcf	3,6	;RP1=0, select bank0
  1780     0290  00A7               	movwf	sprintf@f
  1781     0291  1683               	bsf	3,5	;RP0=1, select bank3
  1782     0292  1703               	bsf	3,6	;RP1=1, select bank3
  1783     0293  0856               	movf	main@MIN_U^(0+384),w
  1784     0294  1283               	bcf	3,5	;RP0=0, select bank0
  1785     0295  1303               	bcf	3,6	;RP1=0, select bank0
  1786     0296  00B4               	movwf	??_main
  1787     0297  01B5               	clrf	??_main+1
  1788     0298  0834               	movf	??_main,w
  1789     0299  00A8               	movwf	?_sprintf+1
  1790     029A  0835               	movf	??_main+1,w
  1791     029B  00A9               	movwf	?_sprintf+2
  1792     029C  3099               	movlw	(low (main@stringMIN| (0+256)))& (0+255)
  1793     029D  120A  118A  25B3  120A  118A  	fcall	_sprintf
  1794                           
  1795                           ;main_M.c: 163:         Lcd_Set_Cursor_4bits(1,11);
  1796     02A2  300B               	movlw	11
  1797     02A3  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1798     02A4  3001               	movlw	1
  1799     02A5  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1800     02AA                     l2337:
  1801                           
  1802                           ;main_M.c: 164:         Lcd_Write_String_4bits(stringMIN);
  1803     02AA  3099               	movlw	(low (main@stringMIN| (0+256)))& (0+255)
  1804     02AB  00F8               	movwf	Lcd_Write_String_4bits@a
  1805     02AC  3001               	movlw	1
  1806     02AD  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1807     02AE  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1808     02B3                     l2339:
  1809                           
  1810                           ;main_M.c: 166:         HOR = leerRTC(REG_HOR);
  1811     02B3  3002               	movlw	2
  1812     02B4  120A  118A  2747  120A  118A  	fcall	_leerRTC
  1813     02B9  1683               	bsf	3,5	;RP0=1, select bank3
  1814     02BA  1703               	bsf	3,6	;RP1=1, select bank3
  1815     02BB  00E4               	movwf	main@HOR^(0+384)
  1816     02BC                     l2341:
  1817                           
  1818                           ;main_M.c: 168:         HOR_D = (HOR/10)%10;
  1819     02BC  300A               	movlw	10
  1820     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1821     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1822     02BF  00A4               	movwf	___awmod@divisor
  1823     02C0  3000               	movlw	0
  1824     02C1  00A5               	movwf	___awmod@divisor+1
  1825     02C2  300A               	movlw	10
  1826     02C3  00F3               	movwf	___awdiv@divisor
  1827     02C4  3000               	movlw	0
  1828     02C5  00F4               	movwf	___awdiv@divisor+1
  1829     02C6  1683               	bsf	3,5	;RP0=1, select bank3
  1830     02C7  1703               	bsf	3,6	;RP1=1, select bank3
  1831     02C8  0864               	movf	main@HOR^(0+384),w
  1832     02C9  1283               	bcf	3,5	;RP0=0, select bank0
  1833     02CA  1303               	bcf	3,6	;RP1=0, select bank0
  1834     02CB  00B4               	movwf	??_main
  1835     02CC  01B5               	clrf	??_main+1
  1836     02CD  0834               	movf	??_main,w
  1837     02CE  00F5               	movwf	___awdiv@dividend
  1838     02CF  0835               	movf	??_main+1,w
  1839     02D0  00F6               	movwf	___awdiv@dividend+1
  1840     02D1  120A  118A  2676  120A  118A  	fcall	___awdiv
  1841     02D6  0874               	movf	?___awdiv+1,w
  1842     02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1843     02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1844     02D9  00A7               	movwf	___awmod@dividend+1
  1845     02DA  0873               	movf	?___awdiv,w
  1846     02DB  00A6               	movwf	___awmod@dividend
  1847     02DC  120A  158A  2748  120A  118A  	fcall	___awmod
  1848     02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1849     02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1850     02E3  0824               	movf	?___awmod,w
  1851     02E4  1683               	bsf	3,5	;RP0=1, select bank3
  1852     02E5  1703               	bsf	3,6	;RP1=1, select bank3
  1853     02E6  00D9               	movwf	main@HOR_D^(0+384)
  1854     02E7                     l2343:
  1855                           
  1856                           ;main_M.c: 169:         HOR_U = HOR%10;
  1857     02E7  300A               	movlw	10
  1858     02E8  1283               	bcf	3,5	;RP0=0, select bank0
  1859     02E9  1303               	bcf	3,6	;RP1=0, select bank0
  1860     02EA  00A4               	movwf	___awmod@divisor
  1861     02EB  3000               	movlw	0
  1862     02EC  00A5               	movwf	___awmod@divisor+1
  1863     02ED  1683               	bsf	3,5	;RP0=1, select bank3
  1864     02EE  1703               	bsf	3,6	;RP1=1, select bank3
  1865     02EF  0864               	movf	main@HOR^(0+384),w
  1866     02F0  1283               	bcf	3,5	;RP0=0, select bank0
  1867     02F1  1303               	bcf	3,6	;RP1=0, select bank0
  1868     02F2  00B4               	movwf	??_main
  1869     02F3  01B5               	clrf	??_main+1
  1870     02F4  0834               	movf	??_main,w
  1871     02F5  00A6               	movwf	___awmod@dividend
  1872     02F6  0835               	movf	??_main+1,w
  1873     02F7  00A7               	movwf	___awmod@dividend+1
  1874     02F8  120A  158A  2748  120A  118A  	fcall	___awmod
  1875     02FD  1283               	bcf	3,5	;RP0=0, select bank0
  1876     02FE  1303               	bcf	3,6	;RP1=0, select bank0
  1877     02FF  0824               	movf	?___awmod,w
  1878     0300  1683               	bsf	3,5	;RP0=1, select bank3
  1879     0301  1703               	bsf	3,6	;RP1=1, select bank3
  1880     0302  00D8               	movwf	main@HOR_U^(0+384)
  1881                           
  1882                           ;main_M.c: 171:         sprintf(stringHOR, "%u", HOR_D);
  1883     0303  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1884     0304  1283               	bcf	3,5	;RP0=0, select bank0
  1885     0305  1303               	bcf	3,6	;RP1=0, select bank0
  1886     0306  00A7               	movwf	sprintf@f
  1887     0307  1683               	bsf	3,5	;RP0=1, select bank3
  1888     0308  1703               	bsf	3,6	;RP1=1, select bank3
  1889     0309  0859               	movf	main@HOR_D^(0+384),w
  1890     030A  1283               	bcf	3,5	;RP0=0, select bank0
  1891     030B  1303               	bcf	3,6	;RP1=0, select bank0
  1892     030C  00B4               	movwf	??_main
  1893     030D  01B5               	clrf	??_main+1
  1894     030E  0834               	movf	??_main,w
  1895     030F  00A8               	movwf	?_sprintf+1
  1896     0310  0835               	movf	??_main+1,w
  1897     0311  00A9               	movwf	?_sprintf+2
  1898     0312  30A2               	movlw	(low (main@stringHOR| (0+256)))& (0+255)
  1899     0313  120A  118A  25B3  120A  118A  	fcall	_sprintf
  1900     0318                     l2345:
  1901                           
  1902                           ;main_M.c: 172:         Lcd_Set_Cursor_4bits(1,7);
  1903     0318  3007               	movlw	7
  1904     0319  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1905     031A  3001               	movlw	1
  1906     031B  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1907     0320                     l2347:
  1908                           
  1909                           ;main_M.c: 173:         Lcd_Write_String_4bits(stringHOR);
  1910     0320  30A2               	movlw	(low (main@stringHOR| (0+256)))& (0+255)
  1911     0321  00F8               	movwf	Lcd_Write_String_4bits@a
  1912     0322  3001               	movlw	1
  1913     0323  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1914     0324  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1915     0329                     l2349:
  1916                           
  1917                           ;main_M.c: 175:         sprintf(stringHOR, "%u", HOR_U);
  1918     0329  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1919     032A  1283               	bcf	3,5	;RP0=0, select bank0
  1920     032B  1303               	bcf	3,6	;RP1=0, select bank0
  1921     032C  00A7               	movwf	sprintf@f
  1922     032D  1683               	bsf	3,5	;RP0=1, select bank3
  1923     032E  1703               	bsf	3,6	;RP1=1, select bank3
  1924     032F  0858               	movf	main@HOR_U^(0+384),w
  1925     0330  1283               	bcf	3,5	;RP0=0, select bank0
  1926     0331  1303               	bcf	3,6	;RP1=0, select bank0
  1927     0332  00B4               	movwf	??_main
  1928     0333  01B5               	clrf	??_main+1
  1929     0334  0834               	movf	??_main,w
  1930     0335  00A8               	movwf	?_sprintf+1
  1931     0336  0835               	movf	??_main+1,w
  1932     0337  00A9               	movwf	?_sprintf+2
  1933     0338  30A2               	movlw	(low (main@stringHOR| (0+256)))& (0+255)
  1934     0339  120A  118A  25B3  120A  118A  	fcall	_sprintf
  1935     033E                     l2351:
  1936                           
  1937                           ;main_M.c: 176:         Lcd_Set_Cursor_4bits(1,8);
  1938     033E  3008               	movlw	8
  1939     033F  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  1940     0340  3001               	movlw	1
  1941     0341  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  1942                           
  1943                           ;main_M.c: 177:         Lcd_Write_String_4bits(stringHOR);
  1944     0346  30A2               	movlw	(low (main@stringHOR| (0+256)))& (0+255)
  1945     0347  00F8               	movwf	Lcd_Write_String_4bits@a
  1946     0348  3001               	movlw	1
  1947     0349  00F9               	movwf	Lcd_Write_String_4bits@a+1
  1948     034A  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  1949     034F                     l2353:
  1950                           
  1951                           ;main_M.c: 179:         DIA = leerRTC(REG_DIA);
  1952     034F  3003               	movlw	3
  1953     0350  120A  118A  2747  120A  118A  	fcall	_leerRTC
  1954     0355  1683               	bsf	3,5	;RP0=1, select bank3
  1955     0356  1703               	bsf	3,6	;RP1=1, select bank3
  1956     0357  00E5               	movwf	main@DIA^(0+384)
  1957     0358                     l2355:
  1958                           
  1959                           ;main_M.c: 181:         DIA_D = (DIA/10)%10;
  1960     0358  300A               	movlw	10
  1961     0359  1283               	bcf	3,5	;RP0=0, select bank0
  1962     035A  1303               	bcf	3,6	;RP1=0, select bank0
  1963     035B  00A4               	movwf	___awmod@divisor
  1964     035C  3000               	movlw	0
  1965     035D  00A5               	movwf	___awmod@divisor+1
  1966     035E  300A               	movlw	10
  1967     035F  00F3               	movwf	___awdiv@divisor
  1968     0360  3000               	movlw	0
  1969     0361  00F4               	movwf	___awdiv@divisor+1
  1970     0362  1683               	bsf	3,5	;RP0=1, select bank3
  1971     0363  1703               	bsf	3,6	;RP1=1, select bank3
  1972     0364  0865               	movf	main@DIA^(0+384),w
  1973     0365  1283               	bcf	3,5	;RP0=0, select bank0
  1974     0366  1303               	bcf	3,6	;RP1=0, select bank0
  1975     0367  00B4               	movwf	??_main
  1976     0368  01B5               	clrf	??_main+1
  1977     0369  0834               	movf	??_main,w
  1978     036A  00F5               	movwf	___awdiv@dividend
  1979     036B  0835               	movf	??_main+1,w
  1980     036C  00F6               	movwf	___awdiv@dividend+1
  1981     036D  120A  118A  2676  120A  118A  	fcall	___awdiv
  1982     0372  0874               	movf	?___awdiv+1,w
  1983     0373  1283               	bcf	3,5	;RP0=0, select bank0
  1984     0374  1303               	bcf	3,6	;RP1=0, select bank0
  1985     0375  00A7               	movwf	___awmod@dividend+1
  1986     0376  0873               	movf	?___awdiv,w
  1987     0377  00A6               	movwf	___awmod@dividend
  1988     0378  120A  158A  2748  120A  118A  	fcall	___awmod
  1989     037D  1283               	bcf	3,5	;RP0=0, select bank0
  1990     037E  1303               	bcf	3,6	;RP1=0, select bank0
  1991     037F  0824               	movf	?___awmod,w
  1992     0380  1683               	bsf	3,5	;RP0=1, select bank3
  1993     0381  1703               	bsf	3,6	;RP1=1, select bank3
  1994     0382  00DB               	movwf	main@DIA_D^(0+384)
  1995     0383                     l2357:
  1996                           
  1997                           ;main_M.c: 182:         DIA_U = DIA%10;
  1998     0383  300A               	movlw	10
  1999     0384  1283               	bcf	3,5	;RP0=0, select bank0
  2000     0385  1303               	bcf	3,6	;RP1=0, select bank0
  2001     0386  00A4               	movwf	___awmod@divisor
  2002     0387  3000               	movlw	0
  2003     0388  00A5               	movwf	___awmod@divisor+1
  2004     0389  1683               	bsf	3,5	;RP0=1, select bank3
  2005     038A  1703               	bsf	3,6	;RP1=1, select bank3
  2006     038B  0865               	movf	main@DIA^(0+384),w
  2007     038C  1283               	bcf	3,5	;RP0=0, select bank0
  2008     038D  1303               	bcf	3,6	;RP1=0, select bank0
  2009     038E  00B4               	movwf	??_main
  2010     038F  01B5               	clrf	??_main+1
  2011     0390  0834               	movf	??_main,w
  2012     0391  00A6               	movwf	___awmod@dividend
  2013     0392  0835               	movf	??_main+1,w
  2014     0393  00A7               	movwf	___awmod@dividend+1
  2015     0394  120A  158A  2748  120A  118A  	fcall	___awmod
  2016     0399  1283               	bcf	3,5	;RP0=0, select bank0
  2017     039A  1303               	bcf	3,6	;RP1=0, select bank0
  2018     039B  0824               	movf	?___awmod,w
  2019     039C  1683               	bsf	3,5	;RP0=1, select bank3
  2020     039D  1703               	bsf	3,6	;RP1=1, select bank3
  2021     039E  00DA               	movwf	main@DIA_U^(0+384)
  2022     039F                     l2359:
  2023                           
  2024                           ;main_M.c: 184:         sprintf(stringDIA, "%u", DIA_D);
  2025     039F  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2026     03A0  1283               	bcf	3,5	;RP0=0, select bank0
  2027     03A1  1303               	bcf	3,6	;RP1=0, select bank0
  2028     03A2  00A7               	movwf	sprintf@f
  2029     03A3  1683               	bsf	3,5	;RP0=1, select bank3
  2030     03A4  1703               	bsf	3,6	;RP1=1, select bank3
  2031     03A5  085B               	movf	main@DIA_D^(0+384),w
  2032     03A6  1283               	bcf	3,5	;RP0=0, select bank0
  2033     03A7  1303               	bcf	3,6	;RP1=0, select bank0
  2034     03A8  00B4               	movwf	??_main
  2035     03A9  01B5               	clrf	??_main+1
  2036     03AA  0834               	movf	??_main,w
  2037     03AB  00A8               	movwf	?_sprintf+1
  2038     03AC  0835               	movf	??_main+1,w
  2039     03AD  00A9               	movwf	?_sprintf+2
  2040     03AE  30AB               	movlw	(low (main@stringDIA| (0+256)))& (0+255)
  2041     03AF  120A  118A  25B3  120A  118A  	fcall	_sprintf
  2042                           
  2043                           ;main_M.c: 185:         Lcd_Set_Cursor_4bits(2,7);
  2044     03B4  3007               	movlw	7
  2045     03B5  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  2046     03B6  3002               	movlw	2
  2047     03B7  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2048     03BC                     l2361:
  2049                           
  2050                           ;main_M.c: 186:         Lcd_Write_String_4bits(stringDIA);
  2051     03BC  30AB               	movlw	(low (main@stringDIA| (0+256)))& (0+255)
  2052     03BD  00F8               	movwf	Lcd_Write_String_4bits@a
  2053     03BE  3001               	movlw	1
  2054     03BF  00F9               	movwf	Lcd_Write_String_4bits@a+1
  2055     03C0  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  2056     03C5                     l2363:
  2057                           
  2058                           ;main_M.c: 188:         sprintf(stringDIA, "%u", DIA_U);
  2059     03C5  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2060     03C6  1283               	bcf	3,5	;RP0=0, select bank0
  2061     03C7  1303               	bcf	3,6	;RP1=0, select bank0
  2062     03C8  00A7               	movwf	sprintf@f
  2063     03C9  1683               	bsf	3,5	;RP0=1, select bank3
  2064     03CA  1703               	bsf	3,6	;RP1=1, select bank3
  2065     03CB  085A               	movf	main@DIA_U^(0+384),w
  2066     03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2067     03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2068     03CE  00B4               	movwf	??_main
  2069     03CF  01B5               	clrf	??_main+1
  2070     03D0  0834               	movf	??_main,w
  2071     03D1  00A8               	movwf	?_sprintf+1
  2072     03D2  0835               	movf	??_main+1,w
  2073     03D3  00A9               	movwf	?_sprintf+2
  2074     03D4  30AB               	movlw	(low (main@stringDIA| (0+256)))& (0+255)
  2075     03D5  120A  118A  25B3  120A  118A  	fcall	_sprintf
  2076                           
  2077                           ;main_M.c: 189:         Lcd_Set_Cursor_4bits(2,8);
  2078     03DA  3008               	movlw	8
  2079     03DB  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  2080     03DC  3002               	movlw	2
  2081     03DD  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2082     03E2                     l2365:
  2083                           
  2084                           ;main_M.c: 190:         Lcd_Write_String_4bits(stringDIA);
  2085     03E2  30AB               	movlw	(low (main@stringDIA| (0+256)))& (0+255)
  2086     03E3  00F8               	movwf	Lcd_Write_String_4bits@a
  2087     03E4  3001               	movlw	1
  2088     03E5  00F9               	movwf	Lcd_Write_String_4bits@a+1
  2089     03E6  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  2090     03EB                     l2367:
  2091                           
  2092                           ;main_M.c: 192:         MES = leerRTC(REG_MES);
  2093     03EB  3004               	movlw	4
  2094     03EC  120A  118A  2747  120A  118A  	fcall	_leerRTC
  2095     03F1  1683               	bsf	3,5	;RP0=1, select bank3
  2096     03F2  1703               	bsf	3,6	;RP1=1, select bank3
  2097     03F3  00E6               	movwf	main@MES^(0+384)
  2098     03F4                     l2369:
  2099                           
  2100                           ;main_M.c: 194:         MES_D = (MES/10)%10;
  2101     03F4  300A               	movlw	10
  2102     03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2103     03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2104     03F7  00A4               	movwf	___awmod@divisor
  2105     03F8  3000               	movlw	0
  2106     03F9  00A5               	movwf	___awmod@divisor+1
  2107     03FA  300A               	movlw	10
  2108     03FB  00F3               	movwf	___awdiv@divisor
  2109     03FC  3000               	movlw	0
  2110     03FD  00F4               	movwf	___awdiv@divisor+1
  2111     03FE  1683               	bsf	3,5	;RP0=1, select bank3
  2112     03FF  1703               	bsf	3,6	;RP1=1, select bank3
  2113     0400  0866               	movf	main@MES^(0+384),w
  2114     0401  1283               	bcf	3,5	;RP0=0, select bank0
  2115     0402  1303               	bcf	3,6	;RP1=0, select bank0
  2116     0403  00B4               	movwf	??_main
  2117     0404  01B5               	clrf	??_main+1
  2118     0405  0834               	movf	??_main,w
  2119     0406  00F5               	movwf	___awdiv@dividend
  2120     0407  0835               	movf	??_main+1,w
  2121     0408  00F6               	movwf	___awdiv@dividend+1
  2122     0409  120A  118A  2676  120A  118A  	fcall	___awdiv
  2123     040E  0874               	movf	?___awdiv+1,w
  2124     040F  1283               	bcf	3,5	;RP0=0, select bank0
  2125     0410  1303               	bcf	3,6	;RP1=0, select bank0
  2126     0411  00A7               	movwf	___awmod@dividend+1
  2127     0412  0873               	movf	?___awdiv,w
  2128     0413  00A6               	movwf	___awmod@dividend
  2129     0414  120A  158A  2748  120A  118A  	fcall	___awmod
  2130     0419  1283               	bcf	3,5	;RP0=0, select bank0
  2131     041A  1303               	bcf	3,6	;RP1=0, select bank0
  2132     041B  0824               	movf	?___awmod,w
  2133     041C  1683               	bsf	3,5	;RP0=1, select bank3
  2134     041D  1703               	bsf	3,6	;RP1=1, select bank3
  2135     041E  00DD               	movwf	main@MES_D^(0+384)
  2136     041F                     l2371:
  2137                           
  2138                           ;main_M.c: 195:         MES_U = MES%10;
  2139     041F  300A               	movlw	10
  2140     0420  1283               	bcf	3,5	;RP0=0, select bank0
  2141     0421  1303               	bcf	3,6	;RP1=0, select bank0
  2142     0422  00A4               	movwf	___awmod@divisor
  2143     0423  3000               	movlw	0
  2144     0424  00A5               	movwf	___awmod@divisor+1
  2145     0425  1683               	bsf	3,5	;RP0=1, select bank3
  2146     0426  1703               	bsf	3,6	;RP1=1, select bank3
  2147     0427  0866               	movf	main@MES^(0+384),w
  2148     0428  1283               	bcf	3,5	;RP0=0, select bank0
  2149     0429  1303               	bcf	3,6	;RP1=0, select bank0
  2150     042A  00B4               	movwf	??_main
  2151     042B  01B5               	clrf	??_main+1
  2152     042C  0834               	movf	??_main,w
  2153     042D  00A6               	movwf	___awmod@dividend
  2154     042E  0835               	movf	??_main+1,w
  2155     042F  00A7               	movwf	___awmod@dividend+1
  2156     0430  120A  158A  2748  120A  118A  	fcall	___awmod
  2157     0435  1283               	bcf	3,5	;RP0=0, select bank0
  2158     0436  1303               	bcf	3,6	;RP1=0, select bank0
  2159     0437  0824               	movf	?___awmod,w
  2160     0438  1683               	bsf	3,5	;RP0=1, select bank3
  2161     0439  1703               	bsf	3,6	;RP1=1, select bank3
  2162     043A  00DC               	movwf	main@MES_U^(0+384)
  2163                           
  2164                           ;main_M.c: 197:         sprintf(stringMES, "%u", MES_D);
  2165     043B  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2166     043C  1283               	bcf	3,5	;RP0=0, select bank0
  2167     043D  1303               	bcf	3,6	;RP1=0, select bank0
  2168     043E  00A7               	movwf	sprintf@f
  2169     043F  1683               	bsf	3,5	;RP0=1, select bank3
  2170     0440  1703               	bsf	3,6	;RP1=1, select bank3
  2171     0441  085D               	movf	main@MES_D^(0+384),w
  2172     0442  1283               	bcf	3,5	;RP0=0, select bank0
  2173     0443  1303               	bcf	3,6	;RP1=0, select bank0
  2174     0444  00B4               	movwf	??_main
  2175     0445  01B5               	clrf	??_main+1
  2176     0446  0834               	movf	??_main,w
  2177     0447  00A8               	movwf	?_sprintf+1
  2178     0448  0835               	movf	??_main+1,w
  2179     0449  00A9               	movwf	?_sprintf+2
  2180     044A  30B4               	movlw	(low (main@stringMES| (0+256)))& (0+255)
  2181     044B  120A  118A  25B3  120A  118A  	fcall	_sprintf
  2182     0450                     l2373:
  2183                           
  2184                           ;main_M.c: 198:         Lcd_Set_Cursor_4bits(2,10);
  2185     0450  300A               	movlw	10
  2186     0451  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  2187     0452  3002               	movlw	2
  2188     0453  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2189     0458                     l2375:
  2190                           
  2191                           ;main_M.c: 199:         Lcd_Write_String_4bits(stringMES);
  2192     0458  30B4               	movlw	(low (main@stringMES| (0+256)))& (0+255)
  2193     0459  00F8               	movwf	Lcd_Write_String_4bits@a
  2194     045A  3001               	movlw	1
  2195     045B  00F9               	movwf	Lcd_Write_String_4bits@a+1
  2196     045C  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  2197     0461                     l2377:
  2198                           
  2199                           ;main_M.c: 201:         sprintf(stringMES, "%u", MES_U);
  2200     0461  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2201     0462  1283               	bcf	3,5	;RP0=0, select bank0
  2202     0463  1303               	bcf	3,6	;RP1=0, select bank0
  2203     0464  00A7               	movwf	sprintf@f
  2204     0465  1683               	bsf	3,5	;RP0=1, select bank3
  2205     0466  1703               	bsf	3,6	;RP1=1, select bank3
  2206     0467  085C               	movf	main@MES_U^(0+384),w
  2207     0468  1283               	bcf	3,5	;RP0=0, select bank0
  2208     0469  1303               	bcf	3,6	;RP1=0, select bank0
  2209     046A  00B4               	movwf	??_main
  2210     046B  01B5               	clrf	??_main+1
  2211     046C  0834               	movf	??_main,w
  2212     046D  00A8               	movwf	?_sprintf+1
  2213     046E  0835               	movf	??_main+1,w
  2214     046F  00A9               	movwf	?_sprintf+2
  2215     0470  30B4               	movlw	(low (main@stringMES| (0+256)))& (0+255)
  2216     0471  120A  118A  25B3  120A  118A  	fcall	_sprintf
  2217     0476                     l2379:
  2218                           
  2219                           ;main_M.c: 202:         Lcd_Set_Cursor_4bits(2,11);
  2220     0476  300B               	movlw	11
  2221     0477  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  2222     0478  3002               	movlw	2
  2223     0479  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2224                           
  2225                           ;main_M.c: 203:         Lcd_Write_String_4bits(stringMES);
  2226     047E  30B4               	movlw	(low (main@stringMES| (0+256)))& (0+255)
  2227     047F  00F8               	movwf	Lcd_Write_String_4bits@a
  2228     0480  3001               	movlw	1
  2229     0481  00F9               	movwf	Lcd_Write_String_4bits@a+1
  2230     0482  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  2231     0487                     l2381:
  2232                           
  2233                           ;main_M.c: 205:         AO = leerRTC(REG_A);
  2234     0487  3005               	movlw	5
  2235     0488  120A  118A  2747  120A  118A  	fcall	_leerRTC
  2236     048D  1683               	bsf	3,5	;RP0=1, select bank3
  2237     048E  1703               	bsf	3,6	;RP1=1, select bank3
  2238     048F  00E8               	movwf	main@AO^(0+384)
  2239     0490                     l2383:
  2240                           
  2241                           ;main_M.c: 207:         AO_UM = 2;
  2242     0490  3002               	movlw	2
  2243     0491  00E1               	movwf	main@AO_UM^(0+384)
  2244     0492                     l2385:
  2245                           
  2246                           ;main_M.c: 208:         AO_C = ((AO/10)/10)%10;
  2247     0492  300A               	movlw	10
  2248     0493  00F3               	movwf	___awdiv@divisor
  2249     0494  3000               	movlw	0
  2250     0495  00F4               	movwf	___awdiv@divisor+1
  2251     0496  0868               	movf	main@AO^(0+384),w
  2252     0497  1283               	bcf	3,5	;RP0=0, select bank0
  2253     0498  1303               	bcf	3,6	;RP1=0, select bank0
  2254     0499  00B4               	movwf	??_main
  2255     049A  01B5               	clrf	??_main+1
  2256     049B  0834               	movf	??_main,w
  2257     049C  00F5               	movwf	___awdiv@dividend
  2258     049D  0835               	movf	??_main+1,w
  2259     049E  00F6               	movwf	___awdiv@dividend+1
  2260     049F  120A  118A  2676  120A  118A  	fcall	___awdiv
  2261     04A4  0874               	movf	?___awdiv+1,w
  2262     04A5  1683               	bsf	3,5	;RP0=1, select bank3
  2263     04A6  1703               	bsf	3,6	;RP1=1, select bank3
  2264     04A7  00D0               	movwf	(_main$1138+1)^(0+384)
  2265     04A8  0873               	movf	?___awdiv,w
  2266     04A9  00CF               	movwf	_main$1138^(0+384)
  2267     04AA                     l2387:
  2268                           
  2269                           ;main_M.c: 208:         AO_C = ((AO/10)/10)%10;
  2270     04AA  300A               	movlw	10
  2271     04AB  1283               	bcf	3,5	;RP0=0, select bank0
  2272     04AC  1303               	bcf	3,6	;RP1=0, select bank0
  2273     04AD  00A4               	movwf	___awmod@divisor
  2274     04AE  3000               	movlw	0
  2275     04AF  00A5               	movwf	___awmod@divisor+1
  2276     04B0  300A               	movlw	10
  2277     04B1  00F3               	movwf	___awdiv@divisor
  2278     04B2  3000               	movlw	0
  2279     04B3  00F4               	movwf	___awdiv@divisor+1
  2280     04B4  1683               	bsf	3,5	;RP0=1, select bank3
  2281     04B5  1703               	bsf	3,6	;RP1=1, select bank3
  2282     04B6  0850               	movf	(_main$1138+1)^(0+384),w
  2283     04B7  00F6               	movwf	___awdiv@dividend+1
  2284     04B8  084F               	movf	_main$1138^(0+384),w
  2285     04B9  00F5               	movwf	___awdiv@dividend
  2286     04BA  120A  118A  2676  120A  118A  	fcall	___awdiv
  2287     04BF  0874               	movf	?___awdiv+1,w
  2288     04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2289     04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2290     04C2  00A7               	movwf	___awmod@dividend+1
  2291     04C3  0873               	movf	?___awdiv,w
  2292     04C4  00A6               	movwf	___awmod@dividend
  2293     04C5  120A  158A  2748  120A  118A  	fcall	___awmod
  2294     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  2295     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  2296     04CC  0824               	movf	?___awmod,w
  2297     04CD  1683               	bsf	3,5	;RP0=1, select bank3
  2298     04CE  1703               	bsf	3,6	;RP1=1, select bank3
  2299     04CF  00E0               	movwf	main@AO_C^(0+384)
  2300     04D0                     l2389:
  2301                           
  2302                           ;main_M.c: 209:         AO_D = (AO/10)%10;
  2303     04D0  300A               	movlw	10
  2304     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2305     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2306     04D3  00A4               	movwf	___awmod@divisor
  2307     04D4  3000               	movlw	0
  2308     04D5  00A5               	movwf	___awmod@divisor+1
  2309     04D6  300A               	movlw	10
  2310     04D7  00F3               	movwf	___awdiv@divisor
  2311     04D8  3000               	movlw	0
  2312     04D9  00F4               	movwf	___awdiv@divisor+1
  2313     04DA  1683               	bsf	3,5	;RP0=1, select bank3
  2314     04DB  1703               	bsf	3,6	;RP1=1, select bank3
  2315     04DC  0868               	movf	main@AO^(0+384),w
  2316     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  2317     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  2318     04DF  00B4               	movwf	??_main
  2319     04E0  01B5               	clrf	??_main+1
  2320     04E1  0834               	movf	??_main,w
  2321     04E2  00F5               	movwf	___awdiv@dividend
  2322     04E3  0835               	movf	??_main+1,w
  2323     04E4  00F6               	movwf	___awdiv@dividend+1
  2324     04E5  120A  118A  2676  120A  118A  	fcall	___awdiv
  2325     04EA  0874               	movf	?___awdiv+1,w
  2326     04EB  1283               	bcf	3,5	;RP0=0, select bank0
  2327     04EC  1303               	bcf	3,6	;RP1=0, select bank0
  2328     04ED  00A7               	movwf	___awmod@dividend+1
  2329     04EE  0873               	movf	?___awdiv,w
  2330     04EF  00A6               	movwf	___awmod@dividend
  2331     04F0  120A  158A  2748  120A  118A  	fcall	___awmod
  2332     04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2333     04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2334     04F7  0824               	movf	?___awmod,w
  2335     04F8  1683               	bsf	3,5	;RP0=1, select bank3
  2336     04F9  1703               	bsf	3,6	;RP1=1, select bank3
  2337     04FA  00DF               	movwf	main@AO_D^(0+384)
  2338     04FB                     l2391:
  2339                           
  2340                           ;main_M.c: 210:         AO_U = AO%10;
  2341     04FB  300A               	movlw	10
  2342     04FC  1283               	bcf	3,5	;RP0=0, select bank0
  2343     04FD  1303               	bcf	3,6	;RP1=0, select bank0
  2344     04FE  00A4               	movwf	___awmod@divisor
  2345     04FF  3000               	movlw	0
  2346     0500  00A5               	movwf	___awmod@divisor+1
  2347     0501  1683               	bsf	3,5	;RP0=1, select bank3
  2348     0502  1703               	bsf	3,6	;RP1=1, select bank3
  2349     0503  0868               	movf	main@AO^(0+384),w
  2350     0504  1283               	bcf	3,5	;RP0=0, select bank0
  2351     0505  1303               	bcf	3,6	;RP1=0, select bank0
  2352     0506  00B4               	movwf	??_main
  2353     0507  01B5               	clrf	??_main+1
  2354     0508  0834               	movf	??_main,w
  2355     0509  00A6               	movwf	___awmod@dividend
  2356     050A  0835               	movf	??_main+1,w
  2357     050B  00A7               	movwf	___awmod@dividend+1
  2358     050C  120A  158A  2748  120A  118A  	fcall	___awmod
  2359     0511  1283               	bcf	3,5	;RP0=0, select bank0
  2360     0512  1303               	bcf	3,6	;RP1=0, select bank0
  2361     0513  0824               	movf	?___awmod,w
  2362     0514  1683               	bsf	3,5	;RP0=1, select bank3
  2363     0515  1703               	bsf	3,6	;RP1=1, select bank3
  2364     0516  00DE               	movwf	main@AO_U^(0+384)
  2365     0517                     l2393:
  2366                           
  2367                           ;main_M.c: 212:         sprintf(stringAO, "%u", AO_UM);
  2368     0517  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2369     0518  1283               	bcf	3,5	;RP0=0, select bank0
  2370     0519  1303               	bcf	3,6	;RP1=0, select bank0
  2371     051A  00A7               	movwf	sprintf@f
  2372     051B  1683               	bsf	3,5	;RP0=1, select bank3
  2373     051C  1703               	bsf	3,6	;RP1=1, select bank3
  2374     051D  0861               	movf	main@AO_UM^(0+384),w
  2375     051E  1283               	bcf	3,5	;RP0=0, select bank0
  2376     051F  1303               	bcf	3,6	;RP1=0, select bank0
  2377     0520  00B4               	movwf	??_main
  2378     0521  01B5               	clrf	??_main+1
  2379     0522  0834               	movf	??_main,w
  2380     0523  00A8               	movwf	?_sprintf+1
  2381     0524  0835               	movf	??_main+1,w
  2382     0525  00A9               	movwf	?_sprintf+2
  2383     0526  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2384     0527  120A  118A  25B3  120A  118A  	fcall	_sprintf
  2385     052C                     l2395:
  2386                           
  2387                           ;main_M.c: 213:         Lcd_Set_Cursor_4bits(2,13);
  2388     052C  300D               	movlw	13
  2389     052D  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  2390     052E  3002               	movlw	2
  2391     052F  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2392     0534                     l2397:
  2393                           
  2394                           ;main_M.c: 214:         Lcd_Write_String_4bits(stringAO);
  2395     0534  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2396     0535  00F8               	movwf	Lcd_Write_String_4bits@a
  2397     0536  3001               	movlw	1
  2398     0537  00F9               	movwf	Lcd_Write_String_4bits@a+1
  2399     0538  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  2400     053D                     l2399:
  2401                           
  2402                           ;main_M.c: 216:         sprintf(stringAO, "%u", AO_C);
  2403     053D  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2404     053E  1283               	bcf	3,5	;RP0=0, select bank0
  2405     053F  1303               	bcf	3,6	;RP1=0, select bank0
  2406     0540  00A7               	movwf	sprintf@f
  2407     0541  1683               	bsf	3,5	;RP0=1, select bank3
  2408     0542  1703               	bsf	3,6	;RP1=1, select bank3
  2409     0543  0860               	movf	main@AO_C^(0+384),w
  2410     0544  1283               	bcf	3,5	;RP0=0, select bank0
  2411     0545  1303               	bcf	3,6	;RP1=0, select bank0
  2412     0546  00B4               	movwf	??_main
  2413     0547  01B5               	clrf	??_main+1
  2414     0548  0834               	movf	??_main,w
  2415     0549  00A8               	movwf	?_sprintf+1
  2416     054A  0835               	movf	??_main+1,w
  2417     054B  00A9               	movwf	?_sprintf+2
  2418     054C  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2419     054D  120A  118A  25B3  120A  118A  	fcall	_sprintf
  2420     0552                     l2401:
  2421                           
  2422                           ;main_M.c: 217:         Lcd_Set_Cursor_4bits(2,14);
  2423     0552  300E               	movlw	14
  2424     0553  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  2425     0554  3002               	movlw	2
  2426     0555  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2427     055A                     l2403:
  2428                           
  2429                           ;main_M.c: 218:         Lcd_Write_String_4bits(stringAO);
  2430     055A  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2431     055B  00F8               	movwf	Lcd_Write_String_4bits@a
  2432     055C  3001               	movlw	1
  2433     055D  00F9               	movwf	Lcd_Write_String_4bits@a+1
  2434     055E  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  2435     0563                     l2405:
  2436                           
  2437                           ;main_M.c: 220:         sprintf(stringAO, "%u", AO_D);
  2438     0563  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2439     0564  1283               	bcf	3,5	;RP0=0, select bank0
  2440     0565  1303               	bcf	3,6	;RP1=0, select bank0
  2441     0566  00A7               	movwf	sprintf@f
  2442     0567  1683               	bsf	3,5	;RP0=1, select bank3
  2443     0568  1703               	bsf	3,6	;RP1=1, select bank3
  2444     0569  085F               	movf	main@AO_D^(0+384),w
  2445     056A  1283               	bcf	3,5	;RP0=0, select bank0
  2446     056B  1303               	bcf	3,6	;RP1=0, select bank0
  2447     056C  00B4               	movwf	??_main
  2448     056D  01B5               	clrf	??_main+1
  2449     056E  0834               	movf	??_main,w
  2450     056F  00A8               	movwf	?_sprintf+1
  2451     0570  0835               	movf	??_main+1,w
  2452     0571  00A9               	movwf	?_sprintf+2
  2453     0572  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2454     0573  120A  118A  25B3  120A  118A  	fcall	_sprintf
  2455     0578                     l2407:
  2456                           
  2457                           ;main_M.c: 221:         Lcd_Set_Cursor_4bits(2,15);
  2458     0578  300F               	movlw	15
  2459     0579  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  2460     057A  3002               	movlw	2
  2461     057B  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2462     0580                     l2409:
  2463                           
  2464                           ;main_M.c: 222:         Lcd_Write_String_4bits(stringAO);
  2465     0580  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2466     0581  00F8               	movwf	Lcd_Write_String_4bits@a
  2467     0582  3001               	movlw	1
  2468     0583  00F9               	movwf	Lcd_Write_String_4bits@a+1
  2469     0584  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  2470     0589                     l2411:
  2471                           
  2472                           ;main_M.c: 224:         sprintf(stringAO, "%u", AO_U);
  2473     0589  300F               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2474     058A  1283               	bcf	3,5	;RP0=0, select bank0
  2475     058B  1303               	bcf	3,6	;RP1=0, select bank0
  2476     058C  00A7               	movwf	sprintf@f
  2477     058D  1683               	bsf	3,5	;RP0=1, select bank3
  2478     058E  1703               	bsf	3,6	;RP1=1, select bank3
  2479     058F  085E               	movf	main@AO_U^(0+384),w
  2480     0590  1283               	bcf	3,5	;RP0=0, select bank0
  2481     0591  1303               	bcf	3,6	;RP1=0, select bank0
  2482     0592  00B4               	movwf	??_main
  2483     0593  01B5               	clrf	??_main+1
  2484     0594  0834               	movf	??_main,w
  2485     0595  00A8               	movwf	?_sprintf+1
  2486     0596  0835               	movf	??_main+1,w
  2487     0597  00A9               	movwf	?_sprintf+2
  2488     0598  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2489     0599  120A  118A  25B3  120A  118A  	fcall	_sprintf
  2490     059E                     l2413:
  2491                           
  2492                           ;main_M.c: 225:         Lcd_Set_Cursor_4bits(2,16);
  2493     059E  3010               	movlw	16
  2494     059F  00F7               	movwf	Lcd_Set_Cursor_4bits@b
  2495     05A0  3002               	movlw	2
  2496     05A1  120A  118A  27AF  120A  118A  	fcall	_Lcd_Set_Cursor_4bits
  2497     05A6                     l2415:
  2498                           
  2499                           ;main_M.c: 226:         Lcd_Write_String_4bits(stringAO);
  2500     05A6  30C6               	movlw	(low (main@stringAO| (0+256)))& (0+255)
  2501     05A7  00F8               	movwf	Lcd_Write_String_4bits@a
  2502     05A8  3001               	movlw	1
  2503     05A9  00F9               	movwf	Lcd_Write_String_4bits@a+1
  2504     05AA  120A  158A  26BC  120A  118A  	fcall	_Lcd_Write_String_4bits
  2505     05AF  2876               	goto	l2281
  2506     05B0  120A  118A  280C   	ljmp	start
  2507     05B3                     __end_of_main:
  2508                           
  2509                           	psect	text1
  2510     05B3                     __ptext1:	
  2511 ;; *************** function _sprintf *****************
  2512 ;; Defined at:
  2513 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  sp              1    wreg     PTR unsigned char 
  2516 ;;		 -> main@stringAO(9), main@stringMES(9), main@stringDIA(9), main@stringHOR(9), 
  2517 ;;		 -> main@stringMIN(9), main@stringSEG(9), main@ADC1(9), 
  2518 ;;  f               1    7[BANK0 ] PTR const unsigned char 
  2519 ;;		 -> STR_22(3), STR_21(3), STR_20(3), STR_19(3), 
  2520 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(3), 
  2521 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(3), 
  2522 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(3), 
  2523 ;;		 -> STR_6(3), 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  sp              1   19[BANK0 ] PTR unsigned char 
  2526 ;;		 -> main@stringAO(9), main@stringMES(9), main@stringDIA(9), main@stringHOR(9), 
  2527 ;;		 -> main@stringMIN(9), main@stringSEG(9), main@ADC1(9), 
  2528 ;;  tmpval          4    0        struct .
  2529 ;;  val             2   15[BANK0 ] unsigned int 
  2530 ;;  cp              2    0        PTR const unsigned char 
  2531 ;;  len             2    0        unsigned int 
  2532 ;;  c               1   18[BANK0 ] unsigned char 
  2533 ;;  prec            1   17[BANK0 ] char 
  2534 ;;  ap              1   14[BANK0 ] PTR void [1]
  2535 ;;		 -> ?_sprintf(2), 
  2536 ;;  flag            1   13[BANK0 ] unsigned char 
  2537 ;; Return value:  Size  Location     Type
  2538 ;;                  2    7[BANK0 ] int 
  2539 ;; Registers used:
  2540 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2541 ;; Tracked objects:
  2542 ;;		On entry : 0/0
  2543 ;;		On exit  : 0/0
  2544 ;;		Unchanged: 0/0
  2545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2546 ;;      Params:         0       3       0       0       0
  2547 ;;      Locals:         0       7       0       0       0
  2548 ;;      Temps:          0       3       0       0       0
  2549 ;;      Totals:         0      13       0       0       0
  2550 ;;Total ram usage:       13 bytes
  2551 ;; Hardware stack levels used: 1
  2552 ;; Hardware stack levels required when called: 2
  2553 ;; This function calls:
  2554 ;;		___lwdiv
  2555 ;;		___lwmod
  2556 ;; This function is called by:
  2557 ;;		_main
  2558 ;; This function uses a non-reentrant model
  2559 ;;
  2560                           
  2561     05B3                     _sprintf:	
  2562                           ;psect for function _sprintf
  2563                           
  2564                           
  2565                           ;incstack = 0
  2566                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2567                           ;sprintf@sp stored from wreg
  2568     05B3  1283               	bcf	3,5	;RP0=0, select bank0
  2569     05B4  1303               	bcf	3,6	;RP1=0, select bank0
  2570     05B5  00B3               	movwf	sprintf@sp
  2571     05B6                     l2169:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2574     05B6  3028               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2575     05B7  00AE               	movwf	sprintf@ap
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2578     05B8  2E61               	goto	l2211
  2579     05B9                     l2171:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2582     05B9  3025               	movlw	37
  2583     05BA  0632               	xorwf	sprintf@c,w
  2584     05BB  1903               	btfsc	3,2
  2585     05BC  2DBE               	goto	u1591
  2586     05BD  2DBF               	goto	u1590
  2587     05BE                     u1591:
  2588     05BE  2DC9               	goto	l2177
  2589     05BF                     u1590:
  2590     05BF                     l2173:
  2591                           
  2592                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2593     05BF  0833               	movf	sprintf@sp,w
  2594     05C0  0084               	movwf	4
  2595     05C1  0832               	movf	sprintf@c,w
  2596     05C2  1783               	bsf	3,7	;select IRP bank2
  2597     05C3  0080               	movwf	0
  2598     05C4                     l2175:
  2599     05C4  3001               	movlw	1
  2600     05C5  00AA               	movwf	??_sprintf
  2601     05C6  082A               	movf	??_sprintf,w
  2602     05C7  07B3               	addwf	sprintf@sp,f
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 559:    continue;
  2605     05C8  2E61               	goto	l2211
  2606     05C9                     l2177:
  2607                           
  2608                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2609     05C9  01AD               	clrf	sprintf@flag
  2610                           
  2611                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2612     05CA  2DD0               	goto	l2183
  2613     05CB                     l2179:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 844:    flag |= 0
      +                          xC0;
  2616     05CB  30C0               	movlw	192
  2617     05CC  00AA               	movwf	??_sprintf
  2618     05CD  082A               	movf	??_sprintf,w
  2619     05CE  04AD               	iorwf	sprintf@flag,f
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 845:    break;
  2622     05CF  2DEA               	goto	l2185
  2623     05D0                     l2183:
  2624     05D0  3001               	movlw	1
  2625     05D1  07A7               	addwf	sprintf@f,f
  2626     05D2  30FF               	movlw	-1
  2627     05D3  0727               	addwf	sprintf@f,w
  2628     05D4  0084               	movwf	4
  2629     05D5  120A  158A  200A  120A  118A  	fcall	stringdir
  2630     05DA  00B2               	movwf	sprintf@c
  2631     05DB  00AA               	movwf	??_sprintf
  2632     05DC  01AB               	clrf	??_sprintf+1
  2633                           
  2634                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2635                           ; Switch size 1, requested type "simple"
  2636                           ; Number of cases is 1, Range of values is 0 to 0
  2637                           ; switch strategies available:
  2638                           ; Name         Instructions Cycles
  2639                           ; simple_byte            4     3 (average)
  2640                           ; direct_byte           11     8 (fixed)
  2641                           ; jumptable            260     6 (fixed)
  2642                           ;	Chosen strategy is simple_byte
  2643     05DD  082B               	movf	??_sprintf+1,w
  2644     05DE  3A00               	xorlw	0	; case 0
  2645     05DF  1903               	skipnz
  2646     05E0  2DE2               	goto	l2441
  2647     05E1  2E61               	goto	l2211
  2648     05E2                     l2441:
  2649                           
  2650                           ; Switch size 1, requested type "simple"
  2651                           ; Number of cases is 2, Range of values is 0 to 117
  2652                           ; switch strategies available:
  2653                           ; Name         Instructions Cycles
  2654                           ; simple_byte            7     4 (average)
  2655                           ; jumptable            260     6 (fixed)
  2656                           ;	Chosen strategy is simple_byte
  2657     05E2  082A               	movf	??_sprintf,w
  2658     05E3  3A00               	xorlw	0	; case 0
  2659     05E4  1903               	skipnz
  2660     05E5  2E71               	goto	l2213
  2661     05E6  3A75               	xorlw	117	; case 117
  2662     05E7  1903               	skipnz
  2663     05E8  2DCB               	goto	l2179
  2664     05E9  2E61               	goto	l2211
  2665     05EA                     l2185:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1299:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1312:     val = (*(unsign
      +                          ed *)__va_arg((*(unsigned **)ap), (unsigned)0));
  2668     05EA  082E               	movf	sprintf@ap,w
  2669     05EB  0084               	movwf	4
  2670     05EC  1383               	bcf	3,7	;select IRP bank0
  2671     05ED  0800               	movf	0,w
  2672     05EE  00AF               	movwf	sprintf@val
  2673     05EF  0A84               	incf	4,f
  2674     05F0  0800               	movf	0,w
  2675     05F1  00B0               	movwf	sprintf@val+1
  2676     05F2                     l2187:
  2677     05F2  3002               	movlw	2
  2678     05F3  00AA               	movwf	??_sprintf
  2679     05F4  082A               	movf	??_sprintf,w
  2680     05F5  07AE               	addwf	sprintf@ap,f
  2681     05F6                     l2189:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1313:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2684     05F6  01B2               	clrf	sprintf@c
  2685     05F7  0AB2               	incf	sprintf@c,f
  2686     05F8                     l2195:
  2687                           
  2688                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2689     05F8  0832               	movf	sprintf@c,w
  2690     05F9  00AA               	movwf	??_sprintf
  2691     05FA  072A               	addwf	??_sprintf,w
  2692     05FB  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2693     05FC  0084               	movwf	4
  2694     05FD  120A  158A  200A  120A  118A  	fcall	stringdir
  2695     0602  00AB               	movwf	??_sprintf+1
  2696     0603  120A  158A  200A  120A  118A  	fcall	stringdir
  2697     0608  00AC               	movwf	??_sprintf+2
  2698     0609  082C               	movf	??_sprintf+2,w
  2699     060A  0230               	subwf	sprintf@val+1,w
  2700     060B  1D03               	skipz
  2701     060C  2E0F               	goto	u1605
  2702     060D  082B               	movf	??_sprintf+1,w
  2703     060E  022F               	subwf	sprintf@val,w
  2704     060F                     u1605:
  2705     060F  1803               	skipnc
  2706     0610  2E12               	goto	u1601
  2707     0611  2E13               	goto	u1600
  2708     0612                     u1601:
  2709     0612  2E14               	goto	l2199
  2710     0613                     u1600:
  2711     0613  2E1E               	goto	l2201
  2712     0614                     l2199:
  2713     0614  3001               	movlw	1
  2714     0615  00AA               	movwf	??_sprintf
  2715     0616  082A               	movf	??_sprintf,w
  2716     0617  07B2               	addwf	sprintf@c,f
  2717     0618  3005               	movlw	5
  2718     0619  0632               	xorwf	sprintf@c,w
  2719     061A  1D03               	btfss	3,2
  2720     061B  2E1D               	goto	u1611
  2721     061C  2E1E               	goto	u1610
  2722     061D                     u1611:
  2723     061D  2DF8               	goto	l2195
  2724     061E                     u1610:
  2725     061E                     l2201:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1495:   };C:\Program File
      +                          s\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2728     061E  0832               	movf	sprintf@c,w
  2729     061F  00B1               	movwf	sprintf@prec
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2732     0620  2E58               	goto	l2209
  2733     0621                     l2203:
  2734                           
  2735                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2736     0621  300A               	movlw	10
  2737     0622  00A3               	movwf	___lwmod@divisor
  2738     0623  3000               	movlw	0
  2739     0624  00A4               	movwf	___lwmod@divisor+1
  2740     0625  0831               	movf	sprintf@prec,w
  2741     0626  00AA               	movwf	??_sprintf
  2742     0627  072A               	addwf	??_sprintf,w
  2743     0628  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2744     0629  0084               	movwf	4
  2745     062A  120A  158A  200A  120A  118A  	fcall	stringdir
  2746     062F  00F3               	movwf	___lwdiv@divisor
  2747     0630  120A  158A  200A  120A  118A  	fcall	stringdir
  2748     0635  00F4               	movwf	___lwdiv@divisor+1
  2749     0636  0830               	movf	sprintf@val+1,w
  2750     0637  00F6               	movwf	___lwdiv@dividend+1
  2751     0638  082F               	movf	sprintf@val,w
  2752     0639  00F5               	movwf	___lwdiv@dividend
  2753     063A  120A  158A  2702  120A  118A  	fcall	___lwdiv
  2754     063F  0874               	movf	?___lwdiv+1,w
  2755     0640  1283               	bcf	3,5	;RP0=0, select bank0
  2756     0641  1303               	bcf	3,6	;RP1=0, select bank0
  2757     0642  00A6               	movwf	___lwmod@dividend+1
  2758     0643  0873               	movf	?___lwdiv,w
  2759     0644  00A5               	movwf	___lwmod@dividend
  2760     0645  120A  158A  2680  120A  118A  	fcall	___lwmod
  2761     064A  1283               	bcf	3,5	;RP0=0, select bank0
  2762     064B  1303               	bcf	3,6	;RP1=0, select bank0
  2763     064C  0823               	movf	?___lwmod,w
  2764     064D  3E30               	addlw	48
  2765     064E  00B2               	movwf	sprintf@c
  2766     064F                     l2205:
  2767                           
  2768                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
  2769     064F  0833               	movf	sprintf@sp,w
  2770     0650  0084               	movwf	4
  2771     0651  0832               	movf	sprintf@c,w
  2772     0652  1783               	bsf	3,7	;select IRP bank2
  2773     0653  0080               	movwf	0
  2774     0654                     l2207:
  2775     0654  3001               	movlw	1
  2776     0655  00AA               	movwf	??_sprintf
  2777     0656  082A               	movf	??_sprintf,w
  2778     0657  07B3               	addwf	sprintf@sp,f
  2779     0658                     l2209:
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2782     0658  30FF               	movlw	255
  2783     0659  00AA               	movwf	??_sprintf
  2784     065A  082A               	movf	??_sprintf,w
  2785     065B  07B1               	addwf	sprintf@prec,f
  2786     065C  0A31               	incf	sprintf@prec,w
  2787     065D  1D03               	btfss	3,2
  2788     065E  2E60               	goto	u1621
  2789     065F  2E61               	goto	u1620
  2790     0660                     u1621:
  2791     0660  2E21               	goto	l2203
  2792     0661                     u1620:
  2793     0661                     l2211:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2796     0661  3001               	movlw	1
  2797     0662  07A7               	addwf	sprintf@f,f
  2798     0663  30FF               	movlw	-1
  2799     0664  0727               	addwf	sprintf@f,w
  2800     0665  0084               	movwf	4
  2801     0666  120A  158A  200A  120A  118A  	fcall	stringdir
  2802     066B  00B2               	movwf	sprintf@c
  2803     066C  0832               	movf	sprintf@c,w
  2804     066D  1D03               	btfss	3,2
  2805     066E  2E70               	goto	u1631
  2806     066F  2E71               	goto	u1630
  2807     0670                     u1631:
  2808     0670  2DB9               	goto	l2171
  2809     0671                     u1630:
  2810     0671                     l2213:
  2811                           
  2812                           ;C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2813     0671  0833               	movf	sprintf@sp,w
  2814     0672  0084               	movwf	4
  2815     0673  1783               	bsf	3,7	;select IRP bank2
  2816     0674  0180               	clrf	0
  2817     0675                     l309:
  2818     0675  0008               	return
  2819     0676                     __end_of_sprintf:
  2820                           
  2821                           	psect	text2
  2822     0E80                     __ptext2:	
  2823 ;; *************** function ___lwmod *****************
  2824 ;; Defined at:
  2825 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwmod.c"
  2826 ;; Parameters:    Size  Location     Type
  2827 ;;  divisor         2    3[BANK0 ] unsigned int 
  2828 ;;  dividend        2    5[BANK0 ] unsigned int 
  2829 ;; Auto vars:     Size  Location     Type
  2830 ;;  counter         1    9[COMMON] unsigned char 
  2831 ;; Return value:  Size  Location     Type
  2832 ;;                  2    3[BANK0 ] unsigned int 
  2833 ;; Registers used:
  2834 ;;		wreg, status,2, status,0
  2835 ;; Tracked objects:
  2836 ;;		On entry : 0/0
  2837 ;;		On exit  : 0/0
  2838 ;;		Unchanged: 0/0
  2839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2840 ;;      Params:         0       4       0       0       0
  2841 ;;      Locals:         1       0       0       0       0
  2842 ;;      Temps:          1       0       0       0       0
  2843 ;;      Totals:         2       4       0       0       0
  2844 ;;Total ram usage:        6 bytes
  2845 ;; Hardware stack levels used: 1
  2846 ;; Hardware stack levels required when called: 1
  2847 ;; This function calls:
  2848 ;;		Nothing
  2849 ;; This function is called by:
  2850 ;;		_sprintf
  2851 ;; This function uses a non-reentrant model
  2852 ;;
  2853                           
  2854     0E80                     ___lwmod:	
  2855                           ;psect for function ___lwmod
  2856                           
  2857     0E80                     l2113:	
  2858                           ;incstack = 0
  2859                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2860                           
  2861     0E80  1283               	bcf	3,5	;RP0=0, select bank0
  2862     0E81  1303               	bcf	3,6	;RP1=0, select bank0
  2863     0E82  0823               	movf	___lwmod@divisor,w
  2864     0E83  0424               	iorwf	___lwmod@divisor+1,w
  2865     0E84  1903               	btfsc	3,2
  2866     0E85  2E87               	goto	u1531
  2867     0E86  2E88               	goto	u1530
  2868     0E87                     u1531:
  2869     0E87  2EB7               	goto	l2131
  2870     0E88                     u1530:
  2871     0E88                     l2115:
  2872     0E88  01F9               	clrf	___lwmod@counter
  2873     0E89  0AF9               	incf	___lwmod@counter,f
  2874     0E8A  2E96               	goto	l2121
  2875     0E8B                     l2117:
  2876     0E8B  3001               	movlw	1
  2877     0E8C                     u1545:
  2878     0E8C  1003               	clrc
  2879     0E8D  0DA3               	rlf	___lwmod@divisor,f
  2880     0E8E  0DA4               	rlf	___lwmod@divisor+1,f
  2881     0E8F  3EFF               	addlw	-1
  2882     0E90  1D03               	skipz
  2883     0E91  2E8C               	goto	u1545
  2884     0E92                     l2119:
  2885     0E92  3001               	movlw	1
  2886     0E93  00F8               	movwf	??___lwmod
  2887     0E94  0878               	movf	??___lwmod,w
  2888     0E95  07F9               	addwf	___lwmod@counter,f
  2889     0E96                     l2121:
  2890     0E96  1FA4               	btfss	___lwmod@divisor+1,7
  2891     0E97  2E99               	goto	u1551
  2892     0E98  2E9A               	goto	u1550
  2893     0E99                     u1551:
  2894     0E99  2E8B               	goto	l2117
  2895     0E9A                     u1550:
  2896     0E9A                     l2123:
  2897     0E9A  0824               	movf	___lwmod@divisor+1,w
  2898     0E9B  0226               	subwf	___lwmod@dividend+1,w
  2899     0E9C  1D03               	skipz
  2900     0E9D  2EA0               	goto	u1565
  2901     0E9E  0823               	movf	___lwmod@divisor,w
  2902     0E9F  0225               	subwf	___lwmod@dividend,w
  2903     0EA0                     u1565:
  2904     0EA0  1C03               	skipc
  2905     0EA1  2EA3               	goto	u1561
  2906     0EA2  2EA4               	goto	u1560
  2907     0EA3                     u1561:
  2908     0EA3  2EAA               	goto	l2127
  2909     0EA4                     u1560:
  2910     0EA4                     l2125:
  2911     0EA4  0823               	movf	___lwmod@divisor,w
  2912     0EA5  02A5               	subwf	___lwmod@dividend,f
  2913     0EA6  0824               	movf	___lwmod@divisor+1,w
  2914     0EA7  1C03               	skipc
  2915     0EA8  03A6               	decf	___lwmod@dividend+1,f
  2916     0EA9  02A6               	subwf	___lwmod@dividend+1,f
  2917     0EAA                     l2127:
  2918     0EAA  3001               	movlw	1
  2919     0EAB                     u1575:
  2920     0EAB  1003               	clrc
  2921     0EAC  0CA4               	rrf	___lwmod@divisor+1,f
  2922     0EAD  0CA3               	rrf	___lwmod@divisor,f
  2923     0EAE  3EFF               	addlw	-1
  2924     0EAF  1D03               	skipz
  2925     0EB0  2EAB               	goto	u1575
  2926     0EB1                     l2129:
  2927     0EB1  3001               	movlw	1
  2928     0EB2  02F9               	subwf	___lwmod@counter,f
  2929     0EB3  1D03               	btfss	3,2
  2930     0EB4  2EB6               	goto	u1581
  2931     0EB5  2EB7               	goto	u1580
  2932     0EB6                     u1581:
  2933     0EB6  2E9A               	goto	l2123
  2934     0EB7                     u1580:
  2935     0EB7                     l2131:
  2936     0EB7  0826               	movf	___lwmod@dividend+1,w
  2937     0EB8  00A4               	movwf	?___lwmod+1
  2938     0EB9  0825               	movf	___lwmod@dividend,w
  2939     0EBA  00A3               	movwf	?___lwmod
  2940     0EBB                     l595:
  2941     0EBB  0008               	return
  2942     0EBC                     __end_of___lwmod:
  2943                           
  2944                           	psect	text3
  2945     0F02                     __ptext3:	
  2946 ;; *************** function ___lwdiv *****************
  2947 ;; Defined at:
  2948 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\lwdiv.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  divisor         2    3[COMMON] unsigned int 
  2951 ;;  dividend        2    5[COMMON] unsigned int 
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  quotient        2    1[BANK0 ] unsigned int 
  2954 ;;  counter         1    0[BANK0 ] unsigned char 
  2955 ;; Return value:  Size  Location     Type
  2956 ;;                  2    3[COMMON] unsigned int 
  2957 ;; Registers used:
  2958 ;;		wreg, status,2, status,0
  2959 ;; Tracked objects:
  2960 ;;		On entry : 0/0
  2961 ;;		On exit  : 0/0
  2962 ;;		Unchanged: 0/0
  2963 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2964 ;;      Params:         4       0       0       0       0
  2965 ;;      Locals:         0       3       0       0       0
  2966 ;;      Temps:          1       0       0       0       0
  2967 ;;      Totals:         5       3       0       0       0
  2968 ;;Total ram usage:        8 bytes
  2969 ;; Hardware stack levels used: 1
  2970 ;; Hardware stack levels required when called: 1
  2971 ;; This function calls:
  2972 ;;		Nothing
  2973 ;; This function is called by:
  2974 ;;		_sprintf
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978     0F02                     ___lwdiv:	
  2979                           ;psect for function ___lwdiv
  2980                           
  2981     0F02                     l2087:	
  2982                           ;incstack = 0
  2983                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2984                           
  2985     0F02  1283               	bcf	3,5	;RP0=0, select bank0
  2986     0F03  1303               	bcf	3,6	;RP1=0, select bank0
  2987     0F04  01A1               	clrf	___lwdiv@quotient
  2988     0F05  01A2               	clrf	___lwdiv@quotient+1
  2989     0F06                     l2089:
  2990     0F06  0873               	movf	___lwdiv@divisor,w
  2991     0F07  0474               	iorwf	___lwdiv@divisor+1,w
  2992     0F08  1903               	btfsc	3,2
  2993     0F09  2F0B               	goto	u1461
  2994     0F0A  2F0C               	goto	u1460
  2995     0F0B                     u1461:
  2996     0F0B  2F43               	goto	l2109
  2997     0F0C                     u1460:
  2998     0F0C                     l2091:
  2999     0F0C  01A0               	clrf	___lwdiv@counter
  3000     0F0D  0AA0               	incf	___lwdiv@counter,f
  3001     0F0E  2F1A               	goto	l2097
  3002     0F0F                     l2093:
  3003     0F0F  3001               	movlw	1
  3004     0F10                     u1475:
  3005     0F10  1003               	clrc
  3006     0F11  0DF3               	rlf	___lwdiv@divisor,f
  3007     0F12  0DF4               	rlf	___lwdiv@divisor+1,f
  3008     0F13  3EFF               	addlw	-1
  3009     0F14  1D03               	skipz
  3010     0F15  2F10               	goto	u1475
  3011     0F16                     l2095:
  3012     0F16  3001               	movlw	1
  3013     0F17  00F7               	movwf	??___lwdiv
  3014     0F18  0877               	movf	??___lwdiv,w
  3015     0F19  07A0               	addwf	___lwdiv@counter,f
  3016     0F1A                     l2097:
  3017     0F1A  1FF4               	btfss	___lwdiv@divisor+1,7
  3018     0F1B  2F1D               	goto	u1481
  3019     0F1C  2F1E               	goto	u1480
  3020     0F1D                     u1481:
  3021     0F1D  2F0F               	goto	l2093
  3022     0F1E                     u1480:
  3023     0F1E                     l2099:
  3024     0F1E  3001               	movlw	1
  3025     0F1F                     u1495:
  3026     0F1F  1003               	clrc
  3027     0F20  0DA1               	rlf	___lwdiv@quotient,f
  3028     0F21  0DA2               	rlf	___lwdiv@quotient+1,f
  3029     0F22  3EFF               	addlw	-1
  3030     0F23  1D03               	skipz
  3031     0F24  2F1F               	goto	u1495
  3032     0F25  0874               	movf	___lwdiv@divisor+1,w
  3033     0F26  0276               	subwf	___lwdiv@dividend+1,w
  3034     0F27  1D03               	skipz
  3035     0F28  2F2B               	goto	u1505
  3036     0F29  0873               	movf	___lwdiv@divisor,w
  3037     0F2A  0275               	subwf	___lwdiv@dividend,w
  3038     0F2B                     u1505:
  3039     0F2B  1C03               	skipc
  3040     0F2C  2F2E               	goto	u1501
  3041     0F2D  2F2F               	goto	u1500
  3042     0F2E                     u1501:
  3043     0F2E  2F36               	goto	l2105
  3044     0F2F                     u1500:
  3045     0F2F                     l2101:
  3046     0F2F  0873               	movf	___lwdiv@divisor,w
  3047     0F30  02F5               	subwf	___lwdiv@dividend,f
  3048     0F31  0874               	movf	___lwdiv@divisor+1,w
  3049     0F32  1C03               	skipc
  3050     0F33  03F6               	decf	___lwdiv@dividend+1,f
  3051     0F34  02F6               	subwf	___lwdiv@dividend+1,f
  3052     0F35                     l2103:
  3053     0F35  1421               	bsf	___lwdiv@quotient,0
  3054     0F36                     l2105:
  3055     0F36  3001               	movlw	1
  3056     0F37                     u1515:
  3057     0F37  1003               	clrc
  3058     0F38  0CF4               	rrf	___lwdiv@divisor+1,f
  3059     0F39  0CF3               	rrf	___lwdiv@divisor,f
  3060     0F3A  3EFF               	addlw	-1
  3061     0F3B  1D03               	skipz
  3062     0F3C  2F37               	goto	u1515
  3063     0F3D                     l2107:
  3064     0F3D  3001               	movlw	1
  3065     0F3E  02A0               	subwf	___lwdiv@counter,f
  3066     0F3F  1D03               	btfss	3,2
  3067     0F40  2F42               	goto	u1521
  3068     0F41  2F43               	goto	u1520
  3069     0F42                     u1521:
  3070     0F42  2F1E               	goto	l2099
  3071     0F43                     u1520:
  3072     0F43                     l2109:
  3073     0F43  0822               	movf	___lwdiv@quotient+1,w
  3074     0F44  00F4               	movwf	?___lwdiv+1
  3075     0F45  0821               	movf	___lwdiv@quotient,w
  3076     0F46  00F3               	movwf	?___lwdiv
  3077     0F47                     l585:
  3078     0F47  0008               	return
  3079     0F48                     __end_of___lwdiv:
  3080                           
  3081                           	psect	text4
  3082     0DDF                     __ptext4:	
  3083 ;; *************** function _setup *****************
  3084 ;; Defined at:
  3085 ;;		line 235 in file "main_M.c"
  3086 ;; Parameters:    Size  Location     Type
  3087 ;;		None
  3088 ;; Auto vars:     Size  Location     Type
  3089 ;;		None
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  1    wreg      void 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0, pclath, cstack
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         0       0       0       0       0
  3100 ;;      Locals:         0       0       0       0       0
  3101 ;;      Temps:          0       0       0       0       0
  3102 ;;      Totals:         0       0       0       0       0
  3103 ;;Total ram usage:        0 bytes
  3104 ;; Hardware stack levels used: 1
  3105 ;; Hardware stack levels required when called: 4
  3106 ;; This function calls:
  3107 ;;		_I2C_Master_Init
  3108 ;;		_Lcd_Init_4bits
  3109 ;;		_setupINTOSC
  3110 ;; This function is called by:
  3111 ;;		_main
  3112 ;; This function uses a non-reentrant model
  3113 ;;
  3114                           
  3115     0DDF                     _setup:	
  3116                           ;psect for function _setup
  3117                           
  3118     0DDF                     l2135:	
  3119                           ;incstack = 0
  3120                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  3121                           
  3122                           
  3123                           ;main_M.c: 237:     ANSEL = 0;
  3124     0DDF  1683               	bsf	3,5	;RP0=1, select bank3
  3125     0DE0  1703               	bsf	3,6	;RP1=1, select bank3
  3126     0DE1  0188               	clrf	8	;volatile
  3127                           
  3128                           ;main_M.c: 238:     ANSELH = 0;
  3129     0DE2  0189               	clrf	9	;volatile
  3130                           
  3131                           ;main_M.c: 240:     TRISA = 0;
  3132     0DE3  1683               	bsf	3,5	;RP0=1, select bank1
  3133     0DE4  1303               	bcf	3,6	;RP1=0, select bank1
  3134     0DE5  0185               	clrf	5	;volatile
  3135     0DE6                     l2137:
  3136                           
  3137                           ;main_M.c: 241:     TRISB = 0b00000111;
  3138     0DE6  3007               	movlw	7
  3139     0DE7  0086               	movwf	6	;volatile
  3140     0DE8                     l2139:
  3141                           
  3142                           ;main_M.c: 242:     TRISD = 0;
  3143     0DE8  0188               	clrf	8	;volatile
  3144     0DE9                     l2141:
  3145                           
  3146                           ;main_M.c: 244:     OPTION_REGbits.nRBPU = 0;
  3147     0DE9  1381               	bcf	1,7	;volatile
  3148     0DEA                     l2143:
  3149                           
  3150                           ;main_M.c: 245:     WPUBbits.WPUB0 = 1;
  3151     0DEA  1415               	bsf	21,0	;volatile
  3152     0DEB                     l2145:
  3153                           
  3154                           ;main_M.c: 246:     WPUBbits.WPUB1 = 1;
  3155     0DEB  1495               	bsf	21,1	;volatile
  3156     0DEC                     l2147:
  3157                           
  3158                           ;main_M.c: 247:     WPUBbits.WPUB2 = 1;
  3159     0DEC  1515               	bsf	21,2	;volatile
  3160                           
  3161                           ;main_M.c: 248:     IOCB = 0b00000111;
  3162     0DED  3007               	movlw	7
  3163     0DEE  0096               	movwf	22	;volatile
  3164     0DEF                     l2149:
  3165                           
  3166                           ;main_M.c: 250:     PORTA = 0;
  3167     0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  3168     0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  3169     0DF1  0185               	clrf	5	;volatile
  3170     0DF2                     l2151:
  3171                           
  3172                           ;main_M.c: 251:     PORTB = 0;
  3173     0DF2  0186               	clrf	6	;volatile
  3174     0DF3                     l2153:
  3175                           
  3176                           ;main_M.c: 252:     PORTD = 0;
  3177     0DF3  0188               	clrf	8	;volatile
  3178     0DF4                     l2155:
  3179                           
  3180                           ;main_M.c: 254:     I2C_Master_Init(100000);
  3181     0DF4  3000               	movlw	0
  3182     0DF5  00AB               	movwf	I2C_Master_Init@c+3
  3183     0DF6  3001               	movlw	1
  3184     0DF7  00AA               	movwf	I2C_Master_Init@c+2
  3185     0DF8  3086               	movlw	134
  3186     0DF9  00A9               	movwf	I2C_Master_Init@c+1
  3187     0DFA  30A0               	movlw	160
  3188     0DFB  00A8               	movwf	I2C_Master_Init@c
  3189     0DFC  120A  158A  2646  120A  158A  	fcall	_I2C_Master_Init
  3190     0E01                     l2157:
  3191                           
  3192                           ;main_M.c: 255:     setupINTOSC(FOSC_8MHZ);
  3193     0E01  3007               	movlw	7
  3194     0E02  120A  158A  2534  120A  158A  	fcall	_setupINTOSC
  3195     0E07                     l2159:
  3196                           
  3197                           ;main_M.c: 256:     Lcd_Init_4bits();
  3198     0E07  120A  158A  27A3  120A  158A  	fcall	_Lcd_Init_4bits
  3199     0E0C                     l2161:
  3200                           
  3201                           ;main_M.c: 258:     INTCONbits.GIE = 1;
  3202     0E0C  178B               	bsf	11,7	;volatile
  3203     0E0D                     l2163:
  3204                           
  3205                           ;main_M.c: 259:     INTCONbits.PEIE = 1;
  3206     0E0D  170B               	bsf	11,6	;volatile
  3207     0E0E                     l2165:
  3208                           
  3209                           ;main_M.c: 260:     INTCONbits.RBIE = 1;
  3210     0E0E  158B               	bsf	11,3	;volatile
  3211     0E0F                     l2167:
  3212                           
  3213                           ;main_M.c: 261:     INTCONbits.RBIF = 0;
  3214     0E0F  100B               	bcf	11,0	;volatile
  3215     0E10                     l182:
  3216     0E10  0008               	return
  3217     0E11                     __end_of_setup:
  3218                           
  3219                           	psect	text5
  3220     0D34                     __ptext5:	
  3221 ;; *************** function _setupINTOSC *****************
  3222 ;; Defined at:
  3223 ;;		line 11 in file "configINTOSC.c"
  3224 ;; Parameters:    Size  Location     Type
  3225 ;;  F               1    wreg     enum E1292
  3226 ;; Auto vars:     Size  Location     Type
  3227 ;;  F               1    4[COMMON] enum E1292
  3228 ;; Return value:  Size  Location     Type
  3229 ;;                  1    wreg      void 
  3230 ;; Registers used:
  3231 ;;		wreg, status,2, status,0
  3232 ;; Tracked objects:
  3233 ;;		On entry : 0/0
  3234 ;;		On exit  : 0/0
  3235 ;;		Unchanged: 0/0
  3236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3237 ;;      Params:         0       0       0       0       0
  3238 ;;      Locals:         1       0       0       0       0
  3239 ;;      Temps:          1       0       0       0       0
  3240 ;;      Totals:         2       0       0       0       0
  3241 ;;Total ram usage:        2 bytes
  3242 ;; Hardware stack levels used: 1
  3243 ;; Hardware stack levels required when called: 1
  3244 ;; This function calls:
  3245 ;;		Nothing
  3246 ;; This function is called by:
  3247 ;;		_setup
  3248 ;; This function uses a non-reentrant model
  3249 ;;
  3250                           
  3251     0D34                     _setupINTOSC:	
  3252                           ;psect for function _setupINTOSC
  3253                           
  3254                           
  3255                           ;incstack = 0
  3256                           ; Regs used in _setupINTOSC: [wreg+status,2+status,0]
  3257                           ;setupINTOSC@F stored from wreg
  3258     0D34  00F4               	movwf	setupINTOSC@F
  3259     0D35                     l1509:
  3260                           
  3261                           ;configINTOSC.c: 13:     OSCCONbits.IRCF = F ;
  3262     0D35  0874               	movf	setupINTOSC@F,w
  3263     0D36  00F3               	movwf	??_setupINTOSC
  3264     0D37  0EF3               	swapf	??_setupINTOSC,f
  3265     0D38  1683               	bsf	3,5	;RP0=1, select bank1
  3266     0D39  1303               	bcf	3,6	;RP1=0, select bank1
  3267     0D3A  080F               	movf	15,w	;volatile
  3268     0D3B  0673               	xorwf	??_setupINTOSC,w
  3269     0D3C  398F               	andlw	-113
  3270     0D3D  0673               	xorwf	??_setupINTOSC,w
  3271     0D3E  008F               	movwf	15	;volatile
  3272     0D3F                     l1511:
  3273                           
  3274                           ;configINTOSC.c: 14:     OSCCONbits.SCS = 1;
  3275     0D3F  140F               	bsf	15,0	;volatile
  3276     0D40                     l60:
  3277     0D40  0008               	return
  3278     0D41                     __end_of_setupINTOSC:
  3279                           
  3280                           	psect	text6
  3281     0FA3                     __ptext6:	
  3282 ;; *************** function _Lcd_Init_4bits *****************
  3283 ;; Defined at:
  3284 ;;		line 66 in file "configLCD_4bits.c"
  3285 ;; Parameters:    Size  Location     Type
  3286 ;;		None
  3287 ;; Auto vars:     Size  Location     Type
  3288 ;;		None
  3289 ;; Return value:  Size  Location     Type
  3290 ;;                  1    wreg      void 
  3291 ;; Registers used:
  3292 ;;		wreg, status,2, status,0, pclath, cstack
  3293 ;; Tracked objects:
  3294 ;;		On entry : 0/0
  3295 ;;		On exit  : 0/0
  3296 ;;		Unchanged: 0/0
  3297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3298 ;;      Params:         0       0       0       0       0
  3299 ;;      Locals:         0       0       0       0       0
  3300 ;;      Temps:          2       0       0       0       0
  3301 ;;      Totals:         2       0       0       0       0
  3302 ;;Total ram usage:        2 bytes
  3303 ;; Hardware stack levels used: 1
  3304 ;; Hardware stack levels required when called: 3
  3305 ;; This function calls:
  3306 ;;		_Lcd_Cmd_4bits
  3307 ;;		_Lcd_Port_4bits
  3308 ;; This function is called by:
  3309 ;;		_setup
  3310 ;; This function uses a non-reentrant model
  3311 ;;
  3312                           
  3313     0FA3                     _Lcd_Init_4bits:	
  3314                           ;psect for function _Lcd_Init_4bits
  3315                           
  3316     0FA3                     l1513:	
  3317                           ;incstack = 0
  3318                           ; Regs used in _Lcd_Init_4bits: [wreg+status,2+status,0+pclath+cstack]
  3319                           
  3320                           
  3321                           ;configLCD_4bits.c: 67:     Lcd_Port_4bits(0x00);
  3322     0FA3  3000               	movlw	0
  3323     0FA4  120A  158A  258F  120A  158A  	fcall	_Lcd_Port_4bits
  3324     0FA9                     l1515:
  3325                           
  3326                           ;configLCD_4bits.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3327     0FA9  3034               	movlw	52
  3328     0FAA  00F8               	movwf	??_Lcd_Init_4bits+1
  3329     0FAB  30F1               	movlw	241
  3330     0FAC  00F7               	movwf	??_Lcd_Init_4bits
  3331     0FAD                     u1757:
  3332     0FAD  0BF7               	decfsz	??_Lcd_Init_4bits,f
  3333     0FAE  2FAD               	goto	u1757
  3334     0FAF  0BF8               	decfsz	??_Lcd_Init_4bits+1,f
  3335     0FB0  2FAD               	goto	u1757
  3336     0FB1  2FB2               	nop2
  3337     0FB2                     l1517:
  3338                           
  3339                           ;configLCD_4bits.c: 69:     Lcd_Cmd_4bits(0x03);
  3340     0FB2  3003               	movlw	3
  3341     0FB3  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  3342                           
  3343                           ;configLCD_4bits.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3344     0FB8  300D               	movlw	13
  3345     0FB9  00F8               	movwf	??_Lcd_Init_4bits+1
  3346     0FBA  30FB               	movlw	251
  3347     0FBB  00F7               	movwf	??_Lcd_Init_4bits
  3348     0FBC                     u1767:
  3349     0FBC  0BF7               	decfsz	??_Lcd_Init_4bits,f
  3350     0FBD  2FBC               	goto	u1767
  3351     0FBE  0BF8               	decfsz	??_Lcd_Init_4bits+1,f
  3352     0FBF  2FBC               	goto	u1767
  3353     0FC0  2FC1               	nop2
  3354     0FC1                     l1519:
  3355                           
  3356                           ;configLCD_4bits.c: 71:     Lcd_Cmd_4bits(0x03);
  3357     0FC1  3003               	movlw	3
  3358     0FC2  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  3359     0FC7                     l1521:
  3360                           
  3361                           ;configLCD_4bits.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3362     0FC7  301D               	movlw	29
  3363     0FC8  00F8               	movwf	??_Lcd_Init_4bits+1
  3364     0FC9  3091               	movlw	145
  3365     0FCA  00F7               	movwf	??_Lcd_Init_4bits
  3366     0FCB                     u1777:
  3367     0FCB  0BF7               	decfsz	??_Lcd_Init_4bits,f
  3368     0FCC  2FCB               	goto	u1777
  3369     0FCD  0BF8               	decfsz	??_Lcd_Init_4bits+1,f
  3370     0FCE  2FCB               	goto	u1777
  3371                           
  3372                           ;configLCD_4bits.c: 73:     Lcd_Cmd_4bits(0x03);
  3373     0FCF  3003               	movlw	3
  3374     0FD0  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  3375                           
  3376                           ;configLCD_4bits.c: 75:     Lcd_Cmd_4bits(0x02);
  3377     0FD5  3002               	movlw	2
  3378     0FD6  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  3379                           
  3380                           ;configLCD_4bits.c: 76:     Lcd_Cmd_4bits(0x02);
  3381     0FDB  3002               	movlw	2
  3382     0FDC  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  3383                           
  3384                           ;configLCD_4bits.c: 77:     Lcd_Cmd_4bits(0x08);
  3385     0FE1  3008               	movlw	8
  3386     0FE2  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  3387                           
  3388                           ;configLCD_4bits.c: 78:     Lcd_Cmd_4bits(0x00);
  3389     0FE7  3000               	movlw	0
  3390     0FE8  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  3391                           
  3392                           ;configLCD_4bits.c: 79:     Lcd_Cmd_4bits(0x0C);
  3393     0FED  300C               	movlw	12
  3394     0FEE  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  3395                           
  3396                           ;configLCD_4bits.c: 80:     Lcd_Cmd_4bits(0x00);
  3397     0FF3  3000               	movlw	0
  3398     0FF4  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  3399                           
  3400                           ;configLCD_4bits.c: 81:     Lcd_Cmd_4bits(0x06);
  3401     0FF9  3006               	movlw	6
  3402     0FFA  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  3403     0FFF                     l90:
  3404     0FFF  0008               	return
  3405     1000                     __end_of_Lcd_Init_4bits:
  3406                           
  3407                           	psect	text7
  3408     0E46                     __ptext7:	
  3409 ;; *************** function _I2C_Master_Init *****************
  3410 ;; Defined at:
  3411 ;;		line 13 in file "configI2C.c"
  3412 ;; Parameters:    Size  Location     Type
  3413 ;;  c               4    8[BANK0 ] const unsigned long 
  3414 ;; Auto vars:     Size  Location     Type
  3415 ;;		None
  3416 ;; Return value:  Size  Location     Type
  3417 ;;                  1    wreg      void 
  3418 ;; Registers used:
  3419 ;;		wreg, status,2, status,0, pclath, cstack
  3420 ;; Tracked objects:
  3421 ;;		On entry : 0/0
  3422 ;;		On exit  : 0/0
  3423 ;;		Unchanged: 0/0
  3424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3425 ;;      Params:         0       4       0       0       0
  3426 ;;      Locals:         0       0       0       0       0
  3427 ;;      Temps:          0       4       0       0       0
  3428 ;;      Totals:         0       8       0       0       0
  3429 ;;Total ram usage:        8 bytes
  3430 ;; Hardware stack levels used: 1
  3431 ;; Hardware stack levels required when called: 2
  3432 ;; This function calls:
  3433 ;;		___lldiv
  3434 ;; This function is called by:
  3435 ;;		_setup
  3436 ;; This function uses a non-reentrant model
  3437 ;;
  3438                           
  3439     0E46                     _I2C_Master_Init:	
  3440                           ;psect for function _I2C_Master_Init
  3441                           
  3442     0E46                     l2029:	
  3443                           ;incstack = 0
  3444                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3445                           
  3446                           
  3447                           ;configI2C.c: 13: void I2C_Master_Init(const unsigned long c);configI2C.c: 14: {;configI
      +                          2C.c: 15:     SSPCON = 0b00101000;
  3448     0E46  3028               	movlw	40
  3449     0E47  1283               	bcf	3,5	;RP0=0, select bank0
  3450     0E48  1303               	bcf	3,6	;RP1=0, select bank0
  3451     0E49  0094               	movwf	20	;volatile
  3452     0E4A                     l2031:
  3453                           
  3454                           ;configI2C.c: 16:     SSPCON2 = 0;
  3455     0E4A  1683               	bsf	3,5	;RP0=1, select bank1
  3456     0E4B  1303               	bcf	3,6	;RP1=0, select bank1
  3457     0E4C  0191               	clrf	17	;volatile
  3458     0E4D                     l2033:
  3459                           
  3460                           ;configI2C.c: 17:     SSPADD = (8000000/(4*c))-1;
  3461     0E4D  1283               	bcf	3,5	;RP0=0, select bank0
  3462     0E4E  1303               	bcf	3,6	;RP1=0, select bank0
  3463     0E4F  0828               	movf	I2C_Master_Init@c,w
  3464     0E50  00AC               	movwf	??_I2C_Master_Init
  3465     0E51  0829               	movf	I2C_Master_Init@c+1,w
  3466     0E52  00AD               	movwf	??_I2C_Master_Init+1
  3467     0E53  082A               	movf	I2C_Master_Init@c+2,w
  3468     0E54  00AE               	movwf	??_I2C_Master_Init+2
  3469     0E55  082B               	movf	I2C_Master_Init@c+3,w
  3470     0E56  00AF               	movwf	??_I2C_Master_Init+3
  3471     0E57  3002               	movlw	2
  3472     0E58                     u1425:
  3473     0E58  1003               	clrc
  3474     0E59  0DAC               	rlf	??_I2C_Master_Init,f
  3475     0E5A  0DAD               	rlf	??_I2C_Master_Init+1,f
  3476     0E5B  0DAE               	rlf	??_I2C_Master_Init+2,f
  3477     0E5C  0DAF               	rlf	??_I2C_Master_Init+3,f
  3478     0E5D                     u1420:
  3479     0E5D  3EFF               	addlw	-1
  3480     0E5E  1D03               	skipz
  3481     0E5F  2E58               	goto	u1425
  3482     0E60  082F               	movf	??_I2C_Master_Init+3,w
  3483     0E61  00A3               	movwf	___lldiv@divisor+3
  3484     0E62  082E               	movf	??_I2C_Master_Init+2,w
  3485     0E63  00A2               	movwf	___lldiv@divisor+2
  3486     0E64  082D               	movf	??_I2C_Master_Init+1,w
  3487     0E65  00A1               	movwf	___lldiv@divisor+1
  3488     0E66  082C               	movf	??_I2C_Master_Init,w
  3489     0E67  00A0               	movwf	___lldiv@divisor
  3490     0E68  3000               	movlw	0
  3491     0E69  00A7               	movwf	___lldiv@dividend+3
  3492     0E6A  307A               	movlw	122
  3493     0E6B  00A6               	movwf	___lldiv@dividend+2
  3494     0E6C  3012               	movlw	18
  3495     0E6D  00A5               	movwf	___lldiv@dividend+1
  3496     0E6E  3000               	movlw	0
  3497     0E6F  00A4               	movwf	___lldiv@dividend
  3498     0E70  120A  118A  26DF  120A  158A  	fcall	___lldiv
  3499     0E75  1283               	bcf	3,5	;RP0=0, select bank0
  3500     0E76  1303               	bcf	3,6	;RP1=0, select bank0
  3501     0E77  0820               	movf	?___lldiv,w
  3502     0E78  3EFF               	addlw	255
  3503     0E79  1683               	bsf	3,5	;RP0=1, select bank1
  3504     0E7A  1303               	bcf	3,6	;RP1=0, select bank1
  3505     0E7B  0093               	movwf	19	;volatile
  3506     0E7C                     l2035:
  3507                           
  3508                           ;configI2C.c: 18:     SSPSTAT = 0;
  3509     0E7C  0194               	clrf	20	;volatile
  3510     0E7D                     l2037:
  3511                           
  3512                           ;configI2C.c: 19:     TRISCbits.TRISC3 = 1;
  3513     0E7D  1587               	bsf	7,3	;volatile
  3514     0E7E                     l2039:
  3515                           
  3516                           ;configI2C.c: 20:     TRISCbits.TRISC4 = 1;
  3517     0E7E  1607               	bsf	7,4	;volatile
  3518     0E7F                     l29:
  3519     0E7F  0008               	return
  3520     0E80                     __end_of_I2C_Master_Init:
  3521                           
  3522                           	psect	text8
  3523     06DF                     __ptext8:	
  3524 ;; *************** function ___lldiv *****************
  3525 ;; Defined at:
  3526 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3527 ;; Parameters:    Size  Location     Type
  3528 ;;  divisor         4    0[BANK0 ] unsigned long 
  3529 ;;  dividend        4    4[BANK0 ] unsigned long 
  3530 ;; Auto vars:     Size  Location     Type
  3531 ;;  quotient        4    4[COMMON] unsigned long 
  3532 ;;  counter         1    8[COMMON] unsigned char 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  4    0[BANK0 ] unsigned long 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2, status,0
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3542 ;;      Params:         0       8       0       0       0
  3543 ;;      Locals:         5       0       0       0       0
  3544 ;;      Temps:          1       0       0       0       0
  3545 ;;      Totals:         6       8       0       0       0
  3546 ;;Total ram usage:       14 bytes
  3547 ;; Hardware stack levels used: 1
  3548 ;; Hardware stack levels required when called: 1
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_I2C_Master_Init
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556     06DF                     ___lldiv:	
  3557                           ;psect for function ___lldiv
  3558                           
  3559     06DF                     l2005:	
  3560                           ;incstack = 0
  3561                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3562                           
  3563     06DF  3000               	movlw	0
  3564     06E0  00F7               	movwf	___lldiv@quotient+3
  3565     06E1  3000               	movlw	0
  3566     06E2  00F6               	movwf	___lldiv@quotient+2
  3567     06E3  3000               	movlw	0
  3568     06E4  00F5               	movwf	___lldiv@quotient+1
  3569     06E5  3000               	movlw	0
  3570     06E6  00F4               	movwf	___lldiv@quotient
  3571     06E7  1283               	bcf	3,5	;RP0=0, select bank0
  3572     06E8  1303               	bcf	3,6	;RP1=0, select bank0
  3573     06E9  0823               	movf	___lldiv@divisor+3,w
  3574     06EA  0422               	iorwf	___lldiv@divisor+2,w
  3575     06EB  0421               	iorwf	___lldiv@divisor+1,w
  3576     06EC  0420               	iorwf	___lldiv@divisor,w
  3577     06ED  1903               	skipnz
  3578     06EE  2EF0               	goto	u1351
  3579     06EF  2EF1               	goto	u1350
  3580     06F0                     u1351:
  3581     06F0  2F3E               	goto	l2025
  3582     06F1                     u1350:
  3583     06F1                     l2007:
  3584     06F1  01F8               	clrf	___lldiv@counter
  3585     06F2  0AF8               	incf	___lldiv@counter,f
  3586     06F3  2F01               	goto	l2011
  3587     06F4                     l2009:
  3588     06F4  3001               	movlw	1
  3589     06F5  00F3               	movwf	??___lldiv
  3590     06F6                     u1365:
  3591     06F6  1003               	clrc
  3592     06F7  0DA0               	rlf	___lldiv@divisor,f
  3593     06F8  0DA1               	rlf	___lldiv@divisor+1,f
  3594     06F9  0DA2               	rlf	___lldiv@divisor+2,f
  3595     06FA  0DA3               	rlf	___lldiv@divisor+3,f
  3596     06FB  0BF3               	decfsz	??___lldiv,f
  3597     06FC  2EF6               	goto	u1365
  3598     06FD  3001               	movlw	1
  3599     06FE  00F3               	movwf	??___lldiv
  3600     06FF  0873               	movf	??___lldiv,w
  3601     0700  07F8               	addwf	___lldiv@counter,f
  3602     0701                     l2011:
  3603     0701  1FA3               	btfss	___lldiv@divisor+3,7
  3604     0702  2F04               	goto	u1371
  3605     0703  2F05               	goto	u1370
  3606     0704                     u1371:
  3607     0704  2EF4               	goto	l2009
  3608     0705                     u1370:
  3609     0705                     l2013:
  3610     0705  3001               	movlw	1
  3611     0706  00F3               	movwf	??___lldiv
  3612     0707                     u1385:
  3613     0707  1003               	clrc
  3614     0708  0DF4               	rlf	___lldiv@quotient,f
  3615     0709  0DF5               	rlf	___lldiv@quotient+1,f
  3616     070A  0DF6               	rlf	___lldiv@quotient+2,f
  3617     070B  0DF7               	rlf	___lldiv@quotient+3,f
  3618     070C  0BF3               	decfsz	??___lldiv,f
  3619     070D  2F07               	goto	u1385
  3620     070E                     l2015:
  3621     070E  0823               	movf	___lldiv@divisor+3,w
  3622     070F  0227               	subwf	___lldiv@dividend+3,w
  3623     0710  1D03               	skipz
  3624     0711  2F1C               	goto	u1395
  3625     0712  0822               	movf	___lldiv@divisor+2,w
  3626     0713  0226               	subwf	___lldiv@dividend+2,w
  3627     0714  1D03               	skipz
  3628     0715  2F1C               	goto	u1395
  3629     0716  0821               	movf	___lldiv@divisor+1,w
  3630     0717  0225               	subwf	___lldiv@dividend+1,w
  3631     0718  1D03               	skipz
  3632     0719  2F1C               	goto	u1395
  3633     071A  0820               	movf	___lldiv@divisor,w
  3634     071B  0224               	subwf	___lldiv@dividend,w
  3635     071C                     u1395:
  3636     071C  1C03               	skipc
  3637     071D  2F1F               	goto	u1391
  3638     071E  2F20               	goto	u1390
  3639     071F                     u1391:
  3640     071F  2F2F               	goto	l2021
  3641     0720                     u1390:
  3642     0720                     l2017:
  3643     0720  0820               	movf	___lldiv@divisor,w
  3644     0721  02A4               	subwf	___lldiv@dividend,f
  3645     0722  0821               	movf	___lldiv@divisor+1,w
  3646     0723  1C03               	skipc
  3647     0724  0F21               	incfsz	___lldiv@divisor+1,w
  3648     0725  02A5               	subwf	___lldiv@dividend+1,f
  3649     0726  0822               	movf	___lldiv@divisor+2,w
  3650     0727  1C03               	skipc
  3651     0728  0F22               	incfsz	___lldiv@divisor+2,w
  3652     0729  02A6               	subwf	___lldiv@dividend+2,f
  3653     072A  0823               	movf	___lldiv@divisor+3,w
  3654     072B  1C03               	skipc
  3655     072C  0F23               	incfsz	___lldiv@divisor+3,w
  3656     072D  02A7               	subwf	___lldiv@dividend+3,f
  3657     072E                     l2019:
  3658     072E  1474               	bsf	___lldiv@quotient,0
  3659     072F                     l2021:
  3660     072F  3001               	movlw	1
  3661     0730                     u1405:
  3662     0730  1003               	clrc
  3663     0731  0CA3               	rrf	___lldiv@divisor+3,f
  3664     0732  0CA2               	rrf	___lldiv@divisor+2,f
  3665     0733  0CA1               	rrf	___lldiv@divisor+1,f
  3666     0734  0CA0               	rrf	___lldiv@divisor,f
  3667     0735  3EFF               	addlw	-1
  3668     0736  1D03               	skipz
  3669     0737  2F30               	goto	u1405
  3670     0738                     l2023:
  3671     0738  3001               	movlw	1
  3672     0739  02F8               	subwf	___lldiv@counter,f
  3673     073A  1D03               	btfss	3,2
  3674     073B  2F3D               	goto	u1411
  3675     073C  2F3E               	goto	u1410
  3676     073D                     u1411:
  3677     073D  2F05               	goto	l2013
  3678     073E                     u1410:
  3679     073E                     l2025:
  3680     073E  0877               	movf	___lldiv@quotient+3,w
  3681     073F  00A3               	movwf	?___lldiv+3
  3682     0740  0876               	movf	___lldiv@quotient+2,w
  3683     0741  00A2               	movwf	?___lldiv+2
  3684     0742  0875               	movf	___lldiv@quotient+1,w
  3685     0743  00A1               	movwf	?___lldiv+1
  3686     0744  0874               	movf	___lldiv@quotient,w
  3687     0745  00A0               	movwf	?___lldiv
  3688     0746                     l349:
  3689     0746  0008               	return
  3690     0747                     __end_of___lldiv:
  3691                           
  3692                           	psect	text9
  3693     0747                     __ptext9:	
  3694 ;; *************** function _leerRTC *****************
  3695 ;; Defined at:
  3696 ;;		line 13 in file "DS3231.c"
  3697 ;; Parameters:    Size  Location     Type
  3698 ;;  R               1    wreg     enum E1292
  3699 ;; Auto vars:     Size  Location     Type
  3700 ;;  R               1    3[BANK0 ] enum E1292
  3701 ;;  DATO            1    4[BANK0 ] unsigned char 
  3702 ;; Return value:  Size  Location     Type
  3703 ;;                  1    wreg      unsigned char 
  3704 ;; Registers used:
  3705 ;;		wreg, status,2, status,0, pclath, cstack
  3706 ;; Tracked objects:
  3707 ;;		On entry : 0/0
  3708 ;;		On exit  : 0/0
  3709 ;;		Unchanged: 0/0
  3710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3711 ;;      Params:         0       0       0       0       0
  3712 ;;      Locals:         0       2       0       0       0
  3713 ;;      Temps:          0       3       0       0       0
  3714 ;;      Totals:         0       5       0       0       0
  3715 ;;Total ram usage:        5 bytes
  3716 ;; Hardware stack levels used: 1
  3717 ;; Hardware stack levels required when called: 3
  3718 ;; This function calls:
  3719 ;;		_I2C_Master_Read
  3720 ;;		_I2C_Master_RepeatedStart
  3721 ;;		_I2C_Master_Start
  3722 ;;		_I2C_Master_Stop
  3723 ;;		_I2C_Master_Write
  3724 ;;		___bmul
  3725 ;; This function is called by:
  3726 ;;		_main
  3727 ;; This function uses a non-reentrant model
  3728 ;;
  3729                           
  3730     0747                     _leerRTC:	
  3731                           ;psect for function _leerRTC
  3732                           
  3733                           
  3734                           ;incstack = 0
  3735                           ; Regs used in _leerRTC: [wreg+status,2+status,0+pclath+cstack]
  3736                           ;leerRTC@R stored from wreg
  3737     0747  1283               	bcf	3,5	;RP0=0, select bank0
  3738     0748  1303               	bcf	3,6	;RP1=0, select bank0
  3739     0749  00A3               	movwf	leerRTC@R
  3740     074A                     l2221:
  3741                           
  3742                           ;DS3231.c: 15:     uint8_t DATO;;DS3231.c: 17:     I2C_Master_Start();
  3743     074A  120A  158A  24FE  120A  118A  	fcall	_I2C_Master_Start
  3744                           
  3745                           ;DS3231.c: 18:     I2C_Master_Write(0xD0);
  3746     074F  30D0               	movlw	208
  3747     0750  00F3               	movwf	I2C_Master_Write@d
  3748     0751  3000               	movlw	0
  3749     0752  00F4               	movwf	I2C_Master_Write@d+1
  3750     0753  120A  158A  2510  120A  118A  	fcall	_I2C_Master_Write
  3751                           
  3752                           ;DS3231.c: 19:     I2C_Master_Write(R);
  3753     0758  1283               	bcf	3,5	;RP0=0, select bank0
  3754     0759  1303               	bcf	3,6	;RP1=0, select bank0
  3755     075A  0823               	movf	leerRTC@R,w
  3756     075B  00A0               	movwf	??_leerRTC
  3757     075C  01A1               	clrf	??_leerRTC+1
  3758     075D  0820               	movf	??_leerRTC,w
  3759     075E  00F3               	movwf	I2C_Master_Write@d
  3760     075F  0821               	movf	??_leerRTC+1,w
  3761     0760  00F4               	movwf	I2C_Master_Write@d+1
  3762     0761  120A  158A  2510  120A  118A  	fcall	_I2C_Master_Write
  3763                           
  3764                           ;DS3231.c: 20:     I2C_Master_RepeatedStart();
  3765     0766  120A  158A  24F5  120A  118A  	fcall	_I2C_Master_RepeatedStart
  3766                           
  3767                           ;DS3231.c: 21:     I2C_Master_Write(0xD1);
  3768     076B  30D1               	movlw	209
  3769     076C  00F3               	movwf	I2C_Master_Write@d
  3770     076D  3000               	movlw	0
  3771     076E  00F4               	movwf	I2C_Master_Write@d+1
  3772     076F  120A  158A  2510  120A  118A  	fcall	_I2C_Master_Write
  3773                           
  3774                           ;DS3231.c: 22:     DATO = I2C_Master_Read(0);
  3775     0774  3000               	movlw	0
  3776     0775  00F3               	movwf	I2C_Master_Read@a
  3777     0776  00F4               	movwf	I2C_Master_Read@a+1
  3778     0777  120A  158A  25B1  120A  118A  	fcall	_I2C_Master_Read
  3779     077C  0873               	movf	?_I2C_Master_Read,w
  3780     077D  1283               	bcf	3,5	;RP0=0, select bank0
  3781     077E  1303               	bcf	3,6	;RP1=0, select bank0
  3782     077F  00A4               	movwf	leerRTC@DATO
  3783                           
  3784                           ;DS3231.c: 23:     I2C_Master_Stop();
  3785     0780  120A  158A  2507  120A  118A  	fcall	_I2C_Master_Stop
  3786     0785                     l2223:
  3787                           
  3788                           ;DS3231.c: 24:     _delay((unsigned long)((200)*(8000000/4000.0)));
  3789     0785  3003               	movlw	3
  3790     0786  1283               	bcf	3,5	;RP0=0, select bank0
  3791     0787  1303               	bcf	3,6	;RP1=0, select bank0
  3792     0788  00A2               	movwf	??_leerRTC+2
  3793     0789  3008               	movlw	8
  3794     078A  00A1               	movwf	??_leerRTC+1
  3795     078B  3076               	movlw	118
  3796     078C  00A0               	movwf	??_leerRTC
  3797     078D                     u1787:
  3798     078D  0BA0               	decfsz	??_leerRTC,f
  3799     078E  2F8D               	goto	u1787
  3800     078F  0BA1               	decfsz	??_leerRTC+1,f
  3801     0790  2F8D               	goto	u1787
  3802     0791  0BA2               	decfsz	??_leerRTC+2,f
  3803     0792  2F8D               	goto	u1787
  3804     0793  0000               	nop
  3805     0794                     l2225:
  3806                           
  3807                           ;DS3231.c: 26:     DATO = (DATO >> 4) * 10 + (DATO & 0x0F);
  3808     0794  300F               	movlw	15
  3809     0795  1283               	bcf	3,5	;RP0=0, select bank0
  3810     0796  1303               	bcf	3,6	;RP1=0, select bank0
  3811     0797  0524               	andwf	leerRTC@DATO,w
  3812     0798  00A0               	movwf	??_leerRTC
  3813     0799  300A               	movlw	10
  3814     079A  00F3               	movwf	___bmul@multiplicand
  3815     079B  0824               	movf	leerRTC@DATO,w
  3816     079C  00A1               	movwf	??_leerRTC+1
  3817     079D  3004               	movlw	4
  3818     079E                     u1645:
  3819     079E  1003               	clrc
  3820     079F  0CA1               	rrf	??_leerRTC+1,f
  3821     07A0  3EFF               	addlw	-1
  3822     07A1  1D03               	skipz
  3823     07A2  2F9E               	goto	u1645
  3824     07A3  0821               	movf	??_leerRTC+1,w
  3825     07A4  120A  158A  2541  120A  118A  	fcall	___bmul
  3826     07A9  1283               	bcf	3,5	;RP0=0, select bank0
  3827     07AA  1303               	bcf	3,6	;RP1=0, select bank0
  3828     07AB  0720               	addwf	??_leerRTC,w
  3829     07AC  00A4               	movwf	leerRTC@DATO
  3830                           
  3831                           ;DS3231.c: 28:     return DATO;
  3832     07AD  0824               	movf	leerRTC@DATO,w
  3833     07AE                     l199:
  3834     07AE  0008               	return
  3835     07AF                     __end_of_leerRTC:
  3836                           
  3837                           	psect	text10
  3838     0D41                     __ptext10:	
  3839 ;; *************** function ___bmul *****************
  3840 ;; Defined at:
  3841 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul8.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  multiplier      1    wreg     unsigned char 
  3844 ;;  multiplicand    1    3[COMMON] unsigned char 
  3845 ;; Auto vars:     Size  Location     Type
  3846 ;;  multiplier      1    6[COMMON] unsigned char 
  3847 ;;  product         1    5[COMMON] unsigned char 
  3848 ;; Return value:  Size  Location     Type
  3849 ;;                  1    wreg      unsigned char 
  3850 ;; Registers used:
  3851 ;;		wreg, status,2, status,0
  3852 ;; Tracked objects:
  3853 ;;		On entry : 0/0
  3854 ;;		On exit  : 0/0
  3855 ;;		Unchanged: 0/0
  3856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3857 ;;      Params:         1       0       0       0       0
  3858 ;;      Locals:         2       0       0       0       0
  3859 ;;      Temps:          1       0       0       0       0
  3860 ;;      Totals:         4       0       0       0       0
  3861 ;;Total ram usage:        4 bytes
  3862 ;; Hardware stack levels used: 1
  3863 ;; Hardware stack levels required when called: 1
  3864 ;; This function calls:
  3865 ;;		Nothing
  3866 ;; This function is called by:
  3867 ;;		_leerRTC
  3868 ;; This function uses a non-reentrant model
  3869 ;;
  3870                           
  3871     0D41                     ___bmul:	
  3872                           ;psect for function ___bmul
  3873                           
  3874                           
  3875                           ;incstack = 0
  3876                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3877                           ;___bmul@multiplier stored from wreg
  3878     0D41  00F6               	movwf	___bmul@multiplier
  3879     0D42                     l2073:
  3880     0D42  01F5               	clrf	___bmul@product
  3881     0D43                     l2075:
  3882     0D43  1C76               	btfss	___bmul@multiplier,0
  3883     0D44  2D46               	goto	u1441
  3884     0D45  2D47               	goto	u1440
  3885     0D46                     u1441:
  3886     0D46  2D4B               	goto	l2079
  3887     0D47                     u1440:
  3888     0D47                     l2077:
  3889     0D47  0873               	movf	___bmul@multiplicand,w
  3890     0D48  00F4               	movwf	??___bmul
  3891     0D49  0874               	movf	??___bmul,w
  3892     0D4A  07F5               	addwf	___bmul@product,f
  3893     0D4B                     l2079:
  3894     0D4B  1003               	clrc
  3895     0D4C  0DF3               	rlf	___bmul@multiplicand,f
  3896     0D4D                     l2081:
  3897     0D4D  1003               	clrc
  3898     0D4E  0CF6               	rrf	___bmul@multiplier,f
  3899     0D4F  0876               	movf	___bmul@multiplier,w
  3900     0D50  1D03               	btfss	3,2
  3901     0D51  2D53               	goto	u1451
  3902     0D52  2D54               	goto	u1450
  3903     0D53                     u1451:
  3904     0D53  2D43               	goto	l2075
  3905     0D54                     u1450:
  3906     0D54                     l2083:
  3907     0D54  0875               	movf	___bmul@product,w
  3908     0D55                     l339:
  3909     0D55  0008               	return
  3910     0D56                     __end_of___bmul:
  3911                           
  3912                           	psect	text11
  3913     0D10                     __ptext11:	
  3914 ;; *************** function _I2C_Master_Write *****************
  3915 ;; Defined at:
  3916 ;;		line 62 in file "configI2C.c"
  3917 ;; Parameters:    Size  Location     Type
  3918 ;;  d               2    3[COMMON] unsigned int 
  3919 ;; Auto vars:     Size  Location     Type
  3920 ;;		None
  3921 ;; Return value:  Size  Location     Type
  3922 ;;                  1    wreg      void 
  3923 ;; Registers used:
  3924 ;;		wreg, status,2, status,0, pclath, cstack
  3925 ;; Tracked objects:
  3926 ;;		On entry : 0/0
  3927 ;;		On exit  : 0/0
  3928 ;;		Unchanged: 0/0
  3929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3930 ;;      Params:         2       0       0       0       0
  3931 ;;      Locals:         0       0       0       0       0
  3932 ;;      Temps:          0       0       0       0       0
  3933 ;;      Totals:         2       0       0       0       0
  3934 ;;Total ram usage:        2 bytes
  3935 ;; Hardware stack levels used: 1
  3936 ;; Hardware stack levels required when called: 2
  3937 ;; This function calls:
  3938 ;;		_I2C_Master_Wait
  3939 ;; This function is called by:
  3940 ;;		_main
  3941 ;;		_leerRTC
  3942 ;;		_modifRTC
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946     0D10                     _I2C_Master_Write:	
  3947                           ;psect for function _I2C_Master_Write
  3948                           
  3949     0D10                     l2053:	
  3950                           ;incstack = 0
  3951                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  3952                           
  3953                           
  3954                           ;configI2C.c: 62: void I2C_Master_Write(unsigned d);configI2C.c: 63: {;configI2C.c: 64: 
      +                              I2C_Master_Wait();
  3955     0D10  120A  158A  2527  120A  158A  	fcall	_I2C_Master_Wait
  3956     0D15                     l2055:
  3957                           
  3958                           ;configI2C.c: 65:     SSPBUF = d;
  3959     0D15  0873               	movf	I2C_Master_Write@d,w
  3960     0D16  1283               	bcf	3,5	;RP0=0, select bank0
  3961     0D17  1303               	bcf	3,6	;RP1=0, select bank0
  3962     0D18  0093               	movwf	19	;volatile
  3963     0D19                     l47:
  3964     0D19  0008               	return
  3965     0D1A                     __end_of_I2C_Master_Write:
  3966                           
  3967                           	psect	text12
  3968     0D07                     __ptext12:	
  3969 ;; *************** function _I2C_Master_Stop *****************
  3970 ;; Defined at:
  3971 ;;		line 52 in file "configI2C.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;		None
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;		None
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, status,2, status,0, pclath, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3985 ;;      Params:         0       0       0       0       0
  3986 ;;      Locals:         0       0       0       0       0
  3987 ;;      Temps:          0       0       0       0       0
  3988 ;;      Totals:         0       0       0       0       0
  3989 ;;Total ram usage:        0 bytes
  3990 ;; Hardware stack levels used: 1
  3991 ;; Hardware stack levels required when called: 2
  3992 ;; This function calls:
  3993 ;;		_I2C_Master_Wait
  3994 ;; This function is called by:
  3995 ;;		_main
  3996 ;;		_leerRTC
  3997 ;;		_modifRTC
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           
  4001     0D07                     _I2C_Master_Stop:	
  4002                           ;psect for function _I2C_Master_Stop
  4003                           
  4004     0D07                     l2049:	
  4005                           ;incstack = 0
  4006                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4007                           
  4008                           
  4009                           ;configI2C.c: 54:     I2C_Master_Wait();
  4010     0D07  120A  158A  2527  120A  158A  	fcall	_I2C_Master_Wait
  4011     0D0C                     l2051:
  4012                           
  4013                           ;configI2C.c: 55:     SSPCON2bits.PEN = 1;
  4014     0D0C  1683               	bsf	3,5	;RP0=1, select bank1
  4015     0D0D  1303               	bcf	3,6	;RP1=0, select bank1
  4016     0D0E  1511               	bsf	17,2	;volatile
  4017     0D0F                     l44:
  4018     0D0F  0008               	return
  4019     0D10                     __end_of_I2C_Master_Stop:
  4020                           
  4021                           	psect	text13
  4022     0CFE                     __ptext13:	
  4023 ;; *************** function _I2C_Master_Start *****************
  4024 ;; Defined at:
  4025 ;;		line 36 in file "configI2C.c"
  4026 ;; Parameters:    Size  Location     Type
  4027 ;;		None
  4028 ;; Auto vars:     Size  Location     Type
  4029 ;;		None
  4030 ;; Return value:  Size  Location     Type
  4031 ;;                  1    wreg      void 
  4032 ;; Registers used:
  4033 ;;		wreg, status,2, status,0, pclath, cstack
  4034 ;; Tracked objects:
  4035 ;;		On entry : 0/0
  4036 ;;		On exit  : 0/0
  4037 ;;		Unchanged: 0/0
  4038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4039 ;;      Params:         0       0       0       0       0
  4040 ;;      Locals:         0       0       0       0       0
  4041 ;;      Temps:          0       0       0       0       0
  4042 ;;      Totals:         0       0       0       0       0
  4043 ;;Total ram usage:        0 bytes
  4044 ;; Hardware stack levels used: 1
  4045 ;; Hardware stack levels required when called: 2
  4046 ;; This function calls:
  4047 ;;		_I2C_Master_Wait
  4048 ;; This function is called by:
  4049 ;;		_main
  4050 ;;		_leerRTC
  4051 ;;		_modifRTC
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055     0CFE                     _I2C_Master_Start:	
  4056                           ;psect for function _I2C_Master_Start
  4057                           
  4058     0CFE                     l2041:	
  4059                           ;incstack = 0
  4060                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4061                           
  4062                           
  4063                           ;configI2C.c: 38:     I2C_Master_Wait();
  4064     0CFE  120A  158A  2527  120A  158A  	fcall	_I2C_Master_Wait
  4065     0D03                     l2043:
  4066                           
  4067                           ;configI2C.c: 39:     SSPCON2bits.SEN = 1;
  4068     0D03  1683               	bsf	3,5	;RP0=1, select bank1
  4069     0D04  1303               	bcf	3,6	;RP1=0, select bank1
  4070     0D05  1411               	bsf	17,0	;volatile
  4071     0D06                     l38:
  4072     0D06  0008               	return
  4073     0D07                     __end_of_I2C_Master_Start:
  4074                           
  4075                           	psect	text14
  4076     0CF5                     __ptext14:	
  4077 ;; *************** function _I2C_Master_RepeatedStart *****************
  4078 ;; Defined at:
  4079 ;;		line 44 in file "configI2C.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0, pclath, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4093 ;;      Params:         0       0       0       0       0
  4094 ;;      Locals:         0       0       0       0       0
  4095 ;;      Temps:          0       0       0       0       0
  4096 ;;      Totals:         0       0       0       0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 2
  4100 ;; This function calls:
  4101 ;;		_I2C_Master_Wait
  4102 ;; This function is called by:
  4103 ;;		_leerRTC
  4104 ;;		_modifRTC
  4105 ;; This function uses a non-reentrant model
  4106 ;;
  4107                           
  4108     0CF5                     _I2C_Master_RepeatedStart:	
  4109                           ;psect for function _I2C_Master_RepeatedStart
  4110                           
  4111     0CF5                     l2045:	
  4112                           ;incstack = 0
  4113                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4114                           
  4115                           
  4116                           ;configI2C.c: 46:     I2C_Master_Wait();
  4117     0CF5  120A  158A  2527  120A  158A  	fcall	_I2C_Master_Wait
  4118     0CFA                     l2047:
  4119                           
  4120                           ;configI2C.c: 47:     SSPCON2bits.RSEN = 1;
  4121     0CFA  1683               	bsf	3,5	;RP0=1, select bank1
  4122     0CFB  1303               	bcf	3,6	;RP1=0, select bank1
  4123     0CFC  1491               	bsf	17,1	;volatile
  4124     0CFD                     l41:
  4125     0CFD  0008               	return
  4126     0CFE                     __end_of_I2C_Master_RepeatedStart:
  4127                           
  4128                           	psect	text15
  4129     0DB1                     __ptext15:	
  4130 ;; *************** function _I2C_Master_Read *****************
  4131 ;; Defined at:
  4132 ;;		line 71 in file "configI2C.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  a               2    3[COMMON] unsigned short 
  4135 ;; Auto vars:     Size  Location     Type
  4136 ;;  temp            2    7[COMMON] unsigned short 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  2    3[COMMON] unsigned short 
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0, pclath, cstack
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4146 ;;      Params:         2       0       0       0       0
  4147 ;;      Locals:         2       0       0       0       0
  4148 ;;      Temps:          2       0       0       0       0
  4149 ;;      Totals:         6       0       0       0       0
  4150 ;;Total ram usage:        6 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; Hardware stack levels required when called: 2
  4153 ;; This function calls:
  4154 ;;		_I2C_Master_Wait
  4155 ;; This function is called by:
  4156 ;;		_main
  4157 ;;		_leerRTC
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161     0DB1                     _I2C_Master_Read:	
  4162                           ;psect for function _I2C_Master_Read
  4163                           
  4164     0DB1                     l2057:	
  4165                           ;incstack = 0
  4166                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4167                           
  4168                           
  4169                           ;configI2C.c: 71: unsigned short I2C_Master_Read(unsigned short a);configI2C.c: 72: {;co
      +                          nfigI2C.c: 73:     unsigned short temp;;configI2C.c: 74:     I2C_Master_Wait();
  4170     0DB1  120A  158A  2527  120A  158A  	fcall	_I2C_Master_Wait
  4171     0DB6                     l2059:
  4172                           
  4173                           ;configI2C.c: 75:     SSPCON2bits.RCEN = 1;
  4174     0DB6  1683               	bsf	3,5	;RP0=1, select bank1
  4175     0DB7  1303               	bcf	3,6	;RP1=0, select bank1
  4176     0DB8  1591               	bsf	17,3	;volatile
  4177                           
  4178                           ;configI2C.c: 76:     I2C_Master_Wait();
  4179     0DB9  120A  158A  2527  120A  158A  	fcall	_I2C_Master_Wait
  4180     0DBE                     l2061:
  4181                           
  4182                           ;configI2C.c: 77:     temp = SSPBUF;
  4183     0DBE  1283               	bcf	3,5	;RP0=0, select bank0
  4184     0DBF  1303               	bcf	3,6	;RP1=0, select bank0
  4185     0DC0  0813               	movf	19,w	;volatile
  4186     0DC1  00F5               	movwf	??_I2C_Master_Read
  4187     0DC2  01F6               	clrf	??_I2C_Master_Read+1
  4188     0DC3  0875               	movf	??_I2C_Master_Read,w
  4189     0DC4  00F7               	movwf	I2C_Master_Read@temp
  4190     0DC5  0876               	movf	??_I2C_Master_Read+1,w
  4191     0DC6  00F8               	movwf	I2C_Master_Read@temp+1
  4192     0DC7                     l2063:
  4193                           
  4194                           ;configI2C.c: 78:     I2C_Master_Wait();
  4195     0DC7  120A  158A  2527  120A  158A  	fcall	_I2C_Master_Wait
  4196     0DCC                     l2065:
  4197                           
  4198                           ;configI2C.c: 79:     if(a == 1){
  4199     0DCC  0373               	decf	I2C_Master_Read@a,w
  4200     0DCD  0474               	iorwf	I2C_Master_Read@a+1,w
  4201     0DCE  1D03               	btfss	3,2
  4202     0DCF  2DD1               	goto	u1431
  4203     0DD0  2DD2               	goto	u1430
  4204     0DD1                     u1431:
  4205     0DD1  2DD6               	goto	l50
  4206     0DD2                     u1430:
  4207     0DD2                     l2067:
  4208                           
  4209                           ;configI2C.c: 80:         SSPCON2bits.ACKDT = 0;
  4210     0DD2  1683               	bsf	3,5	;RP0=1, select bank1
  4211     0DD3  1303               	bcf	3,6	;RP1=0, select bank1
  4212     0DD4  1291               	bcf	17,5	;volatile
  4213                           
  4214                           ;configI2C.c: 81:     }else{
  4215     0DD5  2DD9               	goto	l51
  4216     0DD6                     l50:
  4217                           
  4218                           ;configI2C.c: 82:         SSPCON2bits.ACKDT = 1;
  4219     0DD6  1683               	bsf	3,5	;RP0=1, select bank1
  4220     0DD7  1303               	bcf	3,6	;RP1=0, select bank1
  4221     0DD8  1691               	bsf	17,5	;volatile
  4222     0DD9                     l51:	
  4223                           ;configI2C.c: 83:     }
  4224                           
  4225                           
  4226                           ;configI2C.c: 84:     SSPCON2bits.ACKEN = 1;
  4227     0DD9  1611               	bsf	17,4	;volatile
  4228     0DDA                     l2069:
  4229                           
  4230                           ;configI2C.c: 85:     return temp;
  4231     0DDA  0878               	movf	I2C_Master_Read@temp+1,w
  4232     0DDB  00F4               	movwf	?_I2C_Master_Read+1
  4233     0DDC  0877               	movf	I2C_Master_Read@temp,w
  4234     0DDD  00F3               	movwf	?_I2C_Master_Read
  4235     0DDE                     l52:
  4236     0DDE  0008               	return
  4237     0DDF                     __end_of_I2C_Master_Read:
  4238                           
  4239                           	psect	text16
  4240     0D27                     __ptext16:	
  4241 ;; *************** function _I2C_Master_Wait *****************
  4242 ;; Defined at:
  4243 ;;		line 29 in file "configI2C.c"
  4244 ;; Parameters:    Size  Location     Type
  4245 ;;		None
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2
  4252 ;; Tracked objects:
  4253 ;;		On entry : 0/0
  4254 ;;		On exit  : 0/0
  4255 ;;		Unchanged: 0/0
  4256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4257 ;;      Params:         0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0
  4260 ;;      Totals:         0       0       0       0       0
  4261 ;;Total ram usage:        0 bytes
  4262 ;; Hardware stack levels used: 1
  4263 ;; Hardware stack levels required when called: 1
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_I2C_Master_Start
  4268 ;;		_I2C_Master_RepeatedStart
  4269 ;;		_I2C_Master_Stop
  4270 ;;		_I2C_Master_Write
  4271 ;;		_I2C_Master_Read
  4272 ;; This function uses a non-reentrant model
  4273 ;;
  4274                           
  4275     0D27                     _I2C_Master_Wait:	
  4276                           ;psect for function _I2C_Master_Wait
  4277                           
  4278     0D27                     l2001:	
  4279                           ;incstack = 0
  4280                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  4281                           
  4282     0D27                     l32:	
  4283                           ;configI2C.c: 31:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  4284                           
  4285     0D27  1683               	bsf	3,5	;RP0=1, select bank1
  4286     0D28  1303               	bcf	3,6	;RP1=0, select bank1
  4287     0D29  1914               	btfsc	20,2	;volatile
  4288     0D2A  2D2C               	goto	u1331
  4289     0D2B  2D2D               	goto	u1330
  4290     0D2C                     u1331:
  4291     0D2C  2D27               	goto	l32
  4292     0D2D                     u1330:
  4293     0D2D                     l2003:
  4294     0D2D  0811               	movf	17,w	;volatile
  4295     0D2E  391F               	andlw	31
  4296     0D2F  1D03               	btfss	3,2
  4297     0D30  2D32               	goto	u1341
  4298     0D31  2D33               	goto	u1340
  4299     0D32                     u1341:
  4300     0D32  2D27               	goto	l32
  4301     0D33                     u1340:
  4302     0D33                     l35:
  4303     0D33  0008               	return
  4304     0D34                     __end_of_I2C_Master_Wait:
  4305                           
  4306                           	psect	text17
  4307     0F48                     __ptext17:	
  4308 ;; *************** function ___awmod *****************
  4309 ;; Defined at:
  4310 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4311 ;; Parameters:    Size  Location     Type
  4312 ;;  divisor         2    4[BANK0 ] int 
  4313 ;;  dividend        2    6[BANK0 ] int 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  sign            1    9[BANK0 ] unsigned char 
  4316 ;;  counter         1    8[BANK0 ] unsigned char 
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  2    4[BANK0 ] int 
  4319 ;; Registers used:
  4320 ;;		wreg, status,2, status,0
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4326 ;;      Params:         0       4       0       0       0
  4327 ;;      Locals:         0       2       0       0       0
  4328 ;;      Temps:          1       0       0       0       0
  4329 ;;      Totals:         1       6       0       0       0
  4330 ;;Total ram usage:        7 bytes
  4331 ;; Hardware stack levels used: 1
  4332 ;; Hardware stack levels required when called: 1
  4333 ;; This function calls:
  4334 ;;		Nothing
  4335 ;; This function is called by:
  4336 ;;		_main
  4337 ;;		_modifRTC
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341     0F48                     ___awmod:	
  4342                           ;psect for function ___awmod
  4343                           
  4344     0F48                     l2229:	
  4345                           ;incstack = 0
  4346                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4347                           
  4348     0F48  1283               	bcf	3,5	;RP0=0, select bank0
  4349     0F49  1303               	bcf	3,6	;RP1=0, select bank0
  4350     0F4A  01A9               	clrf	___awmod@sign
  4351     0F4B                     l2231:
  4352     0F4B  1FA7               	btfss	___awmod@dividend+1,7
  4353     0F4C  2F4E               	goto	u1651
  4354     0F4D  2F4F               	goto	u1650
  4355     0F4E                     u1651:
  4356     0F4E  2F56               	goto	l2237
  4357     0F4F                     u1650:
  4358     0F4F                     l2233:
  4359     0F4F  09A6               	comf	___awmod@dividend,f
  4360     0F50  09A7               	comf	___awmod@dividend+1,f
  4361     0F51  0AA6               	incf	___awmod@dividend,f
  4362     0F52  1903               	skipnz
  4363     0F53  0AA7               	incf	___awmod@dividend+1,f
  4364     0F54                     l2235:
  4365     0F54  01A9               	clrf	___awmod@sign
  4366     0F55  0AA9               	incf	___awmod@sign,f
  4367     0F56                     l2237:
  4368     0F56  1FA5               	btfss	___awmod@divisor+1,7
  4369     0F57  2F59               	goto	u1661
  4370     0F58  2F5A               	goto	u1660
  4371     0F59                     u1661:
  4372     0F59  2F5F               	goto	l2241
  4373     0F5A                     u1660:
  4374     0F5A                     l2239:
  4375     0F5A  09A4               	comf	___awmod@divisor,f
  4376     0F5B  09A5               	comf	___awmod@divisor+1,f
  4377     0F5C  0AA4               	incf	___awmod@divisor,f
  4378     0F5D  1903               	skipnz
  4379     0F5E  0AA5               	incf	___awmod@divisor+1,f
  4380     0F5F                     l2241:
  4381     0F5F  0824               	movf	___awmod@divisor,w
  4382     0F60  0425               	iorwf	___awmod@divisor+1,w
  4383     0F61  1903               	btfsc	3,2
  4384     0F62  2F64               	goto	u1671
  4385     0F63  2F65               	goto	u1670
  4386     0F64                     u1671:
  4387     0F64  2F94               	goto	l2259
  4388     0F65                     u1670:
  4389     0F65                     l2243:
  4390     0F65  01A8               	clrf	___awmod@counter
  4391     0F66  0AA8               	incf	___awmod@counter,f
  4392     0F67  2F73               	goto	l2249
  4393     0F68                     l2245:
  4394     0F68  3001               	movlw	1
  4395     0F69                     u1685:
  4396     0F69  1003               	clrc
  4397     0F6A  0DA4               	rlf	___awmod@divisor,f
  4398     0F6B  0DA5               	rlf	___awmod@divisor+1,f
  4399     0F6C  3EFF               	addlw	-1
  4400     0F6D  1D03               	skipz
  4401     0F6E  2F69               	goto	u1685
  4402     0F6F                     l2247:
  4403     0F6F  3001               	movlw	1
  4404     0F70  00F8               	movwf	??___awmod
  4405     0F71  0878               	movf	??___awmod,w
  4406     0F72  07A8               	addwf	___awmod@counter,f
  4407     0F73                     l2249:
  4408     0F73  1FA5               	btfss	___awmod@divisor+1,7
  4409     0F74  2F76               	goto	u1691
  4410     0F75  2F77               	goto	u1690
  4411     0F76                     u1691:
  4412     0F76  2F68               	goto	l2245
  4413     0F77                     u1690:
  4414     0F77                     l2251:
  4415     0F77  0825               	movf	___awmod@divisor+1,w
  4416     0F78  0227               	subwf	___awmod@dividend+1,w
  4417     0F79  1D03               	skipz
  4418     0F7A  2F7D               	goto	u1705
  4419     0F7B  0824               	movf	___awmod@divisor,w
  4420     0F7C  0226               	subwf	___awmod@dividend,w
  4421     0F7D                     u1705:
  4422     0F7D  1C03               	skipc
  4423     0F7E  2F80               	goto	u1701
  4424     0F7F  2F81               	goto	u1700
  4425     0F80                     u1701:
  4426     0F80  2F87               	goto	l2255
  4427     0F81                     u1700:
  4428     0F81                     l2253:
  4429     0F81  0824               	movf	___awmod@divisor,w
  4430     0F82  02A6               	subwf	___awmod@dividend,f
  4431     0F83  0825               	movf	___awmod@divisor+1,w
  4432     0F84  1C03               	skipc
  4433     0F85  03A7               	decf	___awmod@dividend+1,f
  4434     0F86  02A7               	subwf	___awmod@dividend+1,f
  4435     0F87                     l2255:
  4436     0F87  3001               	movlw	1
  4437     0F88                     u1715:
  4438     0F88  1003               	clrc
  4439     0F89  0CA5               	rrf	___awmod@divisor+1,f
  4440     0F8A  0CA4               	rrf	___awmod@divisor,f
  4441     0F8B  3EFF               	addlw	-1
  4442     0F8C  1D03               	skipz
  4443     0F8D  2F88               	goto	u1715
  4444     0F8E                     l2257:
  4445     0F8E  3001               	movlw	1
  4446     0F8F  02A8               	subwf	___awmod@counter,f
  4447     0F90  1D03               	btfss	3,2
  4448     0F91  2F93               	goto	u1721
  4449     0F92  2F94               	goto	u1720
  4450     0F93                     u1721:
  4451     0F93  2F77               	goto	l2251
  4452     0F94                     u1720:
  4453     0F94                     l2259:
  4454     0F94  0829               	movf	___awmod@sign,w
  4455     0F95  1903               	btfsc	3,2
  4456     0F96  2F98               	goto	u1731
  4457     0F97  2F99               	goto	u1730
  4458     0F98                     u1731:
  4459     0F98  2F9E               	goto	l2263
  4460     0F99                     u1730:
  4461     0F99                     l2261:
  4462     0F99  09A6               	comf	___awmod@dividend,f
  4463     0F9A  09A7               	comf	___awmod@dividend+1,f
  4464     0F9B  0AA6               	incf	___awmod@dividend,f
  4465     0F9C  1903               	skipnz
  4466     0F9D  0AA7               	incf	___awmod@dividend+1,f
  4467     0F9E                     l2263:
  4468     0F9E  0827               	movf	___awmod@dividend+1,w
  4469     0F9F  00A5               	movwf	?___awmod+1
  4470     0FA0  0826               	movf	___awmod@dividend,w
  4471     0FA1  00A4               	movwf	?___awmod
  4472     0FA2                     l479:
  4473     0FA2  0008               	return
  4474     0FA3                     __end_of___awmod:
  4475                           
  4476                           	psect	text18
  4477     0676                     __ptext18:	
  4478 ;; *************** function ___awdiv *****************
  4479 ;; Defined at:
  4480 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  divisor         2    3[COMMON] int 
  4483 ;;  dividend        2    5[COMMON] int 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  quotient        2    2[BANK0 ] int 
  4486 ;;  sign            1    1[BANK0 ] unsigned char 
  4487 ;;  counter         1    0[BANK0 ] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  2    3[COMMON] int 
  4490 ;; Registers used:
  4491 ;;		wreg, status,2, status,0
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4497 ;;      Params:         4       0       0       0       0
  4498 ;;      Locals:         0       4       0       0       0
  4499 ;;      Temps:          1       0       0       0       0
  4500 ;;      Totals:         5       4       0       0       0
  4501 ;;Total ram usage:        9 bytes
  4502 ;; Hardware stack levels used: 1
  4503 ;; Hardware stack levels required when called: 1
  4504 ;; This function calls:
  4505 ;;		Nothing
  4506 ;; This function is called by:
  4507 ;;		_main
  4508 ;;		_modifRTC
  4509 ;; This function uses a non-reentrant model
  4510 ;;
  4511                           
  4512     0676                     ___awdiv:	
  4513                           ;psect for function ___awdiv
  4514                           
  4515     0676                     l1729:	
  4516                           ;incstack = 0
  4517                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4518                           
  4519     0676  1283               	bcf	3,5	;RP0=0, select bank0
  4520     0677  1303               	bcf	3,6	;RP1=0, select bank0
  4521     0678  01A1               	clrf	___awdiv@sign
  4522     0679                     l1731:
  4523     0679  1FF4               	btfss	___awdiv@divisor+1,7
  4524     067A  2E7C               	goto	u1111
  4525     067B  2E7D               	goto	u1110
  4526     067C                     u1111:
  4527     067C  2E84               	goto	l1737
  4528     067D                     u1110:
  4529     067D                     l1733:
  4530     067D  09F3               	comf	___awdiv@divisor,f
  4531     067E  09F4               	comf	___awdiv@divisor+1,f
  4532     067F  0AF3               	incf	___awdiv@divisor,f
  4533     0680  1903               	skipnz
  4534     0681  0AF4               	incf	___awdiv@divisor+1,f
  4535     0682                     l1735:
  4536     0682  01A1               	clrf	___awdiv@sign
  4537     0683  0AA1               	incf	___awdiv@sign,f
  4538     0684                     l1737:
  4539     0684  1FF6               	btfss	___awdiv@dividend+1,7
  4540     0685  2E87               	goto	u1121
  4541     0686  2E88               	goto	u1120
  4542     0687                     u1121:
  4543     0687  2E91               	goto	l1743
  4544     0688                     u1120:
  4545     0688                     l1739:
  4546     0688  09F5               	comf	___awdiv@dividend,f
  4547     0689  09F6               	comf	___awdiv@dividend+1,f
  4548     068A  0AF5               	incf	___awdiv@dividend,f
  4549     068B  1903               	skipnz
  4550     068C  0AF6               	incf	___awdiv@dividend+1,f
  4551     068D                     l1741:
  4552     068D  3001               	movlw	1
  4553     068E  00F7               	movwf	??___awdiv
  4554     068F  0877               	movf	??___awdiv,w
  4555     0690  06A1               	xorwf	___awdiv@sign,f
  4556     0691                     l1743:
  4557     0691  01A2               	clrf	___awdiv@quotient
  4558     0692  01A3               	clrf	___awdiv@quotient+1
  4559     0693                     l1745:
  4560     0693  0873               	movf	___awdiv@divisor,w
  4561     0694  0474               	iorwf	___awdiv@divisor+1,w
  4562     0695  1903               	btfsc	3,2
  4563     0696  2E98               	goto	u1131
  4564     0697  2E99               	goto	u1130
  4565     0698                     u1131:
  4566     0698  2ED0               	goto	l1765
  4567     0699                     u1130:
  4568     0699                     l1747:
  4569     0699  01A0               	clrf	___awdiv@counter
  4570     069A  0AA0               	incf	___awdiv@counter,f
  4571     069B  2EA7               	goto	l1753
  4572     069C                     l1749:
  4573     069C  3001               	movlw	1
  4574     069D                     u1145:
  4575     069D  1003               	clrc
  4576     069E  0DF3               	rlf	___awdiv@divisor,f
  4577     069F  0DF4               	rlf	___awdiv@divisor+1,f
  4578     06A0  3EFF               	addlw	-1
  4579     06A1  1D03               	skipz
  4580     06A2  2E9D               	goto	u1145
  4581     06A3                     l1751:
  4582     06A3  3001               	movlw	1
  4583     06A4  00F7               	movwf	??___awdiv
  4584     06A5  0877               	movf	??___awdiv,w
  4585     06A6  07A0               	addwf	___awdiv@counter,f
  4586     06A7                     l1753:
  4587     06A7  1FF4               	btfss	___awdiv@divisor+1,7
  4588     06A8  2EAA               	goto	u1151
  4589     06A9  2EAB               	goto	u1150
  4590     06AA                     u1151:
  4591     06AA  2E9C               	goto	l1749
  4592     06AB                     u1150:
  4593     06AB                     l1755:
  4594     06AB  3001               	movlw	1
  4595     06AC                     u1165:
  4596     06AC  1003               	clrc
  4597     06AD  0DA2               	rlf	___awdiv@quotient,f
  4598     06AE  0DA3               	rlf	___awdiv@quotient+1,f
  4599     06AF  3EFF               	addlw	-1
  4600     06B0  1D03               	skipz
  4601     06B1  2EAC               	goto	u1165
  4602     06B2  0874               	movf	___awdiv@divisor+1,w
  4603     06B3  0276               	subwf	___awdiv@dividend+1,w
  4604     06B4  1D03               	skipz
  4605     06B5  2EB8               	goto	u1175
  4606     06B6  0873               	movf	___awdiv@divisor,w
  4607     06B7  0275               	subwf	___awdiv@dividend,w
  4608     06B8                     u1175:
  4609     06B8  1C03               	skipc
  4610     06B9  2EBB               	goto	u1171
  4611     06BA  2EBC               	goto	u1170
  4612     06BB                     u1171:
  4613     06BB  2EC3               	goto	l1761
  4614     06BC                     u1170:
  4615     06BC                     l1757:
  4616     06BC  0873               	movf	___awdiv@divisor,w
  4617     06BD  02F5               	subwf	___awdiv@dividend,f
  4618     06BE  0874               	movf	___awdiv@divisor+1,w
  4619     06BF  1C03               	skipc
  4620     06C0  03F6               	decf	___awdiv@dividend+1,f
  4621     06C1  02F6               	subwf	___awdiv@dividend+1,f
  4622     06C2                     l1759:
  4623     06C2  1422               	bsf	___awdiv@quotient,0
  4624     06C3                     l1761:
  4625     06C3  3001               	movlw	1
  4626     06C4                     u1185:
  4627     06C4  1003               	clrc
  4628     06C5  0CF4               	rrf	___awdiv@divisor+1,f
  4629     06C6  0CF3               	rrf	___awdiv@divisor,f
  4630     06C7  3EFF               	addlw	-1
  4631     06C8  1D03               	skipz
  4632     06C9  2EC4               	goto	u1185
  4633     06CA                     l1763:
  4634     06CA  3001               	movlw	1
  4635     06CB  02A0               	subwf	___awdiv@counter,f
  4636     06CC  1D03               	btfss	3,2
  4637     06CD  2ECF               	goto	u1191
  4638     06CE  2ED0               	goto	u1190
  4639     06CF                     u1191:
  4640     06CF  2EAB               	goto	l1755
  4641     06D0                     u1190:
  4642     06D0                     l1765:
  4643     06D0  0821               	movf	___awdiv@sign,w
  4644     06D1  1903               	btfsc	3,2
  4645     06D2  2ED4               	goto	u1201
  4646     06D3  2ED5               	goto	u1200
  4647     06D4                     u1201:
  4648     06D4  2EDA               	goto	l1769
  4649     06D5                     u1200:
  4650     06D5                     l1767:
  4651     06D5  09A2               	comf	___awdiv@quotient,f
  4652     06D6  09A3               	comf	___awdiv@quotient+1,f
  4653     06D7  0AA2               	incf	___awdiv@quotient,f
  4654     06D8  1903               	skipnz
  4655     06D9  0AA3               	incf	___awdiv@quotient+1,f
  4656     06DA                     l1769:
  4657     06DA  0823               	movf	___awdiv@quotient+1,w
  4658     06DB  00F4               	movwf	?___awdiv+1
  4659     06DC  0822               	movf	___awdiv@quotient,w
  4660     06DD  00F3               	movwf	?___awdiv
  4661     06DE                     l466:
  4662     06DE  0008               	return
  4663     06DF                     __end_of___awdiv:
  4664                           
  4665                           	psect	text19
  4666     0EBC                     __ptext19:	
  4667 ;; *************** function _Lcd_Write_String_4bits *****************
  4668 ;; Defined at:
  4669 ;;		line 99 in file "configLCD_4bits.c"
  4670 ;; Parameters:    Size  Location     Type
  4671 ;;  a               2    8[COMMON] PTR unsigned char 
  4672 ;;		 -> main@stringAO(9), main@stringMES(9), main@stringDIA(9), main@stringHOR(9), 
  4673 ;;		 -> main@stringMIN(9), main@stringSEG(9), main@ADC1(9), STR_5(2), 
  4674 ;;		 -> STR_4(2), STR_3(2), STR_2(2), STR_1(4), 
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;  i               2    3[BANK0 ] int 
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4686 ;;      Params:         2       0       0       0       0
  4687 ;;      Locals:         0       2       0       0       0
  4688 ;;      Temps:          0       3       0       0       0
  4689 ;;      Totals:         2       5       0       0       0
  4690 ;;Total ram usage:        7 bytes
  4691 ;; Hardware stack levels used: 1
  4692 ;; Hardware stack levels required when called: 3
  4693 ;; This function calls:
  4694 ;;		_Lcd_Write_Char_4bits
  4695 ;; This function is called by:
  4696 ;;		_main
  4697 ;; This function uses a non-reentrant model
  4698 ;;
  4699                           
  4700     0EBC                     _Lcd_Write_String_4bits:	
  4701                           ;psect for function _Lcd_Write_String_4bits
  4702                           
  4703     0EBC                     l1627:	
  4704                           ;incstack = 0
  4705                           ; Regs used in _Lcd_Write_String_4bits: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  4706                           
  4707                           
  4708                           ;configLCD_4bits.c: 100:     int i;;configLCD_4bits.c: 101:     for (i = 0; a[i] != '\0'
      +                          ; i++)
  4709     0EBC  1283               	bcf	3,5	;RP0=0, select bank0
  4710     0EBD  1303               	bcf	3,6	;RP1=0, select bank0
  4711     0EBE  01A3               	clrf	Lcd_Write_String_4bits@i
  4712     0EBF  01A4               	clrf	Lcd_Write_String_4bits@i+1
  4713     0EC0  2EE5               	goto	l1633
  4714     0EC1                     l1629:
  4715                           
  4716                           ;configLCD_4bits.c: 102:         Lcd_Write_Char_4bits(a[i]);
  4717     0EC1  0823               	movf	Lcd_Write_String_4bits@i,w
  4718     0EC2  0778               	addwf	Lcd_Write_String_4bits@a,w
  4719     0EC3  00A1               	movwf	??_Lcd_Write_String_4bits+1
  4720     0EC4  0879               	movf	Lcd_Write_String_4bits@a+1,w
  4721     0EC5  00A0               	movwf	??_Lcd_Write_String_4bits
  4722     0EC6  1803               	skipnc
  4723     0EC7  0AA0               	incf	??_Lcd_Write_String_4bits,f
  4724     0EC8  1FA3               	btfss	Lcd_Write_String_4bits@i,7
  4725     0EC9  2ECB               	goto	u1020
  4726     0ECA  03A0               	decf	??_Lcd_Write_String_4bits,f
  4727     0ECB                     u1020:
  4728     0ECB  1283               	bcf	3,5	;RP0=0, select bank0
  4729     0ECC  1303               	bcf	3,6	;RP1=0, select bank0
  4730     0ECD  0820               	movf	??_Lcd_Write_String_4bits,w
  4731     0ECE  00A2               	movwf	??_Lcd_Write_String_4bits+2
  4732     0ECF  0822               	movf	??_Lcd_Write_String_4bits+2,w
  4733     0ED0  00FF               	movwf	btemp+1
  4734     0ED1  0821               	movf	??_Lcd_Write_String_4bits+1,w
  4735     0ED2  0084               	movwf	4
  4736     0ED3  120A  158A  2000  120A  158A  	fcall	stringtab
  4737     0ED8  120A  158A  2611  120A  158A  	fcall	_Lcd_Write_Char_4bits
  4738     0EDD                     l1631:
  4739     0EDD  3001               	movlw	1
  4740     0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  4741     0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  4742     0EE0  07A3               	addwf	Lcd_Write_String_4bits@i,f
  4743     0EE1  1803               	skipnc
  4744     0EE2  0AA4               	incf	Lcd_Write_String_4bits@i+1,f
  4745     0EE3  3000               	movlw	0
  4746     0EE4  07A4               	addwf	Lcd_Write_String_4bits@i+1,f
  4747     0EE5                     l1633:
  4748     0EE5  0823               	movf	Lcd_Write_String_4bits@i,w
  4749     0EE6  0778               	addwf	Lcd_Write_String_4bits@a,w
  4750     0EE7  00A1               	movwf	??_Lcd_Write_String_4bits+1
  4751     0EE8  0879               	movf	Lcd_Write_String_4bits@a+1,w
  4752     0EE9  00A0               	movwf	??_Lcd_Write_String_4bits
  4753     0EEA  1803               	skipnc
  4754     0EEB  0AA0               	incf	??_Lcd_Write_String_4bits,f
  4755     0EEC  1FA3               	btfss	Lcd_Write_String_4bits@i,7
  4756     0EED  2EEF               	goto	u1030
  4757     0EEE  03A0               	decf	??_Lcd_Write_String_4bits,f
  4758     0EEF                     u1030:
  4759     0EEF  1283               	bcf	3,5	;RP0=0, select bank0
  4760     0EF0  1303               	bcf	3,6	;RP1=0, select bank0
  4761     0EF1  0820               	movf	??_Lcd_Write_String_4bits,w
  4762     0EF2  00A2               	movwf	??_Lcd_Write_String_4bits+2
  4763     0EF3  0822               	movf	??_Lcd_Write_String_4bits+2,w
  4764     0EF4  00FF               	movwf	btemp+1
  4765     0EF5  0821               	movf	??_Lcd_Write_String_4bits+1,w
  4766     0EF6  0084               	movwf	4
  4767     0EF7  120A  158A  2000  120A  158A  	fcall	stringtab
  4768     0EFC  3A00               	xorlw	0
  4769     0EFD  1D03               	skipz
  4770     0EFE  2F00               	goto	u1041
  4771     0EFF  2F01               	goto	u1040
  4772     0F00                     u1041:
  4773     0F00  2EC1               	goto	l1629
  4774     0F01                     u1040:
  4775     0F01                     l99:
  4776     0F01  0008               	return
  4777     0F02                     __end_of_Lcd_Write_String_4bits:
  4778                           
  4779                           	psect	text20
  4780     0E11                     __ptext20:	
  4781 ;; *************** function _Lcd_Write_Char_4bits *****************
  4782 ;; Defined at:
  4783 ;;		line 84 in file "configLCD_4bits.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  a               1    wreg     unsigned char 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  a               1    7[COMMON] unsigned char 
  4788 ;;  y               1    6[COMMON] unsigned char 
  4789 ;;  temp            1    5[COMMON] unsigned char 
  4790 ;; Return value:  Size  Location     Type
  4791 ;;                  1    wreg      void 
  4792 ;; Registers used:
  4793 ;;		wreg, status,2, status,0, pclath, cstack
  4794 ;; Tracked objects:
  4795 ;;		On entry : 0/0
  4796 ;;		On exit  : 0/0
  4797 ;;		Unchanged: 0/0
  4798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4799 ;;      Params:         0       0       0       0       0
  4800 ;;      Locals:         3       0       0       0       0
  4801 ;;      Temps:          1       0       0       0       0
  4802 ;;      Totals:         4       0       0       0       0
  4803 ;;Total ram usage:        4 bytes
  4804 ;; Hardware stack levels used: 1
  4805 ;; Hardware stack levels required when called: 2
  4806 ;; This function calls:
  4807 ;;		_Lcd_Port_4bits
  4808 ;; This function is called by:
  4809 ;;		_Lcd_Write_String_4bits
  4810 ;; This function uses a non-reentrant model
  4811 ;;
  4812                           
  4813     0E11                     _Lcd_Write_Char_4bits:	
  4814                           ;psect for function _Lcd_Write_Char_4bits
  4815                           
  4816                           
  4817                           ;incstack = 0
  4818                           ; Regs used in _Lcd_Write_Char_4bits: [wreg+status,2+status,0+pclath+cstack]
  4819                           ;Lcd_Write_Char_4bits@a stored from wreg
  4820     0E11  00F7               	movwf	Lcd_Write_Char_4bits@a
  4821     0E12                     l1523:
  4822                           
  4823                           ;configLCD_4bits.c: 85:     char temp, y;;configLCD_4bits.c: 86:     temp = a & 0x0F;
  4824     0E12  0877               	movf	Lcd_Write_Char_4bits@a,w
  4825     0E13  390F               	andlw	15
  4826     0E14  00F5               	movwf	Lcd_Write_Char_4bits@temp
  4827                           
  4828                           ;configLCD_4bits.c: 87:     y = a & 0xF0;
  4829     0E15  0877               	movf	Lcd_Write_Char_4bits@a,w
  4830     0E16  39F0               	andlw	240
  4831     0E17  00F6               	movwf	Lcd_Write_Char_4bits@y
  4832     0E18                     l1525:
  4833                           
  4834                           ;configLCD_4bits.c: 88:     PORTDbits.RD2 = 1;
  4835     0E18  1283               	bcf	3,5	;RP0=0, select bank0
  4836     0E19  1303               	bcf	3,6	;RP1=0, select bank0
  4837     0E1A  1508               	bsf	8,2	;volatile
  4838     0E1B                     l1527:
  4839                           
  4840                           ;configLCD_4bits.c: 89:     Lcd_Port_4bits(y >> 4);
  4841     0E1B  0876               	movf	Lcd_Write_Char_4bits@y,w
  4842     0E1C  00F4               	movwf	??_Lcd_Write_Char_4bits
  4843     0E1D  3004               	movlw	4
  4844     0E1E                     u825:
  4845     0E1E  1003               	clrc
  4846     0E1F  0CF4               	rrf	??_Lcd_Write_Char_4bits,f
  4847     0E20  3EFF               	addlw	-1
  4848     0E21  1D03               	skipz
  4849     0E22  2E1E               	goto	u825
  4850     0E23  0874               	movf	??_Lcd_Write_Char_4bits,w
  4851     0E24  120A  158A  258F  120A  158A  	fcall	_Lcd_Port_4bits
  4852     0E29                     l1529:
  4853                           
  4854                           ;configLCD_4bits.c: 90:     PORTDbits.RD3 = 1;
  4855     0E29  1283               	bcf	3,5	;RP0=0, select bank0
  4856     0E2A  1303               	bcf	3,6	;RP1=0, select bank0
  4857     0E2B  1588               	bsf	8,3	;volatile
  4858     0E2C                     l1531:
  4859                           
  4860                           ;configLCD_4bits.c: 91:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4861     0E2C  301A               	movlw	26
  4862     0E2D  00F4               	movwf	??_Lcd_Write_Char_4bits
  4863     0E2E                     u1797:
  4864     0E2E  0BF4               	decfsz	??_Lcd_Write_Char_4bits,f
  4865     0E2F  2E2E               	goto	u1797
  4866     0E30  0000               	nop
  4867     0E31                     l1533:
  4868                           
  4869                           ;configLCD_4bits.c: 92:     PORTDbits.RD3 = 0;
  4870     0E31  1283               	bcf	3,5	;RP0=0, select bank0
  4871     0E32  1303               	bcf	3,6	;RP1=0, select bank0
  4872     0E33  1188               	bcf	8,3	;volatile
  4873     0E34                     l1535:
  4874                           
  4875                           ;configLCD_4bits.c: 93:     Lcd_Port_4bits(temp);
  4876     0E34  0875               	movf	Lcd_Write_Char_4bits@temp,w
  4877     0E35  120A  158A  258F  120A  158A  	fcall	_Lcd_Port_4bits
  4878     0E3A                     l1537:
  4879                           
  4880                           ;configLCD_4bits.c: 94:     PORTDbits.RD3 = 1;
  4881     0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  4882     0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  4883     0E3C  1588               	bsf	8,3	;volatile
  4884     0E3D                     l1539:
  4885                           
  4886                           ;configLCD_4bits.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  4887     0E3D  301A               	movlw	26
  4888     0E3E  00F4               	movwf	??_Lcd_Write_Char_4bits
  4889     0E3F                     u1807:
  4890     0E3F  0BF4               	decfsz	??_Lcd_Write_Char_4bits,f
  4891     0E40  2E3F               	goto	u1807
  4892     0E41  0000               	nop
  4893     0E42                     l1541:
  4894                           
  4895                           ;configLCD_4bits.c: 96:     PORTDbits.RD3 = 0;
  4896     0E42  1283               	bcf	3,5	;RP0=0, select bank0
  4897     0E43  1303               	bcf	3,6	;RP1=0, select bank0
  4898     0E44  1188               	bcf	8,3	;volatile
  4899     0E45                     l93:
  4900     0E45  0008               	return
  4901     0E46                     __end_of_Lcd_Write_Char_4bits:
  4902                           
  4903                           	psect	text21
  4904     07AF                     __ptext21:	
  4905 ;; *************** function _Lcd_Set_Cursor_4bits *****************
  4906 ;; Defined at:
  4907 ;;		line 49 in file "configLCD_4bits.c"
  4908 ;; Parameters:    Size  Location     Type
  4909 ;;  a               1    wreg     unsigned char 
  4910 ;;  b               1    7[COMMON] unsigned char 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  a               1    0[BANK0 ] unsigned char 
  4913 ;;  temp            1    3[BANK0 ] unsigned char 
  4914 ;;  y               1    2[BANK0 ] unsigned char 
  4915 ;;  z               1    1[BANK0 ] unsigned char 
  4916 ;; Return value:  Size  Location     Type
  4917 ;;                  1    wreg      void 
  4918 ;; Registers used:
  4919 ;;		wreg, status,2, status,0, pclath, cstack
  4920 ;; Tracked objects:
  4921 ;;		On entry : 0/0
  4922 ;;		On exit  : 0/0
  4923 ;;		Unchanged: 0/0
  4924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4925 ;;      Params:         1       0       0       0       0
  4926 ;;      Locals:         0       4       0       0       0
  4927 ;;      Temps:          1       0       0       0       0
  4928 ;;      Totals:         2       4       0       0       0
  4929 ;;Total ram usage:        6 bytes
  4930 ;; Hardware stack levels used: 1
  4931 ;; Hardware stack levels required when called: 3
  4932 ;; This function calls:
  4933 ;;		_Lcd_Cmd_4bits
  4934 ;; This function is called by:
  4935 ;;		_main
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939     07AF                     _Lcd_Set_Cursor_4bits:	
  4940                           ;psect for function _Lcd_Set_Cursor_4bits
  4941                           
  4942                           
  4943                           ;incstack = 0
  4944                           ; Regs used in _Lcd_Set_Cursor_4bits: [wreg+status,2+status,0+pclath+cstack]
  4945                           ;Lcd_Set_Cursor_4bits@a stored from wreg
  4946     07AF  1283               	bcf	3,5	;RP0=0, select bank0
  4947     07B0  1303               	bcf	3,6	;RP1=0, select bank0
  4948     07B1  00A0               	movwf	Lcd_Set_Cursor_4bits@a
  4949     07B2                     l1607:
  4950                           
  4951                           ;configLCD_4bits.c: 50:     char temp, z, y;;configLCD_4bits.c: 51:     if (a == 1) {
  4952     07B2  0320               	decf	Lcd_Set_Cursor_4bits@a,w
  4953     07B3  1D03               	btfss	3,2
  4954     07B4  2FB6               	goto	u981
  4955     07B5  2FB7               	goto	u980
  4956     07B6                     u981:
  4957     07B6  2FD6               	goto	l1617
  4958     07B7                     u980:
  4959     07B7                     l1609:
  4960                           
  4961                           ;configLCD_4bits.c: 52:         temp = 0x80 + b - 1;
  4962     07B7  0877               	movf	Lcd_Set_Cursor_4bits@b,w
  4963     07B8  3E7F               	addlw	127
  4964     07B9  00A3               	movwf	Lcd_Set_Cursor_4bits@temp
  4965                           
  4966                           ;configLCD_4bits.c: 53:         z = temp >> 4;
  4967     07BA  0823               	movf	Lcd_Set_Cursor_4bits@temp,w
  4968     07BB  00F8               	movwf	??_Lcd_Set_Cursor_4bits
  4969     07BC  3004               	movlw	4
  4970     07BD                     u995:
  4971     07BD  1003               	clrc
  4972     07BE  0CF8               	rrf	??_Lcd_Set_Cursor_4bits,f
  4973     07BF  3EFF               	addlw	-1
  4974     07C0  1D03               	skipz
  4975     07C1  2FBD               	goto	u995
  4976     07C2  0878               	movf	??_Lcd_Set_Cursor_4bits,w
  4977     07C3  00A1               	movwf	Lcd_Set_Cursor_4bits@z
  4978     07C4                     l1611:
  4979                           
  4980                           ;configLCD_4bits.c: 54:         y = temp & 0x0F;
  4981     07C4  0823               	movf	Lcd_Set_Cursor_4bits@temp,w
  4982     07C5  390F               	andlw	15
  4983     07C6  00A2               	movwf	Lcd_Set_Cursor_4bits@y
  4984     07C7                     l1613:
  4985                           
  4986                           ;configLCD_4bits.c: 55:         Lcd_Cmd_4bits(z);
  4987     07C7  0821               	movf	Lcd_Set_Cursor_4bits@z,w
  4988     07C8  120A  158A  2556  120A  118A  	fcall	_Lcd_Cmd_4bits
  4989     07CD                     l1615:
  4990                           
  4991                           ;configLCD_4bits.c: 56:         Lcd_Cmd_4bits(y);
  4992     07CD  1283               	bcf	3,5	;RP0=0, select bank0
  4993     07CE  1303               	bcf	3,6	;RP1=0, select bank0
  4994     07CF  0822               	movf	Lcd_Set_Cursor_4bits@y,w
  4995     07D0  120A  158A  2556  120A  118A  	fcall	_Lcd_Cmd_4bits
  4996                           
  4997                           ;configLCD_4bits.c: 57:     } else if (a == 2) {
  4998     07D5  2FFA               	goto	l87
  4999     07D6                     l1617:
  5000     07D6  3002               	movlw	2
  5001     07D7  0620               	xorwf	Lcd_Set_Cursor_4bits@a,w
  5002     07D8  1D03               	btfss	3,2
  5003     07D9  2FDB               	goto	u1001
  5004     07DA  2FDC               	goto	u1000
  5005     07DB                     u1001:
  5006     07DB  2FFA               	goto	l87
  5007     07DC                     u1000:
  5008     07DC                     l1619:
  5009                           
  5010                           ;configLCD_4bits.c: 58:         temp = 0xC0 + b - 1;
  5011     07DC  0877               	movf	Lcd_Set_Cursor_4bits@b,w
  5012     07DD  3EBF               	addlw	191
  5013     07DE  00A3               	movwf	Lcd_Set_Cursor_4bits@temp
  5014                           
  5015                           ;configLCD_4bits.c: 59:         z = temp >> 4;
  5016     07DF  0823               	movf	Lcd_Set_Cursor_4bits@temp,w
  5017     07E0  00F8               	movwf	??_Lcd_Set_Cursor_4bits
  5018     07E1  3004               	movlw	4
  5019     07E2                     u1015:
  5020     07E2  1003               	clrc
  5021     07E3  0CF8               	rrf	??_Lcd_Set_Cursor_4bits,f
  5022     07E4  3EFF               	addlw	-1
  5023     07E5  1D03               	skipz
  5024     07E6  2FE2               	goto	u1015
  5025     07E7  0878               	movf	??_Lcd_Set_Cursor_4bits,w
  5026     07E8  00A1               	movwf	Lcd_Set_Cursor_4bits@z
  5027     07E9                     l1621:
  5028                           
  5029                           ;configLCD_4bits.c: 60:         y = temp & 0x0F;
  5030     07E9  0823               	movf	Lcd_Set_Cursor_4bits@temp,w
  5031     07EA  390F               	andlw	15
  5032     07EB  00A2               	movwf	Lcd_Set_Cursor_4bits@y
  5033     07EC                     l1623:
  5034                           
  5035                           ;configLCD_4bits.c: 61:         Lcd_Cmd_4bits(z);
  5036     07EC  0821               	movf	Lcd_Set_Cursor_4bits@z,w
  5037     07ED  120A  158A  2556  120A  118A  	fcall	_Lcd_Cmd_4bits
  5038     07F2                     l1625:
  5039                           
  5040                           ;configLCD_4bits.c: 62:         Lcd_Cmd_4bits(y);
  5041     07F2  1283               	bcf	3,5	;RP0=0, select bank0
  5042     07F3  1303               	bcf	3,6	;RP1=0, select bank0
  5043     07F4  0822               	movf	Lcd_Set_Cursor_4bits@y,w
  5044     07F5  120A  158A  2556  120A  118A  	fcall	_Lcd_Cmd_4bits
  5045     07FA                     l87:
  5046     07FA  0008               	return
  5047     07FB                     __end_of_Lcd_Set_Cursor_4bits:
  5048                           
  5049                           	psect	text22
  5050     0D1A                     __ptext22:	
  5051 ;; *************** function _Lcd_Clear_4bits *****************
  5052 ;; Defined at:
  5053 ;;		line 44 in file "configLCD_4bits.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;		None
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;		None
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg, status,2, status,0, pclath, cstack
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5067 ;;      Params:         0       0       0       0       0
  5068 ;;      Locals:         0       0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0
  5070 ;;      Totals:         0       0       0       0       0
  5071 ;;Total ram usage:        0 bytes
  5072 ;; Hardware stack levels used: 1
  5073 ;; Hardware stack levels required when called: 3
  5074 ;; This function calls:
  5075 ;;		_Lcd_Cmd_4bits
  5076 ;; This function is called by:
  5077 ;;		_main
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081     0D1A                     _Lcd_Clear_4bits:	
  5082                           ;psect for function _Lcd_Clear_4bits
  5083                           
  5084     0D1A                     l1605:	
  5085                           ;incstack = 0
  5086                           ; Regs used in _Lcd_Clear_4bits: [wreg+status,2+status,0+pclath+cstack]
  5087                           
  5088                           
  5089                           ;configLCD_4bits.c: 45:     Lcd_Cmd_4bits(0);
  5090     0D1A  3000               	movlw	0
  5091     0D1B  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  5092                           
  5093                           ;configLCD_4bits.c: 46:     Lcd_Cmd_4bits(1);
  5094     0D20  3001               	movlw	1
  5095     0D21  120A  158A  2556  120A  158A  	fcall	_Lcd_Cmd_4bits
  5096     0D26                     l81:
  5097     0D26  0008               	return
  5098     0D27                     __end_of_Lcd_Clear_4bits:
  5099                           
  5100                           	psect	text23
  5101     0D56                     __ptext23:	
  5102 ;; *************** function _Lcd_Cmd_4bits *****************
  5103 ;; Defined at:
  5104 ;;		line 36 in file "configLCD_4bits.c"
  5105 ;; Parameters:    Size  Location     Type
  5106 ;;  a               1    wreg     unsigned char 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  a               1    6[COMMON] unsigned char 
  5109 ;; Return value:  Size  Location     Type
  5110 ;;                  1    wreg      void 
  5111 ;; Registers used:
  5112 ;;		wreg, status,2, status,0, pclath, cstack
  5113 ;; Tracked objects:
  5114 ;;		On entry : 0/0
  5115 ;;		On exit  : 0/0
  5116 ;;		Unchanged: 0/0
  5117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5118 ;;      Params:         0       0       0       0       0
  5119 ;;      Locals:         1       0       0       0       0
  5120 ;;      Temps:          2       0       0       0       0
  5121 ;;      Totals:         3       0       0       0       0
  5122 ;;Total ram usage:        3 bytes
  5123 ;; Hardware stack levels used: 1
  5124 ;; Hardware stack levels required when called: 2
  5125 ;; This function calls:
  5126 ;;		_Lcd_Port_4bits
  5127 ;; This function is called by:
  5128 ;;		_Lcd_Clear_4bits
  5129 ;;		_Lcd_Set_Cursor_4bits
  5130 ;;		_Lcd_Init_4bits
  5131 ;;		_Lcd_Shift_Right_4bits
  5132 ;;		_Lcd_Shift_Left_4bits
  5133 ;; This function uses a non-reentrant model
  5134 ;;
  5135                           
  5136     0D56                     _Lcd_Cmd_4bits:	
  5137                           ;psect for function _Lcd_Cmd_4bits
  5138                           
  5139                           
  5140                           ;incstack = 0
  5141                           ; Regs used in _Lcd_Cmd_4bits: [wreg+status,2+status,0+pclath+cstack]
  5142                           ;Lcd_Cmd_4bits@a stored from wreg
  5143     0D56  00F6               	movwf	Lcd_Cmd_4bits@a
  5144     0D57                     l1431:
  5145                           
  5146                           ;configLCD_4bits.c: 37:     PORTDbits.RD2 = 0;
  5147     0D57  1283               	bcf	3,5	;RP0=0, select bank0
  5148     0D58  1303               	bcf	3,6	;RP1=0, select bank0
  5149     0D59  1108               	bcf	8,2	;volatile
  5150     0D5A                     l1433:
  5151                           
  5152                           ;configLCD_4bits.c: 38:     Lcd_Port_4bits(a);
  5153     0D5A  0876               	movf	Lcd_Cmd_4bits@a,w
  5154     0D5B  120A  158A  258F  120A  158A  	fcall	_Lcd_Port_4bits
  5155     0D60                     l1435:
  5156                           
  5157                           ;configLCD_4bits.c: 39:     PORTDbits.RD3 = 1;
  5158     0D60  1283               	bcf	3,5	;RP0=0, select bank0
  5159     0D61  1303               	bcf	3,6	;RP1=0, select bank0
  5160     0D62  1588               	bsf	8,3	;volatile
  5161     0D63                     l1437:
  5162                           
  5163                           ;configLCD_4bits.c: 40:     _delay((unsigned long)((4)*(8000000/4000.0)));
  5164     0D63  300B               	movlw	11
  5165     0D64  00F5               	movwf	??_Lcd_Cmd_4bits+1
  5166     0D65  3062               	movlw	98
  5167     0D66  00F4               	movwf	??_Lcd_Cmd_4bits
  5168     0D67                     u1817:
  5169     0D67  0BF4               	decfsz	??_Lcd_Cmd_4bits,f
  5170     0D68  2D67               	goto	u1817
  5171     0D69  0BF5               	decfsz	??_Lcd_Cmd_4bits+1,f
  5172     0D6A  2D67               	goto	u1817
  5173     0D6B  0000               	nop
  5174     0D6C                     l1439:
  5175                           
  5176                           ;configLCD_4bits.c: 41:     PORTDbits.RD3 = 0;
  5177     0D6C  1283               	bcf	3,5	;RP0=0, select bank0
  5178     0D6D  1303               	bcf	3,6	;RP1=0, select bank0
  5179     0D6E  1188               	bcf	8,3	;volatile
  5180     0D6F                     l78:
  5181     0D6F  0008               	return
  5182     0D70                     __end_of_Lcd_Cmd_4bits:
  5183                           
  5184                           	psect	text24
  5185     0D8F                     __ptext24:	
  5186 ;; *************** function _Lcd_Port_4bits *****************
  5187 ;; Defined at:
  5188 ;;		line 14 in file "configLCD_4bits.c"
  5189 ;; Parameters:    Size  Location     Type
  5190 ;;  a               1    wreg     unsigned char 
  5191 ;; Auto vars:     Size  Location     Type
  5192 ;;  a               1    3[COMMON] unsigned char 
  5193 ;; Return value:  Size  Location     Type
  5194 ;;                  1    wreg      void 
  5195 ;; Registers used:
  5196 ;;		wreg
  5197 ;; Tracked objects:
  5198 ;;		On entry : 0/0
  5199 ;;		On exit  : 0/0
  5200 ;;		Unchanged: 0/0
  5201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5202 ;;      Params:         0       0       0       0       0
  5203 ;;      Locals:         1       0       0       0       0
  5204 ;;      Temps:          0       0       0       0       0
  5205 ;;      Totals:         1       0       0       0       0
  5206 ;;Total ram usage:        1 bytes
  5207 ;; Hardware stack levels used: 1
  5208 ;; Hardware stack levels required when called: 1
  5209 ;; This function calls:
  5210 ;;		Nothing
  5211 ;; This function is called by:
  5212 ;;		_Lcd_Cmd_4bits
  5213 ;;		_Lcd_Init_4bits
  5214 ;;		_Lcd_Write_Char_4bits
  5215 ;; This function uses a non-reentrant model
  5216 ;;
  5217                           
  5218     0D8F                     _Lcd_Port_4bits:	
  5219                           ;psect for function _Lcd_Port_4bits
  5220                           
  5221                           
  5222                           ;incstack = 0
  5223                           ; Regs used in _Lcd_Port_4bits: [wreg]
  5224                           ;Lcd_Port_4bits@a stored from wreg
  5225     0D8F  00F3               	movwf	Lcd_Port_4bits@a
  5226     0D90                     l1417:
  5227                           
  5228                           ;configLCD_4bits.c: 15:     if (a & 1)
  5229     0D90  1C73               	btfss	Lcd_Port_4bits@a,0
  5230     0D91  2D93               	goto	u671
  5231     0D92  2D94               	goto	u670
  5232     0D93                     u671:
  5233     0D93  2D98               	goto	l67
  5234     0D94                     u670:
  5235     0D94                     l1419:
  5236                           
  5237                           ;configLCD_4bits.c: 16:         PORTDbits.RD4 = 1;
  5238     0D94  1283               	bcf	3,5	;RP0=0, select bank0
  5239     0D95  1303               	bcf	3,6	;RP1=0, select bank0
  5240     0D96  1608               	bsf	8,4	;volatile
  5241     0D97  2D9B               	goto	l68
  5242     0D98                     l67:	
  5243                           ;configLCD_4bits.c: 17:     else
  5244                           
  5245                           
  5246                           ;configLCD_4bits.c: 18:         PORTDbits.RD4 = 0;
  5247     0D98  1283               	bcf	3,5	;RP0=0, select bank0
  5248     0D99  1303               	bcf	3,6	;RP1=0, select bank0
  5249     0D9A  1208               	bcf	8,4	;volatile
  5250     0D9B                     l68:
  5251                           
  5252                           ;configLCD_4bits.c: 20:     if (a & 2)
  5253     0D9B  1CF3               	btfss	Lcd_Port_4bits@a,1
  5254     0D9C  2D9E               	goto	u681
  5255     0D9D  2D9F               	goto	u680
  5256     0D9E                     u681:
  5257     0D9E  2DA1               	goto	l69
  5258     0D9F                     u680:
  5259     0D9F                     l1421:
  5260                           
  5261                           ;configLCD_4bits.c: 21:         PORTDbits.RD5 = 1;
  5262     0D9F  1688               	bsf	8,5	;volatile
  5263     0DA0  2DA2               	goto	l70
  5264     0DA1                     l69:	
  5265                           ;configLCD_4bits.c: 22:     else
  5266                           
  5267                           
  5268                           ;configLCD_4bits.c: 23:         PORTDbits.RD5 = 0;
  5269     0DA1  1288               	bcf	8,5	;volatile
  5270     0DA2                     l70:
  5271                           
  5272                           ;configLCD_4bits.c: 25:     if (a & 4)
  5273     0DA2  1D73               	btfss	Lcd_Port_4bits@a,2
  5274     0DA3  2DA5               	goto	u691
  5275     0DA4  2DA6               	goto	u690
  5276     0DA5                     u691:
  5277     0DA5  2DA8               	goto	l71
  5278     0DA6                     u690:
  5279     0DA6                     l1423:
  5280                           
  5281                           ;configLCD_4bits.c: 26:         PORTDbits.RD6 = 1;
  5282     0DA6  1708               	bsf	8,6	;volatile
  5283     0DA7  2DA9               	goto	l72
  5284     0DA8                     l71:	
  5285                           ;configLCD_4bits.c: 27:     else
  5286                           
  5287                           
  5288                           ;configLCD_4bits.c: 28:         PORTDbits.RD6 = 0;
  5289     0DA8  1308               	bcf	8,6	;volatile
  5290     0DA9                     l72:
  5291                           
  5292                           ;configLCD_4bits.c: 30:     if (a & 8)
  5293     0DA9  1DF3               	btfss	Lcd_Port_4bits@a,3
  5294     0DAA  2DAC               	goto	u701
  5295     0DAB  2DAD               	goto	u700
  5296     0DAC                     u701:
  5297     0DAC  2DAF               	goto	l73
  5298     0DAD                     u700:
  5299     0DAD                     l1425:
  5300                           
  5301                           ;configLCD_4bits.c: 31:         PORTDbits.RD7 = 1;
  5302     0DAD  1788               	bsf	8,7	;volatile
  5303     0DAE  2DB0               	goto	l75
  5304     0DAF                     l73:	
  5305                           ;configLCD_4bits.c: 32:     else
  5306                           
  5307                           
  5308                           ;configLCD_4bits.c: 33:         PORTDbits.RD7 = 0;
  5309     0DAF  1388               	bcf	8,7	;volatile
  5310     0DB0                     l75:
  5311     0DB0  0008               	return
  5312     0DB1                     __end_of_Lcd_Port_4bits:
  5313                           
  5314                           	psect	text25
  5315     0D70                     __ptext25:	
  5316 ;; *************** function _ISR *****************
  5317 ;; Defined at:
  5318 ;;		line 63 in file "main_M.c"
  5319 ;; Parameters:    Size  Location     Type
  5320 ;;		None
  5321 ;; Auto vars:     Size  Location     Type
  5322 ;;		None
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  1    wreg      void 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5332 ;;      Params:         0       0       0       0       0
  5333 ;;      Locals:         0       0       0       0       0
  5334 ;;      Temps:          3       0       0       0       0
  5335 ;;      Totals:         3       0       0       0       0
  5336 ;;Total ram usage:        3 bytes
  5337 ;; Hardware stack levels used: 1
  5338 ;; This function calls:
  5339 ;;		Nothing
  5340 ;; This function is called by:
  5341 ;;		Interrupt level 1
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345     0D70                     _ISR:	
  5346                           ;psect for function _ISR
  5347                           
  5348     0D70                     i1l1815:
  5349                           
  5350                           ;main_M.c: 65:     if (INTCONbits.RBIF == 1)
  5351     0D70  1C0B               	btfss	11,0	;volatile
  5352     0D71  2D73               	goto	u130_21
  5353     0D72  2D74               	goto	u130_20
  5354     0D73                     u130_21:
  5355     0D73  2D88               	goto	i1l171
  5356     0D74                     u130_20:
  5357     0D74                     i1l1817:
  5358                           
  5359                           ;main_M.c: 66:     {;main_M.c: 67:         if(!PORTBbits.RB0)
  5360     0D74  1283               	bcf	3,5	;RP0=0, select bank0
  5361     0D75  1303               	bcf	3,6	;RP1=0, select bank0
  5362     0D76  1806               	btfsc	6,0	;volatile
  5363     0D77  2D79               	goto	u131_21
  5364     0D78  2D7A               	goto	u131_20
  5365     0D79                     u131_21:
  5366     0D79  2D87               	goto	i1l1823
  5367     0D7A                     u131_20:
  5368     0D7A                     i1l1819:
  5369                           
  5370                           ;main_M.c: 68:         {;main_M.c: 69:             modo++;
  5371     0D7A  3001               	movlw	1
  5372     0D7B  00F0               	movwf	??_ISR
  5373     0D7C  0870               	movf	??_ISR,w
  5374     0D7D  1683               	bsf	3,5	;RP0=1, select bank3
  5375     0D7E  1703               	bsf	3,6	;RP1=1, select bank3
  5376     0D7F  07E9               	addwf	_modo^(0+384),f
  5377                           
  5378                           ;main_M.c: 71:             if(modo == 6)
  5379     0D80  3006               	movlw	6
  5380     0D81  0669               	xorwf	_modo^(0+384),w
  5381     0D82  1D03               	btfss	3,2
  5382     0D83  2D85               	goto	u132_21
  5383     0D84  2D86               	goto	u132_20
  5384     0D85                     u132_21:
  5385     0D85  2D87               	goto	i1l1823
  5386     0D86                     u132_20:
  5387     0D86                     i1l1821:
  5388                           
  5389                           ;main_M.c: 72:             {;main_M.c: 73:             modo = 0;
  5390     0D86  01E9               	clrf	_modo^(0+384)
  5391     0D87                     i1l1823:
  5392                           
  5393                           ;main_M.c: 76:         INTCONbits.RBIF = 0;
  5394     0D87  100B               	bcf	11,0	;volatile
  5395     0D88                     i1l171:
  5396     0D88  0872               	movf	??_ISR+2,w
  5397     0D89  008A               	movwf	10
  5398     0D8A  0E71               	swapf	??_ISR+1,w
  5399     0D8B  0083               	movwf	3
  5400     0D8C  0EFE               	swapf	btemp,f
  5401     0D8D  0E7E               	swapf	btemp,w
  5402     0D8E  0009               	retfie
  5403     0D8F                     __end_of_ISR:
  5404     007E                     btemp	set	126	;btemp
  5405     007E                     wtemp0	set	126
  5406                           
  5407                           	psect	intentry
  5408     0004                     __pintentry:	
  5409                           ;incstack = 0
  5410                           ; Regs used in _ISR: [wreg+status,2+status,0]
  5411                           
  5412     0004                     interrupt_function:
  5413     007E                     saved_w	set	btemp
  5414     0004  00FE               	movwf	btemp
  5415     0005  0E03               	swapf	3,w
  5416     0006  00F1               	movwf	??_ISR+1
  5417     0007  080A               	movf	10,w
  5418     0008  00F2               	movwf	??_ISR+2
  5419     0009  120A  158A  2D70   	ljmp	_ISR
  5420                           
  5421                           	psect	idloc
  5422                           
  5423                           ;Config register IDLOC0 @ 0x2000
  5424                           ;	unspecified, using default values
  5425     2000                     	org	8192
  5426     2000  3FFF               	dw	16383
  5427                           
  5428                           ;Config register IDLOC1 @ 0x2001
  5429                           ;	unspecified, using default values
  5430     2001                     	org	8193
  5431     2001  3FFF               	dw	16383
  5432                           
  5433                           ;Config register IDLOC2 @ 0x2002
  5434                           ;	unspecified, using default values
  5435     2002                     	org	8194
  5436     2002  3FFF               	dw	16383
  5437                           
  5438                           ;Config register IDLOC3 @ 0x2003
  5439                           ;	unspecified, using default values
  5440     2003                     	org	8195
  5441     2003  3FFF               	dw	16383
  5442                           
  5443                           	psect	config
  5444                           
  5445                           ;Config register CONFIG1 @ 0x2007
  5446                           ;	Oscillator Selection bits
  5447                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  5448                           ;	Watchdog Timer Enable bit
  5449                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  5450                           ;	Power-up Timer Enable bit
  5451                           ;	PWRTE = OFF, PWRT disabled
  5452                           ;	RE3/MCLR pin function select bit
  5453                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  5454                           ;	Code Protection bit
  5455                           ;	CP = OFF, Program memory code protection is disabled
  5456                           ;	Data Code Protection bit
  5457                           ;	CPD = OFF, Data memory code protection is disabled
  5458                           ;	Brown Out Reset Selection bits
  5459                           ;	BOREN = OFF, BOR disabled
  5460                           ;	Internal External Switchover bit
  5461                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  5462                           ;	Fail-Safe Clock Monitor Enabled bit
  5463                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  5464                           ;	Low Voltage Programming Enable bit
  5465                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  5466                           ;	In-Circuit Debugger Mode bit
  5467                           ;	DEBUG = 0x1, unprogramme  5468     2007                     	org	8199
  5469     2007  20D4               	dw	8404
  5470                           
  5471                           ;Config register CONFIG2 @ 0x2008
  5472                           ;	Brown-out Reset Selection bit
  5473                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  5474                           ;	Flash Program Memory Self Write Enable bits
  5475                           ;	WRT = OFF, Write protection off
  5476     2008                     	org	8200
  5477     2008  3FFF               	dw	16383

Data Sizes:
    Strings     9
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     23      23
    BANK1            80      0       0
    BANK3            96     89      90
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_22(CODE[3]), STR_21(CODE[3]), STR_20(CODE[3]), STR_19(CODE[3]), 
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[3]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[3]), 
		 -> STR_10(CODE[3]), STR_9(CODE[3]), STR_8(CODE[3]), STR_7(CODE[3]), 
		 -> STR_6(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 9
		 -> main@stringAO(BANK3[9]), main@stringMES(BANK3[9]), main@stringDIA(BANK3[9]), main@stringHOR(BANK3[9]), 
		 -> main@stringMIN(BANK3[9]), main@stringSEG(BANK3[9]), main@ADC1(BANK3[9]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    Lcd_Write_String_4bits@a	PTR unsigned char  size(2) Largest target is 9
		 -> main@stringAO(BANK3[9]), main@stringMES(BANK3[9]), main@stringDIA(BANK3[9]), main@stringHOR(BANK3[9]), 
		 -> main@stringMIN(BANK3[9]), main@stringSEG(BANK3[9]), main@ADC1(BANK3[9]), STR_5(CODE[2]), 
		 -> STR_4(CODE[2]), STR_3(CODE[2]), STR_2(CODE[2]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String_4bits
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_Lcd_Init_4bits
    _Lcd_Init_4bits->_Lcd_Cmd_4bits
    _I2C_Master_Init->___lldiv
    _leerRTC->_I2C_Master_Read
    ___awmod->___awdiv
    _Lcd_Write_String_4bits->_Lcd_Write_Char_4bits
    _Lcd_Write_Char_4bits->_Lcd_Port_4bits
    _Lcd_Set_Cursor_4bits->_Lcd_Cmd_4bits
    _Lcd_Clear_4bits->_Lcd_Cmd_4bits
    _Lcd_Cmd_4bits->_Lcd_Port_4bits

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    ___awmod->___awdiv

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                92    92      0   18389
                                             20 BANK0      3     3      0
                                              0 BANK3     89    89      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                    _Lcd_Clear_4bits
               _Lcd_Set_Cursor_4bits
             _Lcd_Write_String_4bits
                            ___awdiv
                            ___awmod
                            _leerRTC
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21    18      3    3541
                                              7 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     412
                                              8 COMMON     2     2      0
                                              3 BANK0      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     762
                    _I2C_Master_Init
                     _Lcd_Init_4bits
                        _setupINTOSC
 ---------------------------------------------------------------------------------
 (2) _setupINTOSC                                          2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init_4bits                                       2     2      0     198
                                              7 COMMON     2     2      0
                      _Lcd_Cmd_4bits
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _leerRTC                                              5     5      0    1352
                                              0 BANK0      5     5      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     226
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     751
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     245
                                              3 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    3313
                                              8 COMMON     1     1      0
                                              4 BANK0      6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1972
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String_4bits                               7     5      2    1940
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
               _Lcd_Write_Char_4bits
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char_4bits                                 4     4      0     178
                                              4 COMMON     4     4      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor_4bits                                 6     5      1    2052
                                              7 COMMON     2     1      1
                                              0 BANK0      4     4      0
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear_4bits                                      0     0      0     110
                      _Lcd_Cmd_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd_4bits                                        3     3      0     110
                                              4 COMMON     3     3      0
                     _Lcd_Port_4bits
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port_4bits                                       1     1      0      88
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _Lcd_Clear_4bits
     _Lcd_Cmd_4bits
       _Lcd_Port_4bits
   _Lcd_Set_Cursor_4bits
     _Lcd_Cmd_4bits
   _Lcd_Write_String_4bits
     _Lcd_Write_Char_4bits
       _Lcd_Port_4bits
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   _leerRTC
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___bmul
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Init_4bits
       _Lcd_Cmd_4bits
       _Lcd_Port_4bits
     _setupINTOSC
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      17       5       28.7%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60     59      5A       9       93.8%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7C      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Thu Feb 16 11:21:46 2023

                               _D 007A                                 pc 0002                    ___bmul@product 0075  
                              l32 0D27                                l41 0CFD                                l50 0DD6  
                              l35 0D33                                l51 0DD9                                l52 0DDE  
                              l44 0D0F                                l60 0D40                                l29 0E7F  
                              l70 0DA2                                l38 0D06                                l71 0DA8  
                              l47 0D19                                l72 0DA9                                l73 0DAF  
                              l81 0D26                                l90 0FFF                                l75 0DB0  
                              l67 0D98                                l68 0D9B                                l69 0DA1  
                              l93 0E45                                l78 0D6F                                l87 07FA  
                              l99 0F01                      ___awdiv@sign 0021                                fsr 0004  
                             l309 0675                               l182 0E10                               l339 0D55  
                             l349 0746                               l199 07AE                               l466 06DE  
                             l479 0FA2                               l585 0F47                               l595 0EBB  
                             _GIE 005F                               u700 0DAD                               _ISR 0D70  
                             u701 0DAC                               u670 0D94                               u671 0D93  
                             u680 0D9F                               u681 0D9E                               u825 0E1E  
                             u690 0DA6                               u691 0DA5                               u980 07B7  
                             u981 07B6                               u995 07BD                               fsr0 0004  
                             indf 0000                      ___awmod@sign 0029                       leerRTC@DATO 0024  
                            ?_ISR 0070                              l2001 0D27                              l2003 0D2D  
                            l2011 0701                              l2021 072F                              l2013 0705  
                            l2005 06DF                              l2101 0F2F                              l2023 0738  
                            l2015 070E                              l2007 06F1                              l2031 0E4A  
                            l2103 0F35                              l2041 0CFE                              l2017 0720  
                            l2009 06F4                              l2025 073E                              l2033 0E4D  
                            l2105 0F36                              l2121 0E96                              l2113 0E80  
                            l2201 061E                              l2043 0D03                              l2051 0D0C  
                            l2019 072E                              l2035 0E7C                              l2107 0F3D  
                            l2123 0E9A                              l2115 0E88                              l2131 0EB7  
                            l2203 0621                              l2211 0661                              l1421 0D9F  
                            l2061 0DBE                              l2045 0CF5                              l2053 0D10  
                            l2221 074A                              l2037 0E7D                              l2029 0E46  
                            l2141 0DE9                              l2109 0F43                              l2125 0EA4  
                            l2117 0E8B                              l2205 064F                              l2213 0671  
                            l2301 0126                              l1423 0DA6                              l1431 0D57  
                            l2231 0F4B                              l2063 0DC7                              l2047 0CFA  
                            l2055 0D15                              l2223 0785                              l2039 0E7E  
                            l1511 0D3F                              l2151 0DF2                              l2143 0DEA  
                            l2135 0DDF                              l2127 0EAA                              l2119 0E92  
                            l2207 0654                              l2311 017B                              l2303 012F  
                            l1425 0DAD                              l1417 0D90                              l1433 0D5A  
                            l2241 0F5F                              l2233 0F4F                              l2065 0DCC  
                            l2057 0DB1                              l2049 0D07                              l2081 0D4D  
                            l2073 0D42                              l2225 0794                              l1521 0FC7  
                            l1513 0FA3                              l2161 0E0C                              l2153 0DF3  
                            l2145 0DEB                              l2137 0DE6                              l2129 0EB1  
                            l2209 0658                              l2401 0552                              l2321 01F1  
                            l2313 0184                              l2305 014C                              l1419 0D94  
                            l1435 0D60                              l1611 07C4                              l1531 0E2C  
                            l1523 0E12                              l2251 0F77                              l2243 0F65  
                            l2235 0F54                              l2067 0DD2                              l2059 0DB6  
                            l2083 0D54                              l2075 0D43                              l1515 0FA9  
                            l2163 0E0D                              l2155 0DF4                              l2147 0DEC  
                            l2139 0DE8                              l2091 0F0C                              l2171 05B9  
                            l2411 0589                              l2403 055A                              l2331 0267  
                            l2323 0206                              l2315 01AF                              l2307 0155  
                            l1437 0D63                              l1605 0D1A                              l1621 07E9  
                            l1613 07C7                              l1541 0E42                              l1533 0E31  
                            l1525 0E18                              l2261 0F99                              l2253 0F81  
                            l2245 0F68                              l2237 0F56                              l2229 0F48  
                            l2069 0DDA                              l2077 0D47                              l1517 0FB2  
                            l1509 0D35                              l2165 0E0E                              l2157 0E01  
                            l2149 0DEF                              l2093 0F0F                              l2173 05BF  
                            l2413 059E                              l2405 0563                              l2341 02BC  
                            l2333 0284                              l2325 0217                              l2317 01E0  
                            l2309 0172                              l1439 0D6C                              l1623 07EC  
                            l1615 07CD                              l1607 07B2                              l1535 0E34  
                            l1527 0E1B                              l1631 0EDD                              l2263 0F9E  
                            l2255 0F87                              l2247 0F6F                              l2239 0F5A  
                            l2079 0D4B                              l1519 0FC1                              l2167 0E0F  
                            l2159 0E07                              l2095 0F16                              l2087 0F02  
                            l2183 05D0                              l2175 05C4                              l2415 05A6  
                            l2407 0578                              l2351 033E                              l2343 02E7  
                            l2335 028D                              l2327 0220                              l2319 01E8  
                            l2271 0032                              l1625 07F2                              l1609 07B7  
                            l1617 07D6                              l1537 0E3A                              l1529 0E29  
                            l1633 0EE5                              l2257 0F8E                              l2249 0F73  
                            l2097 0F1A                              l2089 0F06                              l2441 05E2  
                            l2185 05EA                              l2177 05C9                              l2169 05B6  
                            l2409 0580                              l2361 03BC                              l2353 034F  
                            l2345 0318                              l2337 02AA                              l2329 024B  
                            l2281 0076                              l2273 0043                              l1619 07DC  
                            l1539 0E3D                              l1627 0EBC                              l1731 0679  
                            l2259 0F94                              l2099 0F1E                              l2195 05F8  
                            l2187 05F2                              l2179 05CB                              l2371 041F  
                            l2363 03C5                              l2355 0358                              l2347 0320  
                            l2339 02B3                              l2291 009B                              l2283 007C  
                            l2275 004B                              l2267 0017                              l1629 0EC1  
                            l1741 068D                              l1733 067D                              l2189 05F6  
                            l2381 0487                              l2373 0450                              l2365 03E2  
                            l2357 0383                              l2349 0329                              l2293 00AA  
                            l2285 0081                              l2277 005C                              l2269 0029  
                            l1751 06A3                              l1743 0691                              l1735 0682  
                            l2199 0614                              l2391 04FB                              l2383 0490  
                            l2375 0458                              l2367 03EB                              l2359 039F  
                            l2295 00C2                              l2287 008A                              l2279 0065  
                            l1761 06C3                              l1753 06A7                              l1745 0693  
                            l1737 0684                              l1729 0676                              l2393 0517  
                            l2385 0492                              l2377 0461                              l2369 03F4  
                            l2297 00ED                              l2289 0096                              l1763 06CA  
                            l1755 06AB                              l1747 0699                              l1739 0688  
                            l2395 052C                              l2387 04AA                              l2379 0476  
                            l2299 0109                              l1757 06BC                              l1749 069C  
                            l1765 06D0                              l2397 0534                              l2389 04D0  
                            l1767 06D5                              l1759 06C2                              l2399 053D  
                            l1769 06DA                              STR_1 081A                              STR_2 081C  
                            STR_3 081C                              STR_4 0821                              STR_5 0821  
                            STR_6 081E                              STR_7 081E                              STR_8 081E  
                            STR_9 081E                              u1000 07DC                              u1001 07DB  
                            u1020 0ECB                              u1030 0EEF                              u1110 067D  
                            u1015 07E2                              u1111 067C                              u1040 0F01  
                            u1200 06D5                              u1120 0688                              u1041 0F00  
                            u1201 06D4                              u1121 0687                              u1130 0699  
                            u1131 0698                              u1150 06AB                              u1151 06AA  
                            u1145 069D                              u1170 06BC                              u1330 0D2D  
                            u1410 073E                              u1171 06BB                              u1331 0D2C  
                            u1411 073D                              u1340 0D33                              u1420 0E5D  
                            u1500 0F2F                              _IOCB 0096                              u1165 06AC  
                            u1341 0D32                              u1405 0730                              u1501 0F2E  
                            u1190 06D0                              u1430 0DD2                              u1350 06F1  
                            u1191 06CF                              u1175 06B8                              u1431 0DD1  
                            u1351 06F0                              u1440 0D47                              u1520 0F43  
                            u1600 0613                              u1185 06C4                              u1441 0D46  
                            u1425 0E58                              u1521 0F42                              u1505 0F2B  
                            u1601 0612                              u1450 0D54                              u1370 0705  
                            u1530 0E88                              u1610 061E                              u1451 0D53  
                            u1371 0704                              u1515 0F37                              u1531 0E87  
                            u1611 061D                              u1700 0F81                              u1460 0F0C  
                            u1620 0661                              u1701 0F80                              u1365 06F6  
                            u1461 0F0B                              u1621 0660                              u1605 060F  
                            u1390 0720                              u1550 0E9A                              u1630 0671  
                            u1391 071F                              u1551 0E99                              u1631 0670  
                            u1720 0F94                              u1480 0F1E                              u1560 0EA4  
                            u1721 0F93                              u1705 0F7D                              u1385 0707  
                            u1481 0F1D                              u1561 0EA3                              u1545 0E8C  
                            u1730 0F99                              u1650 0F4F                              u1731 0F98  
                            u1715 0F88                              u1651 0F4E                              u1395 071C  
                            u1475 0F10                              u1660 0F5A                              u1580 0EB7  
                            u1661 0F59                              u1645 079E                              u1581 0EB6  
                            u1565 0EA0                              u1670 0F65                              u1590 05BF  
                            u1807 0E3F                              u1671 0F64                              u1495 0F1F  
                            u1575 0EAB                              u1591 05BE                              u1817 0D67  
                            u1690 0F77                              u1691 0F76                              u1747 00A3  
                            u1685 0F69                              u1757 0FAD                              u1767 0FBC  
                            u1777 0FCB                              u1787 078D                              _PEIE 005E  
                            u1797 0E2E  __end_of_I2C_Master_RepeatedStart 0CFE                              _main 0017  
          _Lcd_Write_String_4bits 0EBC                              _modo 01E9                              btemp 007E  
                            start 000C                 ___bmul@multiplier 0076                             ??_ISR 0070  
                ?_I2C_Master_Init 0028                  ?_I2C_Master_Read 0073                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                             ?_main 0070                 ??_Lcd_Clear_4bits 0077  
                 __end_of___awdiv 06DF                             STR_10 081E                             STR_11 081E  
                           STR_20 081E                             STR_12 081E                             STR_21 081E  
                           STR_13 081E                             STR_22 081E                             STR_14 081E  
                           STR_15 081E                             STR_16 081E                             STR_17 081E  
                           STR_18 081E                             STR_19 081E                   __end_of___awmod 0FA3  
                           _ANSEL 0188                   __end_of___lldiv 0747                   ___awdiv@divisor 0073  
                 __end_of___lwdiv 0F48                             i1l171 0D88                   __end_of___lwmod 0EBC  
                 ___awdiv@counter 0020                             _PORTA 0005                             _PORTB 0006  
                           _PORTD 0008                             _TRISA 0085                             _TRISB 0086  
                           _TRISD 0088                             _SSPIE 0463                             _SSPIF 0063  
           __end_of_Lcd_Cmd_4bits 0D70                   __end_of_leerRTC 07AF                   __end_of_dpowers 081A  
                           _setup 0DDF                             pclath 000A                             status 0003  
                           wtemp0 007E                   __end_of_sprintf 0676                      main@stringAO 01C6  
                 __initialization 000F                      __end_of_main 05B3                            ??_main 0034  
               ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0073                ??_I2C_Master_Start 0073  
              ??_I2C_Master_Write 0075                  ___awdiv@dividend 0075                            ?_setup 0070  
                          _ANSELH 0189                            i1l1821 0D86                            i1l1823 0D87  
                          i1l1815 0D70                            u130_20 0D74                            i1l1817 0D74  
                          u130_21 0D73                            i1l1819 0D7A                            u131_20 0D7A  
                          u131_21 0D79                            u132_20 0D86                            u132_21 0D85  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013          Lcd_Write_Char_4bits@temp 0075  
        _I2C_Master_RepeatedStart 0CF5                            ___bmul 0D41                         ??___awdiv 0077  
                       ??___awmod 0078                         ??___lldiv 0073                         ??___lwdiv 0077  
                       ??___lwmod 0078                  ___awdiv@quotient 0022                   ___awmod@divisor 0024  
                 ___awmod@counter 0028                            main@AO 01E8                         ??_leerRTC 0020  
                    ?_setupINTOSC 0070                            saved_w 007E                    _Lcd_Init_4bits 0FA3  
                       ??_sprintf 002A                     main@stringDIA 01AB                     main@stringHOR 01A2  
                   main@stringMES 01B4                     main@stringMIN 0199                     main@stringSEG 0190  
         __end_of__initialization 0013               ___bmul@multiplicand 0073                    __pcstackCOMMON 0070  
           Lcd_Write_Char_4bits@a 0077             Lcd_Write_Char_4bits@y 0076                     __end_of_setup 0E11  
                  _OPTION_REGbits 0081            __end_of_Lcd_Init_4bits 1000           ?_Lcd_Write_String_4bits 0078  
                         ??_setup 0079                        __pbssBANK3 01E9                    _Lcd_Port_4bits 0D8F  
                 _Lcd_Clear_4bits 0D1A                        __pmaintext 0017                           ?___bmul 0073  
                      __pintentry 0004      __end_of_Lcd_Write_Char_4bits 0E46                   Lcd_Port_4bits@a 0073  
                 ?_Lcd_Init_4bits 0070    __end_of_Lcd_Write_String_4bits 0F02                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0800            __end_of_Lcd_Port_4bits 0DB1  
                         ___awdiv 0676                           ___awmod 0F48                           ___lldiv 06DF  
                         ___lwdiv 0F02                           ___lwmod 0E80                           __ptext1 05B3  
                         __ptext2 0E80                           __ptext3 0F02                           __ptext4 0DDF  
                         __ptext5 0D34                           __ptext6 0FA3                           __ptext7 0E46  
                         __ptext8 06DF                           __ptext9 0747                           _leerRTC 0747  
                         _dpowers 0810                  ___awmod@dividend 0026                           main@DIA 01E5  
                         main@HOR 01E4                           main@MES 01E6                           main@MIN 01E3  
                         main@SEG 01E2      __end_of_Lcd_Set_Cursor_4bits 07FB                           _sprintf 05B3  
            end_of_initialization 0013        ??_I2C_Master_RepeatedStart 0073                   ?_Lcd_Port_4bits 0070  
         __end_of_Lcd_Clear_4bits 0D27                   ___lldiv@divisor 0020                   ___lldiv@counter 0078  
                I2C_Master_Init@c 0028                  I2C_Master_Read@a 0073                         _PORTBbits 0006  
                       _PORTDbits 0008                        main@VAL1_C 01D3                        main@VAL1_D 01D2  
                      main@VAL1_U 01D1                         _TRISCbits 0087              _Lcd_Write_Char_4bits 0E11  
                  __end_of___bmul 0D56               start_initialization 000F                       __end_of_ISR 0D8F  
                   _Lcd_Cmd_4bits 0D56             Lcd_Set_Cursor_4bits@a 0020             Lcd_Set_Cursor_4bits@b 0077  
           Lcd_Set_Cursor_4bits@y 0022             Lcd_Set_Cursor_4bits@z 0021                  ?_Lcd_Clear_4bits 0070  
               ??_I2C_Master_Init 002C                 ??_I2C_Master_Read 0075                 ??_I2C_Master_Wait 0073  
               ??_I2C_Master_Stop 0073             ?_Lcd_Write_Char_4bits 0070                          ??___bmul 0074  
        Lcd_Set_Cursor_4bits@temp 0023              _Lcd_Set_Cursor_4bits 07AF                  ??_Lcd_Init_4bits 0077  
                     __pbssCOMMON 007A                         ___latbits 0002                     __pcstackBANK0 0020  
                   __pcstackBANK3 0190                    ?_Lcd_Cmd_4bits 0070                       sprintf@flag 002D  
                     sprintf@prec 0031                  _I2C_Master_Start 0CFE                  _I2C_Master_Write 0D10  
                       _main$1138 01CF                  ___lwdiv@dividend 0075             ?_Lcd_Set_Cursor_4bits 0077  
                        ?___awdiv 0073                          ?___awmod 0024                          ?___lldiv 0020  
                        ?___lwdiv 0073                          ?___lwmod 0023                         __pstrings 0800  
                        ?_leerRTC 0070                  ??_Lcd_Port_4bits 0073                  ___lwdiv@quotient 0021  
                        ?_sprintf 0027                 interrupt_function 0004            ??_Lcd_Write_Char_4bits 0074  
                       main@DIA_D 01DB                         main@DIA_U 01DA                         main@AO_UM 01E1  
                       main@HOR_D 01D9                         main@MES_D 01DD                         main@MIN_D 01D7  
                       main@HOR_U 01D8                         main@MES_U 01DC                         main@MIN_U 01D6  
                       main@SEG_D 01D5                         main@SEG_U 01D4                       __stringbase 080F  
                   ??_setupINTOSC 0073                   ??_Lcd_Cmd_4bits 0074                          _WPUBbits 0095  
             I2C_Master_Read@temp 0077           Lcd_Write_String_4bits@a 0078           Lcd_Write_String_4bits@i 0023  
          ??_Lcd_Set_Cursor_4bits 0078         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0810  
        ??_Lcd_Write_String_4bits 0020                    Lcd_Cmd_4bits@a 0076                        sprintf@val 002F  
                 _I2C_Master_Init 0E46                   _I2C_Master_Read 0DB1                   _I2C_Master_Wait 0D27  
                 _I2C_Master_Stop 0D07                   ___lwdiv@divisor 0073                   ___lwdiv@counter 0020  
                        __ptext10 0D41                          __ptext11 0D10                          __ptext20 0E11  
                        __ptext12 0D07                          __ptext21 07AF                          __ptext13 0CFE  
                        __ptext22 0D1A                          __ptext14 0CF5                          __ptext23 0D56  
                        __ptext15 0DB1                          __ptext24 0D8F                          __ptext16 0D27  
                        __ptext25 0D70                          __ptext17 0F48                          __ptext18 0676  
                        __ptext19 0EBC               __end_of_setupINTOSC 0D41                          main@ADC1 01BD  
                        main@AO_C 01E0                          main@AO_D 01DF                          main@AO_U 01DE  
                        main@VAL1 01E7                          leerRTC@R 0023          __end_of_I2C_Master_Start 0D07  
        __end_of_I2C_Master_Write 0D1A                        _INTCONbits 000B                          intlevel1 0000  
                       sprintf@ap 002E                         sprintf@sp 0033                  ___lwmod@dividend 0025  
                ___lldiv@dividend 0024                         stringcode 080A                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 0E80           __end_of_I2C_Master_Read 0DDF           __end_of_I2C_Master_Wait 0D34  
         __end_of_I2C_Master_Stop 0D10                       _setupINTOSC 0D34                          sprintf@c 0032  
                        sprintf@f 0027                      setupINTOSC@F 0074                  ___lldiv@quotient 0074  
               I2C_Master_Write@d 0073                   ___lwmod@divisor 0023                   ___lwmod@counter 0079  
                        stringdir 080A                          stringtab 0800                       _SSPCON2bits 0091  
